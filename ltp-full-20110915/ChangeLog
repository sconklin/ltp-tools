LTP-20110915

commit dd59d49d75598d163f1b4599067a9f0dcb70e6c4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Aug 31 23:09:49 2010 -0700

    The cacheflush system call does not return EINVAL in the latest Linux
    kernel. see the link:
    A related patch about the cacheflush function:
    http://lkml.org/lkml/2009/4/9/203
    But Ralf had refused this patch:
    http://www.spinics.net/lists/linux-man/msg00906.html
    cacheflush01 testcase checks if the return value is EINVAL when the
    cache argument is not one of ICACHE, BCACHE or DCACHE. So it will fail
    in all boards.
    
    In this modification, checking return value SUCCESS will be added,
    instead of checking EINVAL
    
    Signed-off-by: Feng Gao <feng.gao@windriver.com>

:100644 100644 cce0b70... d0a4b1f... M	testcases/kernel/syscalls/cacheflush/cacheflush01.c

commit ebea45b92a1e30e4480f25291ef4c1ef2eeaa4bf
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Aug 31 17:14:21 2010 -0700

    Get rid of unnecessary style divergence.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 0ebeca9... b08a2d9... M	testcases/commands/at/at_allow01
:100755 100755 6bca177... 9f9f433... M	testcases/commands/at/at_deny01

commit 08640ca184c1fc1e24e966c3d806a722f3ca2154
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 20:53:18 2010 -0700

    Add more assertions.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 2c590b1... A	testcases/open_posix_testsuite/conformance/interfaces/access/assertions.xml

commit 3cdde2f86af90b3fd4e2b1468a12adfd2a9523f0
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 20:52:52 2010 -0700

    Note which timer failed in output.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ac043b0... 8e149ea... M	testcases/open_posix_testsuite/conformance/behavior/timers/1-1.c

commit 207f47c4c9b4783c1a18be32431f5a1b319b9e5a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 19:34:34 2010 -0700

    Update some assertions for raise(2) to SUSv4 reqs.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 38d9542... aa47b7c... M	testcases/open_posix_testsuite/conformance/interfaces/raise/assertions.xml

commit 9c6d2b4cf4f7c166813ddee280ab2bf128eb521c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 03:36:51 2010 -0700

    Fix bad syntax that I thought I hadn't committed.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 f731d6c... 0ebeca9... M	testcases/commands/at/at_allow01

commit 414747ced26d943a22a3f767deb7f5b4658adb6e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 03:32:18 2010 -0700

    Forgot the sleeps.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 9b10030... 6d5eb7f... M	testcases/open_posix_testsuite/conformance/behavior/WIFEXITED/1-2.c
:100644 100644 a3be617... 60e5241... M	testcases/open_posix_testsuite/conformance/behavior/WIFEXITED/1-3.c
:100644 100644 34e3afd... abc3279... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstack/2-1.c
:100755 100755 01984c5... 536d407... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 3222fbecbfb2924a6b901a8e2048c70e1a993018
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 01:22:07 2010 -0700

    Remove bogus comment.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c7d81b5... 72a1fcd... M	testcases/open_posix_testsuite/conformance/behavior/timers/2-1.c

commit 7187f0921382bf375cd111b8a480a74ce5786945
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 01:18:23 2010 -0700

    Repeat robustness work done to 1-1 for 1-2 and 1-3.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 a9d104c... 9b10030... M	testcases/open_posix_testsuite/conformance/behavior/WIFEXITED/1-2.c
:100644 100644 af23ebe... a3be617... M	testcases/open_posix_testsuite/conformance/behavior/WIFEXITED/1-3.c

commit 6c2750a55eaa30fe708c78087688c0d468bfb807
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 29 01:12:07 2010 -0700

    Make test more robust.
    
    1. Catch fork() == -1 errors.
    2. Sleep so wait(2) should always succeed.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1efd520... f46ee8f... M	testcases/open_posix_testsuite/conformance/behavior/WIFEXITED/1-1.c

commit 873f6e5b28a6a23367a7117aad436378e56ad09a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Aug 28 01:42:53 2010 -0700

    Fix ltp-aiodio.sh script so it execs aio-stress.
    
    Singed-off-by: Jacky Malcles <jacky.malcles@bull.net>

:100755 100755 ed2bce4... ab54c54... M	testscripts/ltp-aiodio.sh

commit 4fd92183833eed128bb6420ece7a6dd45dcd8ec5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Aug 28 01:40:51 2010 -0700

    I've prepared a patch for at_allow01 that essentially duplicates the
    fixes that were checked in for at_deny01. This fixes the script to
    actually run the test when the at utility in stead of returning TCONF,
    correcting test environment, and let the script run normally without
    changing the password. See commit
    a589d12b0b49287d10f43b1a1fb72950819588eb for more details.
    
    Signed-off-by: Henry Yei <hyei@mvista.com>

:100755 100755 cf5b97c... f731d6c... M	testcases/commands/at/at_allow01

commit 217d9b778d275bcbaf5a9fa9e1a5ac2716521cad
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Aug 28 01:39:12 2010 -0700

    Chain cmds together to avoid intermediate errors.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 b94bd8f... 6bca177... M	testcases/commands/at/at_deny01

commit 9eeea7939bd73b295ae376dc045e5fbb984d0f38
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 25 20:40:23 2010 -0700

    Fix error message (was hardcoded to SIGALARM).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 47ab49a... 4bc97ce... M	testcases/kernel/mem/mtest06/mmap1.c

commit 99b7a68c448c8e983d952c847ecc3c54145cf704
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue Aug 24 16:30:06 2010 +0530

    ltp setrlimit testcase patch for RLIMIT_FSIZE resource: Current testcase for setrlimit resource RLIMIT_FSIZE is using a global integer variable to communicate the number of bytes from child to parent which is incorrect. This has been corrected by introducing a pipe to transfer this information from child to parent process. Signed-off-by: Harsh Prateek Bora <harsh@linux.vnet.ibm.com>

:100644 100644 6952eb3... 2bb1e9d... M	testcases/kernel/syscalls/setrlimit/setrlimit01.c

commit b83a9d65c004a60d9ac92d357d52850f66f3cddf
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue Aug 24 16:14:14 2010 +0530

    Rt_sigprocmask01 test case caused "segment fault" on x86: This is a similar problem as rt_sigsuspend01 which has been fix before.
    Failed log:
    root@Congatec:/opt/ltp-full> ./testcases/bin/rt_sigprocmask01
    Segmentation fault
    After apply the patch:
    root@Congatec:/opt/ltp-full> ./testcases/bin/rt_sigprocmask01
    rt_sigprocmask01    1  TPASS  :  rt_sigprocmask functionality passed
    Signed-off-by: Yingang Fu <yingang.fu@windriver.com>

:100644 100644 e100561... 33202f1... M	testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

commit 440ca11b0873b4e123321bb6c6f859b50e0584ed
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue Aug 24 16:09:37 2010 +0530

    fix tst_unzip_file.zip permissions: When creating package, the buildsysem freaks out on file tst_unzip_file.zip because it has world writeable permission, however this is not necessary for the test itself to work. Patch attached. Signed-off-by: Cyril Hrubis chrubis@suse.cz,

:100644 100644 4dce2bc... 7eecf16... M	testcases/commands/unzip/Makefile

commit a589d12b0b49287d10f43b1a1fb72950819588eb
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 23 08:36:17 2010 -0700

    Fix at_deny01 in positive and negative cases.
    
    [NOTE: item 3 was not `fixed' because it's an environment issue with the
    box]
    
    There are three failures found when running the LTP at_deny01 case.
    
    [1] at_deny01    1  TCONF  :  at command not found on system
    [2] /home/test_user_1/at_deny01: line 129: tst_resm: command not found
    [3] You are required to change your password immediately (root enforced)
    
    The root causes of these failures:
    
    [1] In the shell script, if the return value of a function is 0, it view
    as TRUE. In the at_deny01
    162 if type at > /dev/null; then
    163         tst_resm TCONF "at command not found on system"
    if the system has at function, shell script will print "at command not
    found on system". This is opposite.
    
    [2] In the at_deny01, root user will create user named a test_user_1,
    copy the file at_deny01 to the home directory of test_user_1,
    change user to test_user_1 and run the at_deny01 script.
    when run the script, ${LTPROOT}/testcase/bin is in the environment
    variable of root, but NOT in the test_user_1. So when the test_user_1
    run this script, it can NOT find the tst_resm command.
    
    [3] When some boards boot up, the system time is 010100001970. the Linux
    system will let NON-root user change its password immediately
    and stop the script running. This patch will let the script run normally
    without changing the password.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 dcec684... b94bd8f... M	testcases/commands/at/at_deny01

commit 228b250d23f36ddc95cb25179441420bea9b8bdd
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 22 15:02:43 2010 -0700

    Add comment about stack size change.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 7f27cf5... 34e3afd... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstack/2-1.c

commit c6390b81985054a8dde10af4146a0878e320e686
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 22 14:59:59 2010 -0700

    Clean up testcases. Increase stacksize for printf.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 f9ddc16... 7f27cf5... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstack/2-1.c
:100644 100644 8cd3ec3... 668fd96... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstacksize/2-1.c

commit 0b94a97daf729c795cff30cc67eadf1f50c871d7
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 22 12:25:49 2010 -0700

    Add mq_open/mq_unlink fn def. conformance tests.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 961a140... b003e27... M	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/11-1-buildonly.c
:100644 100644 ce78ad0... 5149ba7... M	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/5-1-buildonly.c

commit 34e01e02562fbb077c2e59215103a50096dbacd6
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 08:26:25 2010 -0700

    Fix typo.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 17a91fa... 6351f9a... M	include/mk/env_pre.mk

commit 2b8e4cbae3446f23ad68482109a36df40523604c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 02:13:10 2010 -0700

    Propogate UCLINUX=1 throughout the build.
    
    According to d.marlin, the UCLINUX=1 variable wasn't being properly
    propagated through the compile, thus the tests weren't being built
    properly for uClinux.
    
    Corral the definitions into env_post.mk and move the duplicate bits out
    of lib/Makefile.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 56aca27... ebaee1f... M	include/mk/env_post.mk
:100644 100644 df6908e... 59813d5... M	lib/Makefile

commit 3e8b451b64227fcdb01d33a2846a2e312b23edd1
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 02:12:04 2010 -0700

    Make a target to spoof .DEFAULT_GOAL on make 3.80.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 4444124... 17a91fa... M	include/mk/env_pre.mk

commit e5387ce143c646c81258ff05667bb9be07cbfe31
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 02:00:52 2010 -0700

    Fix whitespace pointed out by Mike Frysinger.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6207deb... 2fff9a7... M	INSTALL

commit a98d8133f020805408e6cebdb219c7c805b55603
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 01:40:20 2010 -0700

    Fix compile with UCLINUX platforms.
    
    The testcase mallopt01 skips performing the test when UCLINUX=1, but the
    mallinfo structure is defined outside the #if !defined(UCLINUX) block.
    
    Attached is a patch to move the mallinfo structure definition inside the
     #if !defined(UCLINUX) block.
    
    Signed-off-by: d.marlin <dmarlin@redhat.com>

:100644 100644 a2b87ff... f173b61... M	testcases/kernel/syscalls/mallopt/mallopt01.c

commit a8e1a60923c0d65ca323062990282c7d4ebc7296
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 18 01:38:39 2010 -0700

    Fix ad hoc errno definitions.
    
    I found that some of the testcases in kernel/syscalls redefine 'errno'
    as 'int':
    
     int errno;
    
    'errno' is normally in errno.h as a #define to a function returning a
    pointer, i.e.,
    
     extern int *__errno_location (void)  . . .
    
    Attached is a patch to remove the redefinition from the following files:
    
     testcases/kernel/syscalls/mallopt/mallopt01.c
     testcases/kernel/syscalls/memcmp/memcmp01.c
     testcases/kernel/syscalls/memcpy/memcpy01.c
     testcases/kernel/syscalls/memset/memset01.c
     testcases/kernel/syscalls/syscall/syscall01.c
     testcases/kernel/syscalls/string/string01.c
    
    Signed-off-by: d.marlin <dmarlin@redhat.com>

:100644 100644 865345b... a2b87ff... M	testcases/kernel/syscalls/mallopt/mallopt01.c
:100644 100644 58f9e1a... a0a879f... M	testcases/kernel/syscalls/memcmp/memcmp01.c
:100644 100644 b40356e... e6c7081... M	testcases/kernel/syscalls/memcpy/memcpy01.c
:100644 100644 6e0bb5f... 10b82b2... M	testcases/kernel/syscalls/memset/memset01.c
:100644 100644 41cc9bc... e130fa3... M	testcases/kernel/syscalls/string/string01.c
:100644 100644 f3bac92... c3c9cc6... M	testcases/kernel/syscalls/syscall/syscall01.c

commit e8ad463baada21fb19f4c06f7dcab75c420ae373
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Tue Aug 17 18:18:35 2010 -0400

    start a nommu guide for ltp programmers
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>

:000000 100644 0000000... 4baeff3... A	doc/nommu-notes.txt

commit fad9f94106a1446fc6284589d6341fe89f484225
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Tue Aug 17 17:23:41 2010 -0400

    update gitignore
    
    Ignore patch related files, some top level files that ltp itself
    generates, and the autom4te.cache throughout the tree.  The *.gdb
    glob is for FLAT files when using a nommu/linux toolchain.
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>

:100644 100644 660f345... e2c14bb... M	.gitignore

commit c1896c78819c8ac51323446131fa017b64937b06
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Tue Aug 17 17:23:34 2010 -0400

    lchown02: drop useless cast
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>

:100644 100644 7acacad... 4f519ab... M	testcases/kernel/syscalls/lchown/lchown02.c

commit 28606c1b9a3e7c910f83c0a1dd7642f53fbc6944
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Tue Aug 17 17:22:45 2010 -0400

    lib: pull in config.h in some files
    
    If the UCLINUX symbol is being defined by way of config.h, we need to
    include that header in order to notice.
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>

:100644 100644 3bc304c... 8276a2e... M	lib/parse_opts.c
:100644 100644 4b554cf... 06441d3... M	lib/self_exec.c
:100644 100644 dd5dc02... 7ea4fd1... M	lib/tlibio.c

commit 9bd940b309564fa6681428a02c6ee5e60d96010b
Author: Mike Frysinger <vapier@gentoo.org>
Date:   Tue Aug 17 17:22:03 2010 -0400

    nommu/linux: add some configure checks to automate things
    
    Since nommu linux ports lack fork() support, we can use this missing
    function to indicate the need for the UCLINUX define.
    
    Signed-off-by: Mike Frysinger <vapier@gentoo.org>

:100644 100644 3dd9829... 8c88673... M	configure.ac
:000000 100644 0000000... ab97a78... A	m4/ltp-nommu-linux.m4

commit b49b375167eade5cb2f05678bc60fc5b2d231af9
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Aug 17 00:03:58 2010 -0700

    Make test pass with undoc'ed sysctl(2) behavior.
    
    2.6.33 has an issue where someone fixed a bug in the previous
    implementation of sysctl(2) to actually return EACCES instead of always
    returning EPERM. Unforuntately the manpage doesn't state this
    requirement, so rather than fixing the documentation (which is far too
    easy, right :P?), we'll go and `fix' the test.
    
    Linux needs to get their ass in gear and start fixing their
    documentation. Oh wait...? Linux has reasonably up-to-date
    documentation? For that I point to Penn and Teller to give their famous
    Showtime TV show's tagline.
    
    This patch was based almost entirely on what was provided by Shi Weihua
    <shiwh@cn.fujitsu.com> back in 02/2010. He gets credit for the work.
    
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 f8e743b... 25314c6... M	testcases/kernel/syscalls/sysctl/sysctl03.c

commit 62899c99702e1be95a734e7ea3cb10f868783bdd
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 16 23:39:43 2010 -0700

    Fix compile warning with global symbols in pread01
    
    Function compare_bufers in pread01.c does not expect any arguments, but
    the reference to compare_bufers passes two arguments:
    
       compare_bufers(write_buf, read_buf);
    
    Within the function compare_bufers, write_buf and read_buf are accessed
    via their global definitions.  These variables are also accessed via the
    global definitions in other functions in this testcase.
    
    Attached is a patch to remove the unnecessary arguments from the
    compare_bufers function reference.
    
    Signed-off-by: d.marlin <dmarlin@redhat.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 58055d1... 862db9d... M	testcases/kernel/syscalls/pread/pread01.c

commit 93cbfd691e254225a7150c1947c4fbaf1e794173
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 16 23:39:01 2010 -0700

    Clean up arguments passed in sighold02.
    
    The functions read_pipe and write_pipe in sighold02.c each expect a
    single file descriptor as arguments, however the function prototypes
    define no arguments.  Also, the function references to read_pipe pass
    two arguments, a file descriptor and '0'.  The second argument should
    not be passed, as it is not used.
    
    Attached is a patch to make the function argument definitions and uses
    consistent within this testcase.
    
    Signed-off-by: d.marlin <dmarlin@redhat.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 a321dae... 7f200bb... M	testcases/kernel/syscalls/sighold/sighold02.c

commit fde5772340983308ebf6ed707bcae78f9a71f2ba
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 16 23:37:16 2010 -0700

    Use MAXPATHLEN to avoid path truncation.
    
    This patch modifies all tests in the ftest directory to  use
    MAXPATHLEN on all character arrays that store path/file names rather
    than arbitrarily sized arrays. This corrects issues where there was
    truncation happening when copying a path from one array to another if
    the path was long enough. The ftest code may delete the tmp directory
    instead of the tmp file due to truncation, and cause LTP to report a
    failure/warning when the tmp directory disappears. We saw this in
    ftest03,07 where it was trying to copy wdbuf[MAXPATHLEN] into fuss[40]
    here:
    
       sprintf(fuss, "%s/ftest03.%d", getcwd(wdbuf, sizeof( wdbuf)),
    getpid());
    
    and then attempting to delete the file but instead got the directory
    here:
    
       execl("/bin/rm", "rm", "-rf", fuss, NULL);
    
    Signed-off-by: Henry Yei <hyei@mvista.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c4dc5c8... 761536f... M	testcases/kernel/fs/ftest/ftest01.c
:100644 100644 0994243... c3fba3b... M	testcases/kernel/fs/ftest/ftest02.c
:100644 100644 1cb6d6f... cf9616a... M	testcases/kernel/fs/ftest/ftest03.c
:100644 100644 d5a5d48... 39fa34a... M	testcases/kernel/fs/ftest/ftest04.c
:100644 100644 220d9fd... 3ee94b8... M	testcases/kernel/fs/ftest/ftest05.c
:100644 100644 da57967... fb16b51... M	testcases/kernel/fs/ftest/ftest06.c
:100644 100644 8cda511... 7a470a1... M	testcases/kernel/fs/ftest/ftest07.c
:100644 100644 d9e8356... b09e43f... M	testcases/kernel/fs/ftest/ftest08.c

commit 4b49678aa6d45cab6c71a01d416e169965d9a5c8
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 16 23:36:10 2010 -0700

    make iogen01 honor $TMPDIR set by runltp*.
    
    This patch updates the fs runtest file with arguments for the iogen01
    test to honor the tmp directory set by runltp. Without this patch, the
    tmp files are written to <ltp install dir>/testcases/bin.
    
    Signed-off-by: Henry Yei <hyei@mvista.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 d7e91a9... e6741a0... M	runtest/fs

commit 8e71ff7a9c7821efe0da379d9ac54b250a3b7cf4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 16 08:57:43 2010 -0700

    Fix the address offset for hugeshmat0[12] on mips.
    
    In hugeshmat01 and hugeshmat02, the attach address for shared memory is
    0x90000eee.
    
    For 32bits mips/Linux system, user space is under 0x7FFFFFFF,
    0x90000eee is too big. The new address 0x60000eee has been tested
    on mips and other arch systems, it hasn't caused a issue yet.
    
    Signed-off-by: Lina Zhao <lina.zhao@windriver.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 229b929... 7087d26... M	testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
:100644 100644 2f56127... 428eeab... M	testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c

commit b47b875e00fbea4bb3398ac2f3ef4b4dd32826f0
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Mon Aug 16 20:08:51 2010 +0530

    drop test pidns03 ?
    I am not sure about the original intent of pidns03 test case but I think the test is expected to fail :-( The header for this test says:
            * Verify that:
            * 1. When parent, clone a process with flag CLONE_NEWPID, see the
            * process id of the parent is existing after mounting /proc
    
    The test passes in the parent-pid from init-pid-ns and looks for that pid in the child's mount of /proc. But for the CLONE_NEWPID child, parent process should appear to have a pid == 0. The pid of the parent in the initial pid namespace must NOT be visible to the child - in fact a different process can have that pid.
    I am not surprised the test fails - I am curious to know the version of the kernel when this test reliably passed - if at all. I tried this on 2.6.29 and 2.6.34-rc5 and it fails reliably.
    I dug through my history and see that this test was part of a 6-patch set, We did have some comments on the coding style on the set, but we seem to have missed the intent of this test :-(.
    Do we have any other history of this test ? If not, I think we should either drop the test or modify the test to verify the opposite (i.e.  verify that the opendir() in the test fails with ENOENT). Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>, Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

:100644 000000 f5062e2... 0000000... D	testcases/kernel/containers/pidns/pidns03.c
:100644 100644 c05234a... add226c... M	testcases/kernel/containers/pidns/runpidnstest.sh

commit ece5deac52ae019e34e9e26000c89a711ea4573b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 12 23:12:02 2010 -0700

    Fix the sigset_t size value for mips*.
    
    On most of the arch,the SIGSETSIZE is 8, but it is 16 for mips, so in
    sigprocmask, the last parameter should be SIGSETSIZE too, not 8.
    
    Signed-off-by: Lina Zhao <lina.zhao@windriver.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 cc32ea8... e100561... M	testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

commit c729e566b789a2e5c9846c2bf217416448843199
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 12 23:08:04 2010 -0700

    Fix general protection fault in uninitialized mem.
    
    Following are test log on x86:
    ----------------------------------------------------------
    
    root@d610-2:/opt/ltp-full/testcases/bin> ./rt_sigsuspend01 Segmentation
    fault
    
    and messages of rt_sigsuspend01 when dmesg:
    
    root@d610-2:/opt/ltp-full/testcases/bin> dmesg | tail
    
    VFS: Mounted root (nfs filesystem) on device 0:13.
    Freeing unused kernel memory: 344k freed
    intel_rng: FWH not detected
    ip_tables: (C) 2000-2006 Netfilter Core Team
    NET: Registered protocol family 10
    SCTP: Hash tables configured (established 16384 bind 32768)
    eth0: no IPv6 routers present
    
    ***rt_sigsuspend01[865] general protection ip:bfa8b780 sp:bfa8b120
    error:0
    
    After apply the patch:
    
    root@d610-2:/opt/ltp-full/testcases/bin> ./rt_sigsuspend01
    rt_sigsuspend01    1  TPASS  :  rt_sigsuspend PASSED
    
    Signed-off-by: Yingang Fu <Yingang.Fu@windriver.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6938037... fea5a2e... M	testcases/kernel/syscalls/rt_sigsuspend/rt_sigsuspend01.c

commit 22b12b3f972569361dfa28361fe0685bf0eca259
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Aug 11 22:37:44 2010 -0700

    Fix missing `_' in constant name.
    
    I tried to build open_posix_testsuite testcases with latest git:
      ltp-dev-7c67a09a10268b5f9f503e0254f1f0f9f5ac2b69.tar.gz
    
    Several testcases failed to build.
    One of them is as follows:
    ------------
    [...]
    conformance/definitions/sched_h/8-3-buildonly compile FAILED
    ../../../conformance/definitions/sched_h/8-3-buildonly.c:24:2: error:
     #error
    SCHED_SPORADIC not defined
    [...]
    ------------
    
    I noticed that "POSIX_THREAD_SPORADIC_SERVER" parameter has not "_"
    in its top.
    
    Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 83b06da... 2b0a98e... M	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-3-buildonly.c

commit 7c67a09a10268b5f9f503e0254f1f0f9f5ac2b69
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 5 06:28:15 2010 -0700

    Make a note about `illegal' chars in pathnames.
    
    Suggested-by: Cyril Hrubis <chrubis@suse.cz>
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c97fc80... 6207deb... M	INSTALL

commit 1112402ad4e1630108343b90453491761c95628e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 5 06:09:07 2010 -0700

    Fix indentation; update maintainer to be Subrata.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1d62188... 7f2dc6f... M	README

commit c649ab25dc3013b978b10279f4c8e2508a46baa7
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 5 01:37:47 2010 -0700

    More conformance definitions tests for mqueue.h.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 961a140... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/11-1-buildonly.c
:100644 000000 961a140... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/11-1.c
:000000 100644 0000000... ce78ad0... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/5-1-buildonly.c
:100644 000000 ce78ad0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/5-1.c

commit 0cdd169717c82b578ac27a15b2a5d44a62547558
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Aug 5 01:29:21 2010 -0700

    Add conformance definition tests for mqueue.h.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... d0d26ec... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/10-1-buildonly.c
:100644 000000 76f2e82... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/10-1.c
:100644 100644 8ee7d6e... 961a140... M	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/11-1.c
:000000 100644 0000000... 2f72536... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/2-1-buildonly.c
:100644 000000 d6614c1... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/2-1.c
:000000 100644 0000000... f71e1b9... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/3-1-buildonly.c
:100644 000000 6cae3a0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/3-1.c
:000000 100644 0000000... e0906fa... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/4-1-buildonly.c
:100644 000000 44cca9b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/4-1.c
:100644 100644 6da6f41... ce78ad0... M	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/5-1.c
:000000 100644 0000000... 4132b77... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/6-1-buildonly.c
:100644 000000 6a0c3d7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/6-1.c
:000000 100644 0000000... 216a26d... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/7-1-buildonly.c
:100644 000000 19326d7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/7-1.c
:000000 100644 0000000... 46773ef... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/8-1-buildonly.c
:100644 000000 0bb87c4... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/8-1.c
:000000 100644 0000000... 38ec228... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/9-1-buildonly.c
:100644 000000 971817e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/9-1.c
:000000 100644 0000000... 9afe27f... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/CFLAGS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/LDLIBS

commit 8c50bcc8fd2d15288934179fb98a75ef28876668
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 2 23:39:51 2010 -0700

    Add testcase to check contents of mq_attr.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 bdefbc4... 5b29a9c... M	testcases/open_posix_testsuite/conformance/definitions/mqueue_h/1-1.c

commit be5c78805d068a2ca1da9a9a4922dfc9ba734799
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 2 22:01:02 2010 -0700

    Allow swapon03 to pass when max_swapfiles unknown.
    
    This patch will allow swapon03 test case to pass even when max_swapfiles
    is not known.  Create maximum possible number of swapfiles during setup,
    then verify that attempting to create one more swapfile will return
    EPERM.  This is meant to change as little as possible of the existing
    code.
    
    Signed-off-by: Murlin Ray Wenzel <mwenzel@novell.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6d6fdd8... e697a1f... M	testcases/kernel/syscalls/swapon/swapon03.c

commit 79196c65c9923518de346ab9e1c4c0ab8761ed8c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Aug 2 21:53:09 2010 -0700

    Add -lrt to LDLIBS file.
    
    The aio* and lio* functions are in the is REALTIME category, thus this
    is required (although optional on some implementations of Unix, like
    non-RHEL Linux for some whacky reason, and FreeBSD).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/LDLIBS

commit 64d869e27a5895a4acdc8d76598cce864daacb5a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 1 23:38:03 2010 -0700

    Preemptively fix error w/ missing tcl proc (fail).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1b68291... 7f1dc9f... M	testcases/misc/tcore_patch_test_suites/tcore.exp

commit d0908cb1914dab2ce385bf70e84bba3385e08a16
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 1 23:25:40 2010 -0700

    Sorry for my late answer.
    
    I considered how to judge detecting whether or not CLONE_* is available.
    However, I hit only about errno judgment.
    
    Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 f6add06... 6df86ac... M	testcases/kernel/containers/netns/check_netns_enabled.c

commit bc4f41abbf043bf9149d050994f90feafb96df76
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Aug 1 23:14:05 2010 -0700

    Restore file unnecessarily deleted back in Nov.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 830448b... A	testcases/kernel/power_management/get_sched_values.c

commit 080548263c4e8b3667277fa9e9f21105f918fa2b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 29 10:22:54 2010 -0700

    Reorder headers.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 fc6a4a0... d08fb3b... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstacksize/1-1.c

commit 421044cd4185804fff682131038bbe843acf5e27
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 29 10:20:55 2010 -0700

    Fix error reporting for test.
    
    posix_memalign(3) has similar semantics to pthread(3) family functions
    when reporting errors (=> 0 pass, != 0 => errno).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6592394... 21ce909... M	testcases/open_posix_testsuite/conformance/interfaces/mmap/11-3.c
:100644 100644 e41546a... fc6a4a0... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstacksize/1-1.c

commit 8565cff52d4fadc45b7c2d5373289fe140e31f3d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 29 10:06:10 2010 +0000

    Don't assume that SHELL has a sane value.
    
    SHELL is set to the login shell for the user (should have verified that
    before), and on FreeBSD the default login shell is tcsh (bleh). So take
    tcsh out of the equation by hardcoding sh -- which is ash on Debian variants
    and bash on almost all other Linuxes -- to increase determinism.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 f06f64f... 0a12578... M	testcases/open_posix_testsuite/bin/run-tests.sh

commit 233231cdfa9f697a4c586ab9bfdf0f85d1a503a5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 29 00:50:09 2010 -0700

    Fix compile warnings and remove ambiguous stimuli.
    
    The POSIX spec states that only tv_nsec needs to be checked to see if
    it's positive:
    
    [EINVAL]
        The rqtp argument specified a nanosecond value less than zero or
    greater than or equal to 1000 million.
    
    Remove the testcase until the spec is fixed.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 e0b87d1... 1442d9f... M	testcases/open_posix_testsuite/conformance/interfaces/nanosleep/10000-1.c

commit 6cf3402cd0aca6b275e5e20fa5dcd27e90663d93
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 28 22:33:42 2010 -0700

    Another non-superuser check.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6cd108c... 8c9a34d... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/17-2.c

commit cef69efa6df7a2b0353f180f867ccb8e2d051af4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 28 22:29:13 2010 -0700

    Fix inconsistency.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 149fc3d... d8cb1df... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/20-1.c

commit 578b57380fa545ed4c6670022bc0c6bb7cd1d15b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 28 22:27:28 2010 -0700

    Add another non-superuser check.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 67d90f1... db05f31... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/17-1.c
:100644 100644 278f4c3... 149fc3d... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/20-1.c
:100644 100644 b43c5be... a23eeba... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/4-1.c

commit 3c68417fdacfe8bba8e05d147eb2aa2b91c79e59
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 28 22:17:04 2010 -0700

    Fix EPERM fail if clock_settime not called as root
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 6181479... 67d90f1... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/17-1.c

commit a66ee2d19b689573e9f59d0f303b86f6c333f795
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 28 21:11:59 2010 -0700

    Use awk equivalent to FreeBSD's sed -E.
    
    This method of text search and replace is POSIX compliant.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 b6e7b56... 01984c5... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 3393cd192002793080aba661054d54a8a06f25c2
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 27 07:50:17 2010 -0700

    Disable the open_posix_testsuite in the build.
    
    See the comment in the Makefile for more details.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 2ed3f9c... 37c448f... M	testcases/Makefile

commit a4e64cb8bb97d09b5695151106946a76984b330a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 26 06:36:58 2010 -0700

    Fix the 1-1 testcase.
    
    As pointed out by Cheng Shun Xia <csxia@novell.com>  the
    pthread_mutex_getprioceiling() works only on mutexes initalized with
    PTHREAD_PRIO_PROTECT. Also calling perror() after pthread_* fuctions is
    meaningless as they return error number directly, this is common mistake
    in pthread tests in openposix testsuite and should go to the ltp TODO.
    
    Patch attached.
    
    Garrett note: this diff is based off the
    pthread_mutex_getprioceilingIII.patch, but edited for clarity in the
    comments, and doesn't print to stderr because it would cause issues with
    the open_posix_testsuite test infrastructure.
    
    Signed-off-by: Cyril Hrubis <chrubis@suse.cz>
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 184b26c... 4c8e8e2... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_getprioceiling/1-1.c

commit 47174970d9e880b358c7acf94f638b47d595037e
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri Jul 23 18:16:32 2010 +0530

    clock_getres01: remove TERRNO flag for overall test result: The attached patch remove the TERRNO flag for the overall clock_getres01 test status. It is wrong because, if one of the test fails, the reported errno will always be the one from the last case05 test (even 0 if this one was successful). Upon failure, the output will be:
    [...]
    clock_getres01    0  TINFO  :  (case05) START
    EXPECT: return value(ret)=(N >= 0) errno=0 (Success)
    RESULT: return value(ret)=       0 errno=0 (Success)
    clock_getres01    6  TPASS  :  (case05) END
    clock_getres01    7  TFAIL  :  clock_getres01 failed
    
    But previously:
    
    [...]
    clock_getres01    0  TINFO  :  (case05) START
    EXPECT: return value(ret)=(N >= 0) errno=0 (Success)
    RESULT: return value(ret)=       0 errno=0 (Success)
    clock_getres01    6  TPASS  :  (case05) END
    clock_getres01    7  TFAIL  :  clock_getres01 failed: errno=???(0): Success
    
    Signed-off-by: Nicolas Joly <njoly@pasteur.fr>.

:100644 100644 412ffa5... 7df8c71... M	testcases/kernel/syscalls/clock_getres/clock_getres01.c

commit 0056e395170eb8fc3ffbb22d7bd364fe47c2013e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 22 08:45:53 2010 -0700

    Fix stack alignment on ARM with clone tests.
    
    An ARM stack must be a multiple of 32 bit words in length, and 32 bit
    aligned.
    
    Signed-off-by: Peter Pearse <peter.pearse@linaro.org>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 93cdc43... 6ad4a00... M	lib/cloner.c

commit 4fffe0e96c125c1ae1556b29341d689314c34f9c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Thu Jul 22 01:52:03 2010 -0700

    Commit the 20% check.
    
    Proposed by Casper Zhang <czhang@redhat.com>.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 a8b370d... dbcbc53... M	testcases/kernel/syscalls/pselect/pselect01.c

commit ba7ee422383585d36c7b1c639ab2d24ad25d5a24
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:49:39 2010 -0700

    A 10% threshold was too low. Bump up to 20%:
    
    Hi Garrett, I tested my patch yesterday but the result
    is not so good. After 1000 times running, the fix got failed
    for once. so I set the allowed error to 20% (see the attached
    patch). Then re-ran it for over 5000 times, without a failure.
    
    Then the nsec part, 10% allowed error seems not enough,
    the test failed for twice among 1000 times. So I set the
    range to 20%, too.
    
    Signed-off-by/Tested-by: Caspar Zhang <czhang@redhat.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 751f21d... a8b370d... M	testcases/kernel/syscalls/pselect/pselect01.c

commit 956d771108e3b316853a5683fa965c0248b4a77c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:23:47 2010 -0700

    Use better precision accounting for pselect01.
    
    In my recent tests, not all desired time is equal to exact execution time,
    sometimes it is +/-1s, and in a few times it becomes +/-2s. In most cases,
    +/-2s is still a valid value between exact execute time and desired time.
    
    (the original patch proposed using time(3), but due to loss in precision
    as time(3) specifies in quantum of seconds, clock_gettime(3) was recommended
    and subsequently implemented).
    
    Signed-off-by: Caspar Zhang <czhang@redhat.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c006930... 2ad4c39... M	testcases/kernel/syscalls/pselect/Makefile
:100644 100644 250ed03... 751f21d... M	testcases/kernel/syscalls/pselect/pselect01.c

commit 5337e87014f42586915d091097ec1eacbd1f4e81
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:18:38 2010 -0700

    Fix source path for install.
    
    Test case "mc_opts" fails as it is not able to install "opts" and
    "opts_e" files at desired location. This is because the path of these
    files mentioned in the "mc_opts" script is incorrect. Following patch
    fixes the above problem.
    
    Signed-off-by:  Sumit Dhoot <sumitbd@linsyssoft.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 76fbe37... a0103bd... M	testcases/network/multicast/mc_opts/mc_opts

commit 2ebc103b1b64660907f690d6e7c84dcc73b94f86
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:17:17 2010 -0700

    Update location for multicast tests.
    
    While running networktest for multicast ;  "mc_member" test displays the
    following error message multiple times
    "cat: /opt/ltp/testcases/inetwork/multicast/mc_menmber/ManyGroups: No
    such file or directory".
    This is Because variable "TCsrc" is exported with incorrect path. Looks
    like previously LTP test scripts installed and ran directly from source
    directory . Now it installs mulicast test binary and script files to
    "$LTPROOT/testcases/bin" directory. Hence the variable "TCsrc" needed to
    be exported with above mentioned install path.
    
    Signed-off-by:  Sumit Dhoot <sumitbd@linsyssoft.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 14e7828... 08b65f7... M	runtest/multicast

commit e0a89f94e51eaed1c3ac9840130f166f3f232b4a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:15:21 2010 -0700

    Address issue with permissions on utimesat_tests.
    
      After investigation, I found that the following two parts
      maybe have wrong RW parameter:
    
      a) Testing read-only file, owned by nobody(self).
      Since the perm is 400, the user `nobody' itself doesn't have
      write permission to the testfile, thus, if program executes
      ./utimensat01 with -w param, `Permission deined' error will
      occur. So we need to add -W in run_test param to avoid trying
      writing test.
    
      b) Testing read-only file, owned by root.
      Since root owns the test file and the perm is still 400,
      the user `nobody' has neither writing nor reading permission
      to this file, so -RW param should be both set to run_test
      function to avoid trying reading & writing test.
    
    Signed-off-by: Caspar Zhang <czhang@redhat.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 4246d1a... a861d61... M	testcases/kernel/syscalls/utimensat/utimensat_tests.sh

commit dc9a6950b7ad6324dac774bc7717dfd1a52995fe
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 21 02:12:15 2010 -0700

    Fix test when dealing w/ new versions of file.
    
    This is a POSIX-friendly patch which uses grep -E instead of egrep.
    
    Suggested-by: Caspar Zhang <czhang@redhat.com>
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 9232c10... 70420e3... M	testcases/commands/ade/file/file_test.sh

commit a2739948cbdcb4a8981f3e75fe67f1921a075058
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 02:21:13 2010 -0700

    Update in the directions for new script name.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c6b503d... 7b346ed... M	testcases/open_posix_testsuite/Documentation/HOWTO_RunTests

commit b24cfbd96ade0853c6e7887d8254869fb7eb06c4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 02:14:30 2010 -0700

    Update documentation.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 2fc16f5... c6b503d... M	testcases/open_posix_testsuite/Documentation/HOWTO_RunTests
:100644 100644 a4326f6... 6afde74... M	testcases/open_posix_testsuite/QUICK-START

commit fb777bd059bf2f3610fcd1c233182a572fcaef8d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 02:13:37 2010 -0700

    Add simple wrapper for running all option groups.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... a9b2c05... A	testcases/open_posix_testsuite/bin/run-all-posix-option-group-tests.sh
:100755 000000 5ec6e6a... 0000000... D	testcases/open_posix_testsuite/bin/run-posix-option-group.sh

commit b40d23ffb43a190f93872c42b16ff17c0fe41959
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 02:12:46 2010 -0700

    Rem. ambiguity by suffixing script name with test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100755 0000000... 5ec6e6a... A	testcases/open_posix_testsuite/bin/run-posix-option-group-test.sh

commit c438631d5c1181bcb29e1af0e72a7d6c3beac7ca
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 02:00:02 2010 -0700

    Simplify by using $(bindir).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1bbeac1... b36e8a9... M	testcases/open_posix_testsuite/bin/Makefile

commit f00e5460ca56a657717f40129a2344903c858018
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:55:01 2010 -0700

    Make run-posix-option-group.sh use feature run.sh.
    
    This closes the missing integration piece between the previous version
    of the open_posix_testsuite, and the new version.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 fe0ef90... 5ec6e6a... M	testcases/open_posix_testsuite/bin/run-posix-option-group.sh

commit 88ed43e8ff49f3c87d537bf5582496e6590c5b87
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:43:20 2010 -0700

    chmod run_test.sh in the target, not in make test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 035f6ab... b6e7b56... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 9cb1f4553342f6b821686bb9d3cb6053a8bf1da9
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:40:14 2010 -0700

    Move run_tests to run-posix-option-group.sh.
    
    This is being done to be more explicit, and avoid ambiguity with
    bin/run-tests.sh (the test harness script).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100755 0000000... fe0ef90... A	testcases/open_posix_testsuite/bin/run-posix-option-group.sh
:100755 000000 fe0ef90... 0000000... D	testcases/open_posix_testsuite/run_tests

commit 23a78c2a2072df0cfe54c24a110587568fb5e790
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:34:34 2010 -0700

    Style.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 1e06b9e... fe0ef90... M	testcases/open_posix_testsuite/run_tests

commit dd3dab3e0a14dbfcdd8f580aaa47995ce9955e70
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:33:58 2010 -0700

    s/PREFIX/prefix/ to be autoconf-like.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 5a552b8... 795097f... M	testcases/open_posix_testsuite/scripts/print-prefix.sh

commit 7062dd413122adbbf68d651876c0d289c0cf554e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:33:27 2010 -0700

    Use proper autoconf-like variables.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 41bb387... 035f6ab... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 6269146fac7d23efcd6abe3f1f4913e9938b1603
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:29:18 2010 -0700

    SIGPOLL is XSI optional; conditionalize it.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 aec74ab... 12350c0... M	testcases/open_posix_testsuite/conformance/interfaces/sigset/5-1.c

commit 842ec9e26e44eecd64183a6e5acb47037b4ad79a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 19 01:28:02 2010 -0700

    Add bits for autoconf-like variables for install.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 d912201... 97ab8fd... M	testcases/open_posix_testsuite/Makefile

commit ed960312534c233b96e8717fc98ff092cf43e51d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 13 22:10:33 2010 -0700

    Differentiate SKIP from FAILED.
    
    This makes failure triage easier because FAILED occurs whenever a
    command is missing ($? => 1), so it's just easier to do things this way.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 b2ab6b5... f06f64f... M	testcases/open_posix_testsuite/bin/run-tests.sh

commit 68f89536bf8b1611ebbe0216029930b1e18bf243
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 11 10:01:45 2010 -0700

    Testcase "nfs02" fails with following message
    "Test Failed: Removal of write permissions not honored on ascii.sm"
    This is because ascii.sm has a rwx file permission for others when It
    got installed. The script first tried to remove only write permission
    for others and then it tests it with the r-- permission so test get
    fails as it has r-x permission for others.
    
    Signed-off-by: Sumit Dhoot <sumitbd@linsyssoft.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 18452e9... ff2a4ee... M	testcases/network/nfs/nfs02/nfs02

commit 125d98b413bf6a38b9a0c673fdabc70b42b6843e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 11 09:59:50 2010 -0700

    While running networktest for nfs; nfsstress &  nfsstat01 test gets
    fail. Because TCbin is not exported with required path. Following
    patch fixed the above problem.
    
    Signed-off-by: Sumit Dhoot <sumitbd@linsyssoft.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 b016e5d... 19f2344... M	runtest/nfs

commit 851e7792927e378711c341522c2f5069abd1635c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 11 09:55:54 2010 -0700

    Testcase "nfs02" fails as script does not able to find following files
    
    ascii.jmb
    ascii.lg
    ascii.med
    ascii.sm
    
    This is because ltp's testcases/network/Makefile doesn't installed
    those.
    
    Signed-off-by: Sumit Dhoot <sumitbd@linsyssoft.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 0b35c71... f847df9... M	testcases/network/Makefile

commit adbddc08e62bbd99de01b5c3bdbaede28b4abe11
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 23:18:13 2010 -0700

    Keep on going with make test!
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 78ecf42... d912201... M	testcases/open_posix_testsuite/Makefile

commit d3932316ca77e87e99371680a1f8cd7e7521cb05
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 23:14:45 2010 -0700

    Be pedantic about the ret. code from timer_create.
    
    Opengroup says:
    
    If the call succeeds, timer_create() returns zero and updates the
    location referenced by timerid to a timer_t, which can be passed to the
    per-process timer calls. If an error occurs, the function returns a
    value of -1 and sets errno to indicate the error. The value of timerid
    is undefined if an error occurs.
    
    So, technically non-zero != -1 is undefined behavior.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 3ff64a9... ac043b0... M	testcases/open_posix_testsuite/conformance/behavior/timers/1-1.c

commit 4fe1dbd06cd7b4f79388f2af929868a741e9a12e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 23:12:55 2010 -0700

    This test only requires -lrt.
    
    Also, remove unnecessary trailing newline in perror output.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 52678fd... 3ff64a9... M	testcases/open_posix_testsuite/conformance/behavior/timers/1-1.c
:100644 100644 4c7e2d8... 08f7cd6... M	testcases/open_posix_testsuite/conformance/behavior/timers/LDLIBS

commit 49c75d67c4898b1a02ba127a5e1088b0d9e30ac3
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 22:50:19 2010 -0700

    Might as well add distclean...
    
    distclean-makefiles exist, so this is just for consistency...
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1794aa3... 78ecf42... M	testcases/open_posix_testsuite/Makefile

commit ddf8b0f527d529ab4b866f9126da9f4c8e163ff5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 17:35:42 2010 -0700

    make install for open_posix_testsuite isn't ready for primetime yet.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ea57e3d... 2ed3f9c... M	testcases/Makefile

commit 9a569038e386fff5564b9c9bdc240e919f2f2958
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 12:03:06 2010 -0700

    Break non-POSIX tests.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 9d2e4c4... f8029cc... M	testcases/open_posix_testsuite/functional/threads/robust_test/robust1-mode2.c
:100644 100644 50dbb13... fc934c9... M	testcases/open_posix_testsuite/functional/threads/robust_test/robust1-sun.c
:100644 100644 0559c19... 03d4223... M	testcases/open_posix_testsuite/functional/threads/robust_test/robust2-mode2.c
:100644 100644 690306e... 143df22... M	testcases/open_posix_testsuite/functional/threads/robust_test/robust2-sun.c
:100644 100644 a3d0669... 8f5e0a7... M	testcases/open_posix_testsuite/functional/threads/robust_test/robust3-mode2.c

commit b7385b9414a7ef0ea003faafff2fad372f2d6651
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 11:53:57 2010 -0700

    pthread_kill obviously requires -lpthread.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/LDLIBS

commit 4be025ca1db5a9d1c0d712e21892be42d6205627
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 11:29:25 2010 -0700

    Adjust LDLIBS files.
    
    Assume everything that requires -lrt requires -lpthread (for sem_* on Linux).
    aio_* is a realtime extension; add -lrt.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/behavior/timers/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/definitions/aio_h/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_error/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_read/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_return/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/aio_write/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/clock_getcpuclockid/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/clock_getres/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/clock_gettime/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/clock_nanosleep/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/mlockall/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/mmap/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/nanosleep/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/shm_open/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/shm_unlink/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/timer_create/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/timer_delete/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/timer_getoverrun/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/timer_gettime/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/timer_settime/LDLIBS

commit 4ce871eafb0c400d72d563c73ff659de446a6eba
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 11:22:53 2010 -0700

    Use a value built off $(abs_top_srcdir) for top_srcdir.
    
    This is just cheaper for me to determine mentally, and a lot more intuitive
    to use for determining where sources are in open_posix_testsuite.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ec9834a... ea57e3d... M	testcases/Makefile

commit dc78660e31c06352f246d6bd4c10771703ca9fb7
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 11:19:20 2010 -0700

    Fix linker errors on Fedora 13.
    
    Apparently glibc gets grumpy if you omit -lpthread when linking against
    symbols in -lrt (but is kind enough to note the error), so add -lpthread.
    
    FreeBSD doesn't care about this.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_close/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_open/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_post/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_timedwait/LDLIBS
:100644 100644 08f7cd6... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_wait/LDLIBS

commit b46cce64976237c8d8d74ab9becb301eab19ac4e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 21:35:41 2010 -0700

    Commit integrate Make rules under test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 a0abbe8... ec9834a... M	testcases/Makefile

commit f8d3588cca35972c6ef96769468af6e5e615950c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 21:19:59 2010 -0700

    If t0 isn't present or exec'able - game over.
    
    This avoids non-intuitive HUNG errors in run-test.sh.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 6d98b08... b2ab6b5... M	testcases/open_posix_testsuite/bin/run-tests.sh

commit 2ba63f24f2f3fcc65191ab0de172907c96712b0c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 21:18:48 2010 -0700

    Sync checks for sys/mman.h w/ posixtest HEAD.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 fd3a3ee... a30c7e6... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/10-1-buildonly.c
:100644 100644 546ae8c... 05160a1... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/20-1-buildonly.c
:100644 100644 9900ef9... 45d6b31... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/21-1-buildonly.c
:100644 100644 eaae4d7... ed30fa8... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/22-1-buildonly.c
:100644 100644 1b80031... bae76ca... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-1-buildonly.c
:100644 100644 887fc7a... 22738f2... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-2-buildonly.c
:100644 100644 e3f5e8c... 76eea4c... M	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-3-buildonly.c

commit ec5557833ef9b56de0a174b976d06dce396b4112
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 21:16:48 2010 -0700

    Commit more runtime checks for aio_* on FreeBSD.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1796d10... 14ef2b5... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/1-1.c
:100644 100644 765a5b7... f262223... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/10-1.c
:100644 100644 ba0b19f... a420b3e... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/2-1.c
:100644 100644 7af51b6... c484062... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/2-2.c
:100644 100644 29db1ec... e49687d... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/3-1.c
:100644 100644 9499df5... 6c4b40e... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/4-1.c
:100644 100644 956e749... 6d01cea... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/5-1.c
:100644 100644 5e35427... a1b520d... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/6-1.c
:100644 100644 6b8f70c... f083381... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/7-1.c
:100644 100644 ff3ecc8... f23d613... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/8-1.c
:100644 100644 cffa560... 8cd290b... M	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/9-1.c
:100644 100644 1a67893... c6b6062... M	testcases/open_posix_testsuite/conformance/interfaces/aio_error/1-1.c
:100644 100644 0ba1abe... a3f0c9b... M	testcases/open_posix_testsuite/conformance/interfaces/aio_error/2-1.c
:100644 100644 7f6c893... d215409... M	testcases/open_posix_testsuite/conformance/interfaces/aio_error/3-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/1-1.c
:100644 100644 a0b10cd... e2f9a21... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/10-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/11-1.c
:100644 100644 b0de45a... cc9b6e1... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/12-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/13-1.c
:100644 100644 6eb2eb3... bc1d384... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/14-1.c
:100644 100644 5088d84... 52d0dad... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/2-1.c
:100644 100644 d746423... dd80669... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/3-1.c
:100644 100644 a2f1683... 41adb25... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/4-1.c
:100644 100644 3ae9a89... 9bc63ea... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/4-2.c
:100644 100644 41b2fd0... 6524cf8... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/5-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/6-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/7-1.c
:100644 100644 8eef14c... 8a54098... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/8-1.c
:100644 100644 33ae064... 798339e... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/8-2.c
:100644 100644 86fbceb... c7ad2f4... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/8-3.c
:100644 100644 1472ef7... bce6714... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/8-4.c
:100644 100644 7a3491b... 6ff435f... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/9-1.c
:100644 100644 e5820ca... 596cb9a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/1-1.c
:100644 100644 c562a91... 7c835dd... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/10-1.c
:100644 100644 018460e... 22d73cd... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/11-1.c
:100644 100644 5e9f56f... b0030e4... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/11-2.c
:100644 100644 9a3ee2d... 9eadfa5... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/12-1.c
:100644 100644 32e50f9... 96cc008... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/13-1.c
:100644 100644 a6aad0c... 5425cfc... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/14-1.c
:100644 100644 2bc9610... 53288ee... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/15-1.c
:100644 100644 f707334... d13d24d... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/2-1.c
:100644 100644 4fb0e64... 248a00d... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/3-1.c
:100644 100644 c2f89d8... 28931e5... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/3-2.c
:100644 100644 c1d1517... 8305ec8... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/4-1.c
:100644 100644 378b971... 4ecc5d6... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/5-1.c
:100644 100644 75e2d8a... 8f070b0... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/6-1.c
:100644 100644 5874063... 54581a6... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/7-1.c
:100644 100644 fc872fa... 789348c... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/8-1.c
:100644 100644 2dc0420... 63bb8a6... M	testcases/open_posix_testsuite/conformance/interfaces/aio_read/9-1.c
:100644 100644 d159697... bfc8e12... M	testcases/open_posix_testsuite/conformance/interfaces/aio_return/1-1.c
:100644 100644 6e9ff5d... c363a00... M	testcases/open_posix_testsuite/conformance/interfaces/aio_return/2-1.c
:100644 100644 12d4bc7... 2dd9177... M	testcases/open_posix_testsuite/conformance/interfaces/aio_return/3-1.c
:100644 100644 f0b058b... 8e018c2... M	testcases/open_posix_testsuite/conformance/interfaces/aio_return/3-2.c
:100644 100644 321e6ab... f67a4fb... M	testcases/open_posix_testsuite/conformance/interfaces/aio_return/4-1.c
:100644 100644 70cab0c... 7d33e62... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/1-1.c
:100644 100644 9349a4f... 2b47824... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/2-1.c
:100644 100644 16fac81... 378c158... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/3-1.c
:100644 100644 f197de0... 260c26a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/4-1.c
:100644 100644 7a42ef2... f102c0c... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/5-1.c
:100644 100644 288d2c8... bc464c8... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/6-1.c
:100644 100644 0e14012... 83a6a00... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/7-1.c
:100644 100644 fa77c2a... 0023520... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/8-1.c
:100644 100644 024bc94... 39d504d... M	testcases/open_posix_testsuite/conformance/interfaces/aio_suspend/9-1.c
:100644 100644 98906ea... b95cfab... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/1-1.c
:100644 100644 f5b5070... f6fbc90... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/1-2.c
:100644 100644 d83cd3c... 40fd93b... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/10-1.c
:100644 100644 d30197d... 62a89b4... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/11-1.c
:100644 100644 083df51... 536b385... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/12-1.c
:100644 100644 3e59828... 20f98ca... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/13-1.c
:100644 100644 685a3ce... 8daa2cd... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/2-1.c
:100644 100644 8f33131... 4d7470e... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/3-1.c
:100644 100644 39773b1... 9e7f9ec... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/5-1.c
:100644 100644 65b5d47... 9154f5a... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/6-1.c
:100644 100644 58f833f... 30260c3... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/7-1.c
:100644 100644 21c6dec... d1d9494... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/8-1.c
:100644 100644 571a2b4... 60aa2b2... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/8-2.c
:100644 100644 19bfca7... 5ea9576... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/9-1.c
:100644 100644 46c4e54... 87f8980... M	testcases/open_posix_testsuite/conformance/interfaces/aio_write/9-2.c

commit 88cc8f1cd411cd787ccb09f5dcdca81ce6be6389
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 20:54:11 2010 -0700

    Clean up headers and whitespace.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 073db70... 54fa9ec... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/1-1.c
:100644 100644 9e86025... f4e4c85... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/10-1.c
:100644 100644 17ffcf9... c245fab... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/11-1.c
:100644 100644 73393bd... ca0b45a... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/17-1.c
:100644 100644 ae3c230... 8f429a2... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/17-2.c
:100644 100644 9198bec... 4cc77a4... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/17-3.c
:100644 100644 d36b05b... 49ab0b7... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/17-4.c
:100644 100644 1d247a7... 84075cc... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/19-1.c
:100644 100644 04f5caa... 674b7ae... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/19-2.c
:100644 100644 3a46ce3... f10ed89... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/19-3.c
:100644 100644 9f92b2c... cc6c874... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/19-4.c

commit 50e63b3434fec6e7193ed2710df2af393ba911bb
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 20:46:15 2010 -0700

    Update FreeBSD configuration documentation.
    
    Add notes about aio_* syscalls on FreeBSD, and fix the mqueue notes as
    the name of the kernel module wasn't a 1:1 match with the directory name
    under /sys/modules/...
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1c31f31... c53db90... M	testcases/open_posix_testsuite/BUILD

commit 6b6f81b02cbd9b4c7507af6b6aec6980c2eb257d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 20:43:14 2010 -0700

    Check for support w/ sysconf(_SC_ASYNCHRONOUS_IO).
    
    Checking for a preprocessor define is very Linux centric (apparently),
    as FreeBSD states in sys/unistd.h:
    
     * Anything which is defined as zero below **must** have an
     * implementation for the corresponding sysconf() which is able to
     * determine conclusively whether or not the feature is supported.
     * Anything which is defined as other than -1 below **must** have
     * complete headers, types, and function declarations as specified by
     * the POSIX standard; however, if the relevant sysconf() function
     * returns -1, the functions may be stubbed out.
    
    This is done most likely done to ensure that runtime enabled
    functionality via kernel modules is properly queried.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 0fd71c7... f19fcd3... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/1-1.c
:100644 100644 4b25669... ace94ab... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/10-1.c
:100644 100644 ca5be00... 216f3b8... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/11-1.c
:100644 100644 5dfc989... 4539fdc... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/12-1.c
:100644 100644 c948381... a502ea9... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/13-1.c
:100644 100644 7e46612... a5e7614... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/14-1.c
:100644 100644 8e0b68d... bacfeac... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/15-1.c
:100644 100644 6843b91... 407c396... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/16-1.c
:100644 100644 57508a8... 1a89500... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/17-1.c
:100644 100644 869397f... 26631b7... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/18-1.c
:100644 100644 09e14d1... b1673b2... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/19-1.c
:100644 100644 a5b5b7f... d174585... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/2-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/20-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/21-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/22-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/23-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/24-1.c
:100644 100644 c079c7d... a7aa26a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/25-1.c
:100644 100644 cee9869... 1ceb7de... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/3-1.c
:100644 100644 922830c... 6745660... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/4-1.c
:100644 100644 8367e4d... 3a46ced... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/5-1.c
:100644 100644 d40e996... 29dd804... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/6-1.c
:100644 100644 513ffe5... f5a71f7... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/7-1.c
:100644 100644 cad47b4... 18ec827... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/8-1.c
:100644 100644 f477fcf... 9689a6a... M	testcases/open_posix_testsuite/conformance/interfaces/lio_listio/9-1.c

commit 26b17d17e4d1df59ea3b70f72d194e87dafafaa3
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 18:45:23 2010 -0700

    Fix alignment as per posixtest HEAD.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 d8b1271... 73b0da1... M	testcases/open_posix_testsuite/conformance/interfaces/clock_gettime/3-1.c

commit 0554dd8ef784c223f74e14de513b1752a9949dae
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 18:38:19 2010 -0700

    Commit fixes from posixtest CVS HEAD.
    
    Minor formatting fixes, but basically untainted.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 06f500a... 6054eca... M	testcases/open_posix_testsuite/conformance/definitions/sched_h/3-1-buildonly.c
:100644 100644 7a5de7f... e9bb17c... M	testcases/open_posix_testsuite/conformance/definitions/sched_h/4-1-buildonly.c
:100644 100644 8dde471... 83b06da... M	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-3-buildonly.c

commit 5a8278a619f323b252b5a816fabdc997ae688c15
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 18:11:30 2010 -0700

    Make a note about subdirectory CFLAGS, LDFLAGS, LDLIBS.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 655e204... 1c31f31... M	testcases/open_posix_testsuite/BUILD

commit 5e3aabb0b49e4be4fc35a33403fde96360ec396a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 16:42:59 2010 -0700

    Update directions, get the changelog closer to
    posixtest HEAD.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 3a7b84e... b3f47cc... M	testcases/open_posix_testsuite/ChangeLog
:100644 100644 c9d17d6... 2fc16f5... M	testcases/open_posix_testsuite/Documentation/HOWTO_RunTests
:100644 100644 6cbfac9... a4326f6... M	testcases/open_posix_testsuite/QUICK-START

commit 17b3085ae6f936edcce93e7a61e808dc6ca2fdac
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sat Jul 10 16:36:35 2010 -0700

    No sense in needlessly specifying the timeout twice.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 e90f5e8... 1794aa3... M	testcases/open_posix_testsuite/Makefile

commit f2255196e12df19718416b2e229039a6a4e57677
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 08:34:05 2010 -0700

    Add a note about open_hpi_testsuite in the UCLINUX block.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c3b6ce1... a0abbe8... M	testcases/Makefile

commit 22a524f51794034a4c595db1fd38152f75900495
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 08:31:55 2010 -0700

    Disable open* by default in the build.
    
    I might have been overambitious in my previous commit, so let's first
    test the scenarios to ensure that there aren't any regressions.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 2ebb325... c3b6ce1... M	testcases/Makefile

commit 9c0f1be1629d40dc94377326a50116059550784f
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 08:30:43 2010 -0700

    Remove dummy file now that it's served its purpose.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 000000 e69de29... 0000000... D	testcases/open_posix_testsuite/dummy

commit dcedae8e3cbd907bd45fe9ff509847cd9e63d073
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 08:29:28 2010 -0700

    Update directions a bit.
    
    Add a note about CFLAGS, and FreeBSD directions.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 55df344... 655e204... M	testcases/open_posix_testsuite/BUILD

commit 7e3f5ef8f8b1bbabbad3fc6eb5f2200656b3e87d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 07:58:57 2010 -0700

    Dummy commit to note major changes done to the open_posix_testsuite:
    
    1.  Rewrite the Makefiles to not be dependent on gmake, but instead POSIX
        compatible make variants. This includes pmake on FreeBSD, NetBSD, and
        OpenBSD.
    2.  Remove bash-isms in runtime scripts.
    3.  Merge all runtime scripts into generated scripts, which depend on one
        infrastructure script -- run-test.sh.
    4.  Better identify build-only tests vs runtime tests.
    5.  Fix compiles for many tests so that they're actually POSIX compliant
        as per the opengroup manpages (and thus properly compile on FreeBSD,
        NetBSD, and OpenBSD, at the very least).
    6.  Fix -lrt issue (apparently linux doesn't require -lrt like FreeBSD
        does at least, despite the fact that many libcalls and syscalls
        defined by opengroup are under the REALTIME section).
    7.  Fix setpgrp(3) code, as setpgrp isn't actually a POSIX extension (it's
        an XSI extension).
    8.  Make it possible for folks to type in make test and have it actually
        run the test.
    9.  Make an effort towards enabling
        cross-compilation (or cross-build as they call it in BSD-land),
        out-of-build-tree.
    10. Block off all detected Glibcisms and Linuxisms, so that they will be
        eventually pruned from the tree.
    11. Fix the compilation state on some tests (where _POSIX_SPORADIC_SERVER
        wasn't properly specified, and where it was set with == -1), so that
        the test is properly resolved (with a compilation error, and
        PTS_UNSUPPORTED, as per the POSIX features page examples).
    12. Remove some cruft in locate-test.
    13. Move around some files to make more logical sense.
    
    Other changes done in the pu -> master merge:
    1.  Fix a bashism in numa_tests.sh.
    2.  Enable more testcase components in LTP in the build, other than just
        the kernel component. We've reached steady state, so it's time to add
        some flux in adding more features to the build...
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... e69de29... A	testcases/open_posix_testsuite/dummy

commit 91e1c951e6f5aa2b268509c57bdbcc2c4d1dcab4
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sun Jul 11 00:19:53 2010 +0530

    Fix hugeshmget01. Sorry!! I mistook to make following patch for hugetlb tests: http://www.mail-archive.com/ltp-list@lists.sourceforge.net/msg10249.html, After the patch was applied, hugeshmget01 test will FAIL under the condition that hugepages isn't effective. In this patch, I moved the timing of "setup()" calling after the judgment  of hugepages.
    ------------
            if ((msg = parse_opts(ac, av, (option_t *)NULL, NULL)) != (char *)NULL){
                    tst_brkm(TBROK, cleanup, "OPTION PARSING ERROR - %s", msg);
            }
    
            /* The following loop checks looping state if -i option given */
            if ( get_no_of_hugepages() <= 0 || hugepages_size() <= 0 )
                 tst_brkm(TCONF, cleanup, "Not enough available Hugepages");
            else
                  huge_pages_shm_to_be_allocated = ( get_no_of_hugepages() * hugepages_size() * 1024) / 2 ;
    
            setup();                        /* global setup */
    ------------
    At first, the "cleanup()" function was called in exit handling when hugepages was not effective. But I didn't change "cleanup" into "tst_exit". Therefore, in "cleanup()", exit handling fails to delete a non-existing temporary directory. I maked patch for the latest git. I tested it in both conditions that hugepages is effective/ineffective. Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>.

:100644 100644 76b95de... bd00c90... M	testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c

commit 9080a1ac2455fa5eef852385b8a62e8ad1028d25
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sun Jul 11 00:17:43 2010 +0530

    add types for functions in fs-bench. Attached patch adds types for functions in sources for fs-bench just because when function doesn't have return type it defaults to int and this causes problems (for example when doing return from such function without value). Signed-off-by: Cyril Hrubis chrubis@suse.cz.
    Side note:
    he code quality for fs-bench is very poor, there is no documentation and the scripts are broken (mostly wrongly hardcoded paths). IMHO these tests are not worth fixing and candidate for removal. Please provide a build log. Garrett Cooper <yanegomi@gmail.com>.
    Okay apparently I've missed some "unused variable" and "implicit
    function declaration" warnings.  Attached patch fixes all compilation
    issues (has previous two merged) but still at least the test scripts are
    broken. Signed-off-by: Cyril Hrubis chrubis@suse.cz.

:100644 100644 89ee941... 0609335... M	testcases/kernel/fs/fs-bench/boxmuler.c
:100644 100644 88ea202... ec54bb8... M	testcases/kernel/fs/fs-bench/create-files.c
:100644 100644 3322d92... fdfc71f... M	testcases/kernel/fs/fs-bench/random-access-del-create.c
:100644 100644 e2f8536... f5eb6a2... M	testcases/kernel/fs/fs-bench/random-access.c
:100644 100644 a1fc8b8... 70ddf32... M	testcases/kernel/fs/fs-bench/random-del-create.c

commit 848f37617b3aee594408d399253d8e196095ca01
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:45:03 2010 +0530

    Changes till July 3rd 2010, but will be release as 20100630 ;-). Signed-of-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

:100644 100644 dcba787... 9b43401... M	ChangeLog

commit e3bc3758d3e4d17a0e04009ef873df53819b9ec6
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:32:27 2010 +0530

    [PATCH v4] Remove files which does not have a dmesg entry
    
    The recently introduced option:
    
    -K DMESG_LOG_DIR
            Log Kernel messages generated for each test cases inside this directory,
    
    when used will generate huge no. of files inside the DMESG_DIR. Many of them will be ZERO size as we do not expect KERNEL MESSAGE to be generated against all the LTP TESTS that we will run. It is better to prune them, and let only those files exist which will have real entries. The following patch fixes the same.
    Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

:100755 100755 7a8ac28... b385984... M	runltp

commit 9e365e8e209904086b18420438b4792851c219b8
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:13:41 2010 +0530

    semctl01 and shmctl01 will hang during uClinux test: ltp test case shmctl01 and semctl01 can not execute. When press ctrl and c, it can not exist.
    --
    root:/> shmctl01
    
    ^Cshmctl01    0  INFO  :  received unexpected signal 2
    ^Cshmctl01    0  INFO  :  received unexpected signal 2
    --
    The reason is the child will unlink the pipe if pipename isn't NULL，which may make the parent waitting forever. Signed-off-by: Bob Liu <lliubbo@gmail.com>.

:100644 100644 7357ded... 2bbc3db... M	testcases/kernel/syscalls/ipc/semctl/semctl01.c
:100644 100644 a734e1e... 3d1507a... M	testcases/kernel/syscalls/ipc/shmctl/shmctl01.c

commit 65f7070cb3f67eba009e68413187727f508623e1
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:10:38 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In a scenario where a thread other than high priority noise thread is scheduled after the barrier, a priority inversion will not occur, defeating the purpose of test. We need to tightly synchronize the threads so that the noise thread always begins the test and gets preempted by the low prio thread through the PI logic. This change is applied on testpi-4.
    Signed-off-by: Gowrishankar<gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar<gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 3bd5d77... 63f8430... M	testcases/realtime/func/pi-tests/testpi-4.c

commit 785ef40630157d66067b1577a238184e0170e383
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:10:14 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    testpi-4 defines THREAD_STOP which is not used anywhere in the program.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 5a39701... 3bd5d77... M	testcases/realtime/func/pi-tests/testpi-4.c

commit bd2dce17303a69463e926bb5a6a955e7890f65f3
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:55 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    Instead of lock/unlock of mutex to burn cpu cycles, we can use busy_work_ms
    from librttest which is more explicit (burn cycles, not provide some
    synchronization).
    
    Also this patch removes the id increment since it is not used.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 0960c91... 5a39701... M	testcases/realtime/func/pi-tests/testpi-4.c

commit a9e2238be689fd8e4d25bc7eefca1cb11535ce7a
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:32 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    Since main() sets the cpu affinity, it is not necessary for the
    spawned threads to do so, as the threads inherit the cpu affinity.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 6a90771... 0960c91... M	testcases/realtime/func/pi-tests/testpi-4.c

commit 5305c4a10cf26799c81e6f0362750988457d3002
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:02 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    This patch adds the description to the test testpi-4.
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.

:100644 100644 53b47a8... 6a90771... M	testcases/realtime/func/pi-tests/testpi-4.c

commit a21dab25b7ef183d049b31b0d3fed1d48c16dc2b
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:06:38 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    testpi-4 is initializing mutex step by step which can be done
    by reusing the init_pi_mutex() funtion available in librttest.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 bde3ded... 53b47a8... M	testcases/realtime/func/pi-tests/testpi-4.c

commit b4f57c7d26b58f3d80b46340f10a397d21957866
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:06:16 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    This patch cleans up the testpi-4 so as to follow the
    C coding style standards.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

:100644 100644 1756588... bde3ded... M	testcases/realtime/func/pi-tests/testpi-4.c

commit 76a720a381f351b33eb203c7c519e6f44bbe7219
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 21:08:18 2010 +0530

    While executing the ltp on an nfs root mounted system, I faced a problem with some of the ltp test cases. These tests either did not close their file descriptors or did no unmap the mmaped files. This results in a failures while trying to clean up the temporary directory of the testcase. I have fixed all of the above tests with the following patch. Signed-off-by: Darshak P Shah<darshaks@linux.vnet.ibm.com>,

:100644 100644 fb87094... d2e63f2... M	testcases/kernel/io/direct_io/diotest2.c
:100644 100644 5ef5d67... 1f3e5c9... M	testcases/kernel/io/direct_io/diotest3.c
:100644 100644 bda2291... 6703d5d... M	testcases/kernel/io/direct_io/diotest5.c
:100644 100644 65718ca... 9d68cb1... M	testcases/kernel/io/direct_io/diotest6.c
:100644 100644 0de81c1... 8a6219f... M	testcases/kernel/mem/mmapstress/mmapstress01.c
:100644 100644 f801a2e... 8ed46f6... M	testcases/kernel/mem/mmapstress/mmapstress02.c
:100644 100644 4d25b8d... 6a857e1... M	testcases/kernel/mem/mmapstress/mmapstress05.c
:100644 100644 33c7dd8... ca5418e... M	testcases/kernel/mem/mmapstress/mmapstress10.c
:100644 100644 48aca44... ac015ef... M	testcases/kernel/syscalls/open/open10.c
:100644 100644 a41a840... f192a4a... M	testcases/kernel/syscalls/ppoll/ppoll01.c
:100644 100644 3b3e4fd... b581a67... M	testcases/kernel/syscalls/splice/splice02.c
:100644 100644 ae2fa2d... 30f12c0... M	testcases/kernel/syscalls/utimes/utimes01.c

commit 13adcb0c4496e75bdcdbc02410b46b9fbc6120a8
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri Jul 2 22:47:57 2010 +0530

    ima_measure doesn't build correctly.  It needs config.h to determine whether openssl headers are present, and verbose needs to be global. Broken by commit ef77253961f909f87e82e6d2b620e87af33e9665.
    Signed-off-by:  Stephen D. Smalley <sds@tycho.nsa.gov>,
    Acked-by: Garrett Cooper <yanegomi@gmail.com>,

:100644 100644 dd6b1d0... 0484c04... M	testcases/kernel/security/integrity/ima/src/ima_measure.c

commit 5ef445ba30891e32bdd5c032bb36e1b8e7ceaf8b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 06:52:48 2010 -0700

    Align the summary output stats.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 3b044d4... 6d98b08... M	testcases/open_posix_testsuite/bin/run-tests.sh

commit 5f103ec789dbe243401d1f3ce688a4fae4f99095
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 06:37:31 2010 -0700

    Be quiet when setting up and exec'ing run.sh though.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 bcef2a0... 41bb387... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit b236795c0122ceb96f69a37569dc63b405c4ff96
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 06:28:24 2010 -0700

    Generate run.sh only once, and exec run.sh in test again.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 abddd48... bcef2a0... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 6a905a25a1bfe020612f7e607a9309a5e7c737d3
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 7 09:45:36 2010 -0700

    Prefix test output with the path and don't truncate the logfile.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 e3b676e... 3b044d4... M	testcases/open_posix_testsuite/bin/run-tests.sh

commit 6fefad532e57ea50f0853e8f17df7a1eb278ce89
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 7 09:45:11 2010 -0700

    Install run.sh, and remove some unneeded bits.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 beb920f... abddd48... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit d10869fcc17936c97060d46609dee57d577fcab0
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Wed Jul 7 09:43:46 2010 -0700

    Move compilation and installation to appropriate Makefiles.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ca97ad4... e90f5e8... M	testcases/open_posix_testsuite/Makefile
:000000 100644 0000000... 1bbeac1... A	testcases/open_posix_testsuite/bin/Makefile
:100644 100644 40fcf73... 53e43bb... M	testcases/open_posix_testsuite/tools/Makefile

commit 9a0582ebe6c9671842ad8589c23066c517bc42c7
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 10:46:21 2010 -0700

    Bye useless script.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 03d39ea... 0000000... D	testcases/open_posix_testsuite/scripts/execute.sh

commit 81ecf3a86fdfa6ec4010c8150337a29a17a91bb1
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 10:37:58 2010 -0700

    Don't use shift in generate_makefiles.
    
    dash gets cranky if you try and shift too many times, and part of the problem
    might be with how it interprets stack data in $# (ash in FreeBSD, and bash
    don't have this issue).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 2a8fbdd... beb920f... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit f6955771fdd1abbb2cd75abc226906022ae05ea4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:55:14 2010 -0700

    Remove dupe finds by restricting searches.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 acfc11c... 723f0a1... M	testcases/open_posix_testsuite/scripts/locate-test

commit 28e174e9db3a1f4b767e8c734c7208b4de99d599
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:52:04 2010 -0700

    Assume everything in functional/ is a test.
    
    This is the status quo today at least.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 7cc2dfe... acfc11c... M	testcases/open_posix_testsuite/scripts/locate-test

commit a29a396150d38c443a2b2f377c3dfc72d33eabb5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:46:17 2010 -0700

    Enable compilation and traversal of more tests.
    
    A lot of these directories were disabled by default because of the fact
    that they didn't cleanly fit into the built for the longest time, but I
    think it's time to turn on more stuff.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 a9c71f8... 2ebb325... M	testcases/Makefile

commit 5511b273ffb05cf36ed7bcc26eafe15cb4339359
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:40:40 2010 -0700

    Compile open_posix_testsuite for UCLINUX.
    
    That way folks on the project can decide whether or not they want to run
    the tests at least (because not all of the code will function at runtime
    on UCLINUX AFAIK).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ebf4b06... a9c71f8... M	testcases/Makefile

commit 1b92c89200342ab0badab39ca0547c1b739de85d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:40:09 2010 -0700

    Chase the run-test.sh -> run-tests.sh commit.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 e3b676e... 0000000... D	testcases/open_posix_testsuite/bin/run-test.sh

commit bec80d891acbc13269143d90085410579e1d836e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:37:59 2010 -0700

    Fix oversight with `test tools'.
    
    All of the *core.c files are used as test tools for the *.sh scripts
    when running tests. Previously, they were being leaked into the test
    execution, which was wrong, so I had to come up with an enhanced scheme
    for detecting what needs to be compiled as well as what needs to be
    tested.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 6671941... 2a8fbdd... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh
:100755 100755 02adc56... 7cc2dfe... M	testcases/open_posix_testsuite/scripts/locate-test

commit d4a84ce80c001b3a128d754da13754704b1a4af4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:37:20 2010 -0700

    Rename run-test.sh to run-tests.sh for clarity.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 172226b... ca97ad4... M	testcases/open_posix_testsuite/Makefile

commit ef12476f5d8f23a0292d8c16d2a227aa4336256d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Tue Jul 6 09:36:14 2010 -0700

    Rename for clarity.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100755 0000000... e3b676e... A	testcases/open_posix_testsuite/bin/run-tests.sh

commit 7abc390cda1cccd78183578964c4d9a3ba629ba2
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 19:56:29 2010 -0700

    Mute compile.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 b09903d... 40fcf73... M	testcases/open_posix_testsuite/tools/Makefile

commit 3b6aeead1a65de3729c147ca41e66683b74ae54c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 19:18:19 2010 -0700

    Apply test make environment to make test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 edf3fcc... 172226b... M	testcases/open_posix_testsuite/Makefile

commit d680c877f41da1ccc5731c069b8fae81a0a189f2
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 19:16:51 2010 -0700

    Fix up run-test.sh further.
    
    There were some missing args, a missing step to produce t0.val, a typo, etc.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 6c8720e... e3b676e... M	testcases/open_posix_testsuite/bin/run-test.sh

commit 515be5888ee07d87c4194afbf6ca69826cf2adfa
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 19:16:27 2010 -0700

    Quiet down make test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 46c4838... 6671941... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 2aec45df627cad013f17b7ab2fcad00dd069a4e5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 18:34:42 2010 -0700

    Correct script location; improve harness.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100755 0000000... 6c8720e... A	testcases/open_posix_testsuite/bin/run-test.sh

commit f8e6d24ced9584afeaee458e7872ff50aab6769b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 18:29:09 2010 -0700

    Add missing target.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 0550534... b09903d... M	testcases/open_posix_testsuite/tools/Makefile

commit 8ddfef16230888ae507540c9137a6b396dacba18
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 18:24:57 2010 -0700

    Push -j1 down in targets, remove obsolete comment.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1c08bae... edf3fcc... M	testcases/open_posix_testsuite/Makefile

commit 59cfa75ca85b14396bb524d6a586b03aa45d4c09
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 18:24:10 2010 -0700

    Update run.sh when Makefile changes, and fix path.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 925bfe4... 46c4838... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh
:100755 000000 6c8720e... 0000000... D	testcases/open_posix_testsuite/scripts/run-test.sh

commit 7da13d4fc396f5c2e0afa4cd37ab2a9236607c12
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:36:32 2010 -0700

    Remove another [now] autogenerated file.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 8812b56... 0000000... D	testcases/open_posix_testsuite/stress/semaphores/run.sh

commit f993a1dcedee2b60bdb1731507b5c063af060490
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:35:31 2010 -0700

    Remove [now] autogenerated file.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 37f34d8... 0000000... D	testcases/open_posix_testsuite/stress/mqueues/run.sh

commit a6a5dba5a420896edf184669d871971e1cf52c56
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:31:21 2010 -0700

    Improve usability in test harness script.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100755 88416bb... 6c8720e... M	testcases/open_posix_testsuite/scripts/run-test.sh

commit dd845c2f6209f370c89b28d34ff6d204fa32c0c7
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:24:52 2010 -0700

    You aren't needed anymore.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 000000 82c228e... 0000000... D	testcases/open_posix_testsuite/scripts/exec-func.sh

commit 84e052d5087dd3bc469f6a02de3b7abd774c4df5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:23:39 2010 -0700

    Bye bye useless script...
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 8832eca... 0000000... D	testcases/open_posix_testsuite/functional/timers/run.sh

commit d8dd9700830563280c60dcabe5b9c13bc11763b0
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:23:07 2010 -0700

    Clean up run.sh, fix shebang, whitespace.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 2f47f57... 925bfe4... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit e7160e77fc728e7defab7574f60713d9e33a0d49
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:18:41 2010 -0700

    Remove some run.sh scripts.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 000000 95606df... 0000000... D	testcases/open_posix_testsuite/functional/mqueues/run.sh
:100755 000000 282c64e... 0000000... D	testcases/open_posix_testsuite/functional/semaphores/run.sh
:100755 000000 1f95c55... 0000000... D	testcases/open_posix_testsuite/functional/threads/pi_test/run.sh
:100755 000000 bb04519... 0000000... D	testcases/open_posix_testsuite/functional/threads/robust_test/run.sh

commit 3b808b433b22516d2eecd95aa2ba67dbf057e975
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:02:52 2010 -0700

    Add install target; shuffle around/cleanup code.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 5661d6a... 1c08bae... M	testcases/open_posix_testsuite/Makefile

commit 0cc96ccac4c9ea57f7c64934af42c8cd43ad6da4
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 17:02:00 2010 -0700

    Use generated run.sh instead in Makefile for test.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 1455ed1... 2f47f57... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit a3acfa7e5751f5c93aff5685fb1c0997bd3d7311
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 16:59:23 2010 -0700

    Shuffle around code; generate run.sh for install.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 6127a2d... 1455ed1... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh
:000000 100755 0000000... 5a552b8... A	testcases/open_posix_testsuite/scripts/print-prefix.sh

commit 070138c410944469346ff6823fc3df58a5e2da6f
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 14:46:38 2010 -0700

    Improve wording.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 7820800... 5088d84... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/2-1.c

commit d212516229b8a41d4302620da4a3511b333ed2e5
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 14:45:01 2010 -0700

    Get the compile to pass.
    
    The run will fail, but that's ok.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 32e6dce... 7820800... M	testcases/open_posix_testsuite/conformance/interfaces/aio_fsync/2-1.c

commit 096c450506ad0f50352a3c8b43de9c1538295d82
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 14:24:59 2010 -0700

    Remove dead code.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ba257fd... d4377c9... M	testcases/open_posix_testsuite/stress/threads/fork/s-c1.c

commit 85d7f26c7eb5994d4dabdb05998c90d86d7baa46
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 14:21:03 2010 -0700

    Make 2-2-buildonly less strict on #defines.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 0dd5ff8... 1434be8... M	testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-2-buildonly.c

commit 0414c8fbabd00c4e1df589aa13d995c91c8736ec
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 14:09:03 2010 -0700

    Properly conditionalize XSR constants.
    
    These are optional as per POSIX spec.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 ed1c519... 7d9cb9c... M	testcases/open_posix_testsuite/conformance/definitions/errno_h/3-1-buildonly.c
:100644 100644 35d056d... cfacaa1... M	testcases/open_posix_testsuite/conformance/definitions/errno_h/3-2.c
:100644 100644 017f600... 7cc2fb5... M	testcases/open_posix_testsuite/conformance/definitions/errno_h/4-1.c
:100644 100644 55c6a9f... 08b7934... M	testcases/open_posix_testsuite/conformance/definitions/errno_h/assertions.xml

commit 0894865a51d30399e62a20349061112deaa4b4f6
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 13:19:24 2010 -0700

    Mute grep output checking for Linux.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 16ae0f7... 6127a2d... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 446cd01c811977e2866006259423f7c7fff0d863
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 13:17:27 2010 -0700

    Mute noise.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 35e69d0... 16ae0f7... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 8d295e3c1f7e48ec1793ea6bc59ccf07d39bd55d
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 13:11:22 2010 -0700

    Make Makefile generation static again; add needed includes.
    
    Dynamic Makefile generation turns into a royal mess -- how
    does one expand variables, evaluate expressions, etc?
    
    Just make things more simplified again by using static
    definitions in the Makefiles, at the cost of it being more
    of a PITA to handle.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 c837c79... a1e2b5c... M	testcases/open_posix_testsuite/functional/threads/pi_test/CFLAGS
:000000 100644 0000000... a1e2b5c... A	testcases/open_posix_testsuite/functional/threads/robust_test/CFLAGS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/functional/threads/robust_test/LDLIBS
:100755 100755 6d79d58... 35e69d0... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit d8140e2c68a3eb77db15e74f6621af6441e19527
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 12:51:21 2010 -0700

    Make Makefile gen. depend on the global var defs.
    
    Things are going back to being static for simplicity.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 50f1c5c... 5661d6a... M	testcases/open_posix_testsuite/Makefile

commit 8b376ab38ab090763bf0552580374b864e1afea6
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 12:50:54 2010 -0700

    Commit dummy files.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... e69de29... A	testcases/open_posix_testsuite/LDFLAGS
:000000 100644 0000000... e69de29... A	testcases/open_posix_testsuite/LDLIBS

commit 393822aa72d8652550d8c88c17240ed19b86593c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 10:42:30 2010 -0700

    Make the _POSIX_SPORADIC_SERVER checks uniform.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 7adfd28... 1ba6fce... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/25-2.c
:100644 100644 4415c03... fd4c6ca... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/25-3.c
:100644 100644 a0d626a... c97bdd7... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/25-4.c

commit 1510cbb78e7eb882d885b5253fbfd92b6fd38ac0
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 03:50:45 2010 -0700

    Commit as many missing LDLIBS files as possible.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/nanosleep/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrierattr_getpshared/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cancel/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_broadcast/LDLIBS
:100644 100644 38adaa8... 211e7d3... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_broadcast/testfrmw.c
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_destroy/LDLIBS
:100644 100644 38adaa8... 211e7d3... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_destroy/testfrmw.c
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_init/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_signal/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_timedwait/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_setclock/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/LDLIBS
:100644 100644 49ac749... 4410afc... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/testfrmw.c
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_detach/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_join/LDLIBS
:100644 100644 38adaa8... 211e7d3... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_join/testfrmw.c
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_timedlock/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_timedrdlock/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_timedwrlock/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlockattr_getpshared/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_init/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/sem_close/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/conformance/interfaces/sem_init/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/sem_open/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/sem_post/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/sem_timedwait/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/sem_wait/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/shm_unlink/LDLIBS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/functional/threads/condvar/LDLIBS
:000000 100644 0000000... c837c79... A	testcases/open_posix_testsuite/functional/threads/pi_test/CFLAGS
:100644 100644 1d2c98f... 4c7e2d8... M	testcases/open_posix_testsuite/functional/threads/schedule/LDLIBS

commit 01680d51328b33cd26d71a689c0552ccca7e5015
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 03:32:11 2010 -0700

    Remove _XOPEN_SOURCE.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 7db06c2... d3be36c... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_init/2-1.c

commit 8d78db8ede38c10e677ce5c227f194d378a099dc
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 03:14:09 2010 -0700

    Fix non-format based printf.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 729e2d6... 0d82630... M	testcases/open_posix_testsuite/conformance/interfaces/sem_init/testfrmw.c

commit 0b83e63a3164bf3119f85da0131b7a74c0833812
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 03:10:18 2010 -0700

    Commit more missing LDLIBS files. More to come...
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/clock_getcpuclockid/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/clock_getres/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/clock_gettime/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/clock_nanosleep/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/mlockall/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/mmap/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/shm_open/LDLIBS

commit 6da95a6582aa88341173994a2546d8695e450e9a
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 02:45:19 2010 -0700

    Commit another missing LDLIBS file.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/definitions/aio_h/LDLIBS

commit d98cc91cb29ede62323c94d70887d5c31c03d24b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 02:40:40 2010 -0700

    Typo snuck in.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 e680805... 6d79d58... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit ca761d624c016aa10385579b668774b65eea13de
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 01:24:20 2010 -0700

    Makefile has been rewritten; change license note.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 0816099... 50f1c5c... M	testcases/open_posix_testsuite/Makefile

commit 10a39e805f31992220034bfdc44af38324d29f1e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 01:18:24 2010 -0700

    s/run\.sh/run-test\.sh/
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 2e9ca76... e680805... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 617f4f5c35549bf644d1ad727b129234bc714d8e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Mon Jul 5 01:14:03 2010 -0700

    Tone down noise.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 04e78cd... 376afcd... M	testcases/open_posix_testsuite/conformance/behavior/Makefile
:100644 100644 04e78cd... 376afcd... M	testcases/open_posix_testsuite/conformance/definitions/Makefile
:100644 100644 04e78cd... 376afcd... M	testcases/open_posix_testsuite/conformance/interfaces/Makefile
:100644 100644 9de651a... 9cbf16a... M	testcases/open_posix_testsuite/functional/Makefile
:100644 100644 04e78cd... 376afcd... M	testcases/open_posix_testsuite/stress/Makefile
:100644 100644 127bfec... 0550534... M	testcases/open_posix_testsuite/tools/Makefile

commit 885f781a9ae9fa0273374312b0e172a2137d1d47
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:56:28 2010 -0700

    Weird... scenarii.c change didn't take effect.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 ba3af22... 02adc56... M	testcases/open_posix_testsuite/scripts/locate-test

commit da5651247bdf23c20a971b48614849ac942d7f20
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:53:47 2010 -0700

    Omit the *_scenarii.c files b/c they're #include'd
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/getpid/LDLIBS

commit d309fa0607bf70af04be750e57e9346c6790fbc3
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:53:33 2010 -0700

    Mute noise again.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 55f5f1f... 0816099... M	testcases/open_posix_testsuite/Makefile

commit 8f1b81c4da104171651fa9fe59c66c398b2fbfcd
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:52:20 2010 -0700

    Only produce Makefile.3 if it does not exist.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 85cf00d... 2e9ca76... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 094d369f06607e37d76d697844f75272755cf969
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:32:00 2010 -0700

    Simplify include files by cat'ing them.
    
    grep screws up the details and prints out one whitespace separated token
    per line (probably because I wasn't quoting the string), but commenting
    out # can be confusing.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 c989cc6... 85cf00d... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 0df8df0011e170d2644b4cdfef6216030dcb8c50
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 23:28:16 2010 -0700

    Disable -std=g99 detection.
    
    The gcc toolchain has been c99 compliant (for the most part), for quite
    a few years. People should know what their compilers are capable of,
    s.t. adding more logic to detect this functionality (incorrectly) isn't
    really helpful.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 55563b3... a27d9aa... M	testcases/open_posix_testsuite/CFLAGS

commit 65d6a03b5ce17b934d1fd5a72e8c7519d637965b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:57:17 2010 -0700

    Fix inverted logic (doh!).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 710e774... c989cc6... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit e8d8303f301eb8fd6477346373b8ffe21aed4d09
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:42:11 2010 -0700

    Improve logic breakdown and flow. Fix bugs.
    
    The overall description for generate_makefile didn't match the behavior;
    isolate the Makefile producing portion, so the code could be better
    tested by itself, and the flow becomes more intuitive.
    
    Oh yeah, and fix $AUTHORDATE to print out less crap, and don't print out
    the Makefile if Makefile.2 (the targets section) does not exist.
    
    Also, punt out the last cached data in generate_makefiles, as we were
    missing the last Makefile (and thus... it was regenerating the Makefiles
    multiple times unnecessarily at the top-level Makefile, with GNU make in
    particular, compared to BSD make -- which was bizarre).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 a1a3914... 710e774... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit b82db5f13e89331813fd93023adcc48efe27c9bf
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:40:15 2010 -0700

    Use BUILD_MAKE where needed, and optimize.
    
    Also, push down distcleans logic into leaf Makefiles for correctness and
    unmute targets for the time being in order to properly diagnose what's
    going on, for the time being.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 9e03fe4... 55f5f1f... M	testcases/open_posix_testsuite/Makefile

commit 377d976666335e15fed7cac8d7f48b8a762e25fa
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:35:09 2010 -0700

    Update scripts for new app name.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 cdd5f39... 509b806... M	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-1.sh
:100755 100755 9d500ef... c4a1d64... M	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-2.sh
:100755 100755 247fea6... 1f725da... M	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-3.sh
:100755 100755 8bb8daa... add0504... M	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-4.sh

commit 20d72c7d3cd67461380cbfb484471c3b39262ebe
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:33:42 2010 -0700

    Push down distclean-makefiles into conformance.
    
    Also add some local Makefiles missing from the repo.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 e67c7cf... 2c6c557... M	testcases/open_posix_testsuite/conformance/Makefile
:000000 100644 0000000... 04e78cd... A	testcases/open_posix_testsuite/conformance/behavior/Makefile
:000000 100644 0000000... 04e78cd... A	testcases/open_posix_testsuite/conformance/definitions/Makefile
:000000 100644 0000000... 04e78cd... A	testcases/open_posix_testsuite/conformance/interfaces/Makefile
:100644 000000 a9f3b5c... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-core-buildonly.c

commit a0f8e08d23a5c34b8045c241f8d258fe67e6729b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:29:53 2010 -0700

    Push distclean-makefiles down into stress Makefile.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 5523b02... 04e78cd... M	testcases/open_posix_testsuite/stress/Makefile

commit d5ff323a3bc912f877ab31a78046c9388e4235f1
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:27:04 2010 -0700

    1999 called and want you to update your toolchain.
    
    'k, thanks!
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 27b85d4... 55563b3... M	testcases/open_posix_testsuite/CFLAGS

commit 1fb9097d3adfa0bed182344464a773bc53c6061c
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 22:25:38 2010 -0700

    Push distclean-makefile down into this file.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 e67c7cf... 9de651a... M	testcases/open_posix_testsuite/functional/Makefile

commit f9508213fbc076538bc650bdb354905674b20ceb
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 21:11:24 2010 -0700

    Properly categorize a src file.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... a9f3b5c... A	testcases/open_posix_testsuite/conformance/interfaces/sigrelse/3-core.c

commit 5059f459789238c1378da036c16f7eb6dcbc5318
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 20:06:34 2010 -0700

    Sacrifice modularity for simplicity.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 71cd1f5... a1a3914... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 468d4b45c092c8a4d9c46cf45a78f6a772620cb1
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 17:15:33 2010 -0700

    Add more LDLIBS files.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/clock_settime/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sem_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sem_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/LDLIBS

commit 17dc34f217c5617baae6abc8d4cbef0ec9caadc2
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 17:09:42 2010 -0700

    Correct _POSIX_SPORADIC_SERVER conformance tests.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 7354c60... 4415c03... M	testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/25-3.c

commit 9b6bb8b07b89314c0d2cc373e668a10525f018e0
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 16:56:06 2010 -0700

    Add required LDLIBS files.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/behavior/timers/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/fork/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_close/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_getattr/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_notify/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_open/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_receive/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_send/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_setattr/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_timedreceive/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_timedsend/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/conformance/interfaces/mq_unlink/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_atfork/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getdetachstate/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getinheritsched/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getschedparam/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getschedpolicy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getscope/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getstack/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_getstacksize/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setdetachstate/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setinheritsched/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setschedparam/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setschedpolicy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setscope/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstack/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_attr_setstacksize/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrier_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrier_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrier_wait/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrierattr_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrierattr_getpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrierattr_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_barrierattr_setpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cancel/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cleanup_pop/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cleanup_push/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_broadcast/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_signal/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_timedwait/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_wait/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_getclock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_getpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_setclock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_condattr_setpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_detach/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_equal/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_exit/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_getcpuclockid/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_getschedparam/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_getspecific/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_join/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_key_create/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_key_delete/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_kill/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_getprioceiling/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_lock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_timedlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_trylock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutex_unlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_getprioceiling/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_getprotocol/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_getpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_gettype/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_setprioceiling/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_setprotocol/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_setpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_mutexattr_settype/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_once/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_rdlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_timedrdlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_timedwrlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_tryrdlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_trywrlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_unlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlock_wrlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlockattr_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlockattr_getpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlockattr_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_rwlockattr_setpshared/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_self/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_setcancelstate/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_setcanceltype/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_setschedparam/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_setschedprio/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_setspecific/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_sigmask/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_destroy/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_init/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_lock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_trylock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_spin_unlock/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_testcancel/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sched_yield/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sigaction/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sigpause/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/conformance/interfaces/sigwait/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/timer_create/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/timer_delete/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/timer_getoverrun/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/timer_gettime/LDLIBS
:000000 100644 0000000... 08f7cd6... A	testcases/open_posix_testsuite/conformance/interfaces/timer_settime/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/functional/mqueues/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/functional/semaphores/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/functional/threads/condvar/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/functional/threads/pi_test/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/functional/threads/schedule/LDLIBS
:000000 100644 0000000... 4c7e2d8... A	testcases/open_posix_testsuite/stress/mqueues/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/stress/semaphores/LDLIBS
:000000 100644 0000000... 1d2c98f... A	testcases/open_posix_testsuite/stress/threads/LDLIBS

commit 0ffe3041ce48b93465c85b67ee8f4fd73ac7fbd8
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 16:55:16 2010 -0700

    Remove POSIX_C_SOURCE b/c it's in the Makefile.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 eadb12f... c551b44... M	testcases/open_posix_testsuite/conformance/interfaces/fork/22-1.c
:100644 100644 95b60a2... 390ba7f... M	testcases/open_posix_testsuite/conformance/interfaces/getpid/1-1.c
:100644 100644 7a7e108... 88e87c9... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_getschedparam/1-3.c
:100644 100644 9989e48... 312836e... M	testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/2-2.c
:100644 100644 c08d182... bfa804b... M	testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/7-1.c
:100644 100644 93fad42... 7a0af2f... M	testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/9-1.c
:100644 100644 937e49b... fba0738... M	testcases/open_posix_testsuite/conformance/interfaces/sigaction/16-19.c
:100644 100644 81a8746... c939345... M	testcases/open_posix_testsuite/conformance/interfaces/sigaction/18-19.c
:100644 100644 a2083cc... b1b873d... M	testcases/open_posix_testsuite/conformance/interfaces/sigaction/19-19.c
:100644 100644 df7f6ce... d7da38f... M	testcases/open_posix_testsuite/conformance/interfaces/sigaction/23-19.c
:100644 100644 6a46b99... bcb78c7... M	testcases/open_posix_testsuite/conformance/interfaces/sigaction/28-19.c

commit bbe8f67cdb710dbbbd48e0ab7339ad3c95b811be
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 16:32:49 2010 -0700

    Remove logfile if submake was invoked manually.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 53f5747... 71cd1f5... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 1183a9fa5092975c28c8a6d070b82d477c4e509e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 16:31:04 2010 -0700

    Pass down build variables via $(BUILD_MAKE).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 8c30a98... 9e03fe4... M	testcases/open_posix_testsuite/Makefile

commit 3e99bc7c7782f57f75903b76a38bf73d93c8f832
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 16:27:19 2010 -0700

    Remove unused header.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 5deb55f... 5ca1762... M	testcases/open_posix_testsuite/functional/semaphores/sem_conpro.c
:100644 100644 be95d08... c031f20... M	testcases/open_posix_testsuite/functional/semaphores/sem_lock.c
:100644 100644 2835458... ac90f03... M	testcases/open_posix_testsuite/functional/semaphores/sem_philosopher.c
:100644 100644 54795e3... c111123... M	testcases/open_posix_testsuite/functional/semaphores/sem_readerwriter.c

commit c14cf2c626d5960badede4b96da87226232b7ba6
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 14:55:39 2010 -0700

    Whitespace.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 8f9cc59... 53f5747... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit ef399220509ea9889609cb58749dae97d5dbc00b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 14:44:15 2010 -0700

    Push the CFLAGS var into a file for inclusion.
    
    This unbreaks compiling C99 keywords, like restrict.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 27b85d4... A	testcases/open_posix_testsuite/CFLAGS
:100644 100644 24e3d9b... 8c30a98... M	testcases/open_posix_testsuite/Makefile
:100755 100755 b194044... 8f9cc59... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 69a66f173dc5e1cee6ff512947a1dbc4521245ce
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 13:32:33 2010 -0700

    Properly categorize all remaining tests.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 61e711b... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/1-1-buildonly.c
:100644 000000 61e711b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/1-1.c
:000000 100644 0000000... 959c1e7... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/14-1-buildonly.c
:100644 000000 959c1e7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/14-1.c
:000000 100644 0000000... cdcecc9... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/15-1-buildonly.c
:100644 000000 cdcecc9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/15-1.c
:000000 100644 0000000... 1d7d98b... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/16-1-buildonly.c
:100644 000000 1d7d98b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/16-1.c
:000000 100644 0000000... fe58495... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/17-1-buildonly.c
:100644 000000 fe58495... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/17-1.c
:000000 100644 0000000... fe58495... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/18-1-buildonly.c
:100644 000000 fe58495... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/18-1.c
:000000 100644 0000000... 85a1c4a... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-1-buildonly.c
:100644 000000 85a1c4a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-1.c
:000000 100644 0000000... b64a642... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-2-buildonly.c
:100644 000000 b64a642... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-2.c
:000000 100644 0000000... 86e6300... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-3-buildonly.c
:100644 000000 86e6300... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-3.c
:000000 100644 0000000... 92540d7... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-4-buildonly.c
:100644 000000 92540d7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/2-4.c
:000000 100644 0000000... bb72e72... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/20-1-buildonly.c
:100644 000000 bb72e72... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/20-1.c
:000000 100644 0000000... 9aabe86... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/21-1-buildonly.c
:100644 000000 9aabe86... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/21-1.c
:000000 100644 0000000... 551f3f8... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-1-buildonly.c
:100644 000000 551f3f8... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-1.c
:000000 100644 0000000... 185467d... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-10-buildonly.c
:100644 000000 185467d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-10.c
:000000 100644 0000000... 07bf09d... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-11-buildonly.c
:100644 000000 07bf09d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-11.c
:000000 100644 0000000... 48b6407... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-12-buildonly.c
:100644 000000 48b6407... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-12.c
:000000 100644 0000000... c7680fe... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-13-buildonly.c
:100644 000000 c7680fe... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-13.c
:000000 100644 0000000... 988d0ab... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-14-buildonly.c
:100644 000000 988d0ab... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-14.c
:000000 100644 0000000... af56534... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-15-buildonly.c
:100644 000000 af56534... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-15.c
:000000 100644 0000000... 4b4e94e... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-16-buildonly.c
:100644 000000 4b4e94e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-16.c
:000000 100644 0000000... b527c3e... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-17-buildonly.c
:100644 000000 b527c3e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-17.c
:000000 100644 0000000... 2fd4b58... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-18-buildonly.c
:100644 000000 2fd4b58... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-18.c
:000000 100644 0000000... 69e4f25... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-19-buildonly.c
:100644 000000 69e4f25... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-19.c
:000000 100644 0000000... 78acaf6... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-2-buildonly.c
:100644 000000 78acaf6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-2.c
:000000 100644 0000000... ddc2636... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-20-buildonly.c
:100644 000000 ddc2636... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-20.c
:000000 100644 0000000... e0812be... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-21-buildonly.c
:100644 000000 e0812be... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-21.c
:000000 100644 0000000... 2039b9c... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-22-buildonly.c
:100644 000000 2039b9c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-22.c
:000000 100644 0000000... c9de0db... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-23-buildonly.c
:100644 000000 c9de0db... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-23.c
:000000 100644 0000000... e9e091c... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-24-buildonly.c
:100644 000000 e9e091c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-24.c
:000000 100644 0000000... a444870... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-25-buildonly.c
:100644 000000 a444870... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-25.c
:000000 100644 0000000... 2c32847... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-26-buildonly.c
:100644 000000 2c32847... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-26.c
:000000 100644 0000000... c2931ac... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-27-buildonly.c
:100644 000000 c2931ac... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-27.c
:000000 100644 0000000... 4cca86b... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-28-buildonly.c
:100644 000000 4cca86b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-28.c
:000000 100644 0000000... c8917fe... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-29-buildonly.c
:100644 000000 c8917fe... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-29.c
:000000 100644 0000000... 62a2704... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-3-buildonly.c
:100644 000000 62a2704... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-3.c
:000000 100644 0000000... 743df7e... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-30-buildonly.c
:100644 000000 743df7e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-30.c
:000000 100644 0000000... 1f33abb... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-31-buildonly.c
:100644 000000 1f33abb... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-31.c
:000000 100644 0000000... cbad184... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-32-buildonly.c
:100644 000000 cbad184... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-32.c
:000000 100644 0000000... a9d2e5d... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-33-buildonly.c
:100644 000000 a9d2e5d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-33.c
:000000 100644 0000000... 813373f... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-34-buildonly.c
:100644 000000 813373f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-34.c
:000000 100644 0000000... 6edf4ef... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-35-buildonly.c
:100644 000000 6edf4ef... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-35.c
:000000 100644 0000000... d0d92c5... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-36-buildonly.c
:100644 000000 d0d92c5... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-36.c
:000000 100644 0000000... 9c9b437... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-37-buildonly.c
:100644 000000 9c9b437... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-37.c
:000000 100644 0000000... ad42db6... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-38-buildonly.c
:100644 000000 ad42db6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-38.c
:000000 100644 0000000... 50bcfec... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-39-buildonly.c
:100644 000000 50bcfec... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-39.c
:000000 100644 0000000... 4d0d33e... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-4-buildonly.c
:100644 000000 4d0d33e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-4.c
:000000 100644 0000000... e4224f2... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-40-buildonly.c
:100644 000000 e4224f2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-40.c
:000000 100644 0000000... 224befc... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-5-buildonly.c
:100644 000000 224befc... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-5.c
:000000 100644 0000000... 4b221dd... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-6-buildonly.c
:100644 000000 4b221dd... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-6.c
:000000 100644 0000000... fda8422... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-7-buildonly.c
:100644 000000 fda8422... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-7.c
:000000 100644 0000000... ab62700... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-8-buildonly.c
:100644 000000 ab62700... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-8.c
:000000 100644 0000000... e2ce813... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-9-buildonly.c
:100644 000000 e2ce813... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/22-9.c
:000000 100644 0000000... 8f54ad8... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/24-1-buildonly.c
:100644 000000 8f54ad8... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/24-1.c
:000000 100644 0000000... 8745e4f... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/25-1-buildonly.c
:100644 000000 8745e4f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/25-1.c
:000000 100644 0000000... 4ce2912... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/27-1-buildonly.c
:100644 000000 4ce2912... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/27-1.c
:000000 100644 0000000... d9905b3... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/28-1-buildonly.c
:100644 000000 d9905b3... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/28-1.c
:000000 100644 0000000... e9b2740... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/29-1-buildonly.c
:100644 000000 e9b2740... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/29-1.c
:000000 100644 0000000... 34d5ea6... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/3-1-buildonly.c
:100644 000000 34d5ea6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/3-1.c
:000000 100644 0000000... 9b04cec... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/30-1-buildonly.c
:100644 000000 9b04cec... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/30-1.c
:000000 100644 0000000... b94a25b... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/31-1-buildonly.c
:100644 000000 b94a25b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/31-1.c
:000000 100644 0000000... 4f869e2... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/32-1-buildonly.c
:100644 000000 4f869e2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/32-1.c
:000000 100644 0000000... 7cd94a2... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/33-1-buildonly.c
:100644 000000 7cd94a2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/33-1.c
:000000 100644 0000000... 901a2ea... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/34-1-buildonly.c
:100644 000000 901a2ea... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/34-1.c
:000000 100644 0000000... 406b0d7... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/35-1-buildonly.c
:100644 000000 406b0d7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/35-1.c
:000000 100644 0000000... 58cdc24... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/36-1-buildonly.c
:100644 000000 58cdc24... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/36-1.c
:000000 100644 0000000... 3df39b7... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/37-1-buildonly.c
:100644 000000 3df39b7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/37-1.c
:000000 100644 0000000... b57837f... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/38-1-buildonly.c
:100644 000000 b57837f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/38-1.c
:000000 100644 0000000... dbc0a27... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/39-1-buildonly.c
:100644 000000 dbc0a27... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/39-1.c
:000000 100644 0000000... 5a63457... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/4-1-buildonly.c
:100644 000000 5a63457... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/4-1.c
:000000 100644 0000000... 0d18c51... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/40-1-buildonly.c
:100644 000000 0d18c51... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/40-1.c
:000000 100644 0000000... d8981b7... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/41-1-buildonly.c
:100644 000000 d8981b7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/41-1.c
:000000 100644 0000000... b884b1c... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/42-1-buildonly.c
:100644 000000 b884b1c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/42-1.c
:000000 100644 0000000... 31f42df... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/43-1-buildonly.c
:100644 000000 31f42df... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/43-1.c
:000000 100644 0000000... 26b924f... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/44-1-buildonly.c
:100644 000000 26b924f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/44-1.c
:000000 100644 0000000... bafcc6b... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/45-1-buildonly.c
:100644 000000 bafcc6b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/45-1.c
:000000 100644 0000000... 3018201... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/46-1-buildonly.c
:100644 000000 3018201... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/46-1.c
:000000 100644 0000000... 9fb22ae... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/47-1-buildonly.c
:100644 000000 9fb22ae... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/47-1.c
:000000 100644 0000000... c8392c6... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/48-1-buildonly.c
:100644 000000 c8392c6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/48-1.c
:000000 100644 0000000... dc24d97... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/49-1-buildonly.c
:100644 000000 dc24d97... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/49-1.c
:000000 100644 0000000... 87c4645... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/5-1-buildonly.c
:100644 000000 87c4645... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/5-1.c
:000000 100644 0000000... 64b128d... A	testcases/open_posix_testsuite/conformance/definitions/signal_h/50-1-buildonly.c
:100644 000000 64b128d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/signal_h/50-1.c
:000000 100644 0000000... a983d5a... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/1-1-buildonly.c
:100644 000000 a983d5a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/1-1.c
:000000 100644 0000000... fd3a3ee... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/10-1-buildonly.c
:100644 000000 fd3a3ee... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/10-1.c
:000000 100644 0000000... 52b07d1... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/11-1-buildonly.c
:100644 000000 52b07d1... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/11-1.c
:000000 100644 0000000... 083acc3... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/12-1-buildonly.c
:100644 000000 083acc3... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/12-1.c
:000000 100644 0000000... 32d7465... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/13-1-buildonly.c
:100644 000000 32d7465... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/13-1.c
:000000 100644 0000000... 74df9b0... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/14-1-buildonly.c
:100644 000000 74df9b0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/14-1.c
:000000 100644 0000000... 315cd3c... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/15-1-buildonly.c
:100644 000000 315cd3c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/15-1.c
:000000 100644 0000000... 1d85338... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/16-1-buildonly.c
:100644 000000 1d85338... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/16-1.c
:000000 100644 0000000... 371c58e... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/17-1-buildonly.c
:100644 000000 371c58e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/17-1.c
:000000 100644 0000000... 6c52edb... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/18-1-buildonly.c
:100644 000000 6c52edb... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/18-1.c
:000000 100644 0000000... 6f5b997... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/19-1-buildonly.c
:100644 000000 6f5b997... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/19-1.c
:000000 100644 0000000... cdf1af4... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-1-buildonly.c
:100644 000000 cdf1af4... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-1.c
:000000 100644 0000000... 7e16a42... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-2-buildonly.c
:100644 000000 7e16a42... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-2.c
:000000 100644 0000000... 6ab232a... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-3-buildonly.c
:100644 000000 6ab232a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-3.c
:000000 100644 0000000... e4f42d2... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-4-buildonly.c
:100644 000000 e4f42d2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/2-4.c
:000000 100644 0000000... 546ae8c... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/20-1-buildonly.c
:100644 000000 546ae8c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/20-1.c
:000000 100644 0000000... 9900ef9... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/21-1-buildonly.c
:100644 000000 9900ef9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/21-1.c
:000000 100644 0000000... eaae4d7... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/22-1-buildonly.c
:100644 000000 eaae4d7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/22-1.c
:000000 100644 0000000... 488c06d... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/23-1-buildonly.c
:100644 000000 488c06d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/23-1.c
:000000 100644 0000000... 5473624... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/24-1-buildonly.c
:100644 000000 5473624... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/24-1.c
:000000 100644 0000000... aedfc2f... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-1-buildonly.c
:100644 000000 aedfc2f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-1.c
:000000 100644 0000000... dd051db... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-2-buildonly.c
:100644 000000 dd051db... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-2.c
:000000 100644 0000000... a4c7fec... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-3-buildonly.c
:100644 000000 a4c7fec... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/3-3.c
:000000 100644 0000000... fa4d5ba... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-1-buildonly.c
:100644 000000 fa4d5ba... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-1.c
:000000 100644 0000000... 5a8f999... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-2-buildonly.c
:100644 000000 5a8f999... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-2.c
:000000 100644 0000000... f8b2d25... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-3-buildonly.c
:100644 000000 f8b2d25... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/4-3.c
:000000 100644 0000000... 4010873... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/5-1-buildonly.c
:100644 000000 4010873... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/5-1.c
:000000 100644 0000000... 1136854... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/5-2-buildonly.c
:100644 000000 1136854... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/5-2.c
:000000 100644 0000000... bb88421... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/6-1-buildonly.c
:100644 000000 bb88421... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/6-1.c
:000000 100644 0000000... 1d33b95... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-1-buildonly.c
:100644 000000 1d33b95... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-1.c
:000000 100644 0000000... 3492cff... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-2-buildonly.c
:100644 000000 3492cff... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-2.c
:000000 100644 0000000... 6a52d0a... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-3-buildonly.c
:100644 000000 6a52d0a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-3.c
:000000 100644 0000000... a5088bf... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-4-buildonly.c
:100644 000000 a5088bf... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-4.c
:000000 100644 0000000... ed66ce9... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-5-buildonly.c
:100644 000000 ed66ce9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/7-5.c
:000000 100644 0000000... 1b80031... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-1-buildonly.c
:100644 000000 1b80031... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-1.c
:000000 100644 0000000... 887fc7a... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-2-buildonly.c
:100644 000000 887fc7a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-2.c
:000000 100644 0000000... e3f5e8c... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-3-buildonly.c
:100644 000000 e3f5e8c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/8-3.c
:000000 100644 0000000... bb3fa8a... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-1-buildonly.c
:100644 000000 bb3fa8a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-1.c
:000000 100644 0000000... 4793ed9... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-2-buildonly.c
:100644 000000 4793ed9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-2.c
:000000 100644 0000000... 1b98f33... A	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-3-buildonly.c
:100644 000000 1b98f33... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/mman_h/9-3.c
:000000 100644 0000000... afc329d... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/1-1-buildonly.c
:100644 000000 afc329d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/1-1.c
:000000 100644 0000000... 1a3c73c... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/10-1-buildonly.c
:100644 000000 1a3c73c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/10-1.c
:000000 100644 0000000... f18ff25... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/11-1-buildonly.c
:100644 000000 f18ff25... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/11-1.c
:000000 100644 0000000... 4e71c54... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-1-buildonly.c
:100644 000000 4e71c54... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-1.c
:000000 100644 0000000... 816b161... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-2-buildonly.c
:100644 000000 816b161... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-2.c
:000000 100644 0000000... 8cbdbff... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-3-buildonly.c
:100644 000000 8cbdbff... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/12-3.c
:000000 100644 0000000... ad21354... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/2-1-buildonly.c
:100644 000000 ad21354... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/2-1.c
:000000 100644 0000000... 8d160d0... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/2-2-buildonly.c
:100644 000000 8d160d0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/2-2.c
:000000 100644 0000000... 3cb1ffd... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/3-1-buildonly.c
:100644 000000 3cb1ffd... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/3-1.c
:000000 100644 0000000... 0ccf30f... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/4-1-buildonly.c
:100644 000000 0ccf30f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/4-1.c
:000000 100644 0000000... bc32532... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/5-1-buildonly.c
:100644 000000 bc32532... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/5-1.c
:000000 100644 0000000... d31e78f... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/6-1-buildonly.c
:100644 000000 d31e78f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/6-1.c
:000000 100644 0000000... 91016c5... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-1-buildonly.c
:100644 000000 91016c5... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-1.c
:000000 100644 0000000... 49e124c... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-2-buildonly.c
:100644 000000 49e124c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-2.c
:000000 100644 0000000... e597922... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-3-buildonly.c
:100644 000000 e597922... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-3.c
:000000 100644 0000000... 8abe8aa... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-4-buildonly.c
:100644 000000 8abe8aa... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/7-4.c
:000000 100644 0000000... f921c5f... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/8-1-buildonly.c
:100644 000000 f921c5f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/8-1.c
:000000 100644 0000000... b9e340d... A	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/9-1-buildonly.c
:100644 000000 b9e340d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sys/shm_h/9-1.c
:000000 100644 0000000... cb02994... A	testcases/open_posix_testsuite/conformance/definitions/time_h/1-1-buildonly.c
:100644 000000 cb02994... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/1-1.c
:000000 100644 0000000... bee2d9f... A	testcases/open_posix_testsuite/conformance/definitions/time_h/10-1-buildonly.c
:100644 000000 bee2d9f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/10-1.c
:000000 100644 0000000... 2ff21ee... A	testcases/open_posix_testsuite/conformance/definitions/time_h/11-1-buildonly.c
:100644 000000 2ff21ee... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/11-1.c
:000000 100644 0000000... 69cf050... A	testcases/open_posix_testsuite/conformance/definitions/time_h/12-1-buildonly.c
:100644 000000 69cf050... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/12-1.c
:000000 100644 0000000... c1f0f49... A	testcases/open_posix_testsuite/conformance/definitions/time_h/13-1-buildonly.c
:100644 000000 c1f0f49... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/13-1.c
:000000 100644 0000000... 44644e2... A	testcases/open_posix_testsuite/conformance/definitions/time_h/14-1-buildonly.c
:100644 000000 44644e2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/14-1.c
:000000 100644 0000000... ed0f17b... A	testcases/open_posix_testsuite/conformance/definitions/time_h/15-1-buildonly.c
:100644 000000 ed0f17b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/15-1.c
:000000 100644 0000000... 6cb7918... A	testcases/open_posix_testsuite/conformance/definitions/time_h/16-1-buildonly.c
:100644 000000 6cb7918... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/16-1.c
:000000 100644 0000000... b50a243... A	testcases/open_posix_testsuite/conformance/definitions/time_h/17-1-buildonly.c
:100644 000000 b50a243... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/17-1.c
:000000 100644 0000000... 96d37de... A	testcases/open_posix_testsuite/conformance/definitions/time_h/18-1-buildonly.c
:100644 000000 96d37de... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/18-1.c
:000000 100644 0000000... 60e9e96... A	testcases/open_posix_testsuite/conformance/definitions/time_h/19-1-buildonly.c
:100644 000000 60e9e96... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/19-1.c
:000000 100644 0000000... 898c97a... A	testcases/open_posix_testsuite/conformance/definitions/time_h/2-1-buildonly.c
:100644 000000 898c97a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/2-1.c
:000000 100644 0000000... 715f169... A	testcases/open_posix_testsuite/conformance/definitions/time_h/20-1-buildonly.c
:100644 000000 715f169... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/20-1.c
:000000 100644 0000000... 79de56f... A	testcases/open_posix_testsuite/conformance/definitions/time_h/21-1-buildonly.c
:100644 000000 79de56f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/21-1.c
:000000 100644 0000000... bdc05e6... A	testcases/open_posix_testsuite/conformance/definitions/time_h/22-1-buildonly.c
:100644 000000 bdc05e6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/22-1.c
:000000 100644 0000000... 61c3862... A	testcases/open_posix_testsuite/conformance/definitions/time_h/23-1-buildonly.c
:100644 000000 61c3862... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/23-1.c
:000000 100644 0000000... 7d41abd... A	testcases/open_posix_testsuite/conformance/definitions/time_h/24-1-buildonly.c
:100644 000000 7d41abd... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/24-1.c
:000000 100644 0000000... 40aaea9... A	testcases/open_posix_testsuite/conformance/definitions/time_h/25-1-buildonly.c
:100644 000000 40aaea9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/25-1.c
:000000 100644 0000000... 9b8e9b3... A	testcases/open_posix_testsuite/conformance/definitions/time_h/26-1-buildonly.c
:100644 000000 9b8e9b3... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/26-1.c
:000000 100644 0000000... 7c95a87... A	testcases/open_posix_testsuite/conformance/definitions/time_h/27-1-buildonly.c
:100644 000000 7c95a87... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/27-1.c
:000000 100644 0000000... 5286692... A	testcases/open_posix_testsuite/conformance/definitions/time_h/28-1-buildonly.c
:100644 000000 5286692... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/28-1.c
:000000 100644 0000000... 07b3883... A	testcases/open_posix_testsuite/conformance/definitions/time_h/29-1-buildonly.c
:100644 000000 07b3883... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/29-1.c
:000000 100644 0000000... 8837ec0... A	testcases/open_posix_testsuite/conformance/definitions/time_h/3-1-buildonly.c
:100644 000000 8837ec0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/3-1.c
:000000 100644 0000000... 1f326b0... A	testcases/open_posix_testsuite/conformance/definitions/time_h/3-2-buildonly.c
:100644 000000 1f326b0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/3-2.c
:000000 100644 0000000... afb939b... A	testcases/open_posix_testsuite/conformance/definitions/time_h/3-3-buildonly.c
:100644 000000 afb939b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/3-3.c
:000000 100644 0000000... 89ac711... A	testcases/open_posix_testsuite/conformance/definitions/time_h/3-4-buildonly.c
:100644 000000 89ac711... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/3-4.c
:000000 100644 0000000... e6c7eae... A	testcases/open_posix_testsuite/conformance/definitions/time_h/30-1-buildonly.c
:100644 000000 e6c7eae... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/30-1.c
:000000 100644 0000000... 379ae4f... A	testcases/open_posix_testsuite/conformance/definitions/time_h/31-1-buildonly.c
:100644 000000 379ae4f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/31-1.c
:000000 100644 0000000... 38faa03... A	testcases/open_posix_testsuite/conformance/definitions/time_h/32-1-buildonly.c
:100644 000000 38faa03... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/32-1.c
:000000 100644 0000000... c2e92e9... A	testcases/open_posix_testsuite/conformance/definitions/time_h/33-1-buildonly.c
:100644 000000 c2e92e9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/33-1.c
:000000 100644 0000000... 9e21524... A	testcases/open_posix_testsuite/conformance/definitions/time_h/34-1-buildonly.c
:100644 000000 9e21524... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/34-1.c
:000000 100644 0000000... 6213346... A	testcases/open_posix_testsuite/conformance/definitions/time_h/35-1-buildonly.c
:100644 000000 6213346... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/35-1.c
:000000 100644 0000000... a1781cc... A	testcases/open_posix_testsuite/conformance/definitions/time_h/35-2-buildonly.c
:100644 000000 a1781cc... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/35-2.c
:000000 100644 0000000... 04b9b9c... A	testcases/open_posix_testsuite/conformance/definitions/time_h/35-3-buildonly.c
:100644 000000 04b9b9c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/35-3.c
:000000 100644 0000000... 524c0aa... A	testcases/open_posix_testsuite/conformance/definitions/time_h/4-1-buildonly.c
:100644 000000 524c0aa... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/4-1.c
:000000 100644 0000000... df6cac3... A	testcases/open_posix_testsuite/conformance/definitions/time_h/5-1-buildonly.c
:100644 000000 df6cac3... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/5-1.c
:000000 100644 0000000... 8050eef... A	testcases/open_posix_testsuite/conformance/definitions/time_h/6-1-buildonly.c
:100644 000000 8050eef... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/6-1.c
:000000 100644 0000000... ae8f2a4... A	testcases/open_posix_testsuite/conformance/definitions/time_h/6-2-buildonly.c
:100644 000000 ae8f2a4... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/6-2.c
:000000 100644 0000000... f0a6c4f... A	testcases/open_posix_testsuite/conformance/definitions/time_h/6-3-buildonly.c
:100644 000000 f0a6c4f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/6-3.c
:000000 100644 0000000... a9404f7... A	testcases/open_posix_testsuite/conformance/definitions/time_h/7-1-buildonly.c
:100644 000000 a9404f7... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/7-1.c
:000000 100644 0000000... a78c71b... A	testcases/open_posix_testsuite/conformance/definitions/time_h/7-2-buildonly.c
:100644 000000 a78c71b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/7-2.c
:000000 100644 0000000... 436708b... A	testcases/open_posix_testsuite/conformance/definitions/time_h/7-3-buildonly.c
:100644 000000 436708b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/7-3.c
:000000 100644 0000000... 75d73e9... A	testcases/open_posix_testsuite/conformance/definitions/time_h/7-4-buildonly.c
:100644 000000 75d73e9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/7-4.c
:000000 100644 0000000... 731f037... A	testcases/open_posix_testsuite/conformance/definitions/time_h/7-5-buildonly.c
:100644 000000 731f037... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/7-5.c
:000000 100644 0000000... becab83... A	testcases/open_posix_testsuite/conformance/definitions/time_h/8-1-buildonly.c
:100644 000000 becab83... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/8-1.c
:000000 100644 0000000... 082e437... A	testcases/open_posix_testsuite/conformance/definitions/time_h/9-1-buildonly.c
:100644 000000 082e437... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/time_h/9-1.c
:000000 100644 0000000... d32f2ad... A	testcases/open_posix_testsuite/conformance/definitions/unistd_h/1-1-buildonly.c
:100644 000000 d32f2ad... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/unistd_h/1-1.c
:000000 100644 0000000... 6844c0f... A	testcases/open_posix_testsuite/conformance/definitions/unistd_h/2-1-buildonly.c
:100644 000000 6844c0f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/unistd_h/2-1.c
:000000 100644 0000000... 2dcd59c... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/15-1-buildonly.c
:100644 000000 2dcd59c... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/15-1.c
:000000 100644 0000000... 45b72f2... A	testcases/open_posix_testsuite/conformance/interfaces/pthread_once/4-1-buildonly.c
:100644 000000 45b72f2... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/pthread_once/4-1.c
:100644 000000 cc93c8d... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/coverage.c
:100644 000000 8714768... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/1-core-buildonly.c
:000000 100644 0000000... 8714768... A	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/1-core.c
:100644 000000 ed896b2... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigaltstack/9-buildonly.c
:000000 100644 0000000... ed896b2... A	testcases/open_posix_testsuite/conformance/interfaces/sigaltstack/9.c
:100644 000000 b510c85... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigdelset/1-core-buildonly.c
:000000 100644 0000000... b510c85... A	testcases/open_posix_testsuite/conformance/interfaces/sigdelset/1-core.c
:100644 000000 5a2b996... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigdelset/4-core-buildonly.c
:000000 100644 0000000... 5a2b996... A	testcases/open_posix_testsuite/conformance/interfaces/sigdelset/4-core.c
:100644 000000 b6a5d5f... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sighold/3-core-buildonly.c
:000000 100644 0000000... b6a5d5f... A	testcases/open_posix_testsuite/conformance/interfaces/sighold/3-core.c
:100644 000000 b765027... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigignore/5-core-buildonly.c
:000000 100644 0000000... b765027... A	testcases/open_posix_testsuite/conformance/interfaces/sigignore/5-core.c
:100644 000000 8b7d702... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigismember/5-core-buildonly.c
:000000 100644 0000000... 8b7d702... A	testcases/open_posix_testsuite/conformance/interfaces/sigismember/5-core.c
:100644 000000 9b03674... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigprocmask/17-core-buildonly.c
:000000 100644 0000000... 9b03674... A	testcases/open_posix_testsuite/conformance/interfaces/sigprocmask/17-core.c

commit 99602c3e4b4d6de4c85c7ffaff206116c59480ce
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 13:31:35 2010 -0700

    Prune away testfrmw.c until it's put in a library.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 bd23d27... b194044... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh
:100755 100755 c5be6fe... ba3af22... M	testcases/open_posix_testsuite/scripts/locate-test

commit 70c91766d2a044c1bb78584238e5224da33381f9
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 13:30:45 2010 -0700

    Fix extension.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... cc93c8d... A	testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/coverage.txt

commit 91f8b2ffe2984e032bb60ce39bb8b0405e19fcb9
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 13:20:22 2010 -0700

    Correctly catagorize build tests.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 1b70252... e67c7cf... M	testcases/open_posix_testsuite/conformance/Makefile
:000000 100644 0000000... 749d289... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/1-1-buildonly.c
:100644 000000 749d289... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/1-1.c
:000000 100644 0000000... d94c38e... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/10-buildonly.c
:100644 000000 d94c38e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/10.c
:000000 100644 0000000... ab24cab... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/11-1-buildonly.c
:100644 000000 ab24cab... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/11-1.c
:000000 100644 0000000... 5218963... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/12-1-buildonly.c
:100644 000000 5218963... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/12-1.c
:000000 100644 0000000... 3ae23d2... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/13-1-buildonly.c
:100644 000000 3ae23d2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/13-1.c
:000000 100644 0000000... 7ea43b6... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/14-1-buildonly.c
:100644 000000 7ea43b6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/14-1.c
:000000 100644 0000000... 9671d17... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/15-1-buildonly.c
:100644 000000 9671d17... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/15-1.c
:000000 100644 0000000... c7336e6... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/16-1-buildonly.c
:100644 000000 c7336e6... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/16-1.c
:000000 100644 0000000... 44b277c... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/17-1-buildonly.c
:100644 000000 44b277c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/17-1.c
:000000 100644 0000000... 0118066... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/18-1-buildonly.c
:100644 000000 0118066... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/18-1.c
:000000 100644 0000000... 25c8f8f... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/19-1-buildonly.c
:100644 000000 25c8f8f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/19-1.c
:000000 100644 0000000... c161e4a... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-1-buildonly.c
:100644 000000 c161e4a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-1.c
:000000 100644 0000000... 0dd5ff8... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-2-buildonly.c
:100644 000000 0dd5ff8... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-2.c
:000000 100644 0000000... 9fef0dc... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/20-1-buildonly.c
:100644 000000 9fef0dc... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/20-1.c
:000000 100644 0000000... dda5018... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-1-buildonly.c
:100644 000000 dda5018... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-1.c
:000000 100644 0000000... 684dedf... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-10-buildonly.c
:100644 000000 684dedf... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-10.c
:000000 100644 0000000... 245c2e9... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-11-buildonly.c
:100644 000000 245c2e9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-11.c
:000000 100644 0000000... 2e61f37... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-12-buildonly.c
:100644 000000 2e61f37... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-12.c
:000000 100644 0000000... 2994f3c... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-13-buildonly.c
:100644 000000 2994f3c... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-13.c
:000000 100644 0000000... 2d086e8... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-2-buildonly.c
:100644 000000 2d086e8... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-2.c
:000000 100644 0000000... 828af05... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-3-buildonly.c
:100644 000000 828af05... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-3.c
:000000 100644 0000000... 94b6435... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-4-buildonly.c
:100644 000000 94b6435... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-4.c
:000000 100644 0000000... d78f5a2... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-5-buildonly.c
:100644 000000 d78f5a2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-5.c
:000000 100644 0000000... edb7392... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-6-buildonly.c
:100644 000000 edb7392... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-6.c
:000000 100644 0000000... c2e9551... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-7-buildonly.c
:100644 000000 c2e9551... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-7.c
:000000 100644 0000000... 8cddd61... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-8-buildonly.c
:100644 000000 8cddd61... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-8.c
:000000 100644 0000000... df12d28... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-9-buildonly.c
:100644 000000 df12d28... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/3-9.c
:000000 100644 0000000... b5220f2... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/4-1-buildonly.c
:100644 000000 b5220f2... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/4-1.c
:000000 100644 0000000... 0860e5a... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/5-1-buildonly.c
:100644 000000 0860e5a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/5-1.c
:000000 100644 0000000... f5fcfdf... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/6-1-buildonly.c
:100644 000000 f5fcfdf... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/6-1.c
:000000 100644 0000000... aa1c7d0... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/7-1-buildonly.c
:100644 000000 aa1c7d0... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/7-1.c
:000000 100644 0000000... 8b99873... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/8-1-buildonly.c
:100644 000000 8b99873... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/8-1.c
:000000 100644 0000000... e28e65d... A	testcases/open_posix_testsuite/conformance/definitions/pthread_h/9-1-buildonly.c
:100644 000000 e28e65d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/pthread_h/9-1.c
:000000 100644 0000000... dfb52b9... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/1-1-buildonly.c
:100644 000000 dfb52b9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/1-1.c
:000000 100644 0000000... 76ff05e... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/11-1-buildonly.c
:100644 000000 76ff05e... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/11-1.c
:000000 100644 0000000... 4ad5d92... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/12-1-buildonly.c
:100644 000000 4ad5d92... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/12-1.c
:000000 100644 0000000... 910a151... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/13-1-buildonly.c
:100644 000000 910a151... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/13-1.c
:000000 100644 0000000... 3b8dc67... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/14-1-buildonly.c
:100644 000000 3b8dc67... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/14-1.c
:000000 100644 0000000... dbcae14... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/15-1-buildonly.c
:100644 000000 dbcae14... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/15-1.c
:000000 100644 0000000... a020cba... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/16-1-buildonly.c
:100644 000000 a020cba... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/16-1.c
:000000 100644 0000000... 08a0022... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/17-1-buildonly.c
:100644 000000 08a0022... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/17-1.c
:000000 100644 0000000... 54142d4... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/18-1-buildonly.c
:100644 000000 54142d4... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/18-1.c
:000000 100644 0000000... 17c4c12... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/19-1-buildonly.c
:100644 000000 17c4c12... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/19-1.c
:000000 100644 0000000... 441506b... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/2-1-buildonly.c
:100644 000000 441506b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/2-1.c
:000000 100644 0000000... 06f500a... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/3-1-buildonly.c
:100644 000000 06f500a... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/3-1.c
:000000 100644 0000000... 7a5de7f... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/4-1-buildonly.c
:100644 000000 7a5de7f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/4-1.c
:000000 100644 0000000... 96dccba... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-1-buildonly.c
:100644 000000 96dccba... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-1.c
:000000 100644 0000000... f8a5d9f... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-2-buildonly.c
:100644 000000 f8a5d9f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-2.c
:000000 100644 0000000... 8dde471... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-3-buildonly.c
:100644 000000 8dde471... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-3.c
:000000 100644 0000000... 3988c1b... A	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-4-buildonly.c
:100644 000000 3988c1b... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/sched_h/8-4.c
:100644 100644 38adaa8... 49ac749... M	testcases/open_posix_testsuite/conformance/interfaces/pthread_create/testfrmw.c
:100755 100755 0a91a60... cb29ca9... M	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-1.sh
:100755 100755 1be5610... 5ab480d... M	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-2.sh
:100755 100755 aca9df9... 644512f... M	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-3.sh
:100755 100755 f178ef1... ca8523f... M	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-4.sh
:100644 100644 5a9243e... 0c2b489... M	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-core.c
:100644 100644 1b70252... e67c7cf... M	testcases/open_posix_testsuite/functional/Makefile
:100644 100644 1b70252... e67c7cf... M	testcases/open_posix_testsuite/functional/threads/Makefile
:100644 100644 1b70252... 5523b02... M	testcases/open_posix_testsuite/stress/Makefile

commit f7049d007a5595187c8b523ba2831232abbfeddd
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 13:14:22 2010 -0700

    Quiet down make operations; force compile to -j1.
    
    The -j1 requirement is necessary so it doesn't create a ton of truncated
    / incorrect noise in the log output. This might need to be tuned later
    once a better system of dealing with errors is properly devised.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 b926df1... 24e3d9b... M	testcases/open_posix_testsuite/Makefile

commit 038138be7d47a1b38cf44baa7d30e8ed0c700d3e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 05:24:20 2010 -0700

    General purpose cleanup.
    
    */Makefile Fix the filenames for some testcases to make them buildonly instead of
    using the previous non-build filename.
    
    interfaces/pthread_create/testfrmw.c: fix the #include's so it compiles
    properly.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... a93da0f... A	testcases/open_posix_testsuite/conformance/definitions/aio_h/1-1-buildonly.c
:100644 000000 a93da0f... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/aio_h/1-1.c
:000000 100644 0000000... d3cc59d... A	testcases/open_posix_testsuite/conformance/definitions/aio_h/1-2-buildonly.c
:100644 000000 d3cc59d... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/aio_h/1-2.c
:000000 100644 0000000... d3a2183... A	testcases/open_posix_testsuite/conformance/definitions/aio_h/3-1-buildonly.c
:100644 000000 d3a2183... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/aio_h/3-1.c
:000000 100644 0000000... 53be2e9... A	testcases/open_posix_testsuite/conformance/definitions/errno_h/1-1-buildonly.c
:100644 000000 53be2e9... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/errno_h/1-1.c
:000000 100644 0000000... 9f88113... A	testcases/open_posix_testsuite/conformance/definitions/errno_h/2-1-buildonly.c
:100644 000000 9f88113... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/errno_h/2-1.c
:000000 100644 0000000... ed1c519... A	testcases/open_posix_testsuite/conformance/definitions/errno_h/3-1-buildonly.c
:100644 000000 ed1c519... 0000000... D	testcases/open_posix_testsuite/conformance/definitions/errno_h/3-1.c
:100644 000000 5a9243e... 0000000... D	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-core-buildonly.c
:000000 100644 0000000... 5a9243e... A	testcases/open_posix_testsuite/conformance/interfaces/sigaddset/4-core.c

commit bb34ec782689243aeba8dca930c3a783cdf89bcf
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 05:03:32 2010 -0700

    Improve output and notify of test naming issues.
    
    The output now better matches the previous code (but not exactly because
    I've simplified the problem into compile, instead of cc/ld failures for
    simplicity in the make rules).
    
    Test naming is wrong for a boatload of tests (some tests are buildonly,
    but it turns out they have a main so they can be run (and most of the
    case) the other way around.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 80d2f25... bd23d27... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 2d87d5da9dfcda98b5c5cd41d45b924910aad1bd
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 02:39:54 2010 -0700

    Update clean because t0 has been moved to tools.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100644 100644 e849ecf... b926df1... M	testcases/open_posix_testsuite/Makefile

commit a9b7de80f7d46e6091864c892cc6b385d435f3ca
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 02:39:25 2010 -0700

    Update clean because t0 has been moved to tools.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 89b47ff... A	testcases/open_posix_testsuite/tools/t0.c

commit 721ef9d8af62f8327a1075bc9de20c8a4cd88810
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 02:39:03 2010 -0700

    Add cleanup for t0.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:000000 100644 0000000... 127bfec... A	testcases/open_posix_testsuite/tools/Makefile

commit 8c93e42ea3cf589bb663aa9dc78492f9d44f736b
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 02:36:02 2010 -0700

    Simplify search expressions further and fix.
    
    1. Mode with --buildonly was accidentally the obsolete value.
    2. Filter out noise with grep instead of find(1) directives.
    3. Filter out tools/ files to avoid adding t0.c to the first Makefile
    generated. Needless to say, better criterion needs to be established for
    portable filtering of valid directories (basically 3+ levels deep).
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 b4065d8... c5be6fe... M	testcases/open_posix_testsuite/scripts/locate-test

commit 9be14150793e82064c4f9d791be322370573f314
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Sun Jul 4 02:34:36 2010 -0700

    Commit last bit of fixup in this script.
    
    1. $makefile was being incorrectly set.
    2. Depend on the sourcefile in the directory, not the sourcefile in the
    build directory. This will unbreak out-of-build-tree builds.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 e4beda5... 80d2f25... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 7666e5a7215ea9c1f8934cb568b138553e14a80e
Author: Garrett Cooper <yanegomi@gmail.com>
Date:   Fri Jul 2 23:32:23 2010 -0700

    Divide and conquer Makefiles to for gmake/pmake.
    
    The problem with the previous Makefiles is that it worked on pmake, but
    not gmake, as the previous Makefiles made use of a non-POSIX secondary
    expansion extension in pmake (gmake uses the .SECONDEXPANSION keyword to
    achieve the same thing). So, make this completely POSIX.
    
    Still doesn't fix the phantom targets issue. I need to start digging at
    the locate-tests level.
    
    Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

:100755 100755 41e3c37... e4beda5... M	testcases/open_posix_testsuite/scripts/generate-makefiles.sh

commit 04b500a71b8a410adf5b92978c9d93d659912c20
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:33:51 2010 +0530

    fix hugetlb tests: I want to suggest a patch for hugetlb tests. There are "-c" options in this "${LTPROOT}/runtest/hugetlb" file:
    ------------
    hugeshmat01 hugeshmat01 -i 5
    hugeshmat02 hugeshmat02 -i 5
    hugeshmat03 hugeshmat03 -i 5
    hugeshmctl01 hugeshmctl01 -i 5 -c 3
    hugeshmctl02 hugeshmctl02 -i 5 -c 3
    hugeshmctl03 hugeshmctl03 -i 5 -c 3
    hugeshmdt01 hugeshmdt01 -I 5 -c10
    hugeshmget01 hugeshmget01 -c 10 -i 10
    hugeshmget02 hugeshmget02 -c 10 -i 10
    hugeshmget03 hugeshmget03 -c 10 -i 10
    hugeshmget05 hugeshmget05 -c 10 -i 10
    ------------
    But I think that these "-c" options have not important meanings. I think that the test for several times may not be necessary. For example, the purpose of "hugeshmget02" is the error case test of shmget(). In this case, if the expected failure occurred once, it is enough, and the repetition of test is unnecessary anymore, I think. And, depending on a case, there may be a system without enough memory for these repetition tests. Therefore I want to suggest reducing the "-c" option. I got an answer that these "hugetlb" tests were not complete test programs. --> http://www.mail-archive.com/ltp-list@lists.sourceforge.net/msg10171.html, Therefore, this revision is a temporary.
    Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>,

:100644 100644 0d28f7f... 1347f32... M	runtest/hugetlb
:100644 100644 6fa02ab... 76b95de... M	testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c

commit 0591a5dcc4c5d8b1cb282e4afd163f70b62350ce
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:29:20 2010 +0530

    [PATCH] realtime: rearrange the pthread attr functions order in librttest,
    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In the recent pthread libraries, order of calling pthread_attr_setschedpolicy and pthread_attr_setschedparam plays important role in a way that, former should always be called followed by later. Otherwise, pthread_attr_setschedparam always ends with error 22 (EINVAL). This patch fixes the create_thread() in librttest library.
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

:100644 100644 e092f35... 49fec29... M	testcases/realtime/lib/librttest.c

commit 66c15baaa8be08c5baae5a0c819df3b6a8c834dd
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:27:54 2010 +0530

    [PATCH] realtime: fix min and max calculations in matrix multiplication test.
    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In matrix multiplication test, the min and max calculations are done on stats_container_t data with its index field never set to the last element position. Due to this min and max are always shown with the first record value (as index was initiated with -1).
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

:100644 100644 419f697... fa0e352... M	testcases/realtime/func/matrix_mult/matrix_mult.c

LTP-20100630

commit e3bc3758d3e4d17a0e04009ef873df53819b9ec6
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:32:27 2010 +0530

    [PATCH v4] Remove files which does not have a dmesg entry
    
    The recently introduced option:
    
    -K DMESG_LOG_DIR
            Log Kernel messages generated for each test cases inside this directory,
    
    when used will generate huge no. of files inside the DMESG_DIR. Many of them will be ZERO size as we do not expect KERNEL MESSAGE to be generated against all the LTP TE
    Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

commit 9e365e8e209904086b18420438b4792851c219b8
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:13:41 2010 +0530

    semctl01 and shmctl01 will hang during uClinux test: ltp test case shmctl01 and semctl01 can not execute. When press ctrl and c, it can not exist.
    --
    root:/> shmctl01
    
    ^Cshmctl01    0  INFO  :  received unexpected signal 2
    ^Cshmctl01    0  INFO  :  received unexpected signal 2
    --
    The reason is the child will unlink the pipe if pipename isn't NULL，which may make the parent waitting forever. Signed-off-by: Bob Liu <lliubbo@gmail.com>.

commit 65f7070cb3f67eba009e68413187727f508623e1
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:10:38 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In a scenario where a thread other than high priority noise thread is scheduled after the barrier, a priority inversion will not occur, defeating the purpose of test. W
    Signed-off-by: Gowrishankar<gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar<gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

commit 785ef40630157d66067b1577a238184e0170e383
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:10:14 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    testpi-4 defines THREAD_STOP which is not used anywhere in the program.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:55 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    Instead of lock/unlock of mutex to burn cpu cycles, we can use busy_work_ms
    from librttest which is more explicit (burn cycles, not provide some
    synchronization).
    
    Also this patch removes the id increment since it is not used.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

commit a9e2238be689fd8e4d25bc7eefca1cb11535ce7a
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:32 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    Since main() sets the cpu affinity, it is not necessary for the
    spawned threads to do so, as the threads inherit the cpu affinity.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

commit 5305c4a10cf26799c81e6f0362750988457d3002
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:09:02 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    This patch adds the description to the test testpi-4.
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.

commit a21dab25b7ef183d049b31b0d3fed1d48c16dc2b
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:06:38 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    testpi-4 is initializing mutex step by step which can be done
    by reusing the init_pi_mutex() funtion available in librttest.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

commit b4f57c7d26b58f3d80b46340f10a397d21957866
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 23:06:16 2010 +0530

    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    This patch cleans up the testpi-4 so as to follow the
    C coding style standards.
    
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>
    Acked-by: Darren Hart <dvhltc@us.ibm.com>

commit 76a720a381f351b33eb203c7c519e6f44bbe7219
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sat Jul 3 21:08:18 2010 +0530

    While executing the ltp on an nfs root mounted system, I faced a problem with some of the ltp test cases. These tests either did not close their file descriptors or did

commit 13adcb0c4496e75bdcdbc02410b46b9fbc6120a8
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri Jul 2 22:47:57 2010 +0530

    ima_measure doesn't build correctly.  It needs config.h to determine whether openssl headers are present, and verbose needs to be global. Broken by commit ef77253961f90
    Signed-off-by:  Stephen D. Smalley <sds@tycho.nsa.gov>,
    Acked-by: Garrett Cooper <yanegomi@gmail.com>,

commit 04b500a71b8a410adf5b92978c9d93d659912c20
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:33:51 2010 +0530

    fix hugetlb tests: I want to suggest a patch for hugetlb tests. There are "-c" options in this "${LTPROOT}/runtest/hugetlb" file:
    ------------
    hugeshmat01 hugeshmat01 -i 5
    hugeshmat02 hugeshmat02 -i 5
    hugeshmat03 hugeshmat03 -i 5
    hugeshmctl01 hugeshmctl01 -i 5 -c 3
    hugeshmctl02 hugeshmctl02 -i 5 -c 3
    hugeshmctl03 hugeshmctl03 -i 5 -c 3
    hugeshmdt01 hugeshmdt01 -I 5 -c10
    hugeshmget01 hugeshmget01 -c 10 -i 10
    hugeshmget02 hugeshmget02 -c 10 -i 10
    hugeshmget03 hugeshmget03 -c 10 -i 10
    hugeshmget05 hugeshmget05 -c 10 -i 10
    ------------
    But I think that these "-c" options have not important meanings. I think that the test for several times may not be necessary. For example, the purpose of "hugeshmget02
    Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>,

commit 0591a5dcc4c5d8b1cb282e4afd163f70b62350ce
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:29:20 2010 +0530

    [PATCH] realtime: rearrange the pthread attr functions order in librttest,
    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In the recent pthread libraries, order of calling pthread_attr_setschedpolicy and pthread_attr_setschedparam plays important role in a way that, former should always be
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

commit 66c15baaa8be08c5baae5a0c819df3b6a8c834dd
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Thu Jul 1 22:27:54 2010 +0530

    [PATCH] realtime: fix min and max calculations in matrix multiplication test.
    From: gowrishankar <gowrishankar.m@linux.vnet.ibm.com>
    
    In matrix multiplication test, the min and max calculations are done on stats_container_t data with its index field never set to the last element position. Due to this 
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

commit 95e8b61433efcefb83699aaf859e92ad2b576373
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Mon Jun 14 17:59:09 2010 +0530

    Fix issue where growfiles tests still not creating temp files in directory specified by TMPDIR as expected. This is an updated patch which changes the arguments for gf1
    Scripts which use growfiles with command-line file names are not performing the tests in the expected target directory. When file names are provided on the growfiles co
    
    gf01 growfiles -B 800000 -W gf01 -b -e 1 -u -i 0 -L 20 -w -C 1 -l -I r -T 10 glseek20 glseek20.2 -d $TMPDIR
    
    The -d $TMPDIR construct is almost always used in the scripts to point to the filesystem under test. However, the presence of the glseek20 glseek20.2 command line param
    
    -f specifies the 'auto_file' which is the base file name (gf is used if it's missing)
    -d specifies the 'auto_dir' to be used ('.' is used if it's missing)
    -S specifies the number of 'auto seq' files to be used. These files are of the form: "%s/%s%d" using auto_dir, auto_file, file_number.
    Signed-off-by: Henry Yei <hyei@mvista.com>,

commit 73c785ff2eb296091d06d3b7184bddf9bec8ec7e
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Mon Jun 14 17:56:43 2010 +0530

    I want to suggest a patch for #2 test of "mail_tests.sh". The failure of #2 is as following:
    ------------
    mail_tests::mail02    0  TINFO  :  Test #2: mail u...@bad-domain will result in failure
    mail_tests::mail02    0  TINFO  :  Test #2: to deliver the mail. Mailer daemon should
    mail_tests::mail02    0  TINFO  :  Test #2: report this failure.
    mail_tests::mail02    2  TFAIL  :  Test #2: No new mail for root. Reason: No mail for root
    ------------
    I use RHEL5.4, RHEL4.8 systems and x86, x86_64, ia64 architectures. "#2" test failed in all combinations. At "#2" test, there is "No mail for root" in "tst_mail.res" fi
:
commit 82d3ded3632c79c62e231f3f8d7a632ce3da4e40
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Mon Jun 14 17:54:59 2010 +0530

    echo test is failing with the below errors as we didn't initialized the 'addrlen' parameter of getsockname.
    Creating socket .....
    echoes      1  TBROK  :  getsockname call failed (pid=7086): Invalid argument
    echo: Invalid argument
    So, attached the patch which initializes the 'addrlen' parameter. Signed-off-by: Munipradeep Beerakam <mpradeep@linux.vnet.ibm.com>. Please correct if anything is wrong

commit a9ff0b53d9e45e89ea4ec794fc87bbf67620e2c4
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Mon Jun 14 17:52:10 2010 +0530

    We need to add the below entry:
    {"read", "/proc/powerpc/rtas/error_log", EINVAL},
    to the "Mapping known_issues[]" array, as the new kernels are having /proc/powerpc directory along with /proc/ppc64. Attached the patch to this mail. Signed-off-by: Mun
    Please correct me if any thing is wrong.

commit f2e36d93c856782c4292ad0c21729c35776c1e31
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Wed Jun 9 23:45:26 2010 +0530

    TOMOYO Linux update. Update test programs for TOMOYO LSM module. This patch updates test programs for TOMOYO 2.3 which will be included into Linux kernel 2.6.36. Signed

commit 7f20a3add6c7f2166dbab5a712713ae8b5943448
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Wed Jun 2 18:16:46 2010 +0530

    Fix ext4_subdir_limit fix: We get the following error results since the if condition in ext4_subdir_limit_tset.sh does not work fine. The patch fixes this issue.
    [root@bsd086 ltp]# ./runltp -f fs_ext4
    <snip>
    Ext4 subdir limit test
    ext4-subdir-limit    0  TINFO  :  Num of dirs to create: 65537, Dir name len: long name, mkdir: No space left on device
    ext4-subdir-limit    2  TFAIL  :  failed to create directories - 19118
    <snip>
    ext4-subdir-limit    0  TINFO  :  Num of dirs to create: 65537, Dir name len: long name, mkdir: No space left on device
    ext4-subdir-limit    4  TFAIL  :  failed to create directories - 19592
    Signed-off-by: Akira Fujita <a-fujita@rs.jp.nec.com>,

commit 76ec975d298e3890a4ab2f9471940e164de0c643
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Wed Jun 2 18:15:19 2010 +0530

    Fix for UTIMENSAT test fails hugely: This patch installs the trap for cleanup_test which removes the sudoers file only if it was installed by utimensat script, and also

commit 91f337f9ee05b028af8506c7e83dc1b8c23a3b32
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:57:36 2010 +0530
    fix io_xxxx Makefiles:
    Makefiles for io_xxx syscall tests contains line:
    LDFLAGS                 += $(AIO_LIBS)
    Which leads to wrong order of flags passed to the linker and compilation failure on certain linux systems. Changing these lines to:
    LDLIBS                  += $(AIO_LIBS)
    Fixes this problem. Patch is attached.
    Signed-off-by: Cyril Hrubis chrubis@suse.cz

commit 6a19cb6ea8f0b160438288f87a96f57d8e63aad2
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:53:59 2010 +0530

    It seems like file runtest/fs_perms_simple doesn't made it into ltp-dev git tree (also it seems to be included in the patch).
    see:
    http://ltp.git.sourceforge.net/git/gitweb.cgi?p=ltp/ltp-dev.git;a=commit;h=ca758b73afff8200df5e1a24e9abe8a6468c9e06
    --
    Cyril Hrubis
    chrubis@suse.cz

commit 4e94765d753c0ea91b4745ffac30df427a4d9202
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:50:38 2010 +0530

    Timer related syscalls for LTP test: Signed-off-by: Suzuki K P <suzuki@in.ibm.com>,
    Fix timer_t argument for timer related direct syscalls. The tests timer_getoverrun and timer_gettime should be moved to testcases/kernel/timers directory. If that is do
     /*  Description */
    There is a mismatch in the "timer_t" type defined by the Linux kernel and the GNU Libc.
    Linux kernel defines it as an int for all architectures.
    include/linux/types.h :
    typedef __kernel_timer_t timer_t;
    arch/powerpc/include/asm/posix_types.h :
    typedef int __kernel_timer_t;
    Now, the glibc provides a wrapper to the timer related system calls. While providing the wrapper, Glibc stores some internal data associated with the timer. So it defin
    /usr/include/time.h :
    /* Timer ID returned by `timer_create'.  */
    typedef __timer_t timer_t;
    in /usr/include/bits/types.h :
    /* Timer ID returned by `timer_create'.  */
    __STD_TYPE __TIMER_T_TYPE __timer_t;
    in /usr/include/bits/typesizes.h
    So that leads to the definiton of timer_t as void* by glibc. And this cannot be changed. But the glibc uses the "proper" typed argument for the syscalls it issues by de

commit 82f8e8fdfe892266d7346792b71783ac23bfa1a2
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:45:16 2010 +0530

    Following set of patches applies functional changes in pi-tests for better reliability in recent kernels and their order is:
    [PATCH 1/6] realtime: reuse init_pi_mutex from librttest
    [PATCH 2/6] realtime: add test descriptions
    [PATCH 3/6] realtime: threads need not set cpu affinity while main does
    [PATCH 4/6] realtime: use busy_work_ms from librttest to burn cpu cycles
    [PATCH 5/6] realtime: remove thread_stop which is not used anywhere
    [PATCH 6/6] realtime: synchronization fixes for high priority noise thread
    
    All need to be applied in their order on top or code clean up patch series sent previously.
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

commit e1c39ef4f1d61c05f176d063d1afa6f704bc6740
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:36:06 2010 +0530

    realtime: code cleanup on pi-tests to adapt C coding standard: Following bulk of patches applies the coding style in pi-tests to follow the C coding standard. All are t
    [PATCH 1/5] realtime: code cleanup on pi-test 0
    [PATCH 2/5] realtime: code cleanup on pi-test 1
    [PATCH 3/5] realtime: code cleanup on pi-test 2
    [PATCH 4/5] realtime: code cleanup on pi-test 5
    [PATCH 5/5] realtime: code cleanup on pi-test 6
    Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
    Acked-by: John Stultz <johnstul@us.ibm.com>,
    Acked-by: Darren Hart <dvhltc@us.ibm.com>,

commit c81df6233bca8b3ad601a3a7dd6c02319a32a76b
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:25:20 2010 +0530

    Following patch adds "return NULL;" to the function returning void* in math float tests. This change silences compiler warnings. Signed-off-by: Cyril Hrubis chrubis@sus

commit 4aafc2802f0c2c05e4891cea1f721f414b41ac67
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 28 12:22:02 2010 +0530

    The mq_timedreceive01.c test defines _XOPEN_SOURCE 500 on the beginning but this causes missing prototypes for seteuid() and mq_timedreceive() as they need _XOPEN_SOURC

commit e75668f99ade62e18e34891b2c522c8d97ee982b
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue May 18 01:34:04 2010 +0530

    ftruncate04.c: cleanup mandatory locking check. The attached patch tries to cleanup the `mandatory locking' check in the ftruncate04.c testcase. The currently test is m

commit 6e9c735833c19ad5031a4116b2e74ee77ff53424
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue May 18 01:31:35 2010 +0530

    New: open("a/", O_NOFOLLOW) fails with ELOOP if "a" is a symbolic link to a directory. Add O_NOFOLLOW open test with trailing slash. In a situation where symlink (say '

commit ca758b73afff8200df5e1a24e9abe8a6468c9e06
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Tue May 18 01:28:14 2010 +0530
    fix fs_perms tests. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

commit 440fa0f6d857d4a15802b5ecdfdf6057e59975bf
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Wed May 12 22:07:14 2010 +0530

    Add an Option '-K' to Create dmesg logs for each test:
    Recently while running LTP , i found that the system had generated many kernel messages worth investigating. However, there was a loose gap to find out which test exact
    1) Absolute path(s) as specified by the user, else
    2) Inside $LTPROOT/output/
    Comments welcome.
    Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>

commit bd9d440be1da8020c93ac92e497e3a16e66e9fa3
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Wed May 12 22:03:21 2010 +0530

    Add an Option '-K' to Create dmesg logs for each test:
    Recently while running LTP , i found that the system had generated many kernel messages worth investigating. However, there was a loose gap to find out which test exact
    1) Absolute path(s) as specified by the user, else
    2) Inside $LTPROOT/output/
    Comments welcome.
    Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

commit 0ce709315c3f2493d8ff97d574641cb91f1b1fa6
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Sun May 9 19:44:04 2010 +0530

    NetNS test fixes: By the way, these tests appear to start up sshd for no reason other than possibly checking that basic sockets work in the netns. Given the frailty and
    NetNS test fixes (v2):
    This patch fixes a couple of netns test issues that cause invalid failures relating to exiting with a status variable that doesn't exist.  It also fixes an instance of 
    Changes in v2:
    - Initialize status=0 at the top of child_1.sh to prevent overshadowing a (meaningless) sshd failure,
    Signed-off-by: Dan Smith <danms@us.ibm.com>,
    Acked-by: Serge E. Hallyn <serue@us.ibm.com>,

commit 3aabc944423945e4857372fe726584f7889cbb8e
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 7 14:28:18 2010 +0530

    Most of these are belated cleanup after the move to using /opt/ltp. But come on, replacing 'return' with tst_exit(), are you just trying to mess with my head?
    Changelog:
     may 4: address Garrett's feedback
      1. single return 0 in print_caps.c
      2. use $TMP if defined for location of caps_fifo
      3. use tst_brkm in place of tst_resm.
     may 5: address Garrett's comment:
      don't add 1 to null pointer and then check for 1
    Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>,
    Acked-by: Garrett Cooper <yanegomi@gmail.com>,
commit c98956ba8f40b4c9004ff5767db2b2d87ab46e41
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 7 14:21:00 2010 +0530

    The MAX_CLOCKS supported by the kernel is 16. But the kernel may not have all the clock sources defined in the range 0-15. Hence, to test whether kernel returns error f
    Signed-off-by: Suzuki K P <suzuki@in.ibm.com>,
    Acked-by: Garrett Cooper <yanegomi@gmail.com>,

commit f0be8b0c4489defeb6eaf6715576524a48b8998a
Author: Subrata Modak <subratamodak@subratamodak.linux.ibm.com>
Date:   Fri May 7 10:33:00 2010 +0530

    We should to check the return value of trigger_eventfd_overflow() in overflow_poll_test().
    Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>,
    Acked-by: Garrett Cooper <yanegomi@gmail.com>,

LTP-20100430
Commit: 84f2e35f109a9fe6591af83be0ddbda4a5f7c78c
Date:   Thu, 29 Apr 2010 19:02:46 +0530

Fix for mqns testcase failure reported by Muni
Signed-off-by: Serge Hallyn <serue@us.ibm.com>
Reported by: Munipradeep <mbeeraka@in.ibm.com>

Changed Files:

testcases/kernel/containers/mqns/mqns.h
testcases/kernel/containers/mqns/mqns_01.c
testcases/kernel/containers/mqns/mqns_02.c
testcases/kernel/containers/mqns/mqns_03.c
testcases/kernel/containers/mqns/mqns_04.c

Commit: 5936767b86201d8409bb62a74770e60de1796adc
Date:   Thu, 29 Apr 2010 19:00:01 +0530

pidns30 fix
    Signed-off-by: Serge Hallyn <serue@us.ibm.com>
    Acked-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/pidns/pidns30.c

Commit: 742cfadb46d5fe1952396b9568c18afccdb2c489
Date:   Thu, 29 Apr 2010 18:56:12 +0530

Fix for mqns by Serge.
Signed-off-by: Serge Hallyn <serue@us.ibm.com>
Acked-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/mqns/mqns_02.c

Commit: e6dc1b454e09e3e38532c37c3fb54c77eb3050cf
Date:   Thu, 29 Apr 2010 18:50:22 +0530

While packaging ltp-full-20100228 I've found out that man files are installed with executable bits and that's caused by INSTALL_MODE := 00775 that is pulled from generic_leaf_target.mk that pulls in env_post.mk. Fixing explicitly INSTALL_MODE to 00644 in man.mk fixes this for me. Patch attached.
Signed-off-by: Cyril Hrubis chrubis@suse.cz

Changed Files:

include/mk/man.mk

Commit: 40f8829df38ecfe64c0fcd16a6ce7b5b19b83f25
Date:   Thu, 29 Apr 2010 14:50:16 +0530

Merge branch 'pu'

Changed Files:

Commit: acaf3cd41451b41f7bdc51cdf06e017f2eaf4a45
Date:   Thu, 29 Apr 2010 14:48:45 +0530

Merge branch 'master' into next

Changed Files:

Commit: c2ce5363adf4a3f8482d7c4476a9beeaf7bc8aef
Date:   Wed, 28 Apr 2010 11:39:03 +0530

Generating HTML Output.....!! Can't open perl script "/opt/ltp/tools/genhtml.pl": No such file or directory
Following patch fixes the same.

Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>
Acked-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

runltp

Commit: d9f3d25b9db35073c7104b759d526869d9867692
Date:   Mon, 26 Apr 2010 13:19:40 +0530

The test_fs_bind testscript hangs indefinitely when run on a machine where busybox applets are used.
The test hangs while trying to restore the mounts after a test run.

This happens because the "xargs" applet from busybox doesn't understand
the --max-args=1 option. Thus, the mounts from the test are not removed
and this goes on in a loop, indefinitely.

This could be avoided by using "-n" option which is supported by both
the implementations of xargs.

Signed-off-by: Suzuki K P <suzuki@in.ibm.com>

Changed Files:

testscripts/test_fs_bind.sh

Commit: 23e7806fec4c6be42fdf577559df5498cce45118
Date:   Fri, 23 Apr 2010 12:35:10 +0530

Running the ltp suite on ChromeOS (x86 with a 2.6.32 kernel) fails linkat01 testcase 21:
linkat01   21  TFAIL  :  linkat() failed: TEST_ERRNO=EXDEV(18): Invalid
cross-device link

This is probably because my /tmp is mounted from someplace other than the
filesystem that contains newdirfd.
The goal of testcase 21 is to demonstrate that linking a directory will fail
EPERM.  The fix is to use olddir/. instead of /tmp.

Tested-by: Henry Yei <hyei@mvista.com>
Signed-off-by: Bryan Freed <bfreed@google.com>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/syscalls/linkat/linkat01.c

Commit: 5162b710bfc574107d915093c08b198f0a15727e
Date:   Thu, 22 Apr 2010 11:36:48 +0530

 prio-wake: avoid glibc to kernel sleep race
 In the unlocked broadcast scenario, there exists a race between when the
 running_threads variable reaches rt_threads and when the last worker_thread
 blocks in the kernel after a cond_wait(). It is possible for a thread to miss
 the broadcast if it fails to sleep before the broadcast is issued.

 The previous code did not guarantee a small window of time to allow the threads
 to get to sleep.  It also used an unreasonably large sleep time which
 unnecessarily extended the length of the test run time.  This patch ensures some
 time is given to the threads to get to sleep and at the same time uses a much
 shorter (1000x) sleep period which results in a 50-100x reduction in test run
 time. Lastly, two unecessary loops waiting for the threads to complete were
 removed, relying on pthread_join() instead to wait for the threads to complete.

 Signed-off-by: Darren Hart <dvhltc@us.ibm.com>
 Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>

Changed Files:

testcases/realtime/func/prio-wake/prio-wake.c

Commit: d0605c4e9525bd5ecdd0ba28ba27b8b237d1cfc8
Date:   Tue, 20 Apr 2010 17:15:13 +0530

msgctl10() un-necessarily eats up all the PIDs of the system leading to system becoming un-responsive. The changed no.s would better do the job.
Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>
Acked/Tested-By: Caspar ZHANG <czhang@redhat.com>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/syscalls/ipc/msgctl/msgctl10.c

Commit: adf53e68cf2b513b67a19dc0ff8869b53f9f22a3
Date:   Fri, 16 Apr 2010 08:44:17 +0530

Script utimensat_tests.sh deletes the test it is executing instead of deleting temporary directory. Patch attached.
Signed-off-by: Cyril Hrubis <chrubis@suse.cz>

Changed Files:

testcases/kernel/syscalls/utimensat/utimensat_tests.sh

Commit: 1c9ec5ec1389062a4a091fee7295b36a6583df5d
Date:   Thu, 15 Apr 2010 14:56:14 +0530

Merge branches 'next' and 'pu' into pu

Changed Files:

Commit: 4eca2b5b7d3f4dfb1fd661eab2931d3564a4a85f
Date:   Thu, 15 Apr 2010 14:55:31 +0530

Merge branches 'pu' and 'next' into next

Changed Files:

Commit: 6fc71a4987f658ac48b476defb8cc341cb7361c3
Date:   Thu, 15 Apr 2010 14:54:39 +0530

merge with pu branch changed by Garret
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/commands/mail/mail_tests.sh
testcases/open_posix_testsuite/conformance/definitions/aio_h/2-1.c
testcases/open_posix_testsuite/conformance/definitions/errno_h/3-1.c
testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-2.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/3-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/4-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/5-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/6-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/7-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_error/2-1.c
testcases/open_posix_testsuite/conformance/interfaces/sched_yield/1-1.c

Commit: 1ff0128460531d9f9c46353eba65dd79ca27bbc8
Date:   Thu, 15 Apr 2010 01:34:13 -0700

Correct comment so that it filters its way up to next (eventually).
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/commands/mail/mail_tests.sh

Commit: c150e9b196b1267beeefdaec4dde9933503448f3
Date:   Thu, 15 Apr 2010 12:17:56 +0530

I tried "eventfd01" test in my system. This test failed with TWARN (return code:4) :
------------
  eventfd01    1  TCONF  :  2.6.22 or greater kernel required
  eventfd01    2  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    3  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    4  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    5  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    6  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    7  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    8  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    9  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   10  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   11  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   12  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   13  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   14  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01   15  TCONF  :  Remaining cases not appropriate for
configuration
  eventfd01    0  TWARN  :  tst_rmdir(): TESTDIR was NULL; no removal
attempted
------------

Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/syscalls/eventfd/eventfd01.c

Commit: eaf73222df286c200475aadac78122b182b5f388
Date:   Thu, 15 Apr 2010 12:14:19 +0530

I found out that "-)20" test of "ar01" failed once in a while. Its code is as follows: ------------ ... rm -rf $TCtmp/lib.a;cd $TCdat ar -cr $TCtmp/lib.a file0.in file2.in crtest File1time=`ar -tv $TCtmp/lib.a | grep file0.in | cut -f2 -d: | cut -f1 -d" "` File2time=`ar -tv $TCtmp/lib.a | grep file2.in | cut -f2 -d: | cut -f1 -d" "`
touch -c -t 201503030303.55 file0.in

ar -ru $TCtmp/lib.a file0.in file2.in 2>&1 1>/dev/null
File1time1=`ar -tv $TCtmp/lib.a | grep file0.in | cut -f2 -d: | cut -f1 -d"
"`
File2time2=`ar -tv $TCtmp/lib.a | grep file2.in | cut -f2 -d: | cut -f1 -d"
"`

if [ $File2time = $File2time2 ]
then
        if [ $File1time = $File1time1 ]
        then
                TCRESULT
                echo "FAIL - ar with -u flag failed"
        else
                echo "-)20"
        fi
else
        TCRESULT
        echo "FAIL - ar with -u flag failed"
fi
touch file0.in
...
------------

"file0.in" and "file2.in" are offered with "ar01" source, and they are
copied when "make install" is executed.

In this code, "File1time" and "File1time1" are times of before and
after time-stamp changing of "file0.in" by "touch -c -t ..." command.
But "File1time" and "File1time1" are only minute numbers.
It's problem, I think.

If installation is at 2010.04.06 XX:03 accidentally, both of
"File1time" and "File1time1" are "03".
And this code ends as "FAIL".
This happens with a one-60th probability.

Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/commands/ade/ar/ar01

Commit: cc7c7035a60b40f9a417b5e437ca6ea43ebfd783
Date:   Thu, 15 Apr 2010 12:08:07 +0530

I tried to build by using yesterday's git in my system (RHEL4.8 x86).  (ltp-dev-4837fee8a7c2de6a83c8927a574c792ca6dabe4e.tar.gz) But build failed in "cap_bset_inh_bounds.c" with following message. This is different from "cap_bounds_r.c"'s problem (another thread), I think
------------
gcc -g -O2 -g -O2 -fno-strict-aliasing -pipe -Wall
-I/home/LTP/ltp-dev-20100401-3/testcases/kernel/include
-I../../../../include -I../../../../include   -L../../../../lib
cap_bset_inh_bounds.c   -lltp -lcap -o cap_bset_inh_bounds
cap_bset_inh_bounds.c:124: error: syntax error before numeric constant
cap_bset_inh_bounds.c:124: warning: type defaults to `int' in declaration of
`tst_resm'
cap_bset_inh_bounds.c:124: error: conflicting types for 'tst_resm'
../../../../include/test.h:192: error: previous declaration of 'tst_resm'
was here
cap_bset_inh_bounds.c:124: error: conflicting types for 'tst_resm'
../../../../include/test.h:192: error: previous declaration of 'tst_resm'
was here
cap_bset_inh_bounds.c:124: warning: data definition has no type or storage
class
cap_bset_inh_bounds.c:129: warning: type defaults to `int' in declaration of
`tst_exit'
cap_bset_inh_bounds.c:129: error: conflicting types for 'tst_exit'
../../../../include/test.h:203: error: previous declaration of 'tst_exit'
was here
cap_bset_inh_bounds.c:129: error: conflicting types for 'tst_exit'
../../../../include/test.h:203: error: previous declaration of 'tst_exit'
was here
cap_bset_inh_bounds.c:129: warning: data definition has no type or storage
class
cap_bset_inh_bounds.c:130: error: syntax error before '}' token
------------

In this source, the pair of "ifdef" start/end and the pair of
main() function's "parenthesis" are alternate, I think.

Acked-by: Serge Hallyn <serue@us.ibm.com>
Signed-off-by : Tomonori Mitani <mitani@ryobi.co.jp>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/security/cap_bound/cap_bset_inh_bounds.c

Commit: 2a276cf8bb5b94259482ec039edc2ae7fbaf953e
Date:   Thu, 15 Apr 2010 12:06:23 +0530

I found two problems in mail test. (${LTPROOT}/testcases/commands/mail/mail_tests.sh) They are simple mistakes, I think.
1) About judgment for making a user name
In line 80 of "mail_tests.sh", there is following sentence.
------------
if id -u mail_test >/dev/null 2>&1; then
------------
This control sentence is going to judge whether the result of
"id -u mail_test" command is normal or not, I think.
But this sentence is not effective.
Therefore the user name "make_test" cannot be made when this user name
isn't exist.

2) About "blind carbon copy" option
In "mail_tests.sh", there are 5 tests about mail.
5th is "blind carbon copy" test.
However, this test doesn't use "-b" option but uses "-c" option.

Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/commands/mail/mail_tests.sh

Commit: a9d5600c78943e9e7e1b52c5ec81e9772a47b44f
Date:   Thu, 15 Apr 2010 12:04:09 +0530

I tried "hugemmap", "hugeshmat", "hugeshmctl", "hugeshmdt" and "hugeshmget" tests. And I found several fails in them: ------------<at "${LTPROOT}/testcases/kernel/mem/hugetlb/" directory>  - ./hugemmap/    1) hugemmap04   : return code = 2
 - ./hugeshmat/
   2) hugeshmat01  : return code = 6
   3) hugeshmat02  : return code = 6
   4) hugeshmat03  : return code = 2

 - ./hugeshmctl/
   5) hugeshmctl01 : return code = 6
   6) hugeshmctl02 : return code = 6
   7) hugeshmctl03 : return code = 2

 - ./hugeshmdt/
   8) hugeshmdt01  : return code = 6

 - ./hugeshmget/
   9) hugeshmget01 : return code = 2
  10) hugeshmget02 : return code = 6
  11) hugeshmget03 : return code = 6
  12) hugeshmget05 : return code = 2
------------

These tests output following messages:
------------
 a) All tests:
"TBROK  :  Test cannot be continued owning to sufficient availability of
Hugepages on the system"

 b) 2), 3), 5), 6), 8), 10), 11) tests:
"TWARN  :  tst_rmdir(): TESTDIR was NULL; no removal attempted"
------------

Both case a) and case b) are caused by the same reason.

All of case a) failures occured at the following points (for example
hugemmap04):
------------<hugemmap04.c - main()>
        /* Check number of hugepages */
        if (get_no_of_hugepages() <= 0 || hugepages_size() <= 0)
                tst_brkm(TBROK, cleanup, "Test cannot be continued owning to
\
                                sufficient availability of Hugepages on the
system");
------------

I found out that "HugePages_Total" parameter of "/proc/meminfo" file
is set to "0". This caused above TBROK failure. It is environment problem.

But, in this case, tests must not return with TBROK, but with TCONF,
I think.

And, in case b), these tests try to delete "TESTDIR" directory by
calling "tst_rmdir()" function in "cleanup()" function.
But, "TESTDIR" never set if "tst_tmpdir()" function isn't called.
I think that case b)'s tests must not call cleanup() function.

I want to suggest following patch.

Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c
testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c
testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat03.c
testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c
testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl02.c
testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl03.c
testcases/kernel/mem/hugetlb/hugeshmdt/hugeshmdt01.c
testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget02.c
testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget03.c
testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget05.c

Commit: 2e271475913722d7c29463c64703575dff69c4fb
Date:   Thu, 8 Apr 2010 00:27:08 -0700

Note #define vs enum conformance issue with signal_h/26-1.c
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/definitions/pthread_h/2-2.c

Commit: 2eb2342d3a9db5a089742473895af4fdf1e6f4c8
Date:   Wed, 7 Apr 2010 21:57:26 -0700

Fix more deprecated malloc.h includes.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/4-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/5-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/6-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/7-1.c
testcases/open_posix_testsuite/conformance/interfaces/aio_error/2-1.c

Commit: 5da1b33941b513ac1f693cf86e27b5750b43dea2
Date:   Wed, 7 Apr 2010 21:53:54 -0700

Fix incorrect / missing included headers.
POSIX 1003.1 2004 states that stdlib.h supplants malloc.h and signal.h is required for sigaction and sigemptyset.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/3-1.c

Commit: e90e0138cb7444d5db967183397b776979efd593
Date:   Wed, 7 Apr 2010 21:37:13 -0700

Fix a typo and add a missing definition for non-Linux platforms.
aio.h appears to either define or pull in other headers that define NULL. This isn't true on FreeBSD.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/definitions/aio_h/2-1.c
testcases/open_posix_testsuite/conformance/definitions/errno_h/3-1.c

Commit: 001227f859f24bde222d0813d9327afe4c132a33
Date:   Wed, 7 Apr 2010 03:08:43 -0700

Fix a rookie typo with #ifdef vs #if defined()
Ok, I'm tired... need to stop making such rookie mistakes with #ifdef :P.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sched_yield/1-1.c

Commit: 1d67dc1564c73d49fc681679e4a5b9be48420e48
Date:   Wed, 7 Apr 2010 02:50:32 -0700

Add proper checks for Linux and the BSDs.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sched_yield/1-1.c

Commit: 4837fee8a7c2de6a83c8927a574c792ca6dabe4e
Date:   Thu, 1 Apr 2010 12:45:00 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: aabf191024aacc91784593b0d3f8d5fa37434b25
Date:   Thu, 1 Apr 2010 12:43:27 +0530

Added a new file called result where maintainer need to provide the result on which he has run before releasing the tar ball for month end release.
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

result

Commit: 3bf514769d060a64d0f38f4b97c00d8bb0de74f8
Date:   Thu, 1 Apr 2010 11:34:36 +0530

Merge branches 'next' and 'pu' into pu

Changed Files:

Commit: 44fba94453ca4f446cde4db08b0a760862b55cfa
Date:   Thu, 1 Apr 2010 11:30:52 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: f50539e0bcb0f9bab88101ce40a8e09a1d76d4a9
Date:   Thu, 1 Apr 2010 11:25:49 +0530

Modified nets/Makefile for appending one file which needs in /opt/ltp/tetscases/bin directory while install.
=======================================================================================
parentns.sh    0  TINFO  :  Pinging ChildNS from ParentNS
sshd re-exec requires execution with an absolute path
/opt/ltp/testcases/bin/ch_ftp.sh: line 37: ./container_ftp.pl: No such file or directory
childns.sh    1  TFAIL  :  ftp failed
Error while running the script
two_children_ns: return code is 1 ; par_chld_ftp: FAIL 1 ;
=======================================================================================

After patch applied the resule is like this:

=======================================================================================
parentns.sh    0  TINFO  :  Pinging ChildNS from ParentNS
sshd re-exec requires execution with an absolute path
Error: Can't ftp to 192.168.0.181: Connection refused
childns.sh    1  TFAIL  :  ftp failed
Error while running the script
two_children_ns: return code is 1 ; par_chld_ftp: FAIL 1 ;
=======================================================================================

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/netns/Makefile

Commit: 4ccf10848def0a6f48e0fa1302056101564fedb0
Date:   Thu, 1 Apr 2010 11:17:51 +0530

NETNS tests from containers fails to execute with following message
Running netns tests.
--: childns.sh '/opt/ltp': No such file or directory

LTP infrastructure fails to locate the childns.sh script. Fix this.
There were few hardcoded paths within various tests which are not available
during runtime.

eg : %s/testcases/kernel/containers/netns/paripv6.sh

Fix those occurences by specifying proper paths (%s/testcases/bin/paripv6.sh)

The following patch allows the test to be executed properly on my Fedora 12
system.

Signed-off-by : Sachin Sant <sachinp@in.ibm.com>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/netns/common.c
testcases/kernel/containers/netns/par_chld_ipv6.c
testcases/kernel/containers/netns/sysfsview.c
testcases/kernel/containers/netns/two_children_ns.c

Commit: aca4428b38701e46e0da38fd7583028216c32c66
Date:   Thu, 1 Apr 2010 10:24:25 +0530

Added Maintainer Notes new file
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

doc/MaintNotes

Commit: d2a9b9d3e04807fb4744dc7e778fe6e0c9543bc1
Date:   Thu, 1 Apr 2010 10:10:33 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: 613db220bc78b3109934dbdf617a7d2b3b437295
Date:   Thu, 1 Apr 2010 10:09:49 +0530

Changelog from 2010-03-01 to 2010-03-31
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

ChangeLog
LTP-20100331

commit f269fc8247563f3fe4c412fcd8fc6522d8a34753
Author: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>
Date:   Wed Mar 31 18:48:05 2010 +0530

./runltp -f fs_readonly fails with:

wc: /opt/ltp/testscripts/fs_ro_tests: No such file or directory
TDIR is /tmp/fs19258/dir2-bound
seq: missing operand
...
<<<test_end>>>
INFO: ltp-pan reported all tests PASS

This patch fixes the problem.

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

commit c58cf0cff52cc72179c6fb4303509a3f2db19945
Author: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>
Date:   Wed Mar 31 15:30:14 2010 +0530

cgroup_fj_release_agent is not getting installed as it does not end with
*.sh.

And

Other fix is about the indentation of rtc device driver
testcases

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Commit: 566d1af5a7111408601ea6cb64218585bee8d04a
Date:   Thu, 25 Mar 2010 20:04:07 +0530

Merge commit '391e757d43b3ac33a4a435e319ee77b1daa6da76'

Changed Files:

Commit: 391e757d43b3ac33a4a435e319ee77b1daa6da76
Date:   Tue, 23 Mar 2010 20:07:34 +0530

Fix the proper return for testcase.
Reported By: Srinivasa R Chamarthy <schamart@linux.vnet.ibm.com>
Signed-off By: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/controllers/cgroup_fj/run_cgroup_test_fj.sh

Commit: 008f0d2c45d52af059d7981685921fc53d7354bf
Date:   Tue, 23 Mar 2010 20:05:26 +0530

These warning will appear when HAVE_LIBCAP is not defined.
c.c: In function ‘main’:
c.c:28: warning: unused variable ‘ret’
c.c:27: warning: unused variable ‘caps2’
c.c:27: warning: unused variable ‘caps’

Signed-off By: Rishikesh K Rajak<risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/security/filecaps/c.c

Commit: b72a24c9eb339841a0c4b82d384a5b3ba10c9ecb
Date:   Tue, 23 Mar 2010 14:26:21 +0530

Merge branches 'maint' and 'master'

Changed Files:

Commit: f102fd9735f01b4e2c9ae44f3c90d1a56d4d81f8
Date:   Tue, 23 Mar 2010 14:20:36 +0530

I have tested these on MIPS architecture and  reproduced infinite waiting situation after applying this patch. (with strace no issue found ex: #strace ./8-1.test) As you said there may be issues in MIPS-POSIX library. it may take some time to fix these issues or may not be fixed. However, I’ll discuss this issue with MIPS folks in different thread.
ATM, my patch is not a good idea for MIPS architectures.
So, after your comments I have modified my patch and tested.
Here in this latest patch i did not change any thing regarding while loop.
I replaced sleep() in an appropriate place.
It is working fine on X86, ARM and MIPS.

Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sem_post/8-1.c

Commit: 7ad24180d690306e129b84d49806f9f176a28d57
Date:   Tue, 23 Mar 2010 14:19:01 +0530

while running i found some unwanted messages and fixed those. You can Ack if it is correct fix.
===== error log =====
Running in:
cp: cannot stat `/opt/ltp/testcases/bin/print_caps': No such file or directory
mkfifo: cannot create fifo `caps_fifo': File exists
cap_sys_admin tests
==== error log ======

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/security/filecaps/filecapstest.sh

Commit: 2df915dc1da7c5d92e03856095d3f66601178e58
Date:   Mon, 22 Mar 2010 13:50:11 +0530

Revert "I have found abnormal behavior of sem_post/8-1.c test case under posix."
This reverts commit d40fd32af0d0ad7713b0cf6cd23daf1ee639d479.

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

.gitignore

Commit: c65b70531c8d383a957654ad5179cb302b405a3b
Date:   Mon, 22 Mar 2010 13:38:45 +0530

Remaining patch for new file addition for commit:6e3dd83d9f575d98d76b8b3f642ad6e8793dbdfc

Changed Files:

m4/ltp-prctl.m4
testcases/kernel/security/filecaps/c.c

Commit: 95a376d4e50acd0c90bf749060a1974338a082a9
Date:   Mon, 22 Mar 2010 12:07:05 +0530

As pointed out by Cheng Shun Xia one of open posix conformace tests is testing return value from sigset(SIGCHLD, SIG_HOLD) and expect this value to be SIG_HOLD, however this is true only if SIGCHLD is already blocked so we must ensure that. Patch is attached.
Signed-off-by: Cyril Hrubis chrubis@suse.cz
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sigset/8-1.c

Commit: 6e3dd83d9f575d98d76b8b3f642ad6e8793dbdfc
Date:   Mon, 22 Mar 2010 12:04:09 +0530

Here's an attempt at fixing up and simplifying the autoconf for detecting libcap and prctl support.  After this, make autotools etc work fine on my f12 system, and runltp -f cap_bounds passes. the filecaps tests refuse to run claiming to be unable to find setcap, which I'll worry about next week.
(I'm sure there is an AC_ macro for finding a command)

And second patch :

Remove the run-time checks and just have autoconf check for
libcap and setcap presence.

After this, filecaps tests compile, install, and pass on f10 at least.

Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

configure.ac
m4/ltp-cap.m4
testcases/kernel/security/Makefile
testcases/kernel/security/cap_bound/cap_bounds_r.c
testcases/kernel/security/cap_bound/cap_bounds_rw.c
testcases/kernel/security/cap_bound/cap_bset_inh_bounds.c
testcases/kernel/security/cap_bound/check_pe.c
testcases/kernel/security/cap_bound/dummy.c
testcases/kernel/security/cap_bound/exec_with_inh.c
testcases/kernel/security/cap_bound/exec_without_inh.c
testcases/kernel/security/filecaps/check_simple_capset.c
testcases/kernel/security/filecaps/checkforfilecaps.sh
testcases/kernel/security/filecaps/checkforlibcap.sh
testcases/kernel/security/filecaps/filecapstest.sh
testcases/kernel/security/filecaps/inh_capped.c
testcases/kernel/security/filecaps/print_caps.c
testcases/kernel/security/filecaps/verify_caps_exec.c

Commit: 96a4822d72478abce6dceabc816f658ba4ded0d3
Date:   Mon, 22 Mar 2010 11:53:21 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: c700433fe26d24b975bf241668a9701548e6c21d
Date:   Mon, 22 Mar 2010 11:16:51 +0530

Attached patch fixes possible buffer oveflow in sem_getvalue tests (the buffer overflow happens when getpid() returns number that couldn't fit into buffer) and also cleans coding style.
Signed-off-by: Cyril Hrubis chrubis@suse.cz
Acked-by: Garrett Cooper <yanegomi@gmail.com>

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/1-1.c
testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/2-1.c
testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/2-2.c
testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/4-1.c
testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/5-1.c

Commit: 4d574b9f3c82a58d88b97e201ac49cddf7bc5c24
Date:   Mon, 22 Mar 2010 10:43:41 +0530

Merge branch 'next' of ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev into next

Changed Files:

Commit: e7ed287c04bef2108fa544b0b86629e554403970
Date:   Mon, 22 Mar 2010 10:42:05 +0530

This commit contains Linux RTC device driver test cases. Currently RTC read test, Alarm test and Update interrupts tests are supported.
Tested-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>
Signed-off-by: Silesh C V <Silesh.Vellattu@lntinfotech.com>

Changed Files:

testcases/kernel/device-drivers/rtc/Makefile
testcases/kernel/device-drivers/rtc/README
testcases/kernel/device-drivers/rtc/rtc-test.c

Commit: 965127e99f1c3e4035a3de621ca0c295de14448b
Date:   Mon, 15 Mar 2010 11:53:31 +0530

Merge branches 'pu' and 'maint' into maint

Changed Files:

Commit: 0a52859d55cf93cdd310ec678868cb4d10e80728
Date:   Mon, 15 Mar 2010 11:50:53 +0530

Adding a wordy informationi, 2005 here represents as year not version of kernels.
Though we need to work on this testcase to provide under TCONF.

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/network/multicast/mc_cmds/mc_cmds

Commit: d05498f44de5d3e542b2031b458d84e907604728
Date:   Sat, 13 Mar 2010 12:50:13 +0530

Merge branches 'master' and 'pu' into pu

Changed Files:

Commit: 2784e9a6e36cacad4192f41a8c9044a85428ed27
Date:   Sat, 13 Mar 2010 12:49:29 +0530

Merge branches 'master' and 'maint' into maint

Changed Files:

Commit: b80fdefbd1843484e5a3ccc3d5748fee5b4cd1f7
Date:   Sat, 13 Mar 2010 12:47:38 +0530

Merge branches 'master' and 'next' into next

Changed Files:

Commit: 00c8b3450d151482e9f7424224fc8a64bff27fdd
Date:   Wed, 10 Mar 2010 20:29:15 -0800

Merge branch 'master' of ssh://yaberauneya@ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: a25f31b6f0a774b75ad2bf664f84ff0500086785
Date:   Wed, 10 Mar 2010 20:28:33 -0800

Update TODO with note about needing to replace pushd and popd logic in a few tests.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: 007dce57f645ad796f8cb60a13de936ac04fd1e8
Date:   Wed, 10 Mar 2010 20:26:15 -0800

Hi,
I found following problem about "memcg_control" test.
---------
/opt/ltp/testcases/bin/memcg_control_test.sh: line 30: [: : integer
expression expected
----------

This happens because of following process.
[ memcg_control_test.sh: line 30 ]
---------
if [ "$(grep -w memory /proc/cgroups | cut -f4)" -ne "1" ]; then
       echo "WARNING:"
       echo "Either kernel does not support memory resource controller or
feature not ena
bled"
       echo "Skipping all memcg_control testcases...."
       exit 0
fi
---------

"$(grep -w memory /proc/cgroups | cut -f4)" can't comparable with "1"
if "$(grep -w memory /proc/cgroups | cut -f4)" = nothing.

How about fixing like the other "memcg" tests?

Signed-off-by: Yuki Yao<y_yao@ryobi.co.jp>
Acked-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/controllers/memcg/control/memcg_control_test.sh

Commit: a3bb7abd2c1fb20dc4d93bef9cda2980f4339a6f
Date:   Wed, 10 Mar 2010 18:34:57 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: 737694964966bcf7a807b335d51923ee9c9c27a5
Date:   Wed, 10 Mar 2010 18:32:35 +0530

To run filecap test, checkforlibcap.sh file is required to be there in /opt/ltp/testcases/bin
Otherwise you will get this error when you run filecap test.

>>>>
/opt/ltp/testcases/bin/filecapstest.sh: line 22: checkforlibcap.sh: command not found
<<<<

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/security/filecaps/Makefile

Commit: 615e1e37de053855b6bd56bae8b00d8a17133f8a
Date:   Wed, 10 Mar 2010 11:05:40 +0530

Merge branches 'master' and 'pu' into pu

Changed Files:

Commit: b8ed5460176838d9b714dddbc17685983b4a8b9b
Date:   Wed, 10 Mar 2010 11:03:55 +0530

Merge branches 'master' and 'maint' into maint

Changed Files:

Commit: ce944320bea9e3d7044a36c64ef2e1719312370d
Date:   Wed, 10 Mar 2010 11:03:42 +0530

Merge branches 'master' and 'next' into next

Changed Files:

Commit: 1a5506c97dcfda0bd16f83ca855bb633c47eea4c
Date:   Wed, 10 Mar 2010 11:01:47 +0530

Fix make filed,, reported by Shi Weihua <shiwh@cn.fujitsu.com> It was my bad :( .
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/Makefile

Commit: 48c52fcd4e7668bc36bbe080f53462d410712b69
Date:   Wed, 10 Mar 2010 10:00:22 +0530

Instead of LIBS, it should be LDLIBS in container/Makefile
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/Makefile

Commit: c962f51674b971496e14ac4be0cc75da98b75fca
Date:   Tue, 9 Mar 2010 21:53:25 +0530

Testing for post-receive-email
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

TODO

Commit: 17905ceabf2dc20e978dfa4ea3682197ad01bf9a
Date:   Tue, 9 Mar 2010 14:11:41 +0530

Merge branches 'next' and 'master'

Changed Files:

Commit: bdfe0b2a9dd720c3013225cc4aa1628e77888b24
Date:   Tue, 9 Mar 2010 14:05:46 +0530

Adding check_for_unshare.c file and linking the porper lib.
Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>
Reported-By: Shi Weihua <shiwh@cn.fujitsu.com>

Changed Files:

testcases/kernel/containers/Makefile
testcases/kernel/containers/check_for_unshare.c

Commit: 716d29883b11107c32313b1836bea447fecbaf1e
Date:   Tue, 9 Mar 2010 12:48:53 +0530

Quick fix for build failure with 8th Mar master tree.
Getting compilation error as:
==================================================================
buffer.c: In function ‘evbuffer_add_printf’:
buffer.c:96: warning: implicit declaration of function ‘vasprintf’
buffer.c:100: warning: pointer targets in passing argument 2 of ‘evbuffer_add’ differ in signedness
gcc -DHAVE_CONFIG_H -I. -I. -I. -Icompat    -Wall -g -O2 -c evbuffer.c
gcc -DHAVE_CONFIG_H -I. -I. -I. -Icompat    -Wall -g -O2 -c select.c
gcc -DHAVE_CONFIG_H -I. -I. -I. -Icompat    -Wall -g -O2 -c poll.c
gcc -DHAVE_CONFIG_H -I. -I. -I. -Icompat    -Wall -g -O2 -c epoll.c
gcc -DHAVE_CONFIG_H -I. -I. -I. -Icompat    -Wall -g -O2 -c signal.c
rm -f libevent.a
ar cru libevent.a event.o buffer.o evbuffer.o select.o poll.o epoll.o signal.o
ar: -u: (PROGRAM ERROR) Option should have been recognized!?
Try `ar --help' or `ar --usage' for more information.
make[2]: *** [libevent.a] Error 64
make[2]: Leaving directory `/root/ltp-dev/testcases/kernel/syscalls/libevent'
make[1]: *** [all-recursive] Error 1
make[1]: Leaving directory `/root/ltp-dev/testcases/kernel/syscalls/libevent'
make: *** [all-recursive-am] Error 2
:~/ltp-dev/testcases/kernel/syscalls/libevent #
=================================================================

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/syscalls/libevent/Makefile.in

Commit: 58854395050b8a3bb2fa4e5e4401546925f6aad8
Date:   Tue, 9 Mar 2010 12:24:47 +0530

Commenting "make all" in run_freezer.sh file as it is stopping to run the freezer testcase
Signed-off By: Rishikesh K Rajak<risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/controllers/freezer/run_freezer.sh

Commit: 886918830ae73a7f4b5cc2d9bf8554ee9f393ed8
Date:   Tue, 9 Mar 2010 12:07:48 +0530

Merge branches 'master' and 'next' into next

Changed Files:

Commit: e8e3c7598b82b54a7770c48a2422d5d6fa127045
Date:   Tue, 9 Mar 2010 12:04:03 +0530

Merge branches 'master' and 'maint' into maint

Changed Files:

Commit: 63f0a8f554d28b28b207f41e42182e1b789333b6
Date:   Tue, 9 Mar 2010 12:00:53 +0530

libcgroup_freezer , pushd/popd removal.
>     I went over the libcgroup_freezer testcase and there are a number
> of areas which use pushd / popd. I realize this was for ease-of-use,
> but pushd / popd aren't functional built-ins with busybox and so the
> testcases fail on Debian based distros. Could you please fix this?
> Thanks,
> -Garrett

I ported and tested your patch on top of latest git. And it works fine.

Tested & Ported-By: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>
Reported-By :Garrett Cooper <yanegomi@gmail.com>
Signed-off By: Matt Helsley <matthltc@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/controllers/freezer/libcgroup_freezer

Commit: 71256e18bb4d21d1b82c4031a1983cb72ef215aa
Date:   Mon, 8 Mar 2010 08:53:05 -0800

Clean up comment to note the actual problem. It was confusing before.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/libevent/buffer.c

Commit: 6d722f4ff2317c60f9fff1287af5d41cddca937e
Date:   Mon, 8 Mar 2010 08:48:14 -0800

Use $TMP (which defaults to /tmp) rather than /tmp as $TMP can be parameterized via runltp, et all.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/controllers/freezer/libcgroup_freezer

Commit: fb5821d2af94dd631dbd0ccfa80df1cf104f9a1f
Date:   Mon, 8 Mar 2010 08:42:23 -0800

Replace pushd / popd with proper cd logic as busybox doesn't have pushd / popd.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/commands/unzip/unzip_tests.sh

Commit: 4a1e63a8acc3f77459f6e308fc791f4205e027fd
Date:   Mon, 8 Mar 2010 08:00:46 -0800

Fix _GNU_SOURCES macro requirement error.
It appears that there's a bug in our version of libevent where the requirement that _GNU_SOURCES be set prior to stdio being #include'd for vasprintf(3) wasn't being required until recent versions of glibc:

...
buffer.c: In function ‘evbuffer_add_printf’:
buffer.c:91: warning: implicit declaration of function ‘vasprintf’
buffer.c:95: warning: pointer targets in passing argument 2 of
‘evbuffer_add’ differ in signedness
rm -f libevent.a
ar cru libevent.a event.o buffer.o evbuffer.o select.o poll.o epoll.o
signal.o
ar: -u: (PROGRAM ERROR) Option should have been recognized!?
Try `ar --help' or `ar --usage' for more information.
make[4]: *** [libevent.a] Error 64
make[4]: Leaving directory
`/root/ltp-dev/testcases/kernel/syscalls/libevent'
make[3]: *** [libevent/lib/libevent.a] Error 2
make[3]: Leaving directory `/root/ltp-dev/testcases/kernel/syscalls'
make[2]: *** [all] Error 2
make[2]: Leaving directory `/root/ltp-dev/testcases/kernel'
make[1]: *** [all] Error 2
make[1]: Leaving directory `/root/ltp-dev/testcases'
make: *** [testcases-all] Error 2
mls41:~/ltp-dev # uname -a
Linux mls41 2.6.32.8-0.3-default #1 SMP 2010-02-22 16:22:25 +0100 x86_64
x86_64 x86_64 GNU/Linux
mls41:~/ltp-dev #

So let's fix this nasty issue in a nasty way, see whether or not the problem still exists upstream, resolve there if necessary and sync the new version / change back down here.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/libevent/buffer.c

Commit: 223e12ee3f7fdb525746462747954552f0e07538
Date:   Mon, 8 Mar 2010 07:46:02 -0800

Fix install for cgroup_fj_testcases.
Turns out this script wasn't being installed properly, and thus its testcases were failing; fix by suffixing with .sh

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/controllers/cgroup_fj/cgroup_fj_testcases
testcases/kernel/controllers/cgroup_fj/cgroup_fj_testcases.sh

Commit: 49010e502a74cb6461fe9c64c90dd878c8edd398
Date:   Mon, 8 Mar 2010 07:42:52 -0800

Replace pushd // popd with cd calls.
Busybox doesn't have a concept of the pushd // popd builtins available in bash and tcsh, so let's convert the calls to cd. This is just something I noticed after executing this test, and I know there are other locations that need to be cleaned up like this in the tree...

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/controllers/memcg/control/memcg_control_test.sh

Commit: 9116567e3fd8646442f85518e6698ee0fef024a4
Date:   Sun, 7 Mar 2010 14:32:56 -0800

Fix nobody group check and change default uid/gid for nobody.
This was failing unnecessarily on Ubuntu because Debian uses nogroup instead of nobody for an anonymous group.

Also change the default gid so that it's 65534, not 99. Standard copies of Unix (sans Redhat and Solaris apparently) use gid -> 65534 for nobody:

FreeBSD:

$ id nobody
uid=65534(nobody) gid=65534(nobody) groups=65534(nobody)

RHEL 4.6:

$ id nobody
uid=99(nobody) gid=99 groups=99

Solaris:

% id nobody
uid=60001(nobody) gid=60001(nobody)

Ubuntu:

uid=65534(nobody) gid=65534(nogroup) groups=65534(nogroup)

For grins, OSX Leopard just uses some whacky UINT32_MAX value for nobody XD...

$ id nobody
uid=4294967294(nobody) gid=4294967294(nobody) groups=4294967294(nobody)

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

IDcheck.sh

Commit: 91ec53d1a811594976df4811a43113a0913da222
Date:   Sun, 7 Mar 2010 14:19:11 -0800

Correct setuid() logic for "nobody" uid.
The problem with the previous logic is that it was incorrectly hardcoding uid_t -> 99 for nobody, and thus on systems with nobody -> 65535, this is incorrect. Use getpwnam(3) to derive the correct value for the nobody's uid_t.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/link/link06.c
testcases/kernel/syscalls/link/link07.c

Commit: 373c91c072a7a85dfe2719dc8dee4e8cdd066d94
Date:   Sun, 7 Mar 2010 13:54:38 -0800

Remove unused variable $str based on closer inspection via git commit history.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/io/aio/aio02/runfstests.sh

Commit: 50b265b120a1fad3ec6fa7a6d3522ca66017368e
Date:   Sun, 7 Mar 2010 13:51:33 -0800

Fix style in runfstests.sh
1. Indentation was off (was using tabs and spaces ; standardize on tabs like we should).
2. Branch statements like case ... esac or if ... then ... fi were being inlined with statements on the following line, which was making things harder to read.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/io/aio/aio02/runfstests.sh

Commit: 4a03d3d7f55d2b0fdbb47d036bfd2e33b7e61a3d
Date:   Sun, 7 Mar 2010 13:38:20 -0800

Hi All,
I have observed that, while executing the io tests in LTP, the 'aio02'
test failed to get executed:

--------------------------------------------------------------------------------------------------
$./runtests -f  io

Running tests.......
<<<test_start>>>
tag=aio01 stime=1267980185
cmdline="aio01"
contacts=""
analysis=exit
<<<test_output>>>
aio01       1  TPASS  :  Test 1: 10 writes in   0.000102 sec
aio01       2  TPASS  :  Test 2: 10 reads in   0.000056 sec
aio01       3  TPASS  :  Test 3: 10 prep,writes in   0.000070 sec
aio01       4  TPASS  :  Test 4: 10 prep,reads in   0.000051 sec
aio01       5  TPASS  :  Test 5: 10 reads and writes in   0.000108 sec
aio01       6  TPASS  :  Test 6: 10 read,write,verify in 0.000108 sec
<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=0 corefile=no
cutime=0 cstime=0
<<<test_end>>>
<<<test_start>>>
tag=aio02 stime=1267980185
cmdline="runfstests.sh aio_tio"
contacts=""
analysis=exit
<<<test_output>>>
Starting the Tests
incrementing stop
Test run starting at  Sun Mar 7 22:13:05 IST 2010
Missing the test program. You must pass a test path/name for testing
usage: runfstests.sh [ -a test name ]

example: runfstests.sh -a cases/aio_tio

<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=0 corefile=no
cutime=0 cstime=0
<<<test_end>>>
INFO: ltp-pan reported all tests PASS
LTP Version: LTP-20100228

-------------------------------------------------------------------------------------------------------

The "aio02_io_runtest.patch" makes the necessary changes in  "io" file
in "runtest" directory.

Signed-off-by: Maxin B. John <maxin.john@gmail.com>
Acked-by: Garrett Cooper <gcooper@orangebox.local>

Changed Files:

runtest/io

Commit: 31d0645afe4dbe63d16e9c8697bd03baea9dfd63
Date:   Sun, 7 Mar 2010 13:35:57 -0800

Hi All,
I have observed that, while executing the io tests in LTP, the 'aio02'
test failed to get executed:

--------------------------------------------------------------------------------------------------
$./runtests -f  io

Running tests.......
<<<test_start>>>
tag=aio01 stime=1267980185
cmdline="aio01"
contacts=""
analysis=exit
<<<test_output>>>
aio01       1  TPASS  :  Test 1: 10 writes in   0.000102 sec
aio01       2  TPASS  :  Test 2: 10 reads in   0.000056 sec
aio01       3  TPASS  :  Test 3: 10 prep,writes in   0.000070 sec
aio01       4  TPASS  :  Test 4: 10 prep,reads in   0.000051 sec
aio01       5  TPASS  :  Test 5: 10 reads and writes in   0.000108 sec
aio01       6  TPASS  :  Test 6: 10 read,write,verify in 0.000108 sec
<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=0 corefile=no
cutime=0 cstime=0
<<<test_end>>>
<<<test_start>>>
tag=aio02 stime=1267980185
cmdline="runfstests.sh aio_tio"
contacts=""
analysis=exit
<<<test_output>>>
Starting the Tests
incrementing stop
Test run starting at  Sun Mar 7 22:13:05 IST 2010
Missing the test program. You must pass a test path/name for testing
usage: runfstests.sh [ -a test name ]

example: runfstests.sh -a cases/aio_tio

<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=0 corefile=no
cutime=0 cstime=0
<<<test_end>>>
INFO: ltp-pan reported all tests PASS
LTP Version: LTP-20100228

-------------------------------------------------------------------------------------------------------

The "aio02_io_runtest.patch" makes the necessary changes in  "io" file
in "runtest" directory.

Signed-off-by: Maxin B. John <maxin.john@gmail.com>
Acked-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/io/aio/aio02/runfstests.sh

Commit: 5f174e6c7e31f7f45717d5fc873c6ed2638753d7
Date:   Sat, 6 Mar 2010 20:03:43 -0800

Well obviously that test didn't trigger anything with the precommit hook -_-...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

foo

Commit: 44c0b0cbc597496bd2b5373a7361d37f3612a377
Date:   Sat, 6 Mar 2010 19:45:59 -0800

Testing..

Changed Files:

foo

Commit: f95875a852db24d449b10627dc5006a95c8a4db9
Date:   Fri, 5 Mar 2010 02:44:39 -0800

Remove ./ suffix in usage message and examples.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

runltp
runltplite.sh

Commit: b3fb75df0076a12276071ff06421ee41e415d01d
Date:   Fri, 5 Mar 2010 02:41:49 -0800

Clean up some logic.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/include/hotplug.fns
testcases/kernel/hotplug/cpu_hotplug/runtests.sh

Commit: baf5c4c8412373f527431b55590d88066fd5afce
Date:   Fri, 5 Mar 2010 02:38:56 -0800

... Finish off cleanup:
1. POSIXify.
2. Whitespace cleanup.
3. Convert to tst_resm(1) standard variables and reporting.
4. Prune away some complicated logic.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug01.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug02.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug03.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug04.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.sar.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.top.sh
testcases/kernel/hotplug/cpu_hotplug/functional/hotplug07.sh

Commit: 08941a3fa41efe7a832ac356833c2c389ab71050
Date:   Fri, 5 Mar 2010 01:37:03 -0800

1. POSIXify. 2. Cleanup space.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug04.sh

Commit: 7edded454a877368665cd1d450161a4442403340
Date:   Fri, 5 Mar 2010 01:33:41 -0800

1. POSIXify. 2. Clean up whitespace. 3. Make more relative-path agnostic.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug03.sh

Commit: b7306d6267231eca3b751167f9ea3651cbdd134d
Date:   Fri, 5 Mar 2010 00:58:28 -0800

1. POSIXify. 2. Convert over to tst_resm(1), like hotplug01.sh
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug02.sh

Commit: 37ef4019e587c57ea70b0eb3e4c55eb5aa863455
Date:   Fri, 5 Mar 2010 00:51:18 -0800

1. POSIXify 2. Clean up test. 3. Make more path agnostic.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug01.sh

Commit: a2d684889450c2cb5cea6ea6adae0a5ce3efad9d
Date:   Fri, 5 Mar 2010 00:09:35 -0800

Update TODO with some items that need to be rewritten.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: 039e4bbd522168a5145d236faa4e13f402037390
Date:   Thu, 4 Mar 2010 19:01:36 +0530

Merge branches 'master' and 'next' into next

Changed Files:

Commit: c0e37ca6731cada152573522d48d08513029e44a
Date:   Thu, 4 Mar 2010 00:22:27 -0800

1. Add default kernel source dir as /usr/src/linux. 2. Clean up indentation.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/tools/do_kcompile_loop

Commit: a3bd68ba8e3e22f906d2bdb10c7e3f1b1c99d743
Date:   Thu, 4 Mar 2010 00:20:46 -0800

Fix indentation.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/tools/do_spin_loop

Commit: ca0d5a5723863c8197fffa42aab5598cd22e4259
Date:   Thu, 4 Mar 2010 00:20:13 -0800

POSIXify.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/tools/do_disk_write_loop

Commit: 48ae82cefc1e4b19834b5d52ad42937303a18f92
Date:   Thu, 4 Mar 2010 00:01:27 -0800

All for parameterized $TMP.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/include/testsuite.fns

Commit: b1b5563970f07e8130130c607855a4f96b41f701
Date:   Wed, 3 Mar 2010 23:54:22 -0800

Remove bashisms. Clean up.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/functional/hotplug04.sh

Commit: 099b86b8c8cf67026eb0d07ef55805ec1cc4623f
Date:   Wed, 3 Mar 2010 22:59:00 -0800

Install in testcases/bin/cpu_hotplug to avoid collision with installed filenames.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/cpu_hotplug/Makefile

Commit: 354afd2f792ab051e60febf9314d93aca0d67b71
Date:   Wed, 3 Mar 2010 22:57:24 -0800

Make sure this can run wherever -- update the install path in the runtest file for cpu_hotplug...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

runtest/cpuhotplug

Commit: 84e0adcdb4f5be00a51d77fadf210355416f8544
Date:   Wed, 3 Mar 2010 22:53:26 -0800

Make alphabetical ordering more apparent by adding a comment.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/Makefile

Commit: fed24575bdd713d89125830c97c2a865b2e5e92f
Date:   Wed, 3 Mar 2010 22:52:12 -0800

Fix order by properly alphabetizing it again.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/Makefile

Commit: 87dadac27add4059d351c131a9eb138e9c5ca9da
Date:   Wed, 3 Mar 2010 22:48:13 -0800

Remove unnecessary variable set; all MAKE_TARGETS get added to INSTALL_TARGETS.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/hotplug/memory_hotplug/Makefile

Commit: 909edbcfc9074fd44a1f3dcb980362c0b63df5ac
Date:   Thu, 4 Mar 2010 11:52:21 +0530

(cpu_hotplugin_makefile.patch) to execute cpuhotplugin test. I have observed that the 'hotplug' directory is not included in "testcases/kernel/Makefile". I have also created a Makefile in 'hotplug/cpu_hotplug' directory.
After applying this patch, I have followed the usual ./configure;
make; sudo make install steps and executed
the cpuhotplug test and observed the below given output . It seems
like the test execution is "not so good" in
my machine. Your mileage may vary.

Signed-off-by: Maxin B. John <maxin.john@gmail.com>
Reviewed-By: Rishikesh K Rajak<risrajak@linux.vnet.ibm.com>

 Please enter the commit message for your changes. Lines starting

Changed Files:

testcases/kernel/Makefile
testcases/kernel/hotplug/cpu_hotplug/Makefile
testcases/kernel/hotplug/memory_hotplug/Makefile

Commit: d822fce8b5b1c353cc879070774875984cd44b2c
Date:   Wed, 3 Mar 2010 22:29:54 +0530

Merge branch 'next' of ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: ea7f641bc4389d7b93c329461533fe69e5263e45
Date:   Wed, 3 Mar 2010 05:53:02 -0800

Update ChangeLog.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

ChangeLog

Commit: 3d6a7101e8e8fad797cb5dd79c77f7ac233b90e6
Date:   Wed, 3 Mar 2010 05:52:31 -0800

Remove overly complicated git log ChangeLog script.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

scripts/gitlog2changelog.py

Commit: 4a930519a3c63d83bf5c24828bddfacde78279c7
Date:   Wed, 3 Mar 2010 05:51:33 -0800

Add a simpler git ChangeLog script.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

scripts/git2changelog.sh

Commit: 29f9058ae39c9f51a4c6c8d5008947394382929c
Date:   Wed, 3 Mar 2010 04:49:50 -0800

Grab ChangeLog script from http://github.com/cryos/avogadro/raw/master/scripts/gitlog2changelog.py .
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

scripts/gitlog2changelog.py

Commit: 4b3a324a31b57ce86b2354e62a3e847126a3d6cd
Date:   Wed, 3 Mar 2010 04:42:42 -0800

Note caveat about cpu_hotplug test needing to be run from the source tree directory.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: b60acfe85c751a8996df7e9648e031a16b27fe15
Date:   Wed, 3 Mar 2010 04:26:16 -0800

Inspite of memcg kernel support being available, memcg_[functional|regression |stress] test script fails to execute with message
"Either Kernel does not support for memory resource controller or feature not enabled"
"Skipping all memcgroup testcases...."

Fix the scripts to use proper if []; then .. fi statements.

Signed-off-by : Sachin Sant <sachinp@in.ibm.com>

Changed Files:

testcases/kernel/controllers/memcg/functional/memcg_function_test.sh
testcases/kernel/controllers/memcg/regression/memcg_regression_test.sh
testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh

Commit: ca619b228f727108c38641f56b49833abc98508d
Date:   Wed, 3 Mar 2010 15:05:23 +0530

Revertin the commit d40fd32af0d0ad7713b0cf6cd23daf1ee639d479 for now.
Will apply freshly once Naresh will provide new patch.

Thanks
Rishi

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sem_post/8-1.c

Commit: d40fd32af0d0ad7713b0cf6cd23daf1ee639d479
Date:   Wed, 3 Mar 2010 12:31:25 +0530

I have found abnormal behavior of sem_post/8-1.c test case under posix. This test case passes in some times and failed in many times :-(
After my investigation found synchronization is missing between the
child processes.
Made a patch to fix this issue.

Patch includes
1.      Reverting back changes made by mreed on Sep 25 2006. Making sure
child has been waiting for the lock (below Refs).
2.      using sleep in while loop is not a good idea, so sleep is removed
from while loop
3.      For the synchronization I have added sleep before releasing the lock.

After applying this patch I have tested this test case 1000 times continuously.
All the times test case reported as Test Pass :-)

Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >

Changed Files:

testcases/open_posix_testsuite/conformance/interfaces/sem_post/8-1.c

Commit: 08c16de673d332bb8ab2827818dbab1468a2eefe
Date:   Wed, 3 Mar 2010 10:17:22 +0530

I have observed that the 'createfile.c' in testcases/network/tcp_cmds/echo directory is not getting compiled and installed during the LTP build. The "echo_createfile.patch" makes the necessary changes in the Makefile.
Signed-off-by: Maxin B. John <maxin.john@gmail.com>

Changed Files:

testcases/network/tcp_cmds/echo/Makefile

Commit: 88a1dde39cc27bd9db20297c640376ef413a8aad
Date:   Wed, 3 Mar 2010 09:55:54 +0530

Merge branches 'master' and 'next' into next

Changed Files:

Commit: c65443529ee1ab84f98777cdd4827066f4a69c96
Date:   Tue, 2 Mar 2010 21:46:29 +0530

Inspite of memcg kernel support being available, memcg_[functional|regression |stress] test script fails to execute with message
"Either Kernel does not support for memory resource controller or feature not enabled"
"Skipping all memcgroup testcases...."

Fix the scripts to use proper if []; then .. fi statements.

Signed-off-by : Sachin Sant <sachinp@in.ibm.com>
Acked-By & Tested-By: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Thanks
Rishi

Changed Files:

testcases/kernel/controllers/memcg/functional/memcg_function_test.sh
testcases/kernel/controllers/memcg/regression/memcg_regression_test.sh
testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh

Commit: c288167e111d34d5146dbbe5ebb19c84153ee67b
Date:   Mon, 1 Mar 2010 20:32:24 +0530

Fixed the typo in changelog

Changed Files:

ChangeLog

Commit: 45bfc17b467610d6fcda439c1c48916ed3370ddc
Date:   Mon, 1 Mar 2010 20:08:58 +0530

Merge ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: 4847120ca53436585fc86aba403628ae0fde8c92
Date:   Mon, 1 Mar 2010 20:04:44 +0530

Changes since 6thFeb to 28Feb 2010.

Changed Files:

ChangeLog

Commit: c0b8157365beb18a627fe197be6ab111e8281e86
Date:   Mon, 1 Mar 2010 14:21:09 +0530

New testcase added by Naufal.
These are the testcases I plan to implement (taken from
http://workouts.foss.in/2009/index.php/Hacking_Linux_Kernel_Through_testing)

1. Validate the upper limit imposed by the topmost hierarchy.

2. Test the testcase no 1 for subgroups far below in hierarchy.

3. A group has n siblings. They start consuming memory and the total
increases to more than parent's limit. Check if the group with max memory
consumption gets it's task killed.

4. Write a test which uses lots of memory, reaches swap limits and ensure it
gets killed.

5. A task is running in a group which has a limit N on memory.limit_in_bytes
but no limit on memory.memsw.limit_in_bytes. The system has swap memory in
use and the task's memory consumption is >> N. Therefore the task should be
using a big amount of swap memory(say M) > N. Try to set the
memory.memsw.limit_in_bytes to a low value say N. It should fail to change
the limits.

6. In test no 5 instead of changing the mem+swap limits turn the swap off.
Since the memory usage of the task is more than the current limits the task
should be killed.

The first testcase has been attached. Reimplemented using named pipes.

Naufal

Signed-off-by Mohamed Naufal Basheer <naufal11@gmail.com>

Changed Files:

runtest/controllers
testcases/kernel/controllers/memcg/README
testcases/kernel/controllers/memcg/control/Makefile
testcases/kernel/controllers/memcg/control/mem_process.c
testcases/kernel/controllers/memcg/control/memcg_control_test.sh

Commit: e180e61b301cf49c9c7357706ecbcd57c99991a4
Date:   Mon, 1 Mar 2010 11:34:29 +0530

Reverting the commit id: 3bc8ecdb69b29436e2987173ffdd7244d8897942

Changed Files:

runtest/controllers
testcases/kernel/controllers/memcg/README

Commit: 4847120ca53436585fc86aba403628ae0fde8c92
Date:   Mon, 1 Mar 2010 20:04:44 +0530

Changes since 6thFeb to 28Feb 2010.

Changed Files:

ChangeLog
LTP-20100228

Commit: ede8524bff2068c78f1a1f8b8fe87b263a45a31a
Date:   Sat, 27 Feb 2010 12:12:19 -0800

Do some minor spring cleaning on the script to improve whitespace, quote a few strings passed to echo, etc.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

runalltests.sh

Commit: 0094e1ab8460697a9efcc440d140d6087e0eba68
Date:   Fri, 26 Feb 2010 20:27:42 -0800

Do a minor bit of cleanup with the README.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/commands/mail/00_Descriptions.txt

Commit: 90e3e1e6ebdae376650bff696a889118cb6537c6
Date:   Fri, 26 Feb 2010 20:26:09 -0800

Remove space.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/rt_sigprocmask/Makefile

Commit: 181f8dc85aa7a92438600f2cfe1d4104c72a1374
Date:   Fri, 26 Feb 2010 20:23:40 -0800

Comment on function, and return an appropriate integer value. Update function names as well.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

include/ltp_signal.h

Commit: 85a1755e1389c41d2933e83e96a9ced57dc73472
Date:   Fri, 26 Feb 2010 20:10:07 -0800

Finish up the remainder of the needed commits to fix the segfault issues with the rt_sig* syscalls.
Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>

Patch up once again to work with ltp_signal.h. Also clean up test.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

Commit: 141cf77113ae4a46bc07cfcfa8451a101b9e943b
Date:   Fri, 26 Feb 2010 20:08:59 -0800

Finish up the remainder of the needed commits to fix the segfault issues with the rt_sig* syscalls.
Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>

Patch up once again to work with ltp_signal.h. Also clean up test.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

foo

Commit: 135924f74656fba37a43d43e454cbc87b6e08e03
Date:   Fri, 26 Feb 2010 19:52:32 -0800

Fix rt_sigsuspend01, as per the patches provided s.t. it will pass on x86_64.
Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>

Clean up test and adjust to match ltp_signal.h.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/rt_sigsuspend/rt_sigsuspend01.c

Commit: 64fd9678ba7e1bf268c11d835149225238e79557
Date:   Fri, 26 Feb 2010 05:12:13 -0800

Fudge code provided by Liu Bo a bit to make it fit ltp_signal.h; most of the code was untouched.
Tested and passed on IA32 and IA64.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Commit fixed copy of rt_sigaction01 as per Liubo's provided changes.

Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>

Changed Files:

testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c

Commit: cdb5d0fce58d72633fda52cfaebc7196743b0988
Date:   Fri, 26 Feb 2010 04:55:11 -0800

Commit version with changes provided by Liubo for the rt_sig* fixup diff to avoid creating a whole new file.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

include/ltp_signal.h

Commit: a15d642cf6dd9667aa45b02f445a9f93781c9a6a
Date:   Thu, 25 Feb 2010 03:52:44 -0800

Add fud for CLOCK_MONOTONIC_RAW, even though (FWIW) it doesn't work on my system, which is bizarre, but I'm spying a delightful inconsistency with this constant in the glibc headers and how the value is exported.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

m4/ltp-time.m4
testcases/kernel/timers/include/common_timers.h

Commit: 36e9e44491335006055b95439a2a0c8431b5ae6b
Date:   Wed, 24 Feb 2010 20:17:13 -0800

Fix typo.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/commands/mail/mail_tests.sh

Commit: be744dab2bad95fa15ebe1b2fa17eca9252d97c3
Date:   Wed, 24 Feb 2010 20:15:46 -0800

Clean up the test.. It was a royal mess before.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/commands/mail/mail_tests.sh

Commit: 917b2f96e8effe6c97f23b78f23e84588d9ec9a4
Date:   Wed, 24 Feb 2010 19:19:55 -0800

Include definitions for CLOCK_MONOTONIC_COARSE and CLOCK_REALTIME_COARSE -- new functionality is 2.6.33, as per this commit:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=da15cfdae03351c689736f8d142618592e3cebc3

as reported by Shi Weihua <shiwh@cn.fujitsu.com>.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/timers/include/common_timers.h

Commit: 06c96f38830dbb4d5cf8bb81ba9b44232b20b5eb
Date:   Wed, 24 Feb 2010 19:16:01 -0800

Add check for CLOCK_REALTIME_COARSE and CLOCK_MONOTONIC_COARSE -- new modifiers in 2.6.33-something...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

configure.ac
m4/ltp-time.m4

Commit: e9cca934fab0aeaf497512ed7cde60b6650d750b
Date:   Wed, 24 Feb 2010 18:42:58 -0800

We actually need to call cleanup regardless, so let's readd that to the bottom of main.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/stime/stime01.c

Commit: ee8d486ac67d9bf6877dd36a7b63c6c633ddf003
Date:   Wed, 24 Feb 2010 18:35:08 -0800

Clean up test to use gettimeofday and settimeofday syscalls for restoration and verification.
Also, remove tst_sig because for whatever reason cleanup was being
called regardless of whether or not the test passed or failed.

Increase the skew time by 20 seconds.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/stime/stime01.c

Commit: a9b4a7cee1e7f57f5dbf5622bbd94dd2f262636f
Date:   Wed, 24 Feb 2010 17:08:07 -0800

swap* comment was incorrect. I meant quotactl01.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: a83e7dce7d8e4068752979b2fc196fa4be2e4443
Date:   Wed, 24 Feb 2010 17:05:14 -0800

Added clean_swap() to cleanup routine.  This makes sure all leftover swap files are removed.
Signed-off-By:  Murlin Ray Wenzel <mwenzel@novell.com>

Clean up testcase by making it more buffer overflow resistant using
appropriate limits, buffer setup and cleanup routines, etc.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/swapon/swapon03.c

Commit: 23b6cc832066579cf6b3268c6eeaa2e8c829ae31
Date:   Wed, 24 Feb 2010 13:48:27 -0800

Update TODO a little bit noting the issues with libnuma and the swapon/swapoff testcases.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: c9639c859fdd46337bc1413f5a785b7b5bdf8014
Date:   Wed, 24 Feb 2010 13:36:31 -0800

Implement simple filter-out mechanism for libraries.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

include/mk/lib.mk
lib/Makefile

Commit: aea809e6e7411e8e0f20d00e84ec4ac39cf743a4
Date:   Wed, 24 Feb 2010 13:25:16 -0800

Merge branch 'master' of ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: c41bb21aa439445d422b9e6b4dbf5b9a4c283335
Date:   Wed, 24 Feb 2010 13:24:15 -0800

Clean up some typos. Update LTP maintainer name/email address. Replace runalltests.sh with runltp in a few places. Don't use quotation marks in here-documents in shell script.
Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>

Changed Files:

INSTALL
doc/ltp-run-files.txt

Commit: 4b20806b387e4c4c3b491b8093c4032f9ab20860
Date:   Wed, 24 Feb 2010 13:18:57 -0800

Add Rishi's full name.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

README

Commit: 541938f4d584c2d67012ee5424b1f3afddae97e9
Date:   Wed, 24 Feb 2010 10:45:29 +0530

Oops i did not know the API has got changed.
Signed-off By: Rishikesh K Rajak<risrajak@in.ibm.com>

Changed Files:

testcases/kernel/containers/mqns/check_mqns_enabled.c

Commit: df4e7fb7d5ab2c505b6104bf88594b64209a8369
Date:   Wed, 24 Feb 2010 10:31:12 +0530

For running container testcase smoothly on older distro, these changes are required for now, looking for better solution once i go through all the latest changes.
Signed-off By: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/container_test.sh
testcases/kernel/containers/mqns/check_mqns_enabled.c
testcases/kernel/containers/pidns/check_pidns_enabled.c

Commit: 2a5fdcaf2ddc92fa87f3d0ebf6bd653305e96134
Date:   Tue, 23 Feb 2010 11:41:51 -0800

Merge branch 'master' of ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: 8e1a94708902d1c3d8212022c72c3dabb2be3598
Date:   Tue, 23 Feb 2010 11:34:54 -0800

MPOL_* constants were missing as noted by Rishi and Iranna.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/mbind/mbind01.c

Commit: b212df49678cd133677614554d5cece897cfbc63
Date:   Tue, 23 Feb 2010 13:49:31 +0530

Revert "check_pidns_enabled doesn't exist anymore. Just run the test as-is... Noticed by Rishi."
This reverts commit 1590cf03a9206efe4eaa1fb37125f7b2128c4fb0.

Signed-off-by: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>

Changed Files:

testcases/kernel/containers/container_test.sh

Commit: d025e1f5d653e5b148bd7255dd4e5d29f775ae6c
Date:   Mon, 22 Feb 2010 23:18:27 -0800

Add a dumb mechanism for creating release tarballs in a clean manner.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

Makefile.release

Commit: e332c01cef2cf5583ee5f3b50940e943ebbff3c4
Date:   Mon, 22 Feb 2010 22:59:42 -0800

aclocal.m4 shouldn't be removed in ac-clean.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

include/mk/automake.mk

Commit: 622eb54f68e8e854cb80fc25d624cb417cfcc163
Date:   Mon, 22 Feb 2010 22:17:21 -0800

Reviving check_pidns_enabled test.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/pidns/check_pidns_enabled.c

Commit: 67974b71b3b81d637fa4c3cfa2ebf10de1eefe14
Date:   Mon, 22 Feb 2010 15:40:51 -0800

Commit changes for out-of-build-tree and install-out-of-build-tree scripts.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testscripts/build/test_install_out_of_build_tree.sh
testscripts/build/test_out_of_build_tree.sh

Commit: 525c4d23139cc7bc45a6e9c8c0909f013e7d9c5f
Date:   Mon, 22 Feb 2010 10:11:46 -0800

make 3.80 has been legit since 201001, so let's mark it legit in the INSTALL instructions.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

INSTALL

Commit: a6ff3058e577983a1052b333adfb3038a3c6f53e
Date:   Sun, 21 Feb 2010 19:23:10 -0800

Update the install-in-build-tree script.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testscripts/build/test_install_in_build_tree.sh

Commit: c2c8d7f6d8d77f9755a919bf8fdd858ba4c9fbdb
Date:   Sun, 21 Feb 2010 18:12:18 -0800

Detecting potential fork errors in the test.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/pidns/pidns17.c

Commit: 0ebb1487d747f128c9f63c5ae0121d387ada87bc
Date:   Sun, 21 Feb 2010 08:14:18 -0800

Update README as per recent changes to build / test scripts.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testscripts/build/README

Commit: 0a383ab2d22d7ba20128429592ec31be055a5aa9
Date:   Sun, 21 Feb 2010 08:11:52 -0800

1. Fix a bug in the git pull method (wasn't setting srcdir). 2. Set safe_rm when ltp is pulled so we can opt out of using srcdir with install-in-build-tree s.t. we can _truly_ test install-in-build-tree.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testscripts/build/build_test_function.sh

Commit: e520c3189f54b690d057ccdae29167d33771584c
Date:   Sun, 21 Feb 2010 08:10:03 -0800

Switch all of these Makefiles over to MAKE_DEPS instead of ad hoc trunk-all // incorrectly specified all: | type dependencies.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/Makefile
testcases/kernel/controllers/Makefile
testcases/kernel/controllers/Makefile.inc
testcases/kernel/controllers/cpuset/Makefile
testcases/kernel/controllers/cpuset/Makefile.inc
testcases/kernel/mem/Makefile
testcases/kernel/mem/Makefile.inc
testcases/kernel/mem/hugetlb/Makefile
testcases/kernel/mem/hugetlb/Makefile.inc
testcases/kernel/syscalls/ipc/Makefile
testcases/kernel/syscalls/ipc/Makefile.inc
testcases/network/tcp_cmds/Makefile
testcases/network/tcp_cmds/Makefile.inc

Commit: 225c2e31425d5f4b8f67bc69c309fe70dfe8fcf1
Date:   Sat, 20 Feb 2010 22:51:42 -0800

Add the library to MAKE_DEPS so it gets built prior to the other goals in this directory.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/Makefile.inc

Commit: 02f8fe875ea4f13caf3452b9a60f4b4db49e45df
Date:   Fri, 19 Feb 2010 09:42:56 -0800

Hi,
Scripts under LTPROOT/testscripts/ need to access ltp-pan from some
other loaction now. Moreover there are scripts to run MATH and SYSCALL
tests which are not required as they can be directly run through
./runltp -f <math/runltp>
This patch fixes them. Probably the scripts need to be looked on
more to fix such anomalies.

Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>

Changed Files:

testscripts/diskio.sh
testscripts/ltp-aiodio.sh
testscripts/ltp-scsi_debug.sh
testscripts/ltpfslvm.sh
testscripts/ltpfsnolvm.sh
testscripts/ltpstress.sh
testscripts/networkstress.sh
testscripts/networktests.sh
testscripts/runEALtests.sh
testscripts/runpan.sh
testscripts/tpm_tools.sh

Commit: 031c65bd3f6172d5cc80df0b577c025a139b3577
Date:   Fri, 19 Feb 2010 09:38:36 -0800

Hi,
I have tried to execute the 'io_floppy' test in  LTP Version:  LTP-20100131.1

maxin@maxin-laptop:/opt/ltp$ ./runltp -f io_floppy

This test failed since the 'stress_floppy' script was not installed properly.
Please find the below given log:
-----------------------------------------------------------
....
Running tests.......
<<<test_start>>>
tag=stress_floppy stime=1266516562
cmdline="export TCdat=$LTPROOT/testcases/kernel/io/stress_floppy; stress_floppy"
contacts=""
analysis=exit
<<<test_output>>>
sh: stress_floppy: not found
incrementing stop
<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=127 corefile=no
cutime=0 cstime=0
<<<test_end>>>
INFO: ltp-pan reported some tests FAIL
LTP Version: LTP-20100131.1

      ###############################################################"

           Done executing testcases."
           LTP Version:  LTP-20100131.1
      ###############################################################"
-----------------------------------------------------------

Attached patch(stress_floppy_Makefile.patch) fixes Makefile and the
'stress_floppy' script gets installed properly.

-----------------------------------------------------------
Running tests.......
<<<test_start>>>
tag=stress_floppy stime=1266518427
cmdline="export TCdat=$LTPROOT/testcases/kernel/io/stress_floppy; stress_floppy"
contacts=""
analysis=exit
<<<test_output>>>
incrementing stop
Testing format...
/dev/fd0: No such file or directory
Format failed!
<<<execution_status>>>
initiation_status="ok"
duration=0 termination_type=exited termination_id=1 corefile=no
cutime=0 cstime=0
<<<test_end>>>
INFO: ltp-pan reported some tests FAIL
LTP Version: LTP-20100131.1
-----------------------------------------------------------

Well, after applying this patch, the 'io_floppy' test fails successfully :)
(Expected failure as I don't have a floppy drive)

Signed-off-by: Maxin B. John <maxin.john@gmail.com>

Changed Files:

testcases/kernel/io/stress_floppy/Makefile

Commit: ad99f1087d63aae7563534c0b6f66461671050cb
Date:   Fri, 19 Feb 2010 01:24:05 -0800

Work on the previous buffer overflow problem a bit more; ftest0[38] still fail from time to time, oddly enough even though I can't exactly pinpoint the root cause.
Clean some of the format strings up though while I'm here...

Signed-off-by: root <root@orangebox.(none)>

Changed Files:

testcases/kernel/fs/ftest/ftest08.c
testcases/kernel/fs/ftest/libftest.c

Commit: d639eef7e81a3c8768b13b471647deee41c8ff48
Date:   Thu, 18 Feb 2010 23:47:44 -0800

Fix a typo; improve some sentence wording.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

README

Commit: 2aa40f7e10518977881b933cc93b8f50847cf3cf
Date:   Thu, 18 Feb 2010 23:43:02 -0800

Avoid sudo blocking for tty input indefinitely; this issue will need to be `properly' fixed by not having a password for the sudo'er's acct.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/security/integrity/ima/tests/ima_measurements.sh
testcases/kernel/syscalls/utimensat/utimensat_tests.sh

Commit: e03cee01ad68f7b8449a6eb091f7f739c3013e21
Date:   Thu, 18 Feb 2010 22:23:31 -0800

Fix a cosmetic bug where Version wasn't being generated for install-in-build-tree scenarios.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

Makefile

Commit: 3fceccbde835affc869f91cbc60c7a91fa0add0b
Date:   Thu, 18 Feb 2010 21:43:51 -0800

Merge the remote changes, again?? git's really complicated...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/mq_notify/mq_notify01.c

Commit: 1ca6b265f9af0ffdbeee03411c38489899723fc1
Date:   Thu, 18 Feb 2010 21:43:07 -0800

Merge the remote changes (!)
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/mq_notify/mq_notify01.c

Commit: 4c2f39a8aaf619086a73efc1819be4dd5a0c2822
Date:   Thu, 18 Feb 2010 21:41:48 -0800

Merge branch 'master' of ssh://ltp.git.sourceforge.net/gitroot/ltp/ltp-dev

Changed Files:

Commit: 103b26251758c4582af5ebf6a9b8774832be643a
Date:   Thu, 18 Feb 2010 21:27:53 -0800

Clean up the TODO.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

TODO

Commit: 09cbd9c271a3a74ccf7bd3401f6bb528c3c7d119
Date:   Thu, 18 Feb 2010 21:24:03 -0800

1. Correct compile time warnings by defining the timeout to 0 sec, 0 nsec, instead of NULL. 2. Make sure that the syscall errno applies to the entire test, not just the portion that Jiri noted the error with.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/mq_notify/mq_notify01.c

Commit: a2a0763133d7d8d2464b2018b6bf287a03847592
Date:   Thu, 18 Feb 2010 21:11:40 -0800

Update the build_functions script to add clean sanity support, git pull support, and also do some minor refactoring in terms of how some variables are set as well as when they're set.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testscripts/build/build_test_function.sh

Commit: 53786432b7db7d066563c42e0d87df755dbbf321
Date:   Wed, 17 Feb 2010 09:32:01 -0800

acl_test01 today... 1. Should use $TMP. 2. Should use tst_resm today. 3. Should exit 0 on setup failure. 4. Doesn't cleanup in the event of a test failure. 5. Has a hardcoded loopback device instead of looking for the next available one via losetup -f. 6. Other stylistic nits:     a. [ $? != 0 ] -> [ $? -ne 0 ]     b. Incorrect whitespace conventions / indentation issues.     c. Etc...
This test will need to be enhanced [still] to support non-ext2 //
-ext3 filesystems (my kernel only supports ext4 fs's for instance...).

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/fs/acls/acl_test01

Commit: 77ed5b4eb6a65b90b38defd8aa981e8e9f04b5d9
Date:   Wed, 17 Feb 2010 18:57:58 +0530

Merge branch 'test'

Changed Files:

Commit: 98f38120c682e64818e0a13abe62ffab94910e8d
Date:   Wed, 17 Feb 2010 18:57:23 +0530

 I've seen failures reporting "return value=0, errno=EACCESS" in the mq_notify01 test. This is because the syscall actually succeeded (as expected by the test), but, as it is implemented by a library function, some of the (more) syscalls it invoked failed. The POSIX specification of errno says it should only be read when the call in question failed - therefore, this patch hardcodes errno 0 when return value is 0.
 Also, this patch removes a useless TEST macro usage in a place the
TEST_RETURN nor TEST_ERRNO variables are never checked.

Regards
    Jiri Palecek

Signed-off-by: Jiri Palecek <jpalecek@web.de>

Changed Files:

testcases/kernel/syscalls/mq_notify/mq_notify01.c

Commit: 77312d8f35ad3c516636bce1401c78ac09e08a5f
Date:   Wed, 17 Feb 2010 18:45:56 +0530

In the previous mailx version, the command "echo "d" | mail -u root" will output like the following. ----------------------------- Mail version 8.1 6/6/93.  Type ? for help. "/var/mail/root": 1 message 1 new >N  1 MAILER-DAEMON@localh  Mon Jan 25 09:11  63/2367  "Returned mail: see tr" -----------------------------
Buy in Heirloom Mail, the command will output.
-----------------------------
Heirloom Mail version 12.4 7/29/08.  Type ? for help.
"/var/mail/root": 1 message 1 new
>N  1 Mail Delivery Subsys  Mon Jan 25 14:16  67/2195  "Returned mail: see tr"
-----------------------------

"MAILER-DAEMON@localh" is been changed to "Mail Delivery Subsys".
We should make mail_tests.sh to supporting Heirloom Mail.

Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>

Changed Files:

testcases/commands/mail/mail_tests.sh

Commit: d4eb64c5715c44479ce90abd9292019dfe8377e3
Date:   Mon, 15 Feb 2010 19:30:34 +0530

Deleted the scratch dir for testing

Changed Files:

scratch/cache_leak
scratch/googlemmtest.txt
scratch/hackbench.c
scratch/lat-sched.c
scratch/runltp.orig
scratch/runltp.robbie

Commit: 6feffd8c46093216f795597c7d12739504583f64
Date:   Mon, 15 Feb 2010 19:20:14 +0530

Testing with different branch and merging with main

Changed Files:

README

Commit: e0984c4239b07eb6d83b2445d3d77b53576a5889
Date:   Mon, 15 Feb 2010 19:17:35 +0530

Testing with different branch

Changed Files:

README

Commit: dd04033034f9e550029178f9d85c95f411ef1009
Date:   Sun, 14 Feb 2010 23:16:22 -0800

Correct at least one of these lousy diagnostic messages for not finding nobody in /etc/passwd...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/syscalls/mknod/mknod02.c

Commit: 8686ad72fbe76a7de8fe8e93ef68a71fff8a049d
Date:   Sun, 14 Feb 2010 23:12:10 -0800

Correctly consolidate tst_exit() calls in cleanup() as noted by Mitani-san.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/pidns/pidns17.c

Commit: 4086783fafe6afd70a6d647ae8bf5ded0548be79
Date:   Mon, 15 Feb 2010 12:08:23 +0530

Added one TODO for conversion of CVS to GIT

Changed Files:

TODO

Commit: f4f57997f7809f1c85a1d124ba277e7f3a510d08
Date:   Sun, 14 Feb 2010 22:41:20 +0530

Testing for push to ltp.sf.net

Changed Files:

README

Commit: 186613249384740cfd5c8346c1b6659613c6a2a6
Date:   Fri, 12 Feb 2010 09:15:37 +0000

*** empty log message ***

Changed Files:

foo

Commit: dfac29ccbb03db3e4ee3fa5674cbbbf0104b08aa
Date:   Fri, 12 Feb 2010 09:02:50 +0000

Remove test file.

Changed Files:

foo

Commit: 2279bf46ad12b3e75c512e9f146bc60a49220444
Date:   Fri, 12 Feb 2010 09:02:34 +0000

Test.

Changed Files:

foo

Commit: 98379aa37cbc3dd8ac41ee6628b5033743f47165
Date:   Wed, 10 Feb 2010 23:24:45 +0000

1. Simplify smoke test further by only checking to see whether or not the syscall works as opposed to checking the kernel version because people can backport support as seen fit and shouldn't be hindered by a stupid kernel version check... 2. Correct compile because I originally checked in the change on a box without a proper toolchain and thus couldn't build before now.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/netns/check_netns_enabled.c

Commit: eea384d34e99680de3ba09f6fe6916ecc1d960b0
Date:   Wed, 10 Feb 2010 23:12:53 +0000

Not everyone has unshare capability... thanks for the reminder Mitani-san...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/netns/check_netns_enabled.c

Commit: 903f68fcdcf31ee426190ac72adb9eaa293baaeb
Date:   Wed, 10 Feb 2010 23:04:09 +0000

Fixed typo found by Mitani-san.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/security/cap_bound/exec_without_inh.c

Commit: a962b7f8f0fae7b34edcc1b7619944e1137cd057
Date:   Wed, 10 Feb 2010 01:28:25 +0000

Adding runtest entries for rt_sigaction0[23], as noted by Mitani-san, and forgotten by your's truly...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

runtest/syscalls

Commit: 7a0b567320b80b2cb361c9481549508ea772d73f
Date:   Tue, 9 Feb 2010 14:49:02 +0000

An error occured on my i386 box. (OS: Fedora8, Kernel: 2.6.33-rc6, libcap: libcap-2.16) ------------- exec_without_inh    1  TFAIL  :  Failed to drop CAP_SYS_ADMIN from bounding set. exec_without_inh    0  TINFO  :  (ret=-1, errno 38) ------------- If the macro HAVE_DECL_CAP_BSET_DROP is 0, this error will occurs. But the program should to be broken when f != CAP_SET, like the similar code "if (ret || f != CAP_SET) {" in exec_with_inh.c.
The TBROK message will be outputted if my patch merged.
-------------
exec_without_inh    1  TBROK  :  Failed to add CAP_SYS_ADMIN to pI
-------------

Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>
---

Changed Files:

testcases/kernel/security/cap_bound/exec_without_inh.c

Commit: 4f16ee0005cce6fc23727e39e1762c1e1f5a1285
Date:   Tue, 9 Feb 2010 14:45:29 +0000

1. Remove mqns check app check. It no longer exists in the repo and thus gates these tests unnecessarily from being run.. 2. Compile the netns check app.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/container_test.sh
testcases/kernel/containers/netns/Makefile

Commit: 0d5ca4fefaeae85f5a39ea63fe017d9092ccdd6c
Date:   Sat, 6 Feb 2010 08:34:00 +0000

This patch makes the test script cd into the tmp directory before running the tests. This makes sure the script does not delete the original utimensat binary, causing the test to fail on a second run.
Signed-off-by: Henry Yei<hyei@mvista.com>

Changed Files:

testcases/kernel/syscalls/utimensat/utimensat_tests.sh

Commit: 1590cf03a9206efe4eaa1fb37125f7b2128c4fb0
Date:   Sat, 6 Feb 2010 06:39:57 +0000

check_pidns_enabled doesn't exist anymore. Just run the test as-is... Noticed by Rishi.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/containers/container_test.sh

Commit: 3ea1ca7e4ef0ec65a0523068095c115b8228b802
Date:   Fri, 5 Feb 2010 16:07:12 +0000

More whitespace only changes.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/fs/acls/acl_link_test.c

Commit: d9746f48dddf61b222671e2263e9c3ef1cff3f6c
Date:   Fri, 5 Feb 2010 16:05:39 +0000

Whitespace only change.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/fs/acls/acl_file_test.c

Commit: 4edbf6d75380203c7baec6d591085cf279e200ea
Date:   Fri, 5 Feb 2010 15:35:30 +0000

Resolve buffer overflow issue with ftest[37] reported by glibc by changing char* type to void* type. I didn't use caddr_t because caddr_t has its own set of caveats with 32-bit userland vs 64-bit kernel, etc...
Hi,
   I've been seeing the following messages when ftest03 and ftest07
are executed on a regular basis as of late (may be due to a recent
glibc upgrade):

*** buffer overflow detected ***: ftest03 terminated
======= Backtrace: =========
/lib/libc.so.6(__fortify_fail+0x37)[0x7f100b0c3867]
/lib/libc.so.6[0x7f100b0c1680]
/lib/libc.so.6[0x7f100b0c0979]
/lib/libc.so.6(_IO_default_xsputn+0x85)[0x7f100b04ef25]
/lib/libc.so.6(_IO_vfprintf+0x1fed)[0x7f100b0216dd]
/lib/libc.so.6(__vsprintf_chk+0x9d)[0x7f100b0c0a1d]
/lib/libc.so.6(__sprintf_chk+0x80)[0x7f100b0c0960]
ftest03[0x401f05]
ftest03[0x402a76]
/lib/libc.so.6(__libc_start_main+0xe6)[0x7f100affba26]
ftest03[0x401d59]
======= Memory map: ========
00400000-00408000 r-xp 00000000 fd:03 74957
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest03
00608000-00609000 r--p 00008000 fd:03 74957
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest03
00609000-0060a000 rw-p 00009000 fd:03 74957
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest03
0060a000-0060f000 rw-p 00000000 00:00 0
01f91000-01fb2000 rw-p 00000000 00:00 0                                  [heap]
7f100adc6000-7f100addc000 r-xp 00000000 fd:03 6454
 /lib64/libgcc_s.so.1
7f100addc000-7f100afdb000 ---p 00016000 fd:03 6454
 /lib64/libgcc_s.so.1
7f100afdb000-7f100afdc000 r--p 00015000 fd:03 6454
 /lib64/libgcc_s.so.1
7f100afdc000-7f100afdd000 rw-p 00016000 fd:03 6454
 /lib64/libgcc_s.so.1
7f100afdd000-7f100b12c000 r-xp 00000000 fd:03 5882
 /lib64/libc-2.10.1.so
7f100b12c000-7f100b32c000 ---p 0014f000 fd:03 5882
 /lib64/libc-2.10.1.so
7f100b32c000-7f100b330000 r--p 0014f000 fd:03 5882
 /lib64/libc-2.10.1.so
7f100b330000-7f100b331000 rw-p 00153000 fd:03 5882
 /lib64/libc-2.10.1.so
7f100b331000-7f100b336000 rw-p 00000000 00:00 0
7f100b336000-7f100b353000 r-xp 00000000 fd:03 5871
 /lib64/ld-2.10.1.so
7f100b536000-7f100b538000 rw-p 00000000 00:00 0
7f100b550000-7f100b552000 rw-p 00000000 00:00 0
7f100b552000-7f100b553000 r--p 0001c000 fd:03 5871
 /lib64/ld-2.10.1.so
7f100b553000-7f100b554000 rw-p 0001d000 fd:03 5871
 /lib64/ld-2.10.1.so
7fffe07b0000-7fffe07c5000 rw-p 00000000 00:00 0                          [stack]
7fffe07ff000-7fffe0800000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0
 [vsyscall]
*** buffer overflow detected ***: ftest07 terminated
======= Backtrace: =========
/lib/libc.so.6(__fortify_fail+0x37)[0x7f8678b10867]
/lib/libc.so.6[0x7f8678b0e680]
/lib/libc.so.6[0x7f8678b0d979]
/lib/libc.so.6(_IO_default_xsputn+0x85)[0x7f8678a9bf25]
/lib/libc.so.6(_IO_vfprintf+0x1fed)[0x7f8678a6e6dd]
/lib/libc.so.6(__vsprintf_chk+0x9d)[0x7f8678b0da1d]
/lib/libc.so.6(__sprintf_chk+0x80)[0x7f8678b0d960]
ftest07[0x401ec5]
ftest07[0x402a76]
/lib/libc.so.6(__libc_start_main+0xe6)[0x7f8678a48a26]
ftest07[0x401d19]
======= Memory map: ========
00400000-00408000 r-xp 00000000 fd:03 74961
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest07
00608000-00609000 r--p 00008000 fd:03 74961
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest07
00609000-0060a000 rw-p 00009000 fd:03 74961
 /tmp/tmp.9O93FRsMhN/ltp/testcases/bin/ftest07
0060a000-0060f000 rw-p 00000000 00:00 0
01f3f000-01f60000 rw-p 00000000 00:00 0                                  [heap]
7f8678813000-7f8678829000 r-xp 00000000 fd:03 6454
 /lib64/libgcc_s.so.1
7f8678829000-7f8678a28000 ---p 00016000 fd:03 6454
 /lib64/libgcc_s.so.1
7f8678a28000-7f8678a29000 r--p 00015000 fd:03 6454
 /lib64/libgcc_s.so.1
7f8678a29000-7f8678a2a000 rw-p 00016000 fd:03 6454
 /lib64/libgcc_s.so.1
7f8678a2a000-7f8678b79000 r-xp 00000000 fd:03 5882
 /lib64/libc-2.10.1.so
7f8678b79000-7f8678d79000 ---p 0014f000 fd:03 5882
 /lib64/libc-2.10.1.so
7f8678d79000-7f8678d7d000 r--p 0014f000 fd:03 5882
 /lib64/libc-2.10.1.so
7f8678d7d000-7f8678d7e000 rw-p 00153000 fd:03 5882
 /lib64/libc-2.10.1.so
7f8678d7e000-7f8678d83000 rw-p 00000000 00:00 0
7f8678d83000-7f8678da0000 r-xp 00000000 fd:03 5871
 /lib64/ld-2.10.1.so
7f8678f83000-7f8678f85000 rw-p 00000000 00:00 0
7f8678f9d000-7f8678f9f000 rw-p 00000000 00:00 0
7f8678f9f000-7f8678fa0000 r--p 0001c000 fd:03 5871
 /lib64/ld-2.10.1.so
7f8678fa0000-7f8678fa1000 rw-p 0001d000 fd:03 5871
 /lib64/ld-2.10.1.so
7fffeffa2000-7fffeffb7000 rw-p 00000000 00:00 0                          [stack]
7fffeffff000-7ffff0000000 r-xp 00000000 00:00 0                          [vdso]
ffffffffff600000-ffffffffff601000 r-xp 00000000 00:00 0
 [vsyscall]

   gcooper@orangebox /scratch/ltp $ emerge --info
Portage 2.1.6.13 (default/linux/amd64/10.0, gcc-4.3.4,
glibc-2.10.1-r1, 2.6.31-gentoo-r6 x86_64)
=================================================================
System uname: Linux-2.6.31-gentoo-r6-x86_64-Intel-R-_Core-TM-2_Quad_CPU_Q9400_@_2.66GHz-with-gentoo-1.12.13
Timestamp of tree: Sun, 24 Jan 2010 07:00:21 +0000
app-shells/bash:     4.0_p35
dev-java/java-config: 2.1.9-r2
dev-lang/python:     2.6.4
sys-apps/baselayout: 1.12.13
sys-apps/sandbox:    1.6-r2
sys-devel/autoconf:  2.13, 2.63-r1
sys-devel/automake:  1.9.6-r2, 1.10.2
sys-devel/binutils:  2.18-r3
sys-devel/gcc-config: 1.4.1
sys-devel/libtool:   2.2.6b
virtual/os-headers:  2.6.27-r2

   Figuring that ftest07.c compiled (mostly) without warnings, I
thought it might be an issue common to both tests.

Signed-off-by: Garrett Cooper <yanegomi@gmail.com>
Acked-by: K.D. Lucas <kdlucas@gmail.com>

Changed Files:

testcases/kernel/fs/ftest/libftest.c
testcases/kernel/fs/ftest/libftest.h

Commit: 5009532096f9c877fbf6660d5b3a791c3da6d28c
Date:   Wed, 3 Feb 2010 10:19:32 +0000

Fix ordering of $(filter-out ) as noted by Stephen.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/kernel/security/selinux-testsuite/refpolicy/Makefile

Commit: aee37bbb5789856b2e9af39f05a641fae6f2afac
Date:   Wed, 3 Feb 2010 07:44:18 +0000

Avoid accidental rm -Rf / regression in last release by calling $(*abspath) on $(INSTALL_DIR) beforehand -- sure it sets it to $(abs_top_srcdir), but it's a lot safer safety net to not clean as opposed to blowing away /.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

Makefile

Commit: 1d7745f2ac2e22a08c825ead0229c929315458b9
Date:   Wed, 3 Feb 2010 07:42:12 +0000

Get people to corral into proper make usage, just in case it wasn't 100% clear, so people avoid shooting themselves in the foot by accident.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

include/mk/config.mk.in

Commit: ee807014bc06d7254cc6a0fb697979eec41b1b4d
Date:   Tue, 2 Feb 2010 08:51:53 +0000

testcases/realtime/config.mk isn't a hard requirement for autotools and %clean.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/realtime/Makefile

Commit: cafe6dc77c7fdbc28890a4f500ff8b3865d3e809
Date:   Tue, 2 Feb 2010 08:42:47 +0000

Idiot... forgot the :

Changed Files:

testcases/realtime/Makefile

Commit: 6b77f08cca9c5c5622af71505f2b327782c86520
Date:   Tue, 2 Feb 2010 08:40:50 +0000

Add a reference to INSTALL for testcases/realtime's config.mk...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

testcases/realtime/Makefile

Commit: 7279a86c79cc63d69dd9b07ea3c6bbc3f3959e92
Date:   Tue, 2 Feb 2010 08:25:09 +0000

Don't clean up the install directory for now until I unfubar this mess.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

Makefile

Commit: 192b7462762773814f62a27685ea705fb0a0e1bc
Date:   Tue, 2 Feb 2010 08:23:15 +0000

Add a safe_rm.sh script and test in light of accidental f-up with Mitani's system...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Changed Files:

scripts/safe_rm.sh
scripts/tests/test_safe_rm.sh

LTP-20100131

1) Log Message:
Fix prep_create_link as noticed by Michal Simek. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/testcases/kernel/syscalls/lchown/prep_create_link

2) Log Message:
This change was originally designated for changing a fail to a pass, but morphed into more than that. This takes all of the ad hoc echoes and converts them into tst_resm calls, and makes a few other modifications to called commands and converts them into more simplified logic. Originally (and largely submitted by Serge), modified slightly after some clarification with him. Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>, Modified-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/p9auth/p9priv.sh

3) Log Message:
Noob mistake: forgot to unawk the awk call. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuctl_fj/run_cpuctl_test_fj.sh

4) Log Message:
Actually, that doesn't make sense. No where in the awk call does it actually have awk or the pid listed as being awked. Something else is fishy here... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuctl_fj/run_cpuctl_test_fj.sh

5) Log Message:
In latest ltp version, the following message occured when run the case of cpuset.
-----
./cpuset_hotplug_test.sh: line 39: ./cpuset_list_compute: No such file or directory
./cpuset_hotplug_test.sh: line 227: ./cpuset_list_compute: No such file or directory
-----
The reason is that cpuset_list_compute.c(in testcases/kernel/controllers/cpuset/cpuset_hotplug_test/) has not been compiled. This patch fix it. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/Makefile

6) Log Message:
Hi, Thank you for fixing "cgroup" and "cgroup_fj". However, I found a new problem in revised "cgroup" testcases. It's in "cgroup_regression_test.sh". In my original patch, I didn't revise about "tst_kvercmp 2 6 29" judgment. But in fixed version, the error route of above judgment revised from "TBROK" to "TCONF". If "TCONF" is used, the shell should end by exit 0, I think. But "cgroup_regression_test.sh" does not end by exit 0. Please consider about the following patch: Signed-off-by: Tomomori Mitani <mitani@ryobi.co.jp>,

Modified Files:
ltp/testcases/kernel/controllers/cgroup/cgroup_regression_test.sh

7) Log Message:
Shuffle around the code and exit _once_ at the bottom of the child process. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c

8) Log Message:
Readd the script so that it gets run when the test is executed... This was in my original patch submission but somehow didn't make its way into the ltp tree. Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>, Acked-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/testcases/kernel/security/p9auth/checkp9auth.sh

9) Log Message:
Fix breakage caused by ltp_clone_quick move. Signed-off-by: Garrett Cooper,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c

10) Log Message:
1. Get rid of ad hoc numaif.h (forgotten delete I was going to do before Christmas... ho ho ho... -_-).
2. Get rid of nodemask_set (only applies for v2 of libnuma).
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/utils/numa_helpers.h 
Removed Files:
ltp/testcases/kernel/syscalls/utils/numaif.h

11) Log Message:
Added check for memory controller (functional, regression & stress). Signed-off By : Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>, Acked-by: Li Zefan <lizf@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/memcg/regression/memcg_regression_test.sh
ltp/testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh
ltp/testcases/kernel/controllers/memcg/functional/memcg_function_test.sh

12) Log Message:
Fix the bug of the smaller cpu_set_t's length in getcpu01. getcpu01 test failed because the len of cpu_set_t in the glibc is smaller than the length of the cpumask in the kernel. So we must use the dynamically sized CPU sets instead of the standard cpu_set_t. This patch fix this problem. Before using this patch, the test result is following:
getcpu01    1  TFAIL  :  sched_getaffinity:errno:22
After using this patch, the test result is following:
getcpu01    1  TPASS  :  getcpu() returned proper cpuid:3, node id:0
Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

13) Log Message:
Fix the bug of the smaller cpu_set_t's length in sched_getaffinity01. sched_getaffinity01 test failed because the len of cpu_set_t in the glibc is smaller than the length of the cpumask in the kernel. So we must use the dynamically sized CPU sets instead of the standard cpu_set_t. This patch fix this problem. Before using this patch, the test result is following:
sched_getaffinity01    0  TINFO  :  system has 4 processor(s).
sched_getaffinity01    1  TPASS  :  sched_getaffinity(0, len, (cpu_set_t *)-1): TEST_ERRNO=EINVAL(22): Invalid argument
sched_getaffinity01    2  TPASS  :  sched_getaffinity(0, 0, &mask): TEST_ERRNO=EINVAL(22): Invalid argument
sched_getaffinity01    3  TPASS  :  sched_getaffinity(getpid() + 1, len, &mask): TEST_ERRNO=EINVAL(22): Invalid argument
sched_getaffinity01    4  TFAIL  :  could not get cpu affinity: TEST_ERRNO=EINVAL(22): Invalid argument
The subcases1-3 of this test also failed though they were successful according to the log. Becuase the errnos returned were wrong.
After using this patch, the test result is following:
sched_getaffinity01    0  TINFO  :  system has 4 processor(s).
sched_getaffinity01    0  TINFO  :  cpusetsize is 512
sched_getaffinity01    0  TINFO  :  mask.__bits[0] = 15
sched_getaffinity01    1  TPASS  :  sched_getaffinity() succeed ,this process 2239 is running processor: 0
sched_getaffinity01    2  TPASS  :  sched_getaffinity() succeed ,this process 2239 is running processor: 1
sched_getaffinity01    3  TPASS  :  sched_getaffinity() succeed ,this process 2239 is running processor: 2
sched_getaffinity01    4  TPASS  :  sched_getaffinity() succeed ,this process 2239 is running processor: 3
sched_getaffinity01    5  TPASS  :  sched_getaffinity(0, len, (cpu_set_t *)-1): TEST_ERRNO=EFAULT(14): Bad address
sched_getaffinity01    6  TPASS  :  sched_getaffinity(0, 0, mask): TEST_ERRNO=EINVAL(22): Invalid argument
sched_getaffinity01    7  TPASS  :  sched_getaffinity(getpid() + 1, len, mask): TEST_ERRNO=ESRCH(3): No such process
Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/syscalls/sched_getaffinity/sched_getaffinity01.c

14) Log Message:
Here is a patch/attachment to fix the  error number and error message, when the capset() syscall fails.
*After applying patch:*
capset01    1    TBROK    capget() failed: errno=???(38): Function not implemented
*Before applying patch:*
capset01    1    TBROK    capget() failed: TEST_ERRNO=???(0): Success
Note: This is in the custom built linux kernel where the capset/capget syscall is not implemented. In normal linux kernel this testcase would just work fine without any errors. *Normal kernel:*
capset01    1  TPASS  :  capset() returned 0
Signed-off-by: Veerendra C <veeren@linux.vnet.ibm.com>,

Modified Files:
ltp/testcases/kernel/syscalls/capset/capset01.c

15) Log Message:
Fix check. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/memcg/regression/memcg_regression_test.sh

16) Log Message:
Clarify location and roles of install paths and directions as requested by Mark Ver. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/INSTALL

17) Log Message:
Fix missing #include. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setscheduler/selinux_task_setscheduler_target.c

18) Log Message:
1. Fix the all target.
2. Fix a missing _GNU_SOURCE #define and a -Wunused warning.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setpgid/selinux_task_setpgid_source.c
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile

19) Log Message:
Add a basic Linux distro detection script. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/scripts/detect_distro.sh

20) Log Message:
Modify script to properly separate major and minor versions with Redhat. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/scripts/detect_distro.sh

21) Log Message:
Improve usability through -d ($DESTDIR) and -m (omit minor version) options. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/scripts/detect_distro.sh

22) Log Message:
Stupid... move VERSION set outside of minor version check. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/scripts/detect_distro.sh

23) Log Message:
Make a step to properly fix up the Makefile and policy file items... next step would be to template the Makefile to get rid of the ad hoc Makefile in policy_files/redhat-5. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile 
Removed Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_bounds.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_exectrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ipc.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_wait.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/Makefile
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_dyntrans.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_exectrace.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_file.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ipc.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_policy.if 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_rename.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_sigkill.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_create.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getsid.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_transition.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_wait.te
Added Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/Makefile
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_capable_net.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_dyntrans.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_exectrace.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_file.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_ipc.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_policy.if 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_rename.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_sigkill.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_create.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_getsid.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_transition.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/redhat-5/test_wait.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_bounds.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_capable_net.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_dyntrans.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_exectrace.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_file.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_ipc.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_ptrace.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_rxdir.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_stat.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_getpgid.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_setpgid.te 
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/policy_files/generic/test_wait.te

24) Log Message:
Don't nuke some files that are checked in for test_policy... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile

25) Log Message:
1. Change omit_minor_version to omit_redhat_minor_version, as it only applies to redhat's versioning scheme.
2. Clump Redhat and Fedora detection together like I should have been doing in the beginning.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/scripts/detect_distro.sh

26) Log Message:
Properly test for whether or not the update string is embedded in the release file with Redhat, and thus properly omit the release version if you're using a non-update version of Redhat or Fedora. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/scripts/detect_distro.sh

27) Log Message:
Remove uclinux target warning, considering that no uclinux targets exist anymore.. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile

28) Log Message:
lib-all shouldn't depend on include-install now... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile

29) Log Message:
1. Print out the return code.
2. Use TERRNO because we're not using the TEST() macro.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

30) Log Message:
Add block device detection. It's the first step towards getting the quotactl crud to work. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/lib/get_block_dev.c
Modified Files:
ltp/m4/ltp-quota.m4
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c
ltp/include/test.h

31) Log Message:
Remove return code printout. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

32) Log Message:
1. Go back to sys/quota.h
2. Make the autoconf test a bit more meaningful...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c
ltp/m4/ltp-quota.m4

33) Log Message:
Get closer to getting a working quotactl01 test. There were many setup related items missing, and I'm still bumbling around in the dark trying to figure out how this works, but I'm getting closer to an answer at least... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/lib/mount_utils.c 
Removed Files:
ltp/lib/get_block_dev.c
Modified Files:
ltp/include/test.h
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

34) Log Message:
gcov-kernel: added patch for android toolchain 4.4.0 support. Peter Oberparleiter <oberpapr@users.sourceforge.net>, Wangwei Chen <mkw348@motorola.com>,

Added Files:
ltp/utils/analysis/gcov-kernel/linux-2.6.30-gcov-android-toolchain-4.4.0.patch

35) Log Message:
Move $(OUT_OF_BUILDTREE), and $(IN_BUILD_TREE) checks above config.mk include as correctly noted by Mitani-san. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/env_pre.mk

36) Log Message:
ltp-pan is installed in bin/ not pan/ now as noticed by Serge. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testscripts/test_containers.sh
ltp/testscripts/test_filecaps.sh
ltp/testscripts/test_selinux.sh

37) Log Message:
Remove numaif.h as noticed by Mitani-san. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.h

38) Log Message:
Fix some missing headers and missing #define _GNU_SOURCE defs. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrace/selinux_dyntrace_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getsid/selinux_task_getsid_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getsid/selinux_task_getsid_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getpgid/selinux_task_getpgid_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getpgid/selinux_task_getpgid_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getscheduler/selinux_task_getscheduler_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/wait/selinux_wait_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/msg/selinux_msgrcv.c
ltp/testcases/kernel/security/selinux-testsuite/tests/msg/selinux_msgsnd.c

39) Log Message:
Fix a lot of compile warnings. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_net/selinux_bind.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_net/selinux_raw.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_file/selinux_lease.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_chroot.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_hostname.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_nice.c 
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_rawio.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrace/selinux_dyntrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrans/selinux_dyntrans_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/shm/selinux_shmat.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setnice/selinux_task_setnice_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive_client.c
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive_server.c
ltp/testcases/kernel/security/selinux-testsuite/tests/sem/selinux_getinfo.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_ioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_noioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/exectrace/selinux_exectrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ptrace/selinux_ptrace.c
ltp/testcases/kernel/security/selinux-testsuite/tests/setnice/selinux_setnice_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/setnice/selinux_setnice_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_fcntl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_nofcntl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_sigiotask.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_wait_io.c

40) Log Message:
kill unneeded chmod calls on created tmp directory: The following patch kills some unneeded chmod(2) calls on newly created temporary directory; the tst_tmpdir() function do already set the correct permissions. Signed-off-by: Nicolas Joly <njoly@pasteur.fr>.

Modified Files:
ltp/testcases/kernel/syscalls/mkdir/mkdir02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir04.c
ltp/testcases/kernel/syscalls/rename/rename09.c
ltp/testcases/kernel/syscalls/rename/rename12.c
ltp/testcases/kernel/syscalls/rmdir/rmdir03.c

41) Log Message:
cpuset_syscall_test: delete '0x' from hex string: By the latest ltp version, the following fail message outputted on my x86_64 box.
------------
TEST 5: CPUSET CONTROLLER TESTING
TEST STARTED: Please avoid using system while this test executes
...
cpuset05    8  TFAIL  :  Result(/proc/<pid>/status) = "", expect = "0")
cpuset05    9  TFAIL  :  Result(/proc/<pid>/status) = "", expect = "1")
cpuset05   10  TFAIL  :  Result(/proc/<pid>/status) = "", expect = "default")
------------
The reason is:
1, '0x' wasn't deleted from a hex string's head. e.g. 7f343c900000 is expected, but 0x7f343c900000 outputted.
2, a wrong '\b' was used in a grep command.
This patch fix the upper problem. Now the message is:
------------
cpuset05    7  TPASS  :  Cpuset vs systemcall test succeeded.
cpuset05    8  TPASS  :  Cpuset vs systemcall test succeeded.
cpuset05    9  TPASS  :  Cpuset vs systemcall test succeeded.
cpuset05   10  TPASS  :  Cpuset vs systemcall test succeeded.
------------
Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_testset.sh

42) Log Message:
Make my choice of AC_MSG_ERROR more apparent. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/m4/ltp-quota.m4

43) Log Message:
Things have worked out ok so far for the Makefiles, so let's keep on going trying to fix the selinux test suite (as requested by Steven)... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile.inc
ltp/testcases/kernel/security/selinux-testsuite/tests/runtest.sh
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testscripts/test_selinux.sh

44) 
Log Message:
We need to install the Makefiles into the tree as well so the test scripts can run make load. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile

45) Log Message:
Error out when /etc/selinux/.../policy/src isn't found. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile

46) Log Message:
Don't do load as part of a normal make operation. This splits the make into 2 stages: 
1. The stuff we can do on/off the target.
2. The setup pieces that we must do on the target.
That way we can clean up 1. in the future so the test won't require make.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile

47) Log Message:
Make autotools seems to break on more recent versions without this. Signed-off-by: Paul Larson <paul.larson@canonical.com>,

Modified Files:
ltp/include/mk/automake.mk

48) Log Message:
Add improved checks for mbind(2) syscalls, because...
Hi,
I tried to make with 2010-01-14's cvs in RHEL4.8 (2.6.9-89.ELsmp). But It failed in "mbind01.c" by following message.
------------
gcc -g -O2 -g -O2 -fno-strict-aliasing -pipe -Wall
-I/home/LTP/ltp-2010-01-12/testcases/kernel/include
-I/home/LTP/ltp-2010-01-12/testcases/kernel/syscalls/mbind/../utils/
-I../../../../include -I../../../../include   -L../../../../lib  mbind01.c -lltp -lnuma -o mbind01
mbind01.c:184: error: `MPOL_DEFAULT' undeclared here (not in a function)
mbind01.c:184: error: initializer element is not constant
mbind01.c:184: error: (near initialization for `tcase[0].policy')
mbind01.c:188: error: initializer element is not constant
mbind01.c:188: error: (near initialization for `tcase[0]')
mbind01.c:190: error: initializer element is not constant
mbind01.c:190: error: (near initialization for `tcase[1].policy')
mbind01.c:194: error: initializer element is not constant
mbind01.c:194: error: (near initialization for `tcase[1]')
mbind01.c:196: error: `MPOL_BIND' undeclared here (not in a function)
mbind01.c:196: error: initializer element is not constant
mbind01.c:196: error: (near initialization for `tcase[2].policy')
mbind01.c:200: error: initializer element is not constant
mbind01.c:200: error: (near initialization for `tcase[2]')
mbind01.c:202: error: initializer element is not constant
mbind01.c:202: error: (near initialization for `tcase[3].policy')
mbind01.c:206: error: initializer element is not constant
mbind01.c:206: error: (near initialization for `tcase[3]')
mbind01.c:208: error: `MPOL_INTERLEAVE' undeclared here (not in a function)
mbind01.c:208: error: initializer element is not constant
mbind01.c:208: error: (near initialization for `tcase[4].policy')
mbind01.c:212: error: initializer element is not constant
mbind01.c:212: error: (near initialization for `tcase[4]')
mbind01.c:214: error: initializer element is not constant
mbind01.c:214: error: (near initialization for `tcase[5].policy')
mbind01.c:218: error: initializer element is not constant
mbind01.c:218: error: (near initialization for `tcase[5]')
mbind01.c:220: error: `MPOL_PREFERRED' undeclared here (not in a function)
mbind01.c:220: error: initializer element is not constant
mbind01.c:220: error: (near initialization for `tcase[6].policy')
mbind01.c:224: error: initializer element is not constant
mbind01.c:224: error: (near initialization for `tcase[6]')
mbind01.c:226: error: initializer element is not constant
mbind01.c:226: error: (near initialization for `tcase[7].policy')
mbind01.c:230: error: initializer element is not constant
mbind01.c:230: error: (near initialization for `tcase[7]')
mbind01.c:236: error: initializer element is not constant
mbind01.c:236: error: (near initialization for `tcase[8]')
mbind01.c:238: error: initializer element is not constant
mbind01.c:238: error: (near initialization for `tcase[9].policy')
mbind01.c:243: error: initializer element is not constant
mbind01.c:243: error: (near initialization for `tcase[9]')
mbind01.c:246: error: initializer element is not constant
mbind01.c:246: error: (near initialization for `tcase[10].policy')
mbind01.c:250: error: initializer element is not constant
mbind01.c:250: error: (near initialization for `tcase[10]')
mbind01.c: In function `do_test':
mbind01.c:309: error: `MPOL_F_ADDR' undeclared (first use in this function)
mbind01.c:309: error: (Each undeclared identifier is reported only once
mbind01.c:309: error: for each function it appears in.)
make[4]: *** [mbind01] Error 1
------------
Following version's cvs's bring same results.
 - 2010-01-08
 - 2010-01-12
 - 2010-01-13
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c
ltp/m4/ltp-numa.m4

49) Log Message:
Properly resolve mbind stuff... it was actually mempolicy tests... and it was present in more than just mbind01.c. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/libcpuset.c

50)  Log Message:
Finish this mempolicy crud off for good, after a fair amount of tweaking. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/libcpuset.c
ltp/m4/ltp-numa.m4
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c

51) Log Message:
1. Resolve some compatibility issues with make 3.80.
2. Fix a bug with clean_install_dir being included in `target_to_dir_mapping'...
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/Makefile

52) Log Message:
1. Fix an out-of-sync variable (automake.mk), and an incorrect clean (*.in needs to be cleaned with ac-maintainer-clean, NOT distclean). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/automake.mk

53) Log Message:
Get rid of $(DIR) variable in define block. Never should have bloody been there in the first place... stupid stupid. Problem noted by Mitani-san with zip test (defines the same variable). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/functions.mk

54) Log Message:
Note the reasoning for the -- before CLEAN_TARGETS :)... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/functions.mk

55) Log Message:
Check in skeleton scripts for testing out LTP, end-to-end, from scratch -- that way less trivial issues will get into the tree. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/testscripts/build/README
ltp/testscripts/build/test_install_in_build_tree.sh
ltp/testscripts/build/test_install_out_of_build_tree.sh
ltp/testscripts/build/test_out_of_build_tree.sh

56) Log Message:
Move the build scripts to the build directory as well. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Removed Files:
ltp/testscripts/default_runtest_set.awk
ltp/testscripts/ltp-missing-install-files.py
Added Files:
ltp/testscripts/build/default_runtest_set.awk
ltp/testscripts/buildltp-missing-install-files.py

57) Log Message:
Keep on working on fixing the selinux-testsuite... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile.inc
ltp/testscripts/test_selinux.sh
Added Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile.selinux
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile.selinux

58) Log Message:
Install Makefile.selinux, not Makefile. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile

59) Log Message:
Further diff on top of the prior one to resolve a few remaining issues in getting the tests to pass.  With these two patches, all tests appear to pass on Fedora 12. 
Things that remain unresolved:
- RHEL4 support.  Is RHEL4 to be supported still by ltp, given dependencies?
  RHEL4 has been using the test policy under policy/ and has a different build/load process.
- Running individual tests manually.  As described in the selinux-testsuite
  README, it used to be possible to run individual tests via tests/runtest.sh
in order to more easily hunt down specific failures and get more verbose output than we get from any of the results/* files.
Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>,
Acked-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testscripts/test_selinux.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit.sh

And much much more......!!

LTP-20091231

1) Log Message:
Don't fail the ssh tests if the home directory we are creating already exists (eg. when it was created by adduser): this patch silences the error message "mkdir: directory already exists" in ssh tests, caused by the code that handles home directory creation in case adduser didn't do it. Unfortunately, the same code failed when adduser did create the directory. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/tcp_cmds/ssh/ssh01
ltp/testcases/network/tcp_cmds/ssh/ssh02
ltp/testcases/network/tcp_cmds/ssh/ssh03

2) Log Message:
Fixes of some errors discovered by "set -u": this patch fixes the following problems:
 - read of $TEST_USER before it's set in ftp03,
 - remnants of the $COMMAND variable which isn't really there anymore in netstat01,
 - probably a typo in rsh01 ($COUNT vs. $TST_COUNT),
 - $2 has to be escaped twice in rwho01, to appear in the awk script,
 - when no interface is found tcpdump01, $IF is unset. Don't spit out an error in that case,
This is a version with changes reflecting Mike's comments. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/tcp_cmds/ftp/ftp03
ltp/testcases/network/tcp_cmds/netstat/netstat01
ltp/testcases/network/tcp_cmds/rsh/rsh01
ltp/testcases/network/tcp_cmds/rwho/rwho01
ltp/testcases/network/tcp_cmds/tcpdump/tcpdump01

3) Log Message:
Fix a bug in awk code in rsh01: this patch fixes the following problem with awk code in rsh01. It caused the test to fail. The END label is executed always, even in the event of exit. Therefore, the "exit 1" statement was executed even when the line matched (as a consequence of "exit 0") and awk always returned 1 (ie. failure). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/tcp_cmds/rsh/rsh01

4) Log Message:
Remove the use of bash arrays from memcg_stress_test: this patch removes the use of bash arrays from memcg_stress_test.sh, thus making the script more POSIX friendly. I changed the array into a series of variables, read and written using eval. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh

5) Log Message:
Fix small errors in the runtest files: this patch fixes the following problems in the runtest files:
 - rwtest has been renamed to rwtest.sh,
 - there is no ipv6 variant of rlogin test
Signed-off-by: Jiri Palecek <jpalecek@web.de>,

Modified Files:
ltp/runtest/fs ltp/runtest/ipv6_expect

6) Log Message:
Refer to checkforlibcap.sh by its real name: checkforlibcap doesn't exist, the script's proper name is checkforlibcap.sh. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/security/filecaps/filecapstest.sh

7) Log Message:
Fix a wrong (reversed) success condition in echo01: This patch reverses the success check in echo01, obviously the checksums being equal is the right outcome. This is the version with the changes Mike Frysinger requested.Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/tcp_cmds/echo/echo01

8) Log Message:
rename readme file to avoid clean glob

Added Files:
ltp/testcases/misc/math/float/iperb/README
ltp/testcases/misc/math/float/trigo/README

Removed Files:
ltp/testcases/misc/math/float/iperb/readme
ltp/testcases/misc/math/float/trigo/readme

9) Log Message:
Hello, I tried to make ltp with the -j switch and found the following problems:
 - the autotools target fail because of missing dependency on aclocal.m4 (almost all autotools targets depend on it)
 - the shell loop in generic_trunk_target makes the "all" rules of the subdirectories run strictly sequentially
This patch fixes these issues by adding dependencies to the autotools targets (it also deletes some of the duplicated targets from the realtime Makefile), and by making one target for each subdirectory in generic_trunk_target. Note that I really don't know if this works on an arbitrary make version. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/include/mk/utomake.mk
ltp/testcases/realtime/Makefile

10) Log Message:
Use tail -n 1 instead of tail -1. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

11) Log Message:
Add support for a user specified strip application via configure. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/configure.ac
ltp/include/mk/config.mk.default
ltp/include/mk/config.mk.in

12) Log Message:
As noted by Jiri, the objdump tests were disabled in the infrastructure upgrade because they didn't fit exactly into the new infrastructure.
1. Makefile: Reenable the test.
2. objdump/Makefile: Fix compilation so that it deterministically compiles with -g (needed for the test, even though it currently fails because objdump expects DWARF and that's currently unsupported with ld(1) from what I've been reading).
3. objdump/test.c -> objdump/test_arch.c: for the sake of clarity and to ensure that the command doesn't conflict with test(1), rename test.c to test_arch.c.
4. objdump/objdump01: Clarify the purpose and error check --debugging in the test.
Props go to Jiri for the original observations and suggestions. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/commands/ade/Makefile
ltp/testcases/commands/ade/objdump/Makefile
ltp/testcases/commands/ade/objdump/objdump01 
Added Files:
ltp/testcases/commands/ade/objdump/test_arch.c 
Removed Files:
ltp/testcases/commands/ade/objdump/test.c

13) Log Message:
Some distributions will tack on additional versioning info to the official version, so let's account for that. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/env_pre.mk

14) Log Message:
Don't use linux/* headers. They don't compile out of the box on Ubuntu Dapper Drake. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/security/smack/smack_set_socket_labels.c

15) Log Message:
Fix compilation with older glibc releases by restoring the POLLHDRDUP constant on-demand definition. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

16) Log Message:
IDcheck.sh failing shouldn't be a hard error. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/Makefile

17) Log Message:
Older versions of binutils / gcc don't properly grok the weak symbols solution I put in before the 200911 release, so instead implement the code using a preprocessor define (CLEANUP), which can be defined before including cleanup.c, and thus the user can specify what cleanup function they wish to use before it's defined. This works on Ubuntu 6.02 (dapper drake) with gcc 4.0 and binutils 2.16.9, but I'm not sure if it works with older tools, as I couldn't hunt down older distro sources... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/pidns/pidns01.c
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/regen.sh
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c
ltp/include/ltp_signal.h 
Added Files:
ltp/include/cleanup.c

18) Log Message:
Wholesale testcase cleanup. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/timers/timer_settime/Makefile
ltp/testcases/kernel/timers/timer_settime/timer_settime02.c
ltp/testcases/kernel/timers/timer_settime/timer_settime03.c
ltp/testcases/kernel/timers/timer_create/Makefile
ltp/testcases/kernel/timers/timer_create/timer_create02.c
ltp/testcases/kernel/timers/timer_create/timer_create03.c
ltp/testcases/kernel/timers/timer_create/timer_create04.c
ltp/testcases/kernel/timers/include/common_timers.h
ltp/testcases/kernel/timers/clock_settime/clock_settime02.c
ltp/testcases/kernel/timers/clock_settime/clock_settime03.c
ltp/testcases/kernel/timers/clock_gettime/Makefile
ltp/testcases/kernel/timers/clock_gettime/clock_gettime02.c
ltp/testcases/kernel/timers/clock_gettime/clock_gettime03.c
ltp/testcases/kernel/timers/timer_delete/timer_delete02.c
ltp/testcases/kernel/timers/timer_delete/timer_delete03.c

19) Log Message:
Polish up clean logic a bit further. Later versions of gcc (rightfully) whine more about function attributes, et all. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/pidns01.c
ltp/testcases/kernel/containers/pidns/pidns02.c
ltp/testcases/kernel/containers/pidns/pidns03.c
ltp/testcases/kernel/containers/pidns/pidns04.c
ltp/testcases/kernel/containers/pidns/pidns10.c
ltp/testcases/kernel/containers/pidns/pidns17.c
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/include/cleanup.c

20) Log Message:
1. Make the autotools process more straightforward.
2. Fix a corner case where executing distclean after autotools was failing to find testcases/realtime/include/realtime_config.h.in.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/automake.mk
ltp/testcases/realtime/Makefile

21) Log Message:
This patch fixes one overlooked line and also removes trailing whitespaces. Signed-off-by: <chrubis@suse.cz>.

Modified Files:
ltp/runtest/ltp-aio-stress.part1
ltp/runtest/ltp-aio-stress.part2

22) Log Message:
Fix overreaching clean targets in Makefiles that cleaned the readme files: the makefiles in some of the float tests contain the glob "[dr]*" in their clean targets. Unfortunately, this deletes not only the generated reference files, but also the readme files shipped in those directories. This patch fixes it by changing CLEAN_TARGETS to more specific patterns (that capture all generated files in all float tests, however). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/misc/math/float/iperb/Makefile
ltp/testcases/misc/math/float/trigo/Makefile

23) Log Message:
New sigwaitinfo test: this is the test for the rt_sigtimedwait et al. functions I promised earlier. The code is unchanged since I sent it for the first time, but the Makefiles are adapted to the new build system, with the help of Garret Cooper. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Added Files:
ltp/testcases/kernel/syscalls/rt_sigtimedwait/Makefile
ltp/testcases/kernel/syscalls/sigtimedwait/Makefile
ltp/testcases/kernel/syscalls/sigwait/Makefile
ltp/testcases/kernel/syscalls/sigwaitinfo/Makefile
ltp/testcases/kernel/syscalls/sigwaitinfo/sigwaitinfo01.c

24) Log Message:
if4-alias-addlarge - default values for IPV4_NETWORK and  IPV4_HOST: The testcase code expects class A (or /8 ) network addresses to be assigned to the tested interfaces and fails with the default values of class C (or /24). Signed-off-by: Radoslav Kolev <radoslav.kolev@rnd.bg>.

Modified Files:
ltp/testcases/network/stress/interface/if4-alias-addlarge

25) Log Message:
Stupid typo noticed by Paul Larson. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/Makefile

26) Log Message:
The following is changelog. This patch can fix the following problem:
-- delete the code of setting the test_fs flag
-- open the verbose mode of e4defrag, it is useful to find the problem of online defrag
-- fix some bug of the Makefile
-- throw the utilities version info away
-- delete two unnecessary testcases about ext4 subdir limit test
Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/fs/ext4-new-features/Makefile
ltp/testcases/kernel/fs/ext4-new-features/README
ltp/testcases/kernel/fs/ext4-new-features/ext4-delalloc-mballoc/ext4-alloc-test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/ext4_get_inode_version.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/ext4_inode_version_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-journal-checksum/ext4_journal_checksum.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-nsec-timestamps/ext4_nsec_timestamps_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-online-defrag/ext4_online_defrag_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-persist-prealloc/ext4_persist_prealloc_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-subdir-limit/ext4_subdir_limit_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-uninit-groups/ext4_uninit_groups_test.sh

27) Log Message:
math/float/thread_code.c, revert previous patch which added check for NaN. Here is a patch that reverts the previous patch applied to thread_cod.c. Some of the float tests were reporting a failure where it detected the difference between the result and expected result was NaN(not a number).  As some of the results and expected results resolved to inf(infinity), the difference calculation would result in NaN. With the previous patch, float_power and float_bessel tests were consistently failing on all architectures tried. Signed-off by: Henry Yei <hyei@mvista.com>. 

Modified Files:
ltp/testcases/misc/math/float/thread_code.c

28) Log Message:
1. Fix out-of-build-tree support (hit a few snags).
2. Enable ${bindir} support.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile
ltp/include/mk/automake.mk
ltp/include/mk/config.mk.default
ltp/include/mk/config.mk.in
ltp/include/mk/testcases.mk

29) Log Message:
As several folks have noticed (Mitani-san, etc), the entries in runtest/fs was incorrect and wasn't switched over from rwtest.sh to rwtest. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/fs

30) Log Message:
run_libevent.sh was looking for test-libevent.sh in the wrong directory as pointed out by Mitani-san, because the Makefile was installing from and to the relative path. Signed-off-by: Tomori Mitani <mitani@ryobi.co.jp>, Acked-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/libevent/run_libevent.sh

31) Log Message:
Fix the install and execution of the unzip01 test as it wasn't being done properly after the Makefile infra restructure. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/commands
ltp/testcases/commands/unzip/Makefile

32) Log Message:
Update the TODO list a bit. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/TODO

33) Log Message:
Fix compilation on systems where numa.h is present as nodemask_set is present in version 1 copy of numa.h. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/utils/numaif.h

34) Log Message:
ptrace.h: Let's try THIS for solving the compile issue on ia64... ptrace04.c: Need to add a stub cleanup() function for ptrace04 to compile. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c

35) Log Message:
Search path shouldn't be relative from current directory. Please use PATH instead. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

36) Log Message:
Improve filesystem checks for psuedo-fs'es like NFS rootfs through improved awk call. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.sh

37) Log Message:
1. Install the testscripts with LTP again.
2. Setup the initial piece for installing in the build tree, as requested by KD and a few others.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile
ltp/include/mk/env_pre.mk
ltp/testscripts/Makefile

38) Log Message:
Replace the while loop + counter with a more resource efficient iterator. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/execltp.in

39) Log Message:
It's run_libevent.sh, not run-libevent.sh. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

40) Log Message:
Fix the libevent compilation because it was half-assed before. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

41) Log Message:
As pointed out by Casper, the path to run_libevent.sh is actually specified incorrectly in runtest/syscalls. It should be $LTPROOT/testcases/bin/libevent/run_libevent.sh. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runtest/syscalls

42) Log Message:
As noted by luibo...
`According to case ld, ldd and nm's Makefile, s/*.o/*.obj/'.
1. ld01: Also, fix version parsing (newer versions don't have `version' in the same line as the version) and remove the hardcoded /usr/bin/ld // ld.
2. ldd01: Remove hardcoded cc // ldd.
3. nm01: Remove hardcoded cc // nm.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/commands/ade/ld/ld01
ltp/testcases/commands/ade/ldd/ldd01
ltp/testcases/commands/ade/nm/nm01

43) Log Message:
Remove one last hardcoded $CC. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/commands/ade/ld/ld01

44) Log Message:
Fix the missing event.h error found by Tomomori-san on systems without event.h by picking it up from the src directory as described in the following message. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

45) Log Message:
Hello, The command "export X=Y cmd" means export variable X (valued Y) and variable cmd; it does not run cmd. To do the latter, you can write  "X=Y cmd" (as in this patch) or "export X=Y; cmd". Signed-off-by: Jiri Palecek <jpalecek@web.de>,

Modified Files:
ltp/runtest/nfs

46) Log Message:
Hello, linktest.sh is failing when ran using the stress.part1 file, because it lacks command line arguments. This patch just adds them (taken from the fs runtest file). Signed-off-by: Jiri Palecek <jpalecek@web.de>,

Modified Files:
ltp/runtest/stress.part1

47) Log Message:
Fix autoconf preprocessor defines. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c

48) Log Message:
Revert to Mike's original copy of ptrace.h. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

49) Log Message:
Remove the idiot reference. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

50) Log Message:
Fix absolute path to library, as we're no longer directly installing libraries into $(libdir). Issue found by Caspar Zhang <czhang@redhat.com>.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/network/sctp/Makefile

51) Log Message:
Fix the remaining `lib-not-found' error when compiling for the second time as reported by Caspar Zhang <czhang@redhat.com>. Signed-off-by: Garrett Cooper
<yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/Makefile.inc

52) Log Message:
use the renamed syscall perf_event_open. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>,

Modified Files:
ltp/testcases/kernel/performance_counters/performance_counter01.c
ltp/testcases/kernel/performance_counters/performance_counter02.c

53) Log Message:
drop old __NR_perf_counter_open syscall name and force everyone to use new __NR_perf_event_open. Mike Frysinger <vapier@users.sourceforge.net>

Modified Files:
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/regen.sh

54) Log Message:
update config.sub/config.guess files. Mike Frysinger <vapier@users.sourceforge.net>,

Modified Files:
ltp/testcases/kernel/syscalls/pcllib/config.guess
ltp/testcases/kernel/syscalls/pcllib/config.sub
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/config.guess
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/config.sub
ltp/testcases/open_hpi_testsuite/config.guess
ltp/testcases/open_hpi_testsuite/config.sub

55) Log Message:
autoconf 2.61 on my work box pukes when CHECK_HEADERS_ONCE is used. Replace it with CHECK_HEADERS. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/m4/ltp-ptrace.m4

56) Log Message:
1. Fix the 2.x quota autoconf test
2. Disable the 1.x RHEL quota autoconf test (don't have a system to verify the requirement on).
3. Fix indentation in quotactl01.c
4. Block off some quotactl constants that only exist on quota 2.x.
5. Add a check for geteuid() => root. This is required for quotactl; seems funny that the test fails with EADDR though instead of properly setting the errno to EPERM for quotactl(QUOTA_ON, ...). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c
ltp/m4/ltp-quota.m4

57) Log Message:
1. ltp-signalfd.m4: be more strict with AC_CHECK_HEADERS by encapsulating the header items in [].
2. Change AC_CHECK_HEADERS_ONCE with AC_CHECK_HEADERS as my work copy of autoconf 2.61 / m4 pukes on this defun and improperly parses the header tokens.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/configure.ac
ltp/m4/ltp-signalfd.m4

58) Log Message:
Need to check if the preprocessor define is true or false, not if the definition exists as autoconf sets the preprocessor define to 0 if the DECL doesn't exist. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c

59) Log Message:
libevent.a gets put in the libevent directory, not libevent/lib directory. Adjust LDFLAGS accordingly. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

60) Log Message:
Hello, I've found some problems with the sendfile01 testcase (the one under network/tcp_cmds). This patch fixes them: Pass the -6 parameter to gethost if we are to use ipv6 and run the ipv6 server in that case. Also, fix the awk code for getting the PID: The PID is the second column, which is $2, not $1. Also: 
 - initialize addrlen for accept syscall in the server (=> avoid EINVAL)
 - use tst_resm in the client instead of tst_res, to avoid an error message interpreted as a filename
The patch originally sent via email was modified so that the POSIX form of ps was called (with the -), and the PID was in the first column. Furthermore, this patch was modified to ensure that IPADDR was in fact being set to a valid value to avoid hangs as gethost could be missing (as well as netlib.sh), which symbolizes an install failure, which would ultimately result in a test hang. Signed-off-by: Jiri Palecek <jpalecek@web.de>,

Modified Files:
ltp/testcases/network/tcp_cmds/sendfile/sendfile01
ltp/testcases/network/tcp_cmds/sendfile/testsf_c.c
ltp/testcases/network/tcp_cmds/sendfile/testsf_s.c

61) Log Message:
Apply the fix for the issue noted below. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>. Tomonori Mitani

Modified Files:
ltp/testscripts/Makefile
ltp/testscripts/test_fs_bind.sh
ltp/testcases/kernel/fs/fs_bind/bin/Makefile

62) Log Message:
Apply the fix for the issue noted below. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/fs/fs_bind/Makefile

63) Log Message:
Resolve the issue reported in the following email by using WIFEXITED(status) && WEXITSTATUS(status) == 0 as the pass criteria, as it should be according to wait(2). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep04.c

64) Log Message:
Address the issue reported in the following email by installing all .c files. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/commands/ade/nm/Makefile

65) Log Message:
configure.ac: add a check for linux/mempolicy.h testcases/kernel/hotplug/...:
- Enable memory hotplug build and install
- Cordon off mempolicy / numa dependent logic on systems where it isn't available for compile / linux.
- Remove ad hoc / mostly incorrect move_mempages logic.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/m4/ltp-numa.m4
ltp/testcases/kernel/hotplug/Makefile
ltp/configure.ac
ltp/testcases/kernel/hotplug/memory_hotplug/Makefile
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.h
ltp/testcases/kernel/hotplug/memory_hotplug/segment.c

66) Log Message:
Fix the build for systems with newer versions of libnuma because it causes compilation errors (example: RHEL 5.2). The test was using libnuma 1.x API's and thus needs to be adapted to 2.x's API's. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/m4/ltp-numa.m4

Removed Files:
ltp/testcases/kernel/hotplug/memory_hotplug/migrate_pages.c
ltp/testcases/kernel/hotplug/memory_hotplug/migrate_pages.h
ltp/include/mk/config.mk.default
ltp/include/mk/config.mk.in
ltp/testcases/kernel/syscalls/get_mempolicy/Makefile
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c

67) Log Message:
get_mempolicy01: move libnuma v2 note to numa_helpers.h. mbind01.c: wash, rinse, repeat. numa_helpers.h: move libnuma v2 note here. Garrett Cooper <yaberauneya@users.sourceforge.net>,

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

Added Files:
ltp/testcases/kernel/syscalls/utils/numa_helpers.h
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c

68) Log Message:
Fix a typo. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/hotplug/memory_hotplug/segment.c

69) Log Message:
1) memtoy is a standalone tool, not a test. So let's not LTP-ify it too much.
2) Resolve a lot of other delightful typos... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/hotplug/memory_hotplug/Makefile
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.c

70) Log Message:
Shuffle around macros, and put a safe-ish default in for __NR_migrate_pages (0). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>. 

Modified Files:
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c

71) Log Message:
Fix part 1 of the issue described in the following email: Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cgroup_fj/run_cgroup_test_fj.sh

72) Log Message:
Fix part two of the email below... and fix some bash-isms while I'm at it... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cgroup/cgroup_regression_test.sh

LTP-20091130

1) Log Message:
Fix expected output in ar01 testcase: According to POSIX, the verbose output of "ar -tv" should not contain the leading zero in day-of-month (its format should be equivalent to %e specifier of date) [source: man(1posix)]. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/ade/ar/ar01

2) Log Message:
Use a saner variant for computing the number of groups in cpuctl tests: this patch changes the calculation of numer of groups in cpuctl test. The new code doesn't need bc, and is more comprehensible IMHO. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/parameters.sh

3) Log Message:
Other compiler warning fixes: this is another chunk of compiler warning fixes in LTP tests, related to printf format strings. They have multiple causes:
- most of them are caused by %d used for the TEST_RETURN variable (as in a previous patch),
- off_t are cast to (int64_t) and PRId64 output specifier is used for them,
- other types are cast to (intmax_t) or (uintmax_t) and use the %jd or %ju (C99) output specifier. I've used this solution because it's generally correct, easy to use solution that is portable and (IMHO) more readable than using PRId64/PRIu64 and a cast (which you generally can't avoid). This way, there's only a cast,
- in ioperm test, address should be declared as unsigned long (according to ioperm(2)),
- other little fixes (foo vs. *foo, %S vs. %s, %0 vs. %o). 
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl02.c
ltp/testcases/kernel/syscalls/fcntl/fcntl03.c
ltp/testcases/kernel/syscalls/fcntl/fcntl04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl05.c
ltp/testcases/kernel/syscalls/fcntl/fcntl11.c
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c
ltp/testcases/kernel/syscalls/fcntl/fcntl19.c
ltp/testcases/kernel/syscalls/fcntl/fcntl20.c
ltp/testcases/kernel/syscalls/fcntl/fcntl21.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fork/fork09.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/gettimeofday/gettimeofday02.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c
ltp/testcases/kernel/syscalls/ioperm/ioperm01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl07.c
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c
ltp/testcases/kernel/syscalls/llseek/llseek01.c
ltp/testcases/kernel/syscalls/lseek/lseek01.c
ltp/testcases/kernel/syscalls/lseek/lseek07.c
ltp/testcases/kernel/syscalls/mkdir/mkdir08.c
ltp/testcases/kernel/syscalls/mknod/mknod01.c
ltp/testcases/kernel/syscalls/mknod/mknod06.c
ltp/testcases/kernel/syscalls/mknod/mknod07.c
ltp/testcases/kernel/syscalls/mknod/mknod09.c
ltp/testcases/kernel/syscalls/mlockall/mlockall01.c
ltp/testcases/kernel/syscalls/mlockall/mlockall02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall03.c
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.c
ltp/testcases/kernel/syscalls/msync/msync03.c
ltp/testcases/kernel/syscalls/msync/msync04.c
ltp/testcases/kernel/syscalls/msync/msync05.c
ltp/testcases/kernel/syscalls/munlock/munlock01.c
ltp/testcases/kernel/syscalls/munlock/munlock02.c
ltp/testcases/kernel/syscalls/munlockall/munlockall01.c
ltp/testcases/kernel/syscalls/munmap/munmap03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep01.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep04.c
ltp/testcases/kernel/syscalls/newuname/newuname01.c
ltp/testcases/kernel/syscalls/nice/nice04.c
ltp/testcases/kernel/syscalls/nice/nice05.c
ltp/testcases/kernel/syscalls/pathconf/pathconf01.c
ltp/testcases/kernel/syscalls/pipe/pipe03.c
ltp/testcases/kernel/syscalls/prctl/prctl01.c
ltp/testcases/kernel/syscalls/prctl/prctl02.c
ltp/testcases/kernel/syscalls/pread/pread01.c
ltp/testcases/kernel/syscalls/pread/pread02.c
ltp/testcases/kernel/syscalls/pread/pread03.c
ltp/testcases/kernel/syscalls/pselect/pselect01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite02.c
ltp/testcases/kernel/syscalls/pwrite/pwrite03.c
ltp/testcases/kernel/syscalls/read/read01.c
ltp/testcases/kernel/syscalls/read/read04.c
ltp/testcases/kernel/syscalls/readlink/readlink01.c
ltp/testcases/kernel/syscalls/readlink/readlink02.c
ltp/testcases/kernel/syscalls/readlink/readlink03.c
ltp/testcases/kernel/syscalls/readlink/readlink04.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/rename/rename02.c
ltp/testcases/kernel/syscalls/rmdir/rmdir04.c
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction02.c
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction03.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max02.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min01.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam01.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval01.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam01.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam02.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendmsg/sendmsg01.c
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c
ltp/testcases/kernel/syscalls/set_tid_address/set_tid_address01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid02.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid03.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid02.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid03.c
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c
ltp/testcases/kernel/syscalls/sethostname/sethostname01.c
ltp/testcases/kernel/syscalls/setpgid/setpgid01.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp01.c
ltp/testcases/kernel/syscalls/setregid/setregid01.c
ltp/testcases/kernel/syscalls/setregid/setregid02.c
ltp/testcases/kernel/syscalls/setregid/setregid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid01.c
ltp/testcases/kernel/syscalls/setreuid/setreuid02.c
ltp/testcases/kernel/syscalls/setsockopt/setsockopt01.c
ltp/testcases/kernel/syscalls/setuid/setuid01.c
ltp/testcases/kernel/syscalls/setuid/setuid02.c
ltp/testcases/kernel/syscalls/sgetmask/sgetmask01.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack02.c
ltp/testcases/kernel/syscalls/signal/signal04.c
ltp/testcases/kernel/syscalls/sigpending/sigpending02.c
ltp/testcases/kernel/syscalls/sigsuspend/sigsuspend01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall03.c
ltp/testcases/kernel/syscalls/socketcall/socketcall04.c
ltp/testcases/kernel/syscalls/sockioctl/sockioctl01.c
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/stat/stat03.c
ltp/testcases/kernel/syscalls/stat/stat05.c
ltp/testcases/kernel/syscalls/stat/stat06.c
ltp/testcases/kernel/syscalls/statfs/statfs01.c
ltp/testcases/kernel/syscalls/statfs/statfs03.c
ltp/testcases/kernel/syscalls/statvfs/statvfs01.c
ltp/testcases/kernel/syscalls/stime/stime02.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c
ltp/testcases/kernel/syscalls/sync/sync01.c
ltp/testcases/kernel/syscalls/tee/tee01.c
ltp/testcases/kernel/syscalls/time/time01.c
ltp/testcases/kernel/syscalls/time/time02.c
ltp/testcases/kernel/syscalls/times/times03.c
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/truncate/truncate04.c
ltp/testcases/kernel/syscalls/ulimit/ulimit01.c
ltp/testcases/kernel/syscalls/umask/umask01.c
ltp/testcases/kernel/syscalls/umask/umask03.c
ltp/testcases/kernel/syscalls/uname/uname01.c
ltp/testcases/kernel/syscalls/unlink/unlink05.c
ltp/testcases/kernel/syscalls/unlink/unlink06.c
ltp/testcases/kernel/syscalls/unlink/unlink07.c
ltp/testcases/kernel/syscalls/unlink/unlink08.c
ltp/testcases/kernel/syscalls/utime/utime06.c
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c
ltp/testcases/kernel/syscalls/wait4/wait401.c
ltp/testcases/kernel/syscalls/write/write01.c
ltp/testcases/kernel/syscalls/writev/writev06.c
ltp/testcases/kernel/timers/clock_settime/clock_settime03.c
ltp/testcases/network/lib6/asapi_04.c
ltp/testcases/network/lib6/asapi_05.c
ltp/testcases/network/lib6/getaddrinfo_01.c
ltp/testcases/network/lib6/in6_02.c

4) Log Message:
Add an explicit requirement in the documentation stating that people need to have Gnu make 3.81, because many of the constructs in the new Makefile infrastructure will not work with prior versions of Gnu Make or other versions of Make. Garrett Cooper <yaberauneya@users.sourceforge.net>.

Modified Files:
ltp/INSTALL

5) Log Message:
extend autoconf ptrace tests. Mike Frysinger <vapier@users.sourceforge.net>.

Modified Files:
ltp/m4/ltp-ptrace.m4
ltp/testcases/kernel/controllers/freezer/vfork.c
ltp/testcases/kernel/syscalls/ptrace/ptrace01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace02.c
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c
ltp/testcases/kernel/syscalls/ptrace/ptrace05.c
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c

6) Log Message:
define and use common clone helpers. From: Serge E. Hallyn <serue@us.ibm.com>. Define ltp_clone() and related helpers in libltp, and convert all existing clone usages to them. This way we no longer have arch-specific cruft cluttering up random source files all over the place.

Modified Files:
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/utsname/check_utsns_enabled.c
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/pidns/pidns12.c
ltp/testcases/kernel/containers/pidns/pidns13.c
ltp/testcases/kernel/containers/pidns/pidns16.c
ltp/testcases/kernel/containers/pidns/pidns20.c
ltp/testcases/kernel/containers/pidns/pidns21.c
ltp/testcases/kernel/containers/pidns/pidns30.c
ltp/testcases/kernel/containers/pidns/pidns31.c
ltp/testcases/kernel/fs/fs_bind/bin/Makefile
ltp/testcases/kernel/fs/fs_bind/bin/nsclone.c
ltp/testcases/kernel/controllers/cgroup/test_6_2.c
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c
ltp/include/mk/config.mk.default
ltp/include/mk/config.mk.in
ltp/testcases/kernel/security/tomoyo/Makefile
ltp/testcases/kernel/security/tomoyo/newns.c
ltp/testcases/kernel/syscalls/clone/clone01.c
ltp/testcases/kernel/syscalls/clone/clone02.c
ltp/testcases/kernel/syscalls/clone/clone03.c
ltp/testcases/kernel/syscalls/clone/clone04.c
ltp/testcases/kernel/syscalls/clone/clone05.c
ltp/testcases/kernel/syscalls/clone/clone06.c
ltp/testcases/kernel/syscalls/clone/clone07.c
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/sysvipc/check_ipcns_enabled.c
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/netns/common.c
ltp/include/test.h
Removed Files:
ltp/testcases/kernel/controllers/cgroup/clone_platform.h
Added File(s):
ltp/lib/cloner.c

7) Log Message:
The patch does the following:

1. Simplifies the code in get_mempolicy01,
2. Fixes indentation (some of the output in the diff looks wrong, but it's correct in the real testcase file),
3. Uses TERRNO for getting the error per testcase call properly, instead of getting the last errno value,
4. Uses basename(3) instead of hacking with strchr(3),
5. Disables the test for s390x (as __NR_get_mempolicy, __NR_mbind, and __NR_set_mempolicy aren't defined), as described in `Build Fails on some archs' thread,
Enabled:
get_mempolicy01    0  TINFO  :  (case00) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    1  TPASS  :  (case00) END
get_mempolicy01    0  TINFO  :  (case01) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    2  TPASS  :  (case01) END
get_mempolicy01    0  TINFO  :  (case02) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    3  TPASS  :  (case02) END
get_mempolicy01    0  TINFO  :  (case03) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    4  TPASS  :  (case03) END
get_mempolicy01    0  TINFO  :  (case04) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    5  TPASS  :  (case04) END
get_mempolicy01    0  TINFO  :  (case05) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    6  TPASS  :  (case05) END
get_mempolicy01    0  TINFO  :  (case06) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    7  TPASS  :  (case06) END
get_mempolicy01    0  TINFO  :  (case07) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    8  TPASS  :  (case07) END
get_mempolicy01    0  TINFO  :  (case08) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01    9  TPASS  :  (case08) END
get_mempolicy01    0  TINFO  :  (case09) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
get_mempolicy01   10  TPASS  :  (case09) END
get_mempolicy01    0  TINFO  :  (case10) START
EXPECT: return value(ret)=-1 errno=14 (Bad address)
RESULT: return value(ret)=-1 errno=14 (Bad address)
get_mempolicy01   11  TPASS  :  (case10) END
get_mempolicy01    0  TINFO  :  (case11) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
get_mempolicy01   12  TPASS  :  (case11) END
Forced disable (#undef'ed __NR_get_mempolicy):
$ ./get_mempolicy01
get_mempolicy01    1  TCONF  :  Your system doesn't properly support:
get_mempolicy
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c

8) Log Message:
1. Disable the test whenever the appropriate headers and syscalls don't exist so this will compile on systems without numa and without.
2. Fix the indentation.
3. Use TFAIL | TERRNO instead of all of the ad-hoc (TFAIL ... TERRNO, strerror(TERRNO)) logic.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

9) Log Message:
1. Use linux_syscall_numbers.h.
2. Fix a format string (use inttypes.h).
3. Remove an unused var.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c

10) Log Message:
I was confused, and numaif.h is in fact a header under testcases/kernel/syscalls/utils. As such:

1. The autoconf test for the header is removed.
2. An appropriate inclusion is added for numa.h in numaif.h
3. Remove overengineered code in get_mempolicy01.c because linux_syscall_numbers.h handles the unhandled numa syscall numbers.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/get_mempolicy/et_mempolicy01.c
ltp/testcases/kernel/syscalls/mbind/mbind01.c
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.h
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.c
ltp/testcases/kernel/syscalls/move_pages/Makefile
ltp/m4/ltp-numa.m4

11) Log Message:
Fix bad SQA:
1. main was missing an int return code.
2. #include <stdio.h> was missing for the printf.

Modified Files:
ltp/testcases/commands/ade/ar/file1.c
ltp/testcases/commands/ade/ar/file2.c
ltp/testcases/commands/ade/ar/file3.c

12) Log Message:
Report errors appropriate to whether or not the read / write operations with the pipe succeeded. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/containers/libclone/libclone.c

13) Log Message:
drop compile-time checks for the syscall and rely completely on runtime --people missing __NR_fallocate should update include/linux_syscall_numbers.h. Mike Frysinger <vapier@users.sourceforge.net>.

Modified Files:
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c

14) Log Message:
fallocate02: add a default case to avoid gcc uninitialized warning. Mike Frysinger <vapier@users.sourceforge.net>.

Modified Files:
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c

15) Log Message:
Add a Common Issues section to address common roadblocks encountered with the build.  Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/INSTALL

16) Log Message:
Fix the Makefile comment title. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

17) Log Message:
Fix an unitialized variable and usage corner case where if argc > 1, it would always accept the arguments as-is. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_pressure_test/cpuset_memory_pressure.c

18) Log Message:
main was lacking a return code. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/commands/ade/ar/file1.c

19) Log Message:
Fix the issue filed as https://sourceforge.net/tracker/?func=detail&aid=2892491&group_id=202378&atid=981342. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/utils/benchmark/ebizzy-0.3/ebizzy.c

20) Log Message:
main is missing a return code. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/commands/ade/ar/file3.c

21) Log Message:
Wow, ok -- copy-paste R'US. Missing return code in main, yet again. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/commands/ade/ar/file2.c

22) Log Message:
1. Fix 2 format strings, so that the underlying scripts actually are called properly.
2. Use appropriate precision so that 64-bit archs don't whine about printing out pid_t format strings.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/containers/netns/common.c

23) Log Message:
forgot to add ptrace.h as Garrett pointed out. Mike Frysinger <vapier@users.sourceforge.net>.

Added Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

24) Log Message:
The wording for the requirements was ambiguous and confusing. Make things explicit that you need make 3.81 to compile LTP. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/INSTALL

25) Log Message:
Drop the caps.

Modified Files:
ltp/INSTALL

26) Log Message:
drop adding of -O/-W type flags that are already handled in common .mk files. for the few makefiles that arent yet converted to the .mk infrastructure: Lately gcc developers introduced -Wextra flag that does the same as -W but is more descriptive. According to this using -W flag should be safe (as gcc is backward compatlible) but using -Wextra is limited to newer gcc releases. Attached patch replaces all -Wextra occurences with -W and thus fixes compliation failures with older gcc (mine was gcc-3.3.3 on sles). Patch by Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/testcases/kernel/device-drivers/misc_modules/per_cpu_allocator_module/Makefile
ltp/testcases/kernel/device-drivers/acpi/Makefile
ltp/testcases/kernel/controllers/cgroup_fj/Makefile
ltp/testcases/kernel/controllers/cpuacct/Makefile
ltp/testcases/kernel/device-drivers/block/kernel_space/Makefile
ltp/testcases/kernel/controllers/cpuctl_fj/Makefile
ltp/testcases/kernel/device-drivers/v4l/kernel_space/Makefile
ltp/testcases/kernel/io/disktest/Makefile
ltp/testcases/kernel/device-drivers/usb/tusb/Makefile
ltp/testcases/kernel/device-drivers/nls/Makefile
ltp/testcases/kernel/device-drivers/tbio/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile

27) Log Message:
1. Correct a missing reference in Makefile.
2. Correct some typos and other grammatical issues with README.mk-devel.

Modified Files:
ltp/README.mk-devel
ltp/Makefile

28) Log Message:
Correct another typo and fix the Quick Start directions. Found-by: Randy Dunlap <rdunlap@xenotime.net>, Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/INSTALL

29) Log Message:
numaif.h needs config.h to pick up the HAVE_NUMA_H autoconf set variable in config.h. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/utils/numaif.h

30) Log Message:
Get rid of a valid -Wunused warning with the fscanf(3). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/lib/system_specific_process_info.c

31) Log Message:
Make sure that the chown is successful, and use getegid(2) instead of getgid(2). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/access/access01.c

32) Log Message:
Having config.h.default automatically replace config.h is a nuisance. People should be directed to go read install again, instead of running into some undefined symbols in autoconf-generated territory, especially because config.h.default is a much smaller subset of config.h generated by autoconf/config.h.in. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/automake.mk

33) Log Message:
The description for the RHEL 4.8 quotactl check was misleading. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/m4/ltp-quota.m4

34) Log Message:
Update config.h.default to match config.h.in. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/config.h.default

35) Log Message:
Return non-void return code when PTRACE junk is missing. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c

36) Log Message:
Apparently my system has all 3 of the available headers in its default -I search path:
- sys/ptrace.h
- linux/ptrace.h
- asm/ptrace.h
Make these headers mutually exclusive so they don't clash with one another and screw up some of the autoconf'ed decl tests. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

37) Log Message:
Be consistent with the braces. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/lib/cmdlib.sh

38) Log Message:
vfork.c:
- Fix autoconf test result name for PTRACE_O_TRACEVFORK*.
vfork_freeze.sh:
- Implement proper TMPDIR logic.
- Remove forced make in place of optional (if needed) make operation.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c
ltp/testcases/kernel/controllers/freezer/vfork_freeze.sh

39) Log Message:
Dumb arse typo... Signed-off-by: The idiot that made the last checkin <root@devnull.com>.

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c

40) Log Message:
Just remove the frak'ing \t to be consistent with the old version. Blasted cylons... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c

41) Log Message:
vfork.c:
1. Add signal handling code and cleanup code.
2. Protect against ptrace(PTRACE_KILL, -1, ...) *grins*.
3. Add a -f option so one could print out info with tst_res(3) while outputting data to the ptrace logfile.
vfork_freeze.sh:
1. Standardize the log name.
2. Fix a syntax error.

Modified Files:
ltp/testcases/kernel/controllers/freezer/vfork.c
ltp/testcases/kernel/controllers/freezer/vfork_freeze.sh

42) Log Message:
Ok -- APPARENTLY asm/ptrace.h IS required for pt_regs! Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

43) Log Message:
Make all of the numa tests consistent and correct. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/get_mempolicy/Makefile
ltp/testcases/kernel/syscalls/move_pages/move_pages01.c
ltp/testcases/kernel/syscalls/move_pages/move_pages02.c
ltp/testcases/kernel/syscalls/move_pages/move_pages03.c
ltp/testcases/kernel/syscalls/move_pages/move_pages04.c
ltp/testcases/kernel/syscalls/move_pages/move_pages05.c
ltp/testcases/kernel/syscalls/move_pages/move_pages06.c
ltp/testcases/kernel/syscalls/move_pages/move_pages07.c
ltp/testcases/kernel/syscalls/move_pages/move_pages08.c
ltp/testcases/kernel/syscalls/move_pages/move_pages09.c
ltp/testcases/kernel/syscalls/move_pages/move_pages10.c
ltp/testcases/kernel/syscalls/move_pages/move_pages11.c
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.c

44) Log Message:
need to include -lclone before -lltp. Mike Frysinger <vapier@users.sourceforge.net>.

Modified Files:
ltp/testcases/kernel/containers/mqns/Makefile

45) Log Message:
Fix build failure in cgroup_fj testcase: The following build failure occured on my x86 box. But the case "cgroup_fj" does not need "-lcontrollers" when building. So in my patch, i deleted "-lcontrollers" in testcases/kernel/controllers/Makefile.inc and added it to testcases/kernel/controllers/memctl/Makefile because the case "memctl" need it. All other cases in testcases/kernel/controllers/ build well too when my patch merged. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.
 
Modified Files:
ltp/testcases/kernel/controllers/Makefile.inc
ltp/testcases/kernel/controllers/memctl/Makefile

46) Log Message:
Following patch fixes buffer overflow.c. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/testcases/kernel/fs/doio/growfiles.c

47) Log Message:
Rename coliding names in runtest files: Following patch renumbers testcase names in runtest/ltp-aio-stress.part1 and runtest/ltp-aio-stress.part2 so that their names don't collide. Also renames testcases in runtest/ltp-aiodio.part2 so that they don't collide with ltp-aio-stress ones. Signed-off-by: <chrubis@suse.cz>.

Modified Files:
ltp/runtest/ltp-aio-stress.part1
ltp/runtest/ltp-aio-stress.part2 ltp/runtest/ltp-aiodio.part2

48) Log Message:
1. Don't nuke config.h with clean. ac-clean will do that,
2. config.h can and should be produced either via manual intervention (discouraged) or configure (preferred),
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/Makefile

49) Log Message:
Get rid of an unused var. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

50) Log Message:
Resolve some clashing symbols for static functions that are in fact defined in numa.h. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/utils/numaif.h

51) Log Message:
The shuffle of headers broke the ia64 workaround. Mike Frysinger <vapier@users.sourceforge.net>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

52) Log Message:
Make a note about the pt_reg changes that Mike implemented, so that another poor sole won't accidentally screw up this header. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

53) Log Message:
ext4: fix script error of ext4_nsec_timestamps_test.sh:
Execute test case of ext4_nsec_timestamps_test.sh had some errors:
./ext4_nsec_timestamps_test.sh: line 183: [0: command not found
./ext4_nsec_timestamps_test.sh: line 189: [0: command not found
This patch fixes them. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/fs/ext4-new-features/ext4-nsec-timestamps/ext4_nsec_timestamps_test.sh

54) Log Message:
Removal of this testcase and it's reference as per "Serge E. Hallyn" <serue@us.ibm.com> suggestion: The patch in question is upstream, so pidns21.c will always fail and should be removed from ltp. It's worth testing that the container init survives SIGUSR1 from a child, but whether it survives or dies from a parent we don't particularly care.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Removed Files:
ltp/testcases/kernel/containers/pidns/pidns21.c

55) Log Message:
1. The logic check for IDcheck.sh was inverted for finding entries.
2. sys and users were being checked for in /etc/password, not /etc/group.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/IDcheck.sh

56) Log Message:
Add a note about outdated m4 output seen on RHEL 5.2. Need to add a check for m4 version in configure.ac *sigh*.... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/INSTALL

57) Log Message:
Correction -- it wasn't just m4. automake was outdated and after it was upgraded to an appropriate version, things just worked like they should. Update the directions again to note that. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/INSTALL

58) Log Message:
Fix the numa-related items for good so that they compile on systems with numa on them. This was compile-tested on Fedora 11 with numactl-devel installed and it passed. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/get_mempolicy/Makefile

59) Log Message:
Fix the numa-related items for good so that they compile on systems with numa on them. This was compile-tested on Fedora 11 with numactl-devel installed and it passed. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

ltp/testcases/kernel/syscalls/utils/numaif.h
ltp/testcases/kernel/syscalls/move_pages/Makefile
ltp/testcases/kernel/syscalls/mbind/Makefile

60) Log Message:
Fix a missing brace. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/containers/mqns/mqns_02.c

61) Log Message:
Add runalltests.sh to the install list so it gets installed too. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile

62) Log Message:
Enhance runalltests.sh so that it can be executed from anywhere. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runalltests.sh

63) Log Message:
Just need to make sure that we're in LTPROOT before executing anything because unfortunately all of the paths are RELATIVE to LTPROOT XD. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runalltests.sh

64) Log Message:
1. Remove some stale items that have been resolved or are no longer pertinent.
2. Add a note about libevent being messed up.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/TODO

65) Log Message:
Fix some unchecked return warnings in mqns_01.c. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/containers/mqns/mqns.h
ltp/testcases/kernel/containers/mqns/mqns_01.c

66) Log Message:
support ptrace on sparc. Mike Frysinger <vapier@users.sourceforge.net>

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/simple_tracer.c
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.h.

67) Log Message:
Fix __NR_[gs]et_mempolicy syscall numbers and a few other syscall numbers. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/sh.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in 
ltp/testcases/kernel/include/x86_64.in

68) Log Message:
Forgot to add __NR_add_key to the rest of the .in files. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/x86_64.in

69) Log Message:
Fix SIGSEGV if the group entries are missing. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/setregid/setregid04.c

70) Log Message:
Use linux_syscall_numbers's syscall macro instead of syscall(2), so we can test for TCONF'ability of syscall. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/clock_getres/clock_getres01.c

71) Log Message:
Properly granularize errno reporting for sysconf. The manpage only says that EINVAL is supported for return codes. Everything else is free game for error reporting. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c

72) Log Message:
Make the test user lookup error for error bind02 a bit more intuitive. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/bind/bind02.c

73) Log Message:
Consolidate all of the logic in one area and clean it up significantly. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c

74) Log Message:
Add __NR_keyctl. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in 
ltp/testcases/kernel/include/x86_64.in

75) Log Message:
Makefile: No need to compile `create_link_16' ;)... create_link.c: Clean up the logic flow. lchown02.c: The change I made a few months ago, accidentally broke this app, as the process isn't it's CAP_CHOWN'ed, and thus the chown will always fail, by accident. I know I can CAP_CHOWN the proc ess, but prep_create_link: Add script to resolve the chown breakage. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/lchown/Makefile
ltp/testcases/kernel/syscalls/lchown/create_link.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c

76) Log Message:
Check in runtest changes for lchown02, and libevent (have to fix that still... almost done). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runtest/syscalls

77) Log Message:
1. Convert rwtest.sh to rwtest (part 1).
2. Convert lchown02 in ltplite, according to what was also done to syscalls.
3. Convert the aio junk to $TMPDIR (this may or may not require additional work... memory serves me correctly, it does).
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runtest/ltp-aiodio.part1
ltp/runtest/ltp-aiodio.part3
ltp/runtest/ltp-aiodio.part4
ltp/runtest/ltplite 
ltp/runtest/lvm.part1
ltp/runtest/lvm.part2
ltp/runtest/scsi_debug.part1
ltp/runtest/stress.part1
ltp/runtest/stress.part3

78) Log Message:
Make the switchover from rwtest.sh to rwtest. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/fs/doio/Makefile 
Added Files:
ltp/testcases/kernel/fs/doio/rwtest 
Removed Files:
ltp/testcases/kernel/fs/doio/rwtest.sh

79) Log Message:
Stupid me... I accidentally was mixing pointers with constants >_>... Fix my changes to setregid04, so it doesn't segfault if the groups don't exist, but still remains functional when run. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/setregid/setregid04.c

80) Log Message:
Quell the _GNU_SOURCE already defined noise. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/lib/cloner.c

81) Log Message:
Change += back to := for LDLIBS. I did this for a reason (to make sure that everyone adds the appropriate LDLIBS values after including config.mk // env_pre.mk // testcases.mk). We need to solve the linker issue with libclone, properly, not shove the issue under the rug with things like this. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/config.mk.default
ltp/include/mk/config.mk.in

82) Log Message:
Use linux_syscall_numbers.h instead of the syscalls. Need to add the __NR_ defs to the .in files still. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/pidns/pidns30.c
ltp/testcases/kernel/containers/pidns/pidns31.c
ltp/testcases/kernel/containers/mqns/mqns_01.c
ltp/testcases/kernel/containers/mqns/mqns_02.c
ltp/testcases/kernel/containers/mqns/mqns_03.c
ltp/testcases/kernel/containers/mqns/mqns_04.c

83) Log Message:
Add the mq_* syscalls to the syscall list for each available architecture. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sh.in 
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/x86_64.in

84) Log Message:
1. Linker ordering is painful; -lltp must come last for some weird arse reason in order to work with binutils 1.19.51, whereas it needs to precede -lclone on 1.18.. We'll see whether or not it's fubar still in a minute...
2. Not all of the mq_* functions are syscalls; many are in fact libcalls, so we need to use the appropriate function call to stimulate them.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/mqns/Makefile
ltp/testcases/kernel/containers/mqns/mqns.h
ltp/testcases/kernel/containers/mqns/mqns_01.c
ltp/testcases/kernel/containers/mqns/mqns_02.c
ltp/testcases/kernel/containers/mqns/mqns_03.c
ltp/testcases/kernel/containers/mqns/mqns_04.c
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/pidns/pidns30.c
ltp/testcases/kernel/containers/pidns/pidns31.c

85) Log Message:
I was REALLY stupid when I made clean dependent on ac-distclean. BAD BAD IDEA. Forcing people to have to call configure every time clean is run is STUPID design. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>, 

Modified Files:
ltp/include/Makefile

86) Log Message:
Checking in possible final / intermediate solution to ppoll01 not functioning on mips32. I say intermediate because of the following message: AHA! I figured out why sigset is sized differently on mips32 for you, compared to other architectures. Just like there's a compat_caddr_t datatype (which is explicitly set to char *), there's also a compat_sigset_t as well. Let me see if I can figure out this mystery, but my guess is that you're using n32 based mips, most likely on an Octeon model ;) ;)... which would account for what you're seeing here and possibly account for why the test consistently hangs on our Cavium boards at work (our version of Linux has been hacked so bad though to take shortcuts in the design process instead of following proper design procedure that it makes me cry inside...). The patch attached for ppoll01:
1. Cleans up spacing and code style
2. Removes unneeded/broken debug option parsing if test fails.
3. Prints out the last failed errno, rather than just the last errno(which may have been successful)
4. Passes in correct size of sigset_t for mips.
This patch was tested/passed on x86, mips(little endian), and ppc_82xx. Signed-off-by: Henry Yei <hyei@mvista.com>, Acked-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

87) Log Message:
1. Skip over /proc/irq by default to avoid broken hardware / drivers, and thus avoid `hangs'. You can traverse over /proc/irq using -i though.
2. Make the selinux piece a compile-time conditional, to avoid the additional function call.
3. Fix the overflow issue on 64-bit systems by increasing values of total_obj, et all to unsigned long long's.
4. Only call close / closedir if fd is > 0 and dir is not NULL.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/fs/proc/proc01.c

88) Log Message:
Let's not overwrite /bin/cat by accident in open08 if the setguid / setuid fails, mmk? Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/open/open08.c

89) Log Message:
As noticed by Shi Weihua, there was a syntax error in the awk command in get_cpu_usage: 
awk: print $9
awk: ^ syntax error pid 8077 cpu_usage
cpuctl_test_fj    1  TFAIL  :  case19    FAIL awk: print $9
awk: ^ syntax error pid 8104 cpu_usage
cpuctl_test_fj    1  TFAIL  :  case20    FAIL awk: print $9
awk: ^ syntax error
pid 8131 cpu_usage cpuctl_test_fj    1  TFAIL  :  case21    FAIL
awk: print $9 awk: ^ syntax error
pid 8193 cpu_usage cpuctl_test_fj    1  TFAIL  :  case22    FAIL
The checkin corrects the syntax error by implementing the function in a much cleaner manner than the previous implementation, by using just ps | awk instead of top | tail | head | awk | awk. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

90) Log Message:
mem/hugetlb: fix failure of hugemmap04: Testcase hugemmap04 needs at least one hugepage to test, so there needs a judgement of "number of hugepages". This patch fixed the problems. Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>. 

Modified Files:
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c

91) Log Message:
Fix some remaining compile errors that we're checked in earlier... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/libclone/libclone.h

92) Log Message:
1. Remove the .c files and all calls in runpwtests.sh because we can achieve the same thing through additional shell test logic.
2. Add the apicmds dependency.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/power_management/Makefile
ltp/testcases/kernel/power_management/runpwtests.sh 
Removed Files:
ltp/testcases/kernel/power_management/check_kv_arch.c
ltp/testcases/kernel/power_management/get_sched_values.c

93) Log Message:
mail: fix the bug of mail01: In the testcase "mail01", when mail is send to nosuchuser@domain and mail is send to user@nosuchdomain, mail program may return either "Returnedmail:" or "UndeliveredMailReturned", regardless of the existence of /etc/redhat-release. So, we did a bit of changes to recognize both of returned values. This patch fixes the problem. Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>.

Modified Files:
ltp/testcases/commands/mail/mail_tests.sh

94) Log Message:
[PATCH (1/2)] add atomi_add() define for __sh__. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified Files:
ltp/testcases/realtime/include/librttest.h

95) Log Message:
[PATCH (2/2)] splitting the tsc support. The patch moves the tsc macros form the librttest.h to another header file (named libtsc.h). Without this I got the following error and no tests were built.
 [snip]
 In file included from librttest.c:43:
 ../include/librttest.h:127:2: error: #error
 ../include/librttest.h:169:2: error: #error
 In file included from librttest.c:43:
 ../include/librttest.h: In function ‘atomic_add’:
 [snip]
The tsc macros header is only included in the following tests (thus where necessary):
 o async_handler_tsc.c
 o preempt_timing.c
 o rdtsc-latency.c
Note1: instead of touching the make process the patch allows to build the tests above also for architecture that do not support tsc, yet. These tests will fail at run-time with ENOTSUP. A warning will appear while compiling as well. hmm, I do know if it is the right solution but it's simple and a good starting point for me. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/measurement/rdtsc-latency.c
ltp/testcases/realtime/include/librttest.h
Added Files:
ltp/testcases/realtime/include/libtsc.h

96) Log Message:
mem/hugeshmget: fix failure of hugeshmget01: During hugeshmget01 testcase, we got the following:
hugeshmget01    1  TFAIL  :  seqment size is not correct
hugeshmget01    1  TFAIL  :  hugeshmget01 call failed - errno = 17 :
File exists ......
In shmget call, "buf.shm_segsz" had been set to "huge_pages_shm_to_be_allocated", but the code still used old macro "HUGE_SHM_SIZE", and this leaded to error "seqment size is not correct". So do the following change:
1) s/HUGE_SHM_SIZE/huge_pages_shm_to_be_allocated
2) Delete unused macro "HUGE_SHM_SIZE" defination
This patch fixed the failure. Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
ltp/testcases/kernel/mem/hugetlb/lib/ipcshm.h

97) Log Message:
lcov: add CVS revision number to version output

Modified Files:
ltp/utils/analysis/lcov/bin/lcov

98) Log Message:
lcov: add more CVS versioning

Modified Files:
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/bin/updateversion.pl

99) Log Message:
lcov: fix version fixup

Modified Files:
ltp/utils/analysis/lcov/bin/lcov

100) Log Message:
lcov: more version fixup

Modified Files:
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng

101) Log Message:
Hello guys, I have run into some problems with the network stress tests. I submitted a bug through the sourceforge bug tracker, but after subscribing to the mailing list I can see that it's here where all the action is. If this is not the right place, then please tell me what is the preferred way to submit bug reports and patches. I am using ltp-full-20091031. A lot of the TCP tests involving packet loss fail with this error: ./tcp4-uni-basic01: line 394: netem_param: unbound variable The reason is that strict checking for undefined variables is enabled with "set -u", but the variable netem_param is not always defined before testing its contents. The fix I have applied is to initialize the netem_param variable with an empty string. Also if4-addr-change always fails with this error:  TBROK  :  Failed to set an IPv4 address at the remote host I have found the reason to be a missing semicolon. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/network/stress/tcp/uni-basic/tcp4-uni-basic01
ltp/testcases/network/stress/interface/if4-addr-change

102) Log Message:
1. Merge ftruncate.sh and ftruncate64.sh into one script - ftruncate04.sh - where all you have to do is specify no arguments or 64 to execute ftruncate04 or ftruncate04_64, respectively.
2. Correct tail -1 syntax (-<int> argument types are deprecated with tail(1); Redhat barks whenever it executes it).
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.sh 
Removed Files:
ltp/testcases/kernel/syscalls/ftruncate/ftruncate.sh
ltp/testcases/kernel/syscalls/ftruncate/ftruncate_64.sh

103) Log Message:
Fix more tail -<integer> syntax issues. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testscripts/test_robind.sh
ltp/testcases/pounder21/test_scripts/memtest
ltp/testcases/kernel/fs/quota_remount/quota_remount_test01.sh
ltp/tools/ltp_check
ltp/testcases/kernel/sched/sched_stress/sched_stress.sh
ltp/testcases/kernel/fs/fs-bench/test.sh
ltp/testcases/kernel/fs/fs-bench/test2.sh

104) Log Message:
Include libevent in the proverbial mix. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/libevent/run_libevent.sh
ltp/runtest/ballista
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/libevent/test/Makefile.am
ltp/testcases/kernel/syscalls/Makefile
Added Files:
ltp/testcases/kernel/syscalls/libevent/test/test-libevent.sh 
Removed Files:
ltp/testcases/kernel/syscalls/libevent/test/test.sh

105) Log Message:
This wasn't supposed to be checked in yet. Reverting... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/ballista

106) Log Message:
Check in remaining syscall number modifications. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/sh.in

107) Log Message:
Append the PID to linux_syscall_numbers.h to avoid EBUSY / multiple file accesses with corrupt data at once if make(1) isn't doing the right thing and multiple jobs try to modify the header at the same time. This was based on personal experience with binutils and libtool modifying one file multiple times with parallel jobs via libtool. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/include/regen.sh

108) Log Message:
Commit execltp - a python script that provides a more user friendly alternative to runltp. The only thing basic that's outstanding from this script that could be improved upon is making the while loop into a python iterator. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/automake.mk
ltp/Makefile
ltp/configure.ac 
Added Files:
ltp/execltp.in

109) Log Message:
As Mitani-san noticed the runtest file had two syntax errors -- 
 - "move_pagesXX" files are in "$LTPROOT/testcases/bin" direcotory, not in "$LTPROOT/bin" directory.
 - "chmod" commands don't have target file.
-- which resulted in the following output:
When I ran LTP in RHEL5.4 using ltp-2009-11-19.tar.gz, "move_pages03" and "move_pages11" were failed in each of "syscalls" and "numa" tests like that:
------------
move_pages01    1  TCONF  :  NUMA support not provided
move_pages02    1  TCONF  :  NUMA support not provided
chown: cannot access `move_pages03': No such file or directory
move_pages04    1  TCONF  :  NUMA support not provided
move_pages05    1  TCONF  :  NUMA support not provided
move_pages06    1  TCONF  :  NUMA support not provided
move_pages07    1  TCONF  :  NUMA support not provided
move_pages08    1  TCONF  :  NUMA support not provided
move_pages09    1  TCONF  :  NUMA support not provided
move_pages10    1  TCONF  :  NUMA support not provided
chown: cannot access `move_pages11': No such file or directory
Signed-off-by: Tomonori Mitani <mitani@ryobi.co.jp>,
Acked-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/runtest/numa
ltp/runtest/syscalls

110) Log Message:
Reorder headers because of compile-time definitions. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/utils/common_j_h.c

111) Log Message:
Fix a tail -1 syntax item that wasn't fixed this morning. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/pounder21/test_scripts/bonnie++

112) Log Message:
Convert the assert's to more informative tst_resm(3)'s. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/performance_counters/performance_counter01.c

113) Log Message:
According to the manpage for mknod(2): 
       EPERM  mode requested creation of something other than a regular  file,
              FIFO  (named pipe), or Unix domain socket, and the caller is not
              privileged (Linux: does not have the CAP_MKNOD capability); also
              returned if the file system containing pathname does not support
              the type of node requested.
So the default install doesn't fix this mode for mknodat01, and thus the test will always fail the first subtc.
1. Fix the runtest file so that this test passes completely.
2. Fix the ad hoc strerror(errno) calls by replacing them with compatible TTERRNO calls.
gcooper@orangebox ~ $
/scratch/ltp-dev2/ltp/testcases/kernel/syscalls/mknodat/mknodat01 
mknodat01    1  TPASS  :  mknodat() returned the expected errno: TEST_ERRNO=???(0): Success
mknodat01    2  TPASS  :  mknodat() returned the expected errno: TEST_ERRNO=???(0): Success
mknodat01    3  TPASS  :  mknodat() returned the expected errno: TEST_ERRNO=ENOTDIR(20): Not a directory
mknodat01    4  TPASS  :  mknodat() returned the expected errno: TEST_ERRNO=EBADF(9): Bad file descriptor
mknodat01    5  TPASS  :  mknodat() returned the expected errno: TEST_ERRNO=???(0): Success
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/mknodat/mknodat01.c
ltp/runtest/syscalls

114) Log Message:
Add iterations option in gtod_latency. This patch adds a new option for tuning the number of iterations into the gtod_latency realtime test. Running gtod_latency on a target with limited resources it fails (ENOMEM) as soon as it try to allocate the memory for the two buffers start_data and stop_data. Tested on i386 and sh4 architectures. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified Files:
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c

115) Log Message:
Have to keep in mind that obj is actually the full path, not the basename. Otherwise, the irq filtering is all for naught. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/fs/proc/proc01.c

116) Log Message:
These syscalls can be unimplemented on some archs and kernel versions, so add a check to make sure that they are or aren't as it's valid. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c
ltp/testcases/kernel/syscalls/add_key/add_key01.c
ltp/testcases/kernel/syscalls/add_key/add_key02.c 
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c

117) Log Message:
Fix several issues with the Makefiles as noted by Mitani-san and Luibo:
(1) "${LTPROOT}/testcases/kernel/syscalls/libevent/test/Makefile" does not exist. For this measure, this "Makefile" should be made when "${LTPROOT}/configure" executed or this is offered as standard equipment, I think.
(2) "${LTPROOT}/testcases/kernel/syscalls/libevent/libevent.a" does not exist. For this measure, this "libevent.a" may be necessary to be made when "make" executed in "${LTPROOT}" directory.
(3) "${LTPROOT}/testcases/kernel/syscalls/libevent/test/test.sh" does not exist. For this measure, this "test.sh" may be necessary to be offered as standard equipment.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/libevent/Makefile.am
ltp/testcases/kernel/syscalls/libevent/test/Makefile.in
ltp/testcases/kernel/syscalls/Makefile


118) Log Message:
All syscalls that aren't implemented on target architectures should be properly reported as missing instead of showing up as failures. Noticed by Mitani-san after he encountered several mbind(2) failures on an older kernel (2.6.9), as mbind(2) wasn't implemented until 2.6.17. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/regen.sh


119) Log Message:
The ENOSYS problem has been properly resolved in testcases/kernel/includes/regen.sh, so let's remove the ad hoc ENOSYS checks. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c
ltp/testcases/kernel/syscalls/add_key/add_key01.c
ltp/testcases/kernel/syscalls/add_key/add_key02.c

120) Log Message:
This test should be compiled with -lrt -lpthread. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigaction/Makefile

121) Log Message:
Check in local copy of configure.ac that had libevent modifications. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/configure.ac

122) Log Message:
A simple header which only contains SIGSETSIZE right now, but will contain more items (potentially) later.

Added Files:
ltp/include/ltp_signal.h

123) Log Message:
Greatly simplify the testcase and use SIGSETSIZE instead of 8 hardcoded everywhere.. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask02.c

124) Log Message:
1. Use SIGSETSIZE from ltp_signal.h
2. Do NOT use <asm/poll.h>. Use <poll.h> instead:
NAME
       poll, ppoll - wait for some event on a file descriptor
SYNOPSIS
       #include <poll.h>        int poll(struct pollfd *fds, nfds_t nfds, int
timeout);
       #define _GNU_SOURCE
       #include <poll.h>
       int ppoll(struct pollfd *fds, nfds_t nfds,
               const struct timespec *timeout, const sigset_t *sigmask);
3. Remove POLLRDHUP #define because we can get the definition when we add #define _GNU_SOURCE:     POLLRDHUP (since Linux 2.6.17)  Stream socket peer closed connection, or shut down writing half of connection. The _GNU_SOURCE feature test macro must be defined in order to obtain this definition. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

125) Log Message:
Clean up the test. Dumb thing segfaults on me though... grr... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigsuspend/rt_sigsuspend01.c
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

125) Log Message:
1. Conform to ltp_signal.h
2. Fix some format strings with inttypes.h
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

126) Log Message:

Modified Files:
ltp/testcases/kernel/syscalls/swapon/swapon01.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/configure.ac
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sh.in
ltp/testcases/kernel/include/sparc.in 
ltp/testcases/kernel/include/x86_64.in

Removed Files:
ltp/m4/ltp-swaponoff.m4

Added Files:
ltp/include/swaponoff.h

127) Log Message:
What I meant to say in my last commit email was...
1. Replace swapon / swapoff calls with syscall wrapper calls to avoid having to deal with ugly header checks in autoconf land.
2. autoconf checks were wrong, as the MAX_SWAPFILES amount is actually predetermined based on the kernel version, not on the headers necessarily as Redhat LOVES being non-standard. This can't be tst_kvercmp, as tst_kvercmp is runtime based and MAX_SWAPFILES must be set at compile-time. And what I mean to say now is: I'm a dork -- I inverted the logic signs by accident (`<' -> `>'). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c
ltp/include/swaponoff.h

128) Log Message:
You go in too ;)... Cleaned up this testcase as well, but this also segfaults on my system (before and after). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c

129) Log Message:
Enable ebizzy and kernbench properly so that they get installed in the correct spots. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/utils/benchmark/kernbench-0.42/Makefile
ltp/utils/benchmark/ebizzy-0.3/Makefile
ltp/utils/benchmark/Makefile

130) Log Message:
configure target shouldn't be executed by any sane human being. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/utils/Makefile

131) Log Message:
Implement a weak handler so that libraries (like libcontrollers) can override cleanup in the respective user code, as it's required to get past compile-time issues with pidns, et all. This only marks the beginning of our long journey of cleaning up the cleanup defined but not used warnings... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/regen.sh

132) Log Message:
Clean up testcase and have it conform to a more LTP-like standard. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_sched_domains_check.c

133) Log Message:
Need to change this script to scrape stdout. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_sched_domains_test.sh

134) Log Message:
Check in cleaned up versions of these tests. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/cacheflush/cacheflush01.c
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c

135) Log Message:
Remove a blank line. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/signalfd/Makefile

136) Log Message:
Clean up this testcase a lot by fixing indentation, spacing, fixing a few memory leaks, and the cleanup prototype. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/linkat/Makefile
ltp/testcases/kernel/syscalls/linkat/linkat01.c

137) Log Message:
Clean up the testcases a bit and make the tests follow more of a LTP-like reporting method. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/performance_counters/performance_counter01.c
ltp/testcases/kernel/performance_counters/performance_counter02.c

138) Log Message:
ptrace04.c: Avoid compile errors on some archs if the appropriate headers are missing and thus the structure is undefined by wrapping with preprocessor define: HAVE_STRUCT_PTRACE_REGS. ptrace.h: Shift around ptrace.h again, so preprocessor defines for datatypes are only done if necessary. We'll see if this fixes Mitani san's issue on ia64... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c

139) Log Message:
No reason to do the #if !defined's anymore, because we're undefining the symbols before we #define them again XD. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h

140) Log Message:
ptrace.h: Nevermind. The last commit was bogus -- we do need those #if !defined's.. ptrace04.c: WTF. Who in their bloody right mind would name a field and a data type with the same damn name?!?!?! The original test writer needs to be slapped. Not sure why in the heck the last compile didn't catch this glaring issue. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace.h
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c

141) Log Message:
env_pre.mk: Check in, at bare minimum, the needed pieces to point people in the right direction as far as the make 3.81 requirement is concerned. functions.mk: Add some make 3.80 compatibility functions. Makefile: Remove make 3.81-ism's. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/env_pre.mk
ltp/include/mk/functions.mk

142) Log Message:
env_pre.mk: Check in, at bare minimum, the needed pieces to point people in the right direction as far as the make 3.81 requirement is concerned. functions.mk: Add some make 3.80 compatibility functions. Makefile: Remove make 3.81-ism's. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/Makefile

143) Log Message:
Checkin all local changes for testcases/kernel/controllers to avoid compile-time warnings and errors, so that I can move forward with the weak handlers change. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_test/cpuset_memory_test.c
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_cpu_hog.c
ltp/testcases/kernel/controllers/cgroup/cgroup_regression_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/Makefile
ltp/testcases/kernel/containers/pidns/pidns17.c
ltp/testcases/kernel/containers/pidns/pidns10.c
ltp/testcases/kernel/containers/pidns/pidns04.c
ltp/testcases/kernel/controllers/cpuset/Makefile.inc
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c

144) Log Message:
Checkin the weak handlers change, so that compiles won't error out and test writers can define cleanup at the library level or the sourcefile(s) level, such that the sourcefile level version will overwrite the library level one. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/regen.sh

145) Log Message:
Add a check for (struct sigaction).sa_sigaction as it's not present on all architectures. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Added Files:
ltp/m4/ltp-signal.m4

Modified Files:
ltp/configure.ac

146) Log Message:
Some local changes bringing back CLEAN_DEPS and also making sure that FILTER_MAKE_TARGETS works even when MAKE_TARGETS is already defined. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/generic_leaf_target.inc
ltp/include/mk/env_post.mk

147) Log Message:
Commit changes which provide a functional fix for the rt_sigaction(2) tests on x86_64, apart from SIGRTMIN (still crashes, but it keeps on going..). The test is now disabled on platforms where sa_handler isn't present in struct sigaction, which includes ia64, mips, and powerpc. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/ltp_signal.h
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c


148) Log Message:
testcases/kernel/include/...: Add clock_gettime and clock_settime syscalls to all missing architecture .in files. testcases/kernel/timers/...:
1. Improve upon reporting, as noted by Andrew Vagin.
2. Clean up the test because there was a lot of ad hoc reporting / stale data that already gets punted back by | TERRNO and syscall, as implemented by linux_syscall_numbers.h, effectively simplifying the test(s) a LOT. 
3. Shift -D_GNU_SOURCE from CFLAGS to CPPFLAGS.
4. Make sure we link against -lrt, like the manpage says:
SYNOPSIS
       #include <time.h>
       int clock_getres(clockid_t clk_id, struct timespec *res);
       int clock_gettime(clockid_t clk_id, struct timespec *tp);
       int clock_settime(clockid_t clk_id, const struct timespec *tp);
       Link with -lrt.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/timers/clock_settime/Makefile
ltp/testcases/kernel/timers/clock_settime/clock_settime02.c
ltp/testcases/kernel/timers/clock_settime/clock_settime03.c
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/arm.in

149) Log Message:
Avoid unintended side-effects with errno being overwritten by accident with fprintf call early on in the tst_print function.
Signed-off-by: Andrew Vagin <avagin@gmail.com>,
Acked-by: Mike Frysinger <vapier@gentoo.org>,
Acked-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/lib/tst_res.c

150) Log Message:
Remove useless comment. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/include/mk/testcases.mk

151) Log Message:
testcases/kernel/include/...:
        .../Makefile: Remove unneeded set -e.
        .../regen.sh: Quote variables.
        .../strip_syscall.awk: Add an awk script to strip syscalls from the unistd.h headers.
testcases/kernel/syscalls/Makefile: yank libevent because something's missing from the distribution and it's not compiling after running ac-clean // ac-distclean // ac-maintainer-clean. BAH. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/regen.sh
ltp/testcases/kernel/include/Makefile 
ltp/include/mk/generic_leaf_target.inc
ltp/include/mk/generic_trunk_target.inc
ltp/testcases/kernel/syscalls/Makefile

Added Files:
ltp/testcases/kernel/include/strip_syscall.awk

152) Log Message:
*.in: Checkin updated and complete syscalls as per kernel version 2.6.32-r8. linux_syscall_numbers.h: Avoid race conditions by reviving file, esp because it takes ~3 seconds to generate on my machine, which means that it will take eons on slower machines... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sh.in
ltp/testcases/kernel/include/sparc.in 
ltp/testcases/kernel/include/x86_64.in 

Added Files:
ltp/testcases/kernel/include/linux_syscall_numbers.h

153) Log Message:
Fix the performance counter testcases because __NR_perf_count_open is finally defined to the right value. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/performance_counters/performance_counter01.c
ltp/testcases/kernel/performance_counters/performance_counter02.c

154) Log Message:
Remove more unneeded comments. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/kernel/performance_counters/performance_counter01.c
ltp/testcases/kernel/performance_counters/performance_counter02.c

LTP-20091031

1) Log Message:
Fix issues in cpu consolidation verification functions: Arguments passed for cpu consolidation was not used appropriatly. Provided TINFO messages to indicate dependency test failures. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/pm_include.sh

2) Log Message:
Developed new functions and fixed issues causing ilb test failure: CPU Consolidation verification function is fixed to handle variations in CPU utilization. Threshold is selected based on test conducted on 2.6.31 on dual core, quad core & hyper threaded system. Developed new function to generate hyper threaded siblings list and get job count for hyper threaded system and multisocket system. Modified kernbench workload execution time for 5 min, hence test execution time will be reduced further. Developed new functions to stop workload. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/lib/sched_mc.py

3) Log Message:
Modified ilb test to run with ebizzy as default workload. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/ilb_test.py

4) Log Message:
Enhanced & Modified cpu_consolidation testcase: We can pass additional argument performance to use the same testcase for Performance test. Fixed issues in cpu consolidation test. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/cpu_consolidation.py

5) Log Message:
Modified master script to pass appropriate arguments for cpu consolidation test cases. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/runpwtests.sh

6) Log Message:
utimes: fix failure of utimes01: In /testcases/kernel/syscalls/utimes, case02 expects "EACCES" error. According to utimes's manual: EACCES  times is NULL, the caller’s effective user ID does not match the owner of the file, the caller does not have write access to the file, and the caller is not privileged (Linux: does  not  have either the CAP_DAC_OVERRIDE or the CAP_FOWNER capability). However, now case02's times is not NULL so that it can only get "EPERM". So, change case02's times to NULL to reach its expect. This patch fixes the problem. Signed-off-by: Liu Bo <liubo-fnst@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/utimes/utimes01.c

7) Log Message:
network: fix rpc use rsh instead of ssh: rpcinfo01 testcase use ssh to run command on remote machine, which will prompt for authentication and password. I think it is a typo because all network tests use rsh. Signed-off-by: Hushan Jia <hjia@redhat.com>.

Modified Files:
ltp/testcases/network/rpc/basic_tests/rpcinfo/rpcinfo01

8) Log Message:
Fix false success for exp test: if I get it right there is error in ltp-full-20090831/testcases/misc/math/float/exp_log/genexp.c (see genexp_resfile.patch). Resulting file exp_out.ref is wrong, but it is not catch by test - nan_compare.patch make correct nan comparison. Signed-off-by: Pavel Kiryukhin <vksavl@gmail.com>.

Modified File(s):
ltp/testcases/misc/math/float/thread_code.c
ltp/testcases/misc/math/float/exp_log/genexp.c

9) Log Message:
IMA tcb policy: Dependency section update. Signed-off-by: Mimi Zohar <zohar@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/integrity/ima/README

10) Log Message:
Remove `verbose mode' from runltp*:
1. This option really doesn't buy us much in runltp*, and we've almost already run out of options anyhow...
2. Correct some ugly indentation.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/runltp
ltp/runltplite.sh

11) Log Message:
realtime: Remove printing of cpu affinity masks in pi-tests: Some tests under realtime/func/pi-tests in LTP display junk values for cpu affinity masks:
Start ./testpi-2
protocol in mutexattr is 1
Thread 14574 started running with priority 10 on CPU 1110536304
Thread 14574 at start pthread pol 2 pri 10 - Got global lock
Thread 14575 started running with prio 20 on CPU 1084272752
Thread 14576 started running with prio 30 on CPU 1118929008
Thread 14577 started running with prio 40 on CPU 1127321712
Noise Thread 14578 started running with prio 40 on CPU 1099915376

testpi-1 and testpi-4 also report similar wrong values.

The cause of this problem is the incorrect way in which sched_getaffinity output is used in the tests. I think there is no need to call getaffinity() to know the cpu mask, because we test the return value of setaffinity() before that. The following patch removes all calls to sched_affinity() and removes printing cpu affinity masks.
Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,

Modified File(s):
ltp/testcases/realtime/func/pi-tests/testpi-1.c
ltp/testcases/realtime/func/pi-tests/testpi-2.c
ltp/testcases/realtime/func/pi-tests/testpi-4.c

12) Log Message:
fix memcg_function_test's bug: testcase_25() uses a wrong "$?" value , Now use "ret" to record the real "$?" value for test. Signed-off-by: Liu Bo <liubo-fnst@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/controllers/memcg/functional/memcg_function_test.sh

13) Log Message:
fix possible tst_xxx buffer overrun: Following patch fixes tst_** functions that would segfault for printing messages longer than 2048 chars. Now such message is truncated. Signed-off-by: <chrubis@suse.cz>.

Modified File(s):
ltp/lib/tst_res.c

14) Log Message:
Just another printf cleanup: attached patch fixes some more printf formating issues as well as some coding style errors. Signed-off-by: <chrubis@suse.cz>.

Modified Files:
ltp/testcases/kernel/fs/proc/proc01.c
ltp/testcases/kernel/fs/stream/stream03.c
ltp/testcases/kernel/mem/mtest06/mmap1.c
ltp/testcases/kernel/mem/shmt/shmt05.c
ltp/testcases/kernel/mem/shmt/shmt09.c
ltp/testcases/kernel/mem/vmtests/data_space.c
ltp/testcases/kernel/mem/vmtests/stack_space.c
ltp/testcases/kernel/sched/nptl/nptl01.c
ltp/testcases/kernel/syscalls/close/close08.c
ltp/testcases/kernel/syscalls/dup/dup01.c
ltp/testcases/kernel/syscalls/dup/dup02.c
ltp/testcases/kernel/syscalls/dup/dup03.c
ltp/testcases/kernel/syscalls/dup/dup04.c
ltp/testcases/kernel/syscalls/dup/dup05.c

15) Log Message:
Remove this test and itś reference anywhere as requested by Cyril Hrubis <chrubis@suse.cz>. Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Removed Files:
ltp/testcases/kernel/syscalls/sigreturn/Makefile
ltp/testcases/kernel/syscalls/sigreturn/sigreturn01.c

16) Message:
Just before doing a CVS diff I noticed that these binary files made it back into the repository:
testcases/ballista/ballista/blexer
testcases/ballista/ballista/bparser
testcases/ballista/ballista/mut.out
This change removes them again: Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Removed Files:
ltp/testcases/ballista/ballista/blexer
ltp/testcases/ballista/ballista/bparser
ltp/testcases/ballista/ballista/mut.out

17) Log Message:
Byte compiled python files should not be in the repo.

Removed Files:
ltp/testcases/network/nfsv4/acl/random_gen.pyc

18) Log Message:
make strptrace() inline to avoid unused warnings

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.h

19) Log Message:
tweak how we notify unsupported arches so the code is always compiled

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c

20) Log Message:
add some simple trace code to help with debugging

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.h 
Added Files:
ltp/testcases/kernel/syscalls/ptrace/make_syscall_list.sh
ltp/testcases/kernel/syscalls/ptrace/simple_tracer.c syscalls.h

21) Log Message:
1. Please see README.mk-devel for a full description of the changes from a Make perspective.
2. Several files were changed to accomodate correct installation practices, most notably ones in testcases/network/{ipv6,tcp_cmds}, testcases/kernel/sched/hyperthreading/ht_enabled/..., and some items in tools/..., and also to avoid collisions as far as installed testcases (scripts, compiled C apps) were concerned.
3. Several apps weren't autoconf safe and some autoconf tests and conditional statements have been placed in sourcecode and in Makefiles to either
	a) prevent the tests from being built / installed or
	b) turn the tests into dummy apps which print out TCONF messages due to lack-of-build support.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Added Files:
ltp/README.ltp-devel.in
ltp/README.mk-devel
ltp/README.mk-user
ltp/TODO
ltp/ltp-devel.spec.in
ltp/doc/Makefile
ltp/include/mk/automake.mk
ltp/include/mk/config.mk.in
ltp/include/mk/env_post.mk
ltp/include/mk/env_pre.mk
ltp/include/mk/functions.mk
ltp/include/mk/generic_leaf_target.inc
ltp/include/mk/generic_leaf_target.mk
ltp/include/mk/generic_trunk_target.inc
ltp/include/mk/generic_trunk_target.mk
ltp/include/mk/lib.mk
ltp/include/mk/man.mk
ltp/include/mk/testcases.mk
ltp/lib/ltp.pc.in
ltp/m4/ltp-cap.m4
ltp/m4/ltp-numa.m4
ltp/m4/ltp-ptrace.m4
ltp/m4/ltp-quota.m4
ltp/runtest/Makefile
ltp/runtest/ipv6_expect
ltp/runtest/tcp_cmds_expect
ltp/testcases/kernel/containers/Makefile.inc
ltp/testcases/kernel/containers/netns/common.c
ltp/testcases/kernel/controllers/Makefile.inc
ltp/testcases/kernel/controllers/cpuset/Makefile.inc
ltp/testcases/kernel/controllers/cpuset/cpuset_funcs.sh
ltp/testcases/kernel/controllers/freezer/run_freezer.sh
ltp/testcases/kernel/fs/fs-bench/random-access-del-create.c
ltp/testcases/kernel/io/aio/aio02/aio_tio.c
ltp/testcases/kernel/io/aio/aio02/common.h
ltp/testcases/kernel/mem/Makefile.inc
ltp/testcases/kernel/mem/hugetlb/Makefile.inc
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/ht_affinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/ht_utils.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/ht_utils.h
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/ht_enabled.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/ht_utils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/ht_utils.h
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/ht_interrupt.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/ht_utils.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/ht_utils.h
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile.inc
ltp/testcases/kernel/security/smack/smack_common.sh
ltp/testcases/kernel/syscalls/ipc/Makefile.inc
ltp/testcases/lib/Makefile
ltp/testcases/lib/cmdlib.sh
ltp/testcases/lib/net_cmdlib.sh
ltp/testcases/network/tcp_cmds/Makefile.inc
ltp/testcases/network/tcp_cmds/include/netdefs.h
ltp/testcases/network/tcp_cmds/perf_lan/pingpong6.c
ltp/testscripts/default_runtest_set.awk
ltp/testscripts/ltp-missing-install-files.py
ltp/tools/genload/genload.c

Removed Files:
ltp/README.ltp-devel
ltp/config.mk.in
ltp/ltp-devel.spec
ltp/testcases/kernel/containers/check_for_unshare.c
ltp/testcases/kernel/containers/libclone/libnetns.c
ltp/testcases/kernel/containers/mqns/check_mqns_enabled.c
ltp/testcases/kernel/containers/pidns/check_pidns_enabled.c
ltp/testcases/kernel/controllers/freezer/run.sh
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.h
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTenabled.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.h
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTinterrupt.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTutils.h
ltp/testcases/kernel/security/filecaps/check_xattr.c
ltp/testcases/kernel/security/filecaps/makenumcapsh.c
ltp/testcases/kernel/security/p9auth/checkp9auth.sh
ltp/testcases/kernel/syscalls/lchown/create_link.mode.sh
ltp/testcases/kernel/syscalls/mount/setuid_test.mode.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages03.mode.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages11.mode.sh
ltp/testcases/kernel/syscalls/utimensat/check_for_utimensat_support.c
ltp/testcases/network/ipv6/Makefile
ltp/testcases/network/ipv6/echo6/Makefile
ltp/testcases/network/ipv6/echo6/createfile.c
ltp/testcases/network/ipv6/echo6/echo601
ltp/testcases/network/ipv6/echo6/echoes6.c
ltp/testcases/network/ipv6/finger6/Makefile
ltp/testcases/network/ipv6/finger6/finger601
ltp/testcases/network/ipv6/perf_lan6/Makefile
ltp/testcases/network/ipv6/perf_lan6/perf_lan6
ltp/testcases/network/ipv6/perf_lan6/pingpong6.c
ltp/testcases/network/ipv6/ping6/Makefile
ltp/testcases/network/ipv6/ping6/ping601
ltp/testcases/network/ipv6/sendfile6/Makefile
ltp/testcases/network/ipv6/sendfile6/SF_Server6
ltp/testcases/network/ipv6/sendfile6/sendfile601
ltp/testcases/network/ipv6/sendfile6/testsf_c6.c
ltp/testcases/network/ipv6/sendfile6/testsf_s6.c
ltp/testcases/network/ipv6/tcpdump6/Makefile
ltp/testcases/network/ipv6/tcpdump6/tcpdump601

Modified Files:
890 of them

22) Log Message:
This proposed change makes linktest.pl into linktest.sh, to avoid missing coverage with symlinks and hardlinks due to a lacking perl dependency on the target host. This change has been outstanding for some time in our private copy of LTP and needed to get checked into CVS. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/fs
ltp/runtest/stress.part1
ltp/testcases/kernel/fs/linktest/Makefile

Added Files:
ltp/testcases/kernel/fs/linktest/linktest.sh

Removed Files:
ltp/testcases/kernel/fs/linktest/linktest.pl

23) Log Message:
Dependency for all was wrong.

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/Makefile.inc

24) Log Message:
The following patch adds a signal() syscall to the ppoll01 testcase. The testcase has a signal handler in it but this signal handler is not registered with the kernel through the signal() syscall.  Without the patch the testcase fails when it sends a SIGINT to itself as part of one of the case of the test run. Signed-off-by: Chandru S <chandru@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

25) Log Message:
File descriptors not cleaned up: This patch for openfile contains the following changes:
- test output to use tst_resm functions,
- sets ups and cleans up tmp dir properly,
- closes all opened file descriptors before thread exit(fixes nfs issues on removing tmp dir),
Signed-off-by: Henry Yei <hyei@mvista.com>. This test opens multiple file descriptors to the same file. Perhaps the author meant to open file handles for separate files?

Modified Files:
ltp/testcases/kernel/fs/openfile/openfile.c


26) Log Message:
Complete the test cases for getuid16: Some of testcases for *16 and *64 system calls have not been completed yet though my makefile trick were introduced by Suburata. *16 may not be so important but I'd like to complete them anyway. The first one is for getuid16. To apply getuid16.patch use -p0 option. Put compat_uid.h  at testcases/kernel/syscalls/utils/compat_uid.h. Put compat_16.h.  at testcases/kernel/syscalls/getuid/compat_16.h. Signed-off-by: Masatake YAMATO <yamato@redhat.com>,

Modified Files:
ltp/testcases/kernel/syscalls/getuid/Makefile
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/getuid/getuid02.c
ltp/testcases/kernel/syscalls/getuid/getuid03.c
Added Files:
ltp/testcases/kernel/syscalls/getuid/compat_16.h
ltp/testcases/kernel/syscalls/utils/compat_uid.h

27) Log Message:
use default size for blks if parsing df output fails to return numeric argument: This patch for rwtest.sh sets a default size for the number of blocks within the filesystem the test is executing on if parsing "df output" somehow results in a non-numeric value(unexpected df output). Also removes trailing whitespace. Garrett, I've attached the patch with your suggested changes. As for making default_sz 1000000, this was to keep to the original functionality, but fix cases where df output was not expected. If you see the original code, if sz > max, than it is capped at max=1000000 as well. Whether ~ 1GB is a good maximum, I'm not sure. Signed-off-by: Henry Yei <hyei@mvista.com>.

Modified Files:
ltp/testcases/kernel/fs/doio/rwtest.sh

28) Log Message:
Move `creating ... directory' to block where: We shouldn't say that we're creating the directory unless we are actually creating the directory. This only leads to potentialconfusion with LTP newbies. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runltp

29) Log Message:
While trying to figure out why entries don't get entered in the exec log, I found the following issue with a malloc call. I also fixed a typo and a whacky indentation item as well. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/pan/ltp-pan.c

30) Log Message:
Check in `creating directory' cosmetic item for runltplite.sh as well, just to be consistent. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>. 

Modified File(s):
ltp/runltplite.sh

31) Log Message:
Remove an accidental circular dependency. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/automake.mk

32) Log Message:
autoconf 2.61 / m4 1.4.7 don't define the macro, AC_PROG_AR. This needs to be defined in configure.ac, so those versions will continue to function properly. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/configure.ac

33) Log Message:
Add copyright tort. Abbreviate. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/m4/ltp-unshare.m4

34) Log Message:
AR is defined in configure.ac. Not needed in m4 anymore. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Removed Files:
ltp/m4/ac_prog_ar.m4

35) Log Message:
1. Fix taskstats.m4 so it no longer punts out warnings.
2. Add ltp-swaponoff.m4 to properly detect when we're running an older kernel and need linux/swap.h (issue found by compiler team at Cisco).
3. Apply fixes according to 2. to testcases/kernel/syscalls/swap*/*.c.
4. Apply Cyril Hrubis's libcpu_set fix to the .in files and cpuset_lib Makefile and .c file.
5. Block off functionality in getdelays.c with proper preprocessor defines, as per issues after encountered after ltp-taskstats.m4 was fixed.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/m4/ltp-taskstats.m4
ltp/testcases/kernel/syscalls/swapon/swapon01.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/testcases/kernel/controllers/cgroup/getdelays.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/libcpuset.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/configure.ac

Added Files:
ltp/m4/ltp-swaponoff.m4

36) Log Message:
config.mk.in: we're no longer installing directly to the destination directory until install is called, so let's not pick up anything CPPFLAGS-wise from that directory. pingpong6.c: get rid of compile warnings, even though the app will eventually go away. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/network/tcp_cmds/perf_lan/pingpong6.c
ltp/include/mk/config.mk.in

37) Log Message:
generic_*target.inc: Revive BUILD_DEPS support so dependencies are built prior to building MAKE_TARGETS, for simplicity of design for the end-user. testcases.mk: Apply proper dependency logic, so submakes no longer require building libltp.a beforehand, or linux_syscall_numbers.h, as they are dependencies of all operations that include testcases.mk. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/generic_leaf_target.inc
ltp/include/mk/generic_trunk_target.inc
ltp/include/mk/testcases.mk

38) Log Message:
Rename BUILD_DEPS to MAKE_DEPS to be more consistent with MAKE_TARGETS. Bleh... I've dealt with our build system here at Cisco far too much (BUILD_DEPS is the variable name...).  Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/generic_leaf_target.inc
ltp/include/mk/generic_trunk_target.inc
ltp/include/mk/testcases.mk


39) Log Message:
1. Make linux_syscall_numbers.h dependent on the .in files so that it can be regenerated if and when the files are touched.
2. Add the ppoll(2) syscall number to all architectures, as per each arch specific unistd.h.
Signed-off-by: Nicolas Joly <njoly@pasteur.fr>,

Modified Files:
ltp/testcases/kernel/include/Makefile
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/sh.in 
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/x86_64.in

40) Log Message:
Change use of signal to sigaction for more reliability, fix time issue: Here are three patches the help with the issue where these tests miss a signal and hang. The original patches were created before the latest check-ins by jpalecek@web.de , but I believe they still help. I've regenerated the patches against CVS source and tested on a multi-core machine running MVL6 (x86 2.6.28). The clock_nanosleep01 patch changes signal to the more reliable sigaction(). mq_timedsend01 patch changes from signal() to sigaction() and corrects the time-specs used by the test. Timespec's passed to mq_timedsend are abs time, not relative time. The patch adds the current time to convert relative time to abs time but only if the change won't invalidate the test objective. For example, if the test would have passed -1 for tv_sec to cause an invalid time error, adding the current time would prevent the expected error. mq_timedrecieve01.patch changes from signal() to sigaction() and corrects the time-specs used by the test. Timespec's passed to mq_timedreceive are abs time, not relative time. The patch adds the current time to convert relative time to abs time but only if the change won't invalidate the test objective. For example, if the test would have passed -1 for tv_sec to cause an invalid time error, adding the current time would prevent the expected error. The timeout for SIGINT test is extended to allow time for the signal to arrive.
Original patches provided by Randy Vinson <rvinson@mvista.com>,
Signed-off by: Henry Yei <hyei@mvista.com>,

Modified Files:
ltp/testcases/kernel/syscalls/clock_nanosleep/clock_nanosleep01.c
ltp/testcases/kernel/syscalls/mq_timedreceive/mq_timedreceive01.c
ltp/testcases/kernel/syscalls/mq_timedsend/mq_timedsend01.c

41) Log Message:
modify fs scenario to use working directory specified by runltp: This patch modifies the fs scenario to remove hard coded paths with /tmp as well as make sure that tests that take directory arguments use the temporary directory specified by runltp. I've chosen to pass in the temporary directory rather than change the tests themselves for certain tests take a path as an argument. Signed-off by: Henry Yei <hyei@mvista.com>.

Modified Files:
ltp/runtest/fs

42) Log Message:
Modify tests to honor tmp directory passed into runltp, convert to LTP format: This is a set of patches for tests in the fs runtest file which make use of tst_tmpdir functions or alternatively, the base tmpdir set by the user. Some of the tests have been converted to LTP test format as well. Tests that are changed: fs_di, fs_perms, lftest, linker01, quota_remount_test01, writetest. Signed-off by: Henry Yei <hyei@mvista.com>.

Modified Files:
ltp/testcases/kernel/fs/fs_di/fs_di
ltp/testcases/kernel/fs/fs_perms/fs_perms.c
ltp/testcases/kernel/fs/fs_perms/fs_perms_simpletest.sh
ltp/testcases/kernel/fs/quota_remount/quota_remount_test01.sh
ltp/testcases/kernel/fs/racer/fs_racer.sh
ltp/testcases/kernel/io/writetest/writetest.c

43) Log Message:
-laio shouldn't be added to LDLIBS by default. That is just plain wrong.

Modified Files:
ltp/m4/ltp-eventfd.m4

44) Log Message:
1. Honor TMPDIR, as per Henry Yei's note, because linktest.sh doesn't currently do that.
2. Add error checking for cd(1) failure.
3. Suffix the temporary directory with $$ to allow multiple copies to execute on the directory at any given time.
4. Add trap(1)'s to delete the temporary files / directories generated in the script.
gcooper@orangebox /scratch/ltp-dev2/ltp $ testcases/kernel/fs/linktest/linktest.sh 200 1000
linker01    1  TPASS  :  Symbolic Link Errors: 0
linker01    2  TPASS  :  Hard Link Errors: 0
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/kernel/fs/linktest/linktest.sh

45) Log Message:
1. Fix incrementing call to use POSIX compliant version of incrementing.
2. Add function `is_root' to help test writer determine whether or not the user is root with one uniform command.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>

Modified Files:
ltp/testcases/lib/cmdlib.sh

46) Log Message:
The trap signal handler wasn't being disabled on entry thus causing it to be called twice, the first time when tst_cleanup was called; the second when cleanup exited. This fixes that. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/lib/cmdlib.sh

47) Log Message:
This change (which I'm committing to cvs right now) changes the default to the loopback address:
gcooper@orangebox /scratch/ltp-dev2/ltp/testcases/network/tcp_cmds/ping $ ./ping01 
ping01      0  TINFO  :  ping with 8 16 32 64 128 256 512 1024 2048 4064 ICMP packets
ping01      0  TINFO  :  calling ping with packet size = 8
ping01      0  TINFO  :  calling ping with packet size = 16
ping01      0  TINFO  :  calling ping with packet size = 32
ping01      0  TINFO  :  calling ping with packet size = 64
ping01      0  TINFO  :  calling ping with packet size = 128
ping01      0  TINFO  :  calling ping with packet size = 256
ping01      0  TINFO  :  calling ping with packet size = 512
ping01      0  TINFO  :  calling ping with packet size = 1024
ping01      0  TINFO  :  calling ping with packet size = 2048
ping01      0  TINFO  :  calling ping with packet size = 4064
ping01      0  TINFO  :  Cleaning up.
ping01      1  TPASS  :  Test successful
gcooper@orangebox /scratch/ltp-dev2/ltp/testcases/network/tcp_cmds/ping $ 
The default can still be changed by specifying the RHOST environment variable. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/network/tcp_cmds/ping/ping01

48) Log Message:
The attached patch fixes my issues, but I can't easily verify whether or not it fixes the positive behavior of the testcase itself under all conditions:
<<<test_start>>>
tag=ima01 stime=1255926150 cmdline="  ima_measurements.sh" contacts="" analysis=exit
<<<test_output>>>
setup       1  TBROK  :  Failed to mkdir /sys/kernel/security
setup       1  TBROK  :  Cannot mount securityfs
setup       0  TINFO  :  CLEAN: removing /tmp/ltp-VdWwjzuH1v/ima
<<<execution_status>>>
initiation_status="ok" duration=0 termination_type=exited termination_id=1 corefile=no cutime=0 cstime=0
<<<test_end>>>
<<<test_start>>>
tag=ima02 stime=1255926150 cmdline="  ima_policy.sh" contacts="" analysis=exit
<<<test_output>>>
setup       1  TBROK  :  Failed to mkdir /sys/kernel/security
setup       1  TBROK  :  Cannot mount securityfs
setup       0  TINFO  :  CLEAN: removing /tmp/ltp-VdWwjzuH1v/ima
<<<execution_status>>>
initiation_status="ok" duration=0 termination_type=exited termination_id=1 corefile=no cutime=0 cstime=2
<<<test_end>>>
<<<test_start>>>
tag=ima03 stime=1255926150 cmdline="  ima_tpm.sh" contacts="" analysis=exit
<<<test_output>>>
setup       1  TBROK  :  Failed to mkdir /sys/kernel/security
setup       1  TBROK  :  Cannot mount securityfs
setup       0  TINFO  :  CLEAN: removing /tmp/ltp-VdWwjzuH1v/ima
<<<execution_status>>>
initiation_status="ok" duration=0 termination_type=exited termination_id=1 corefile=no cutime=1 cstime=1
<<<test_end>>>
<<<test_start>>>
tag=ima04 stime=1255926150 cmdline="  ima_violations.sh" contacts="" analysis=exit
<<<test_output>>>
setup       1  TBROK  :  Failed to mkdir /sys/kernel/security
setup       1  TBROK  :  Cannot mount securityfs
setup       0  TINFO  :  CLEAN: removing /tmp/ltp-VdWwjzuH1v/ima
incrementing stop
<<<execution_status>>>
initiation_status="ok" duration=0 termination_type=exited termination_id=1 corefile=no cutime=0 cstime=1
<<<test_end>>>
Either way, it's a positive move forward so I'm checking this into cvs now. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/security/integrity/ima/tests/ima_measurements.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_policy.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_setup.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_tpm.sh 
ltp/testcases/kernel/security/integrity/ima/tests/ima_violations.sh 


49) Log Message:
1. Add check for locale command with exists command in cmdlib.sh
2. Predefine any and all unbound variables so the set -u call in cmdlib.sh will allow the script to continue on to a failure point of some kind (or succeed if all is defined).
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/network/stress/ns-tools/check_envval

50) Log Message:
This is the patch of testcases for the ext4 new features test. It contains multi-block alloc/delayed alloc test, inode version test, journal checksumming test, nanosec timestamps test, online defrag test, persist prealloc test, subdirectory limit test and uninit groups test of ext4. In this test suite, there is two FAIL in the subdirectory limit test. It is because we cann't create more than 32000 subdirectory when block size is small, such as 1024, and the name of every subdirectory is very long, such as every name is 255 bytes. I think it is the bug of the ext4.
Note: Your MUST run configure in the directory testcases/kernel/fs/ext4-new-features to config the tool of ffsb, and specify a partition to be used for test before compiling the tool. The data on the specified partition would be DESTROYED.
Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>,
Minor-Segmentation-fault-in-ffsb-fixed-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

Modified Files:
ltp/README
ltp/testcases/kernel/fs/Makefile

Added Files:
ltp/runtest/fs_ext4
ltp/testcases/kernel/fs/ext4-new-features/Makefile
ltp/testcases/kernel/fs/ext4-new-features/README
ltp/testcases/kernel/fs/ext4-new-features/configure
ltp/testcases/kernel/fs/ext4-new-features/ext4_funcs.sh
ltp/testcases/kernel/fs/ext4-new-features/run_ext4_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-delalloc-mballoc/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-delalloc-mballoc/ext4-alloc-test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config0
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config1
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config2
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config3
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config4
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config5
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config6
ltp/testcases/kernel/fs/ext4-new-features/ext4-ffsb-config/ffsb-config7
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/ext4_get_inode_version.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/ext4_inode_version_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-inode-version/ext4_test_inode_version.c
ltp/testcases/kernel/fs/ext4-new-features/ext4-journal-checksum/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-journal-checksum/ext4_journal_checksum.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-nsec-timestamps/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-nsec-timestamps/ext4_file_time.c
ltp/testcases/kernel/fs/ext4-new-features/ext4-nsec-timestamps/ext4_nsec_timestamps_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-online-defrag/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-online-defrag/e4defrag.c
ltp/testcases/kernel/fs/ext4-new-features/ext4-online-defrag/ext4_online_defrag_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-persist-prealloc/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-persist-prealloc/ext4_persist_prealloc_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-subdir-limit/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-subdir-limit/create_long_dirs.c
ltp/testcases/kernel/fs/ext4-new-features/ext4-subdir-limit/create_short_dirs.c
ltp/testcases/kernel/fs/ext4-new-features/ext4-subdir-limit/ext4_subdir_limit_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ext4-uninit-groups/Makefile
ltp/testcases/kernel/fs/ext4-new-features/ext4-uninit-groups/ext4_uninit_groups_test.sh
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/AUTHORS
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/COPYING
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/INSTALL
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/LICENSE
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/Makefile.am
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/Makefile.in
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/README
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/aclocal.m4
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/cirlist.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/cirlist.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/config.guess
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/config.h.in
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/config.sub
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/configure
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/configure.in
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/depcomp
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_fc.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_fs.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_fs.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_op.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_op.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_stats.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_stats.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_tg.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_tg.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_thread.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/ffsb_thread.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/fh.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/fh.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/filelist.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/filelist.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/fileops.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/fileops.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/install-sh
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/list.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/list.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/main.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/metaops.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/metaops.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/missing
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/mkinstalldirs
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/parser.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/parser.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/public-description
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rand.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rand.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rbt.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rbt.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/registration-description
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rwlock.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/rwlock.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/stamp-h.in
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/util.c
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/util.h
ltp/testcases/kernel/fs/ext4-new-features/ffsb-6.0-rc2/examples/profile_everything

51) Log Message:
Fix several out-of-build tree issues with CVS HEAD found while building on-site with Cisco. Some issues were related to changes I made, and some were related to Masatake's  getuid changes as well. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/setgroups/Makefile
ltp/testcases/kernel/syscalls/getuid/Makefile
ltp/testcases/kernel/syscalls/getegid/Makefile
ltp/testcases/kernel/syscalls/utils/compat_16.mk
ltp/testcases/kernel/syscalls/utils/newer_64.mk
ltp/include/mk/env_post.mk
ltp/include/mk/testcases.mk
ltp/testcases/kernel/syscalls/getgid/Makefile

52) Log Message:
- Add additional quota check for RHEL 4.8 as reported by SimonX on #ltp
- Fix m4 file so that items are properly comma delimited, and thus the contents aren't incorrectly concatenated.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/m4/ltp-quota.m4
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

53) Log Message:
Fix indentation and a compile error noted by SimonXu on #ltp. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area.h
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area01.c
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area02.c

54) Log Message:
Fix two broken Makefiles reported by Gowri at IBM. Signed-off-by: Gowri <gomuthuk@linux.vnet.ibm.com>, Reviewed-by: Garrett Cooper <yanegomi@gmail.com>,

Modified Files:
ltp/testcases/realtime/perf/Makefile
ltp/testcases/realtime/stress/Makefile

55) Log Message:
Check in Makefile, which partially fixes issue with realtime component build breakage. Originally reported by Gowri (<gomuthuk@linux.vnet.ibm.com>) at IBM. Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/Makefile

56) Log Message:
The format string quantifier is incorrect, and thus the compiler prints out a warning. This changes the format quantifier to %ld to remove the compiler warning. Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/lib/libstats.c

57) Log Message:
Fix a typo and a warning related to unchecked results from asprintf, punted by from the compiler. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

ltp/testcases/realtime/lib/librttest.c

58) Log Message:
Add a default config.mk file to ease use for non-autoconf users. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Added Files:
ltp/include/mk/config.mk.default

59) Log Message:
On second thought, the compiler-related variables should be uncommented. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/config.mk.default

60) Log Message:
1. Get rid of useless documentation (the directions are already in INSTALL).
2. Tell people to read INSTALL instead.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/Makefile
Removed Files:
ltp/README.mk-user

61) Log Message:
Some fixes to make swap* stricter with including sys/swap.h, and defining MAX_SWAPFILES, that were hanging out in my dev branch that weren't checked in. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/swapon/swapon01.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c

62) Log Message:
Update the documentation for building and installing LTP as per the Makefile infrastructure changes. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/INSTALL
ltp/README.mk-devel
ltp/README.ltp-devel.in

63) Log Message:
testcases.mk: Add a freebie compile for the apicmds, if needed so tests can be run before install. config.mk.in: Remove $(DESTDIR)/$(libdir) from the LDFLAGS, because we're no longer installing libraries in all. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/include/mk/testcases.mk
ltp/include/mk/config.mk.in

64) Log Message:
1. Get rid of psuedo-autoconf scripts in testcases/realtime/scripts.
2. Integrate testcases/realtime with autoconf.
3. Fix compilation, according to report made by Gowri at IBM.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/realtime/func/rt-migrate/rt-migrate.c
ltp/testcases/realtime/lib/Makefile
ltp/testcases/realtime/func/pi-tests/Makefile
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/scripts/check_pi.sh
ltp/testcases/realtime/scripts/check_robust.sh
ltp/testcases/realtime/Makefile
ltp/testcases/realtime/config.mk
ltp/include/mk/automake.mk
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/m4/GNUmakefile
ltp/testcases/realtime/m4/Makefile.am
ltp/testcases/realtime/m4/check.m4
Added Files:
ltp/testcases/realtime/configure.in

65) Log Message:
Get rid of redundant XOPEN2K #define (_GNU_SOURCE covers this). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/realtime/func/rt-migrate/rt-migrate.c

66) Log Message:
Make sure the end-user knows that they need to run make autotools from $(top_srcdir), to avoid potential confusion. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/INSTALL

67) Log Message:
I thought I removed the recursive LDLIBS definition sneak in. Oh well... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/realtime/lib/Makefile

68) Log Message:
Accidentally nuking your .c files when running clean isn't a good thing. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/realtime/func/pi-tests/Makefile

69) Log Message:
lcov: improve derive-func-data option
- rewrite graph file handling
- make derive data look at all lines belonging to a function to find out whether it has been hit or not
- introduce --debug option to better debug problems with graph files
Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo lcov

70) Log Message:
Fix temporary file creation in mmapstress tests: these are two little fixes of the mmapstress test:
 - the mkstemp() function returns -1 on error; the tests treat 0 as error instead,
 - mkstemp() returns a file descriptor; no need to open the file once more later,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress02.c
ltp/testcases/kernel/mem/mmapstress/mmapstress05.c

71) Log Message:
Change errno reporting mechanism to TERRNO/TTERRNO in msgctl tests: The TERRNO/TTERRNO flags offer more information than the manual errno output used previously in the tests. This patch changes the tst_resm(XXX, ..., errno) and similar statements to tst_resm(XXX|TERRNO, ...). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl01.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl02.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl03.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl04.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl05.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl06.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl10.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c

72) Log Message:
Fix some bashisms: this is another patch fixing bashisms in LTP tests (the fixes are more or less the same as in the previous patches, except for a few exceptions). Note that the patch is not complete, in the sense that there may remain further bashisms in the source even after applying the patch (like use of arrays, which is visible even from this patch). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_utility.sh
ltp/testcases/kernel/controllers/cgroup_fj/run_cgroup_test_fj.sh
ltp/testcases/kernel/controllers/cpuctl_fj/run_cpuctl_test_fj.sh
ltp/testcases/kernel/controllers/memcg/functional/memcg_function_test.sh
ltp/testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh
ltp/testcases/kernel/fs/acls/acl_test01
ltp/testcases/kernel/fs/fs-bench/modaltr.sh
ltp/testcases/kernel/fs/fs_di/fs_di
ltp/testcases/kernel/fs/mongo/test.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug02.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug03.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug04.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.sar.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.top.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug07.sh
ltp/testcases/network/can/filter-tests/run_ltp-can_tests.sh
ltp/testcases/network/tcp_cmds/netstat/netstat01

73) Log Message:
Printf-style format string warnings (TEST_RETURN related): this patch fixes some printf-format string warnings, concerning the TEST_RETURN variable. TEST_RETURN is declared as "long", so it is advisable to use "%ld" in printf format string to avoid undefined behaviour. Note that this patch is not complete - it fixes the warnings in files near the beginning of the alphabet only. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/fs/fs-bench/modaltr.sh
ltp/testcases/kernel/fs/mongo/test.sh
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/fchmod/fchmod01.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchown/fchown01.c
ltp/testcases/kernel/syscalls/fchown/fchown04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl02.c
ltp/testcases/kernel/syscalls/fcntl/fcntl03.c
ltp/testcases/kernel/syscalls/fcntl/fcntl04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl05.c
ltp/testcases/kernel/syscalls/fcntl/fcntl08.c
ltp/testcases/kernel/syscalls/fcntl/fcntl09.c
ltp/testcases/kernel/syscalls/fcntl/fcntl10.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync02.c
ltp/testcases/kernel/syscalls/fork/fork01.c
ltp/testcases/kernel/syscalls/fpathconf/fpathconf01.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs01.c
ltp/testcases/kernel/syscalls/fsync/fsync01.c
ltp/testcases/kernel/syscalls/get_robust_list/get_robust_list01.c
ltp/testcases/kernel/syscalls/getdomainname/getdomainname01.c
ltp/testcases/kernel/syscalls/getegid/getegid01.c
ltp/testcases/kernel/syscalls/getegid/getegid02.c
ltp/testcases/kernel/syscalls/geteuid/geteuid01.c
ltp/testcases/kernel/syscalls/getgid/getgid01.c
ltp/testcases/kernel/syscalls/getgid/getgid03.c
ltp/testcases/kernel/syscalls/gethostname/gethostname01.c
ltp/testcases/kernel/syscalls/getpgrp/getpgrp01.c
ltp/testcases/kernel/syscalls/getpid/getpid01.c
ltp/testcases/kernel/syscalls/getppid/getppid01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority02.c
ltp/testcases/kernel/syscalls/getrusage/getrusage01.c
ltp/testcases/kernel/syscalls/getrusage/getrusage02.c
ltp/testcases/kernel/syscalls/getsockname/getsockname01.c
ltp/testcases/kernel/syscalls/getsockopt/getsockopt01.c
ltp/testcases/kernel/syscalls/gettid/gettid01.c
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/getuid/getuid02.c
ltp/testcases/kernel/syscalls/getuid/getuid03.c
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c
ltp/testcases/kernel/syscalls/ioperm/ioperm02.c
ltp/testcases/kernel/syscalls/iopl/iopl01.c
ltp/testcases/kernel/syscalls/iopl/iopl02.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c
ltp/testcases/kernel/syscalls/link/link02.c
ltp/testcases/kernel/syscalls/link/link03.c
ltp/testcases/kernel/syscalls/link/link04.c
ltp/testcases/kernel/syscalls/link/link05.c
ltp/testcases/kernel/syscalls/link/link06.c
ltp/testcases/kernel/syscalls/link/link07.c
ltp/testcases/kernel/syscalls/listen/listen01.c
ltp/testcases/kernel/syscalls/llseek/llseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek03.c
ltp/testcases/kernel/syscalls/lseek/lseek04.c
ltp/testcases/kernel/syscalls/lseek/lseek05.c
ltp/testcases/kernel/syscalls/lseek/lseek06.c
ltp/testcases/kernel/syscalls/lseek/lseek08.c
ltp/testcases/kernel/syscalls/lseek/lseek09.c
ltp/testcases/kernel/syscalls/lseek/lseek10.c
ltp/testcases/kernel/syscalls/lstat/lstat01.c
ltp/testcases/kernel/syscalls/lstat/lstat02.c
ltp/testcases/kernel/syscalls/madvise/madvise01.c
ltp/testcases/kernel/syscalls/madvise/madvise02.c
ltp/testcases/kernel/syscalls/madvise/madvise03.c
ltp/testcases/kernel/syscalls/mlock/mlock01.c
ltp/testcases/kernel/syscalls/mlock/mlock02.c
ltp/testcases/kernel/syscalls/times/times01.c
ltp/testcases/kernel/syscalls/wait/wait02.c
ltp/testcases/network/tcp_cmds/netstat/netstat01
ltp/testcases/kernel/fs/fs-bench/modaltr.sh
ltp/testcases/kernel/fs/mongo/test.sh
ltp/testcases/network/tcp_cmds/netstat/netstat01

74) Log Message:
mem/hugetlb: fix failure of hugemmap03: 1) In mmap's manual, The starting address for the new mapping is specified in addr. So, if mmap's argument "addr" is reachable, the mmap will creates a new mapping in the virtual address space of the call-ing process. The test hugemmap03 will test that a normal page cannot be mapped into a high memory region. This infers that "addr" should be higher for 64-bit mode. 2) The test use "-I2" option, and this not only causes TFAIL's loop, but also causes TPASS's loop. For TFAIL, loop is deserved, nor for TPASS. This patch fixed these problems. Signed-off-by: Liu Bo <liubo2009@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap03.c

75) Log Message:
Some fixes of shell scripts of tests: this patch fixes some minor bugs in the code of LTP shell scripts: 
 - quote arguments of test(1) in some places concerning redhat detection,
 - don't execute the result of type(1), it makes no sense - even more when the output of it should be redirected,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh
ltp/testcases/commands/cron/cron_allow01
ltp/testcases/commands/cron/cron_deny01
ltp/testcases/commands/cron/cron_pos_tests.sh
ltp/testcases/commands/mail/mail_tests.sh
ltp/testcases/commands/su/su01
ltp/testcases/network/tcp_cmds/rdist/rdist01

76) Log Message:
Complete the test cases for geteuid16: Another small patch to complete the test cases for *16. Put compat_16.h to testcases/kernel/syscalls/geteuid. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/testcases/kernel/syscalls/geteuid/Makefile
ltp/testcases/kernel/syscalls/geteuid/geteuid01.c
Added Files:
ltp/testcases/kernel/syscalls/geteuid/compat_16.h

77) Log Message:
Fix failures messages on multi socket hyper threaded system. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

78) Log Message:
Patch to remove hard coded cpu governers. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/pwkm_load_unload.sh

79) Log Message:
Garret added a new testcase for ptrace() syscall: The following calls ptrace(PTRACE_TRACEME, 0) for all signals and validates that all signals apart from SIGKILL are properly intercepted and WIFSTOPPED remains true, and SIGKILL is properly treated as WIFSIGNALED() && WTERMSIG() returns SIGKILL.I looked at it again this weekend, and my criterion for kill (..., 0) was incorrect. The newer version passes, and tests correct criterion, as per the manpage:
1. This test app helped unroot another issue with our custom Linux platform here at Cisco,
2. This test application does function properly on a Gentoo Linux based x86_64 / 2.6.30 kernel however, so it's an issue with our OS platform,
I will add this application to testcases/kernel/syscalls/ptrace, if someone else sees the value in it. I agree that additional error checking could be added for the calls to kill(2)... I just whipped this up in 45 mins after finding this strange behavior on our platform. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace05.c

80) Log Message:
lcov: remove unnecessary warning

Modified Files:
ltp/utils/analysis/lcov/bin/geninfo

81) Log Message:
lcov: fix problem with matching filename
- used correct source for filenames
- converted match_filenames to portable version,

Modified Files:
ltp/utils/analysis/lcov/bin/geninfo

82) Log Message:
lcov: remove further unneeded warning + use correct source for list of filenames

Modified Files:
ltp/utils/analysis/lcov/bin/geninfo

83) Log Message:
lcov: update README to mention required -lgcov switch during linking

Modified File(s):
ltp/utils/analysis/lcov/README

84) Log Message:
lcov: further clarification in the README

Modified Files:
ltp/utils/analysis/lcov/README

85) Log Message:
Fix a bashism that was pointed out in other files by Jiri Palecek. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/lib/cmdlib.sh

86) Log Message:
Avoid a possible issue with the test statement for SHELL_DEBUG if the user set it to something nasty like -x. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/lib/cmdlib.sh

87) Log Message:
Stupid Garrett. I need to increment the value... Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/lib/mdlib.sh

LTP-20090930

1) Log Message:
controller: fix the bug of missing compilation for controller cases: When doing "./configure && make", I found the controller cases couldn't be compiled. Because the config.mk file included into testcases/kernel/Makefile lost the definition of LTP_CHECK_CGROUPSTATS_HEADER, so ltp never enters the controller directory to do "make". And config.mk file is created by config.mk.in file in fact. In config.mk.in, LTP_CHECK_CGROUPSTATS_HEADER is lost, it leads to the wrong config.mk. Add LTP_CHECK_CGROUPSTATS_HEADER in config.mk.in to fix the problem. Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>, Signed-off-by: Shan Wei <shanwei@cn.fujitsu.com>.

Modified File(s):
ltp/config.mk.in

2) Log Message:
Patch to change the format of Steve Rostedt's rt-migrate-test testcase: This patch converts the testcase rt-migrate-test.c to the coding format used by the other realtime testcases in LTP, by making use of the librttest and libstats infrastructure. Signed-off-by: Kiran Prakash <kiran@linux.vnet.ibm.com>, Acked-by: Darren Hart <dvhltc@us.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>. Originally-contributed-by: Steven Rostedt <rostedt@goodmis.org>,

Modified Files:
ltp/testcases/realtime/func/Makefile
ltp/testcases/realtime/profiles/default
Added Files:
ltp/testcases/realtime/func/rt-migrate/Makefile
ltp/testcases/realtime/func/rt-migrate/rt-migrate.c
ltp/testcases/realtime/func/rt-migrate/run_auto.sh

3) Log Message:
Formatting and ftest cleanup: This is first part of testcases/kernel/fs/ftest/ cleanup. It fixes printf like formatting in pidns20.c and growfiles.c as well as huge number of bugs and code formatting issues in ftest01.c ftest02.c and ftest03.c. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>. 

Modified Files:
ltp/testcases/kernel/containers/pidns/pidns20.c
ltp/testcases/kernel/fs/doio/growfiles.c
ltp/testcases/kernel/fs/ftest/ftest01.c
ltp/testcases/kernel/fs/ftest/ftest02.c
ltp/testcases/kernel/fs/ftest/ftest03.c

4) Log Message:
Fix UNRESOLVED failures of pthread tests in open_posix_testsuite: I report a couple of "UNRESOLVED" failures of open_posix_testsuite in ltp and send a patch for them. I got following failures while executing open_posix_testsuite: Both of them have wrong steps of its test preparation:
  1. register signal handlers (just do sem_post()) for SIGUSR1/SIGUSR2.
  2. block those signals
  3. prepare something (sem_init()) for these signal handlers
  4. send signals to itself from sub-threads.
They have a window of not-yet-prepared-for-signals between step 1 and 2. I think above "UNRESOLVED" failures (sem_post() before sem_init()) are the result of getting a signal during this window. I don't know who sent a signal to them but I guess neighboring tests are suspects, because number of tests run concurrently in open_posix_testsuite.  The fix shall be just delaying step 1 to between step 2 and 4, so I wrote such a patch for both pthread_setschedparam and pthread_detach. I have confirmed that this UNRESOLVED failure disappeared with this patch applied. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_detach/4-3.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_setschedparam/5-1.c

5) Log Message:
Network: Fix iproute test case error: When I run network test case testcases/network/iproute/ip_tests.sh, some errors shown: 
ip01        0  TINFO  :  Test #1: changing mtu size of eth0:1 device.
/mnt/ltp/ltp-full-20090731/testcases/bin/ip_tests.sh: line 198: [: -eq: unary operator expected.
The output of 
ifconfig eth0:1 | grep -i MTU | sed "s/^.*MTU://"
is like:
1500  Metric:1
so should print field 1 instead of field 5. Signed-off-by: Hushan Jia<hjia@redhat.com>.

Modified Files:
ltp/testcases/network/iproute/ip_tests.sh

6) Log Message:
mbind01: Fix the bug of result output: I tested ltp mbind case and found the result is error as follows:
mbind01     0  TINFO  :  (case00) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
mbind01     0  TINFO  :  (case00) END => OK
mbind01     0  TINFO  :  (case01) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
mbind01     0  TINFO  :  (case01) END => NG
mbind01     0  TINFO  :  (case02) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
mbind01     0  TINFO  :  (case02) END => NG
mbind01     0  TINFO  :  (case03) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
mbind01     0  TINFO  :  (case03) END => OK
mbind01     0  TINFO  :  (case04) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
mbind01     0  TINFO  :  (case04) END => NG
mbind01     0  TINFO  :  (case05) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
mbind01     0  TINFO  :  (case05) END => OK
mbind01     0  TINFO  :  (case06) START
EXPECT: return value(ret)=0 errno=0 (Success), r/w check=OK
RESULT: return value(ret)=0 errno=0 (Success), r/w check=NG
mbind01     0  TINFO  :  (case06) END => OK
mbind01     0  TINFO  :  (case07) START
EXPECT: return value(ret)=0 errno=0 (Success)
RESULT: return value(ret)=0 errno=0 (Success)
mbind01     0  TINFO  :  (case07) END => OK
mbind01     0  TINFO  :  (case08) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
mbind01     0  TINFO  :  (case08) END => NG
mbind01     0  TINFO  :  (case09) START
EXPECT: return value(ret)=-1 errno=22 (Invalid argument)
RESULT: return value(ret)=-1 errno=22 (Invalid argument)
mbind01     0  TINFO  :  (case09) END => NG
mbind01     0  TINFO  :  (case10) START
mbind01     1  TFAIL  :  get_mempolicy failed - errno = 14 : Bad address

In case01,case02,case04,case08,case09, the expect is same with the result. So these cases should be OK instead of NG. In sourse code, TEST_RETURN should get value by "ret".By the way, the "switch/case RESULT_OK" missed "break". Signed-off-by: Zhang Xiliang <zhangxiliang@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

7) Log Message:
mbind01: Fix the bug of mind case06: I tested ltp mbind case and found the case06 failed. In mbind manual, it says "If the nodemask and maxnode arguments specify the empty set, then the memory is allocated on the node of the CPU that triggered the allocation." In case06, when tc->policy is MPOL_PREFERRED and tc->from_node is NONE, the getnodemask which is get by get_mempolicy() refer to the node of the CPU that triggered the allocation. But the nodemask is zero.(It is not used by mbind(), mbind() used "NULL".). So in this case, the cmp_ok should only compare the policy. Signed-off-by: Zhang Xiliang <zhangxiliang@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

8) Log Message:
mbind01: Fix the bug of mind case10: I tested ltp mbind01 case and found the case10 failed. In case10, the expect errno is EFAULT. In mbind manual, it says "EFAULT Part or all of the memory range specified by nodemask and maxnode points outside your accessible address space.". So the case should use invalid "nodemask" instead of invalid "p" to test. Signed-off-by: Zhang Xiliang <zhangxiliang@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/mbind/mbind01.c

9) Log Message:
LTP-LDFLAGS-enable: To make use of full testsuite of open_posix_testsuite we need to enable LDFLAGS. It is file used by the Makefile to link to what you specify in it. e.g. if you want to link with lpthread. By using these Flags can build up to 1888 test case with out the flags can build up to 486. However, the Best practice is to use posix test suite with the LDFLAGS. I have attached patch and below, please review the same.
/************************************************************/
Before patch: With out LDFLAGS:
                ***************************
                 CONFORMANCE TEST RESULTS
                ***************************
                * TOTAL:   486
                * PASSED:  449
                * FAILED:  12
                * UNRESOLVED:  7
                * UNSUPPORTED:  10
                * UNTESTED:  4
                * INTERRUPTED:  0
                * HUNG:  0
                * SEGV:  0
                * OTHERS:  4
                ***************************
After patch: With LDFLAGS:
                ***************************
                 CONFORMANCE TEST RESULTS
                ***************************
                * TOTAL:   1888
                * PASSED:  1731
                * FAILED:  26
                * UNRESOLVED:  14
                * UNSUPPORTED:  22
                * UNTESTED:  94
                * INTERRUPTED:  0
                * HUNG:  1
                * SEGV:  0
                * OTHERS:  0
                ***************************
/************************************************************/
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/LDFLAGS

10) Log Message:
Add autoconf tests for taskstats members not present on older kernels: this is cleaned version of previously posted patch. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>. 

Modified Files:
ltp/testcases/kernel/controllers/cgroup/getdelays.c

11) Log Message:
gen_fork() event should wait until the child exits. Otherwise the child would see INIT as the parent and end up in collecting wrong information to compare with. Signed-off-by: Suzuki K P <suzuki@in.ibm.com>, Acked-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/connectors/pec/event_generator.c

12) Log Message:
runltp can not run acl_test01 by default, we need a mounted partition with ACL options. To have acl_test01 started by runltp (or manually) without any acl aware partition,  if you agree I suggest the following patch: a kind of new setup and at the same time the activation of a non root user. Signed-off-by: JACKY MALCLES <Jacky.Malcles@bull.net>.

Modified Files:
ltp/testcases/kernel/fs/acls/acl_test01

13) Log Message:
cpuctl of controllers: fix the bug of while loop: When running the ltp tool by "./runltp -f controllers", I found "while" loop cannot stop in following files of cpuctl test. File list:
cpuctl_def_task01.c
cpuctl_def_task02.c
cpuctl_def_task03.c
cpuctl_def_task04.c
cpuctl_test01.c
cpuctl_test02.c
cpuctl_test03.c
cpuctl_test04.c

Key code:
timer_expired=0;
while(!timer_expired)
        f=sqrt(f*f);

Reason:
During the compilation of these files, gcc's O2 mechanism causes the change of variable "timer_expired" to be omitted, hence the loop, "while(!timer_expired) f=sqrt(f*f);" cannot get out from itself. Change the type of "timer_expired" from "int" to "volatile int" to fix this bug. By the way, it is necessary to modify the file, ltp-full-xxxxxxxx/testcases/kernel/controllers/libcontrollers/ libcontrollers.h for compilation. Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>, Signed-off-by: Liu Bo <liubo-fnst@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task04.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c
ltp/testcases/kernel/controllers/libcontrollers/libcontrollers.h

14) Log Message:
After trying to find old enough glibc (2.2.2 and older) in any distribution I've given up modifying the test to compile with non glibc epoll library. So when glibc epoll headers are not found the test is disabled entirely and dummy version of the test is compiled. Patch that also fixes some minor problems is attached. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/configure.ac
ltp/testcases/kernel/syscalls/epoll/Makefile
ltp/testcases/kernel/syscalls/epoll/epoll-ltp.c

15) Log Message:
network: Fix ip_tests error 2: Repost the ip tests patch:
1. Test #4: ip tools now print nud state as follows: REACHABLE, STALE, FAILED, etc,
2. Test #3, #4, #5: If delete entry succefully, grep will return 1, indicating test PASS, so return code RC should be set to 0,
Signed-off-by: Hushan Jia <hjia@redhat.com>,

Modified Files:
ltp/testcases/network/iproute/ip_tests.sh

16) Log Message:
network: fix multicast testcases Makefile: Repost the multicast Makefile patch: The Makefile of testcases/network/multicast/mc_commo and mc_member do not link binary file and config files to ../../../bin dirs. This patch add the links. Signed-off-by: Hushan Jia<hjia@redhat.com>,

Modified Files:
ltp/testcases/network/multicast/mc_commo/Makefile
ltp/testcases/network/multicast/mc_member/Makefile

17) Log Message:
pselect01: Fixed the checking logic to also consider some variation: Sometimes we may get failed results that the measured time is 1 second longer than expected. As fixed by Craig Meier earlier, the sleeps may last slightly more than total_sec. Also considering the time() overhead, we should expect the sleeps to last between total_sec and (total_sec+1) seconds. Signed-off-by: Nobuhiro Lin <nobuhiro@andestech.com>,

Modified Files:
ltp/testcases/kernel/syscalls/pselect/pselect01.c

18) Log Message:
Add new testcases for memcgroup: My workmate Li Zefan (lizf@cn.fujitsu.com) has created some testcases for cgroup's subsystem "memory" in the last year. And, He catched some kernel bugs through these testcases. So we think you glad to push them into LTP. There are total 40 testcases that have been added. These testcases contain the basis operation test, part functionality test and stress test of memcgroup. How to run this test: # runltp -f controllers.
Result:
memcgroup_function_test    1  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test    2  TPASS  :  rss=0/0, cache=4096/4096
memcgroup_function_test    3  TPASS  :  rss=0/0, cache=4096/4096
memcgroup_function_test    4  TPASS  :  rss=4096/4096, cache=8192/8192
memcgroup_function_test    5  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test    6  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test    6  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test    7  TPASS  :  rss=0/0, cache=4096/4096
memcgroup_function_test    7  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test    8  TPASS  :  rss=0/0, cache=4096/4096
memcgroup_function_test    8  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test    9  TPASS  :  rss=4096/4096, cache=8192/8192
memcgroup_function_test    9  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test   10  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test   10  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test   11  TPASS  :  failcnt=6
memcgroup_function_test   12  TPASS  :  failcnt=6
memcgroup_function_test   13  TPASS  :  failcnt=6
memcgroup_function_test   14  TPASS  :  process 5793 is killed
memcgroup_function_test   15  TPASS  :  process 5803 is killed
memcgroup_function_test   16  TPASS  :  process 5813 is killed
memcgroup_function_test   17  TPASS  :  process 5824 is killed
memcgroup_function_test   18  TPASS  :  process 5835 is killed
memcgroup_function_test   19  TPASS  :  process 5845 is killed
memcgroup_function_test   20  TPASS  :  process 5854 is killed
memcgroup_function_test   21  TPASS  :  process 5863 is killed
memcgroup_function_test   22  TPASS  :  input=4095, limit_in_bytes=4096
memcgroup_function_test   23  TPASS  :  input=4097, limit_in_bytes=8192
memcgroup_function_test   24  TPASS  :  input=1, limit_in_bytes=4096
memcgroup_function_test   25  TPASS  :  return value is 0
memcgroup_function_test   26  TPASS  :  return value is 1
memcgroup_function_test   27  TPASS  :  return value is 1
memcgroup_function_test   28  TPASS  :  return value is 1
memcgroup_function_test   29  TPASS  :  force memory succeeded
memcgroup_function_test   30  TPASS  :  force memory failed as expected
memcgroup_function_test   31  TPASS  :  return value is 0
memcgroup_function_test   32  TPASS  :  return value is 0
memcgroup_function_test   33  TPASS  :  return value is 0
memcgroup_function_test   34  TPASS  :  return value is 0
memcgroup_function_test   35  TPASS  :  return value is 1
memcgroup_function_test   36  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test   36  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test   37  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test   37  TPASS  :  rss=0/0, cache=0/0
memcgroup_function_test   38  TPASS  :  rss=4096/4096, cache=0/0
memcgroup_function_test   38  TPASS  :  rss=0/0, cache=0/0
memcgroup_stress_test      1  TPASS  :  stress test 1 passed
memcgroup_stress_test      2  TPASS  :  stress test 2 passed
INFO: ltp-pan reported all tests PASS,
Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>,

Modified Files:
ltp/runtest/controllers
ltp/testcases/kernel/controllers/memcg/Makefile
ltp/testcases/kernel/controllers/memcg/README
Added Files:
ltp/testcases/kernel/controllers/memcg/functional/Makefile
ltp/testcases/kernel/controllers/memcg/functional/memcg_function_test.sh
ltp/testcases/kernel/controllers/memcg/functional/memcg_getpagesize.c
ltp/testcases/kernel/controllers/memcg/functional/memcg_process.c
ltp/testcases/kernel/controllers/memcg/regression/Makefile
ltp/testcases/kernel/controllers/memcg/regression/memcg_regression_test.sh
ltp/testcases/kernel/controllers/memcg/regression/memcg_test_1.c
ltp/testcases/kernel/controllers/memcg/regression/memcg_test_2.c
ltp/testcases/kernel/controllers/memcg/regression/memcg_test_4.c
ltp/testcases/kernel/controllers/memcg/regression/memcg_test_4.sh
ltp/testcases/kernel/controllers/memcg/stress/Makefile
ltp/testcases/kernel/controllers/memcg/stress/memcg_process_stress.c
ltp/testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh
Removed Files:
ltp/testcases/kernel/controllers/memcg/memcg_regression_test.sh
ltp/testcases/kernel/controllers/memcg/memcg_test_1.c
ltp/testcases/kernel/controllers/memcg/memcg_test_2.c
ltp/testcases/kernel/controllers/memcg/memcg_test_4.c
ltp/testcases/kernel/controllers/memcg/memcg_test_4.sh

19) Log Message:
fix the bug of macro in getdelays.c: When running cgroup test, I found a bug of macro in getdelays.c, which refers to the spelling mistake. And this leads to testcase_eight's abnormal delay. Relative macro:
        HAVE_LINUX_CGROUPSTATS_H
Change macro HAVE_LINUX_CGROUPSTAT_H to HAVE_LINUX_CGROUPSTATS_H to fix the bug. Signed-off-by:Liu Bo <liubo-fnst@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/controllers/cgroup/getdelays.c

20) Log Message:
I propose two patches (two patterns of fix) for an issue of open_posix_testsuite. I hope either one of them (or more better one someone will write) is committed. You need to do three steps below in order to run execute.sh of open_posix_testsuite:
 1) make build-tests
 2) cc -O2 -o t0 t0.c
 3) ./execute.sh
I think it's better to include step 2 into step 1 or 3 for convenience. So I wrote two different patches for these cases. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>,

Modified Files:
ltp/testcases/open_posix_testsuite/Makefile

21) Log Message:
Issue observed with chmod05, fchmod05 test  cases: This Patch fixes bug in the test cases chmod05.c and fchmod05.c. The test case uses 2 UserIds nobody and bin. The issue is observed when one of the UserId is the supplementary group Ids of the rooti (either nobody or bin). In that case the Posix standard mentions that S_IGSID bit should not be cleared by the systemcall, chmod() or fchmod(), which causes the test to fail. This patch fixes the issue by specifically clearing the supplementary group ID of the process. The main intention of the test case is to test if S_IGSID bit is cleared in case the non privilage user tries to set file modes. Hence felt clearing the supplementary group Ids is the best way to fix the issue. At the same time I am reverting the earlier patch submitted by Wei Yongjun <yjwei@cn.fujitsu.com>. Signed-off-by: Sharyathi Nagesh <sharyath@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/chmod/chmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c

22) Log Message:
quotactl01: Fix tst_resm() format causing crash: When the quotactl syscall fails, quotactl01 crashes with a segmentation fault due to an incorrect printf()-style format. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

23) Log Message:
quotactl01: Replace hardcoded 258 by __NR_set_tid_address: The call signature seems to match the set_tid_address() syscall. Also remove the comment about calling quotactl, as it's obviously bogus. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

24) Log Message:
Spelling fixes: inclue -> include: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

25) Log Message:
Numa-testcases: Return TCONF if NUMA is not available: Currently the test just fails if NUMA is not available. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/numa/numa01.sh

26) Log Message:
smt_smp: Return TCONF if SMT/SMP is not supported: Currently the tests just fails if SMT/SMP is not supported. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/smt_smp_affinity.sh
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/smt_smp_enabled.sh

27) Log Message:
Filecaps: Return TCONF if file capabilities are not supported: Currently the test just fails if file capabilities are not supported. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/filecapstest.sh

28) Log Message:
The following patch avoids that all kill07 test instances running concurrently work with the same SHM object. Signed-off-by: Matthieu Fertr <Matthieu.Fertre@kerlabs.com>.

Modified Files:
ltp/testcases/kernel/syscalls/kill/kill07.c

29) Log Message:
ftest cleanup II: this is ftest cleanup part II. Most of the functions that were copy & pasted again and again in every file are now in libftest library. Also ftest04, ftest05, ftest06, ftest07 and ftest08 are cleaned. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/include/compiler.h
ltp/testcases/kernel/fs/ftest/Makefile
ltp/testcases/kernel/fs/ftest/ftest01.c
ltp/testcases/kernel/fs/ftest/ftest02.c
ltp/testcases/kernel/fs/ftest/ftest03.c
ltp/testcases/kernel/fs/ftest/ftest04.c
ltp/testcases/kernel/fs/ftest/ftest05.c
ltp/testcases/kernel/fs/ftest/ftest06.c
ltp/testcases/kernel/fs/ftest/ftest07.c
ltp/testcases/kernel/fs/ftest/ftest08.c
Added Files:
ltp/testcases/kernel/fs/ftest/libftest.c
ltp/testcases/kernel/fs/ftest/libftest.h

30) Log Message:
lcov: remove default for gcov_dir so that auto-sensing works. Fix problem with lcov not finding kernel coverage data at /sys/kernel/debug/gcov because the default system-wide lcovrc file contained a specification for the gcov directory which prevented auto-detection from working.

Modified File(s):
ltp/utils/analysis/lcov/lcovrc

31) Log Message:
Create testcase for p9auth kernel module: The p9auth module is a driver in the staging/ directory, which implements kernel functionality supporting plan 9-style setuid. Programs can be completely unprivileged, authorize themselves to a privileged server, and obtain a token which they can use to authorize a single setuid to a single specified new uid. This testcase runs three tests:
1. make sure we can't setuid without a hash (this is actually short-cut in the kernel code so it might be worthwhile having a separate test for having a hash, but an invalid one),
2. make sure we can setuid when there is a valid hash,
3. make sure we cannot setuid if there is a valid hash, but our original uid isn't the one specified in the token.
Changelog:
Sep 21: Comment README, add runp9auth.sh to the patch, and add the openssl check to checkp9auth.sh. Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>. 

Modified Files:
ltp/README
ltp/testcases/kernel/security/Makefile
Added Files:
ltp/runtest/p9auth
ltp/testcases/kernel/security/p9auth/Makefile
ltp/testcases/kernel/security/p9auth/checkp9auth.sh
ltp/testcases/kernel/security/p9auth/p9priv.sh
ltp/testcases/kernel/security/p9auth/p9unpriv.sh
ltp/testcases/kernel/security/p9auth/runp9auth.sh
ltp/testcases/kernel/security/p9auth/unhex.c

32) Log Message:
To test consolidation resets when interfaces are set to 0: CPU consolidation testcase modified to test when sched_mc &(/) sched_smt is set to Zero processes dont consolidate to single package or CPU. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

33) Log Message:
To fix issue in get_sched_values: get_sched_values was returning 1 & 0 instead of max sched_mc & max sched_smt. This patch fixes the issue in the first version of this file. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/get_sched_values.c

34) Log Message:
To incorporate changes in reusable function: ILB testcase uses trigger workload to pin a task to CPU. This patch is to incorporate the changes in the prototype of function testcase invokes to trigger workload. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/ilb_test.py

35) Log Message:
To include Additional 5 new test cases: Additional 5 new testcases to test cpu consolidation resets when sched_smt &(/) sched_mc is reset to zero. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

36) Log Message:
Modified library functions based on review comments. Signed-off-by: Poornima Nayak <mpnayak@linux.vnet.ibm.com>. 

Modified Files:
ltp/testcases/kernel/power_management/pm_include.sh

37) Log Message:
Modified python functions based on requirement for new testcase: Fixed some issues that affect verification code of new test scenarios. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

38) Log Message:
lcov: fix problem with CONFIG_MODVERSIONS, Make geninfo work with Linux 2.6.31 and CONFIG_MODVERSIONS, Signed-off-by: Peter Oberparleiter <oberpapr@users.sourceforge.net>,

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

39) Log Message:
network: fix nfs testcases Makefile error: The nfslock01 and nfsstress testcases' Makefile does not link excutables to testcase/bin directory, and nfslock01 does not build nfs_flock_dgen excutables, which will cause test fail. This patch add the links and build the nfs_flock_dgen. Signed-off-by: Hushan Jia <hjia@redhat.com>.

ltp/testcases/network/nfs/nfslock01/Makefile
ltp/testcases/network/nfs/nfsstress/Makefile

40) Log Message:
Add a count parameter to create_sig_proc: there were complaints about some tests (ppoll01) hanging sometimes. I've created this patch to address the issue. This should allow testing inherently racy conditions, such as a syscall returning EINTR upon signal handler execution. The problem here is that the signal could actually arrive before the syscall gets executed, which results in the test waiting for it forever. The solution is adding a parameter that would allow to specify how much signals a particular test expects - a racy test would ask for a large number of signals sent, so it will get one even if some were missed. Tests, which test behavior, which is not racy (eg. pselect()) should only request a single signal. Note that you need to manually kill the child process delivering the signals when you don't need them, if you ordered more signals than you actually handle. Also, this patch resets signal handling in child process created in create_sig_proc. This should avoid the child calling the parent's signal handlers and interfering with parent's cleanup process. Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

ltp/testcases/kernel/syscalls/clock_nanosleep/clock_nanosleep01.c
ltp/testcases/kernel/syscalls/mq_timedreceive/mq_timedreceive01.c
ltp/testcases/kernel/syscalls/mq_timedsend/mq_timedsend01.c
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c
ltp/testcases/kernel/syscalls/utils/common_j_h.c
ltp/testcases/kernel/syscalls/utils/include_j_h.h

41) Log Message:
Make sure some Crackerjack tests are running under root: The tests need to run under root to change their EUID. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

ltp/testcases/kernel/syscalls/mq_unlink/mq_unlink01.c
ltp/testcases/kernel/syscalls/utimes/utimes01.c

42) Log Message:
Fix the logic of ppoll01 test: According to POSIX, a file descriptor is considered ready for writing when a call to write() would not block, even when it returns an error (other than EAGAIN). Thus, a file descriptor opened for reading is ready for writing. This patch reflects that in the test. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

43) Log Message:
Add a test for race-free operation of ppoll: Hello, after the previous patch, this patch adds a test to test a use of ppoll() without races (ie. the intended use of ppoll). It blocks the signal, schedules a signal to be delivered and expects ppoll to return EINTR (and never lose the signal. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

44) Log Message:
Use SIG_ERR to indicate tst_sig's default handler, to allow (and not clash with) SIG_DFL: SIG_DFL happens to be 0 as well as DEF_HANDLER - this means you cannot use SIG_DFL as tst_sig argument, eg. if you want to reset the signal handling in tests' children to normal. This patch changes DEF_HANDLER to be SIG_ERR, as this value cannot be normally used with tst_sig(), so they cannot clash. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

ltp/include/test.h

45) Log Message:
fsstress: delete tralling spaces: Signed-off-by: Andrew Vagin <avagin@gmail.com>:

ltp/testcases/kernel/fs/fsstress/fsstress.c

46) Log Message:
fsstress: use tabs instead of spaces for indentation: Signed-off-by: Andrew Vagin <avagin@gmail.com>.

ltp/testcases/kernel/fs/fsstress/fsstress.c

47) Log Message:
fsstress: fix memory leaks: 
==11424== 156 bytes in 1 blocks are definitely lost in loss record 2 of 2
==11424==    at 0x4A0763E: malloc (vg_replace_malloc.c:207)
==11424==    by 0x402E4C: make_freq_table (fsstress.c:986)
==11424==    by 0x401C26: main (fsstress.c:410)
make_freq_table is executed on each iterations, but freq_table is not changed during test, so this patch moves it from the loop. Signed-off-by: Andrew Vagin <avagin@gmail.com>.

ltp/testcases/kernel/fs/fsstress/fsstress.c

48) Log Message:
fsstress: fix memory leak in fread_d: 
1. check result from operation open before set flags
2. close descriptor and free path if set flags failed
valgrind --leak-check=full --show-reachable=yes ./fsstress -d /home/shpagin/git-archive/ltp/testcases/kernel/fs/fsstress/tmp -l 10 -n 100
==23212== 1,134 bytes in 108 blocks are definitely lost in loss record 4 of 5
==23212==    at 0x4A0776F: realloc (vg_replace_malloc.c:429)
==23212==    by 0x401E6A: append_pathname (fsstress.c:528)
==23212==    by 0x4024E3: fent_to_name (fsstress.c:760)
==23212==    by 0x40284F: get_fname (fsstress.c:846)
==23212==    by 0x4041E0: dread_f (fsstress.c:1757)
==23212==    by 0x402368: doproc (fsstress.c:728)
==23212==    by 0x401CC1: main (fsstress.c:463)
Signed-off-by: Andrew Vagin <avagin@gmail.com>.

ltp/testcases/kernel/fs/fsstress/fsstress.c

49) Log Message:
fsstress: renew flist if clean up test directory: flist contain all files created by fsstress. If test clean up direcory on each interations that it should reinitilize flist. Signed-off-by: Andrew Vagin <avagin@gmail.com>.

ltp/testcases/kernel/fs/fsstress/fsstress.c

50) Log Message:
lcov: improve detection of gcov-kernel support

Modified File(s):
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/lcovrc.5

51) Log Message:
memcg : fix various test failures: In memcg testcases,
1. use /dev/memcg consistently,
2. for testcase_25, since 2.6.31, writing -1 to memory.limit_in_bytes will reset to unlimit,
3. for testcase_35, writing to memory.force_empty for non-empty cgroup should return failure,
Signed-off-by: Liu Bo <liubo-fnst@cn.fujitsu.com>,

Modified File(s):
ltp/testcases/kernel/controllers/memcg/functional/memcg_function_test.sh
ltp/testcases/kernel/controllers/memcg/stress/memcg_stress_test.sh

52) Log Message:
When this TC is ending it removes all directories/files under /tmp that may be embarrassing so, if you agree I suggest that it only removes what has to do with the TestCase; this is the purpose of the following patch. Signed-off-by: JACKY MALCLES <Jacky.Malcles@bull.net>.

ltp/testcases/kernel/fs/fs_di/fs_di

53) Log Message:
lcov: ignore incomplete function names in .bb files
- don't abort processing when an incomplete function name is encountered in a .bb file (gcc 2.95.3 adds those)
- fix filename prefix detection
Peter Oberparleiter <oberpapr@users.sourceforge.net>,

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

54) Log Message:
lcov: introduce new options --derive-func-data
When using a gcov version that does not provide function data, this option will attempt to guess the function coverage data for a function by looking at the number of times that the first line of that function was called. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

LTP-20090831

1) Log Message:
Enable traversing down the performance_counter directory and as noted in email to ltp-list about C file changes. This simply fixes some missing declarations and linux_syscall_number.h cleanup related compiler warnings. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/performance_counters/performance_counter02.c

2) Log Message:
As just emailed to ltp-list...
1. The indentation in this script was off (defacto standard for shell scripts is 4-space indents).
2. rsh is becoming a deprecated app, so the likelihood of someone executing this app and having it fail the first time and succeed in the remaining runs is low. So let's do two things:
    i. Provide a means to toggle immediately failure to provide a quick failure short circuit (FAIL_IMMEDIATELY => 1).
    ii. Fail on the first try if FAIL_IMMEDIATELY is set and exit the script.
3. Export TCID, TST_COUNT, and TST_TOTAL so tst_resm doesn't complain.
4. Prefix the number of tries so folks don't need to scroll up the terminal buffer and count to see what iteration they're executing.
5. Convert `"$CHECK" -eq 9' to `"$CHECK" = "9"' so test(1) doesn't complain if and when the rsh(1) fails, and thus doesn't return an integer value to stdout.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/network/tcp_cmds/rsh/rsh01

3) Log Message:
fcntl24,25,26 fail when run on tmpfs: Attached is a patch to skip testcases fcntl24, fcntl25 and fcntl26 if the host is running on tmpfs. The reason being that, as documented here http://bugzilla.kernel.org/show_bug.cgi?id=13626, F_SETLEASE and F_WRLCK cannot work on tmpfs. Signed-off-by: Matt Fleming <matt@console-pimps.org>.

Modified Files:
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c

4) Log Message:
We need to verify the validity of using MAP_FIXED in this manner. The tests do no checking to see whether the address space is safe to use or not. It should be safe after  removing the flag MAP_FIXED from all calls to mmap in the remap_file_pages tests.  If mmap is called without that flag, the kernel will find a safe memory space to map, and the test will pass. Signed-off-by: Srikanth Krishnakar <skrishnakar@celestialsys.com>.

Modified Files:
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

5) Log Message:
Remove getgid02 from all runtest files (was "[PATCH] Remove getgid02 from ltplite runtest file"). And it appears that I missed some spots. This removes _all_ references to getgid02 from _all_ of the runtest files: Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/runtest/ltplite
ltp/runtest/stress.part3
ltp/runtest/syscalls

6) Log Message:
This set of 3 patches adds a new API stats_container_append to libstats. This function adds new stats_record_t to the record list in stats_container_t. It also replaces the occurrences of data->size with data->index and modifies the test-cases to call the append function. Changelog
---------
- Added index to stats_container_t struct
- Added Append function to add new stats_record_t to records list of stats_container_t
- Replaced the occurrences of data->size by data->index in libstats.c
- Modified the realtime testcases to include call to the append function.
[PATCH 1/3] libstats: add append API to libstats: This patch adds a new API stats_container_append to libstats. This function adds a new stats_record_t to the records list in stats_container_t.
Signed-off-by: Kiran Prakash <kiran@linux.vnet.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
Acked-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Sripathi Kodi <sripathik@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/include/libstats.h
ltp/testcases/realtime/lib/libstats.c

7) Log Message:
This set of 3 patches adds a new API stats_container_append to libstats. This function adds new stats_record_t to the record list in stats_container_t. It also replaces the occurrences of data->size with data->index and modifies the test-cases to call the append function. Changelog
---------
- Added index to stats_container_t struct
- Added Append function to add new stats_record_t to records list of stats_container_t
- Replaced the occurrences of data->size by data->index in libstats.c
- Modified the realtime testcases to include call to the append function.
[PATCH 2/3] libstats: replace data->size by data->index: This patch replaces the occurrences of data->size by data->index+1 as the index starts with 0 and ends at data->size-1. data->size holds the max size of the records list in data->container_t. data->index holds the index of the last record in the list. Since the records list may not be completely filled, data->index + 1 gives the total number of records currently in the list and it may not be equal to data->size.
Signed-off-by: Kiran Prakash <kiran@linux.vnet.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
Acked-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Sripathi Kodi <sripathik@in.ibm.com> ,

Modified Files:
ltp/testcases/realtime/lib/libstats.c

8) Log Message:
his set of 3 patches adds a new API stats_container_append to libstats. This function adds new stats_record_t to the record list in stats_container_t. It also replaces the occurrences of data->size with data->index and modifies the test-cases to call the append function. Changelog
---------
- Added index to stats_container_t struct
- Added Append function to add new stats_record_t to records list of stats_container_t
- Replaced the occurrences of data->size by data->index in libstats.c
- Modified the realtime testcases to include call to the append function.
[PATCH 3/3] libstats: Modify testcases to call the append function: This patch modifies the testcases to call the stats_container_append function.
Signed-off-by: Kiran Prakash <kiran@linux.vnet.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
Acked-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Sripathi Kodi <sripathik@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/perf/latency/pthread_cond_many.c

9) Log Message:
Fixed static build which needs to link the pthread library in pidns and pipeio. Signed-off-by: nobuhiro <nobuhiro@andestech.com>. Matt Helsley <matthltc@us.ibm.com> replied: I'm not sure this is correct. I just did a CVS update and grepped for "pthread". I don't see a single use of pthreads in there. What output suggested all of these tests need to link to pthreads? Could you at least stick that in the changelog? Regardless, I'm satisfied with the patch itself. As I said before the changelog would be nicer if it included a snippet of the output that justifies it (included here for convenience): When static linking, the pthread stuff is due to the undefined pthread symbols in librt.a and libgcc_eh.a.
make[4]: Entering directory `/home/nobuhiro/git_repo/os/ltp/testcases/kernel/ipc/pipeio'
cc -Wall  -static -Wall  -I../../../../include   pipeio.c  -L../../../../lib -lltp -lrt -o pipeio
/usr/lib/gcc/x86_64-pc-linux-gnu/4.3.3/../../../../lib64/librt.a(aio_suspend.o):
In function `cleanup': (.text+0xa): undefined reference to `pthread_mutex_lock'.

Modified Files:
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/ipc/pipeio/Makefile

10) Log Message:
[RESEND][PATCH 3/3] libstats: Modify testcases to call the append function. I am resending the patch after checking with the latest CVS version of LTP. 
Signed-off-by: Kiran Prakash <kiran@linux.vnet.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
Acked-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Sripathi Kodi <sripathik@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/perf/latency/pthread_cond_many.c

11) Log Message:
As per the execute.sh script file there is time limit of two minutes for each test case execution if it takes more time it will be reported as HUNG. shm_open/23-1.c test case under posix test suite which executes more than two minutes so test case reported as HUNG. I have changed time limit from 120 to 300 sec. that is nothing but two minutes to five minutes. In low end machines this test case taking 4 min to complete execution. Now test cases reported as PASS. I have attached patch and below.
/*****************************************************/
Before Patch:
conformance/interfaces/shm_open/23-1.test:execution:HUNG
After Patch:
conformance/interfaces/shm_open/23-1.test:execution:PASS
/*****************************************************/
Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >.

Modified Files:
ltp/testcases/open_posix_testsuite/execute.sh

12) Log Message:
clone01 -c 10 on x86: Michal Simek <michal.simek@petalogix.com> reported: can you please to run clone01 syscall test on any x86 machine? I am getting fault there when I run it 10 times for example. The same problem I have on Microblaze.
$> ./clone01  -c 10
clone01     1  TPASS  :  clone() returned 22738
clone01     1  TPASS  :  clone() returned 22740
clone01     1  TPASS  :  clone() returned 22742
clone01     1  TPASS  :  clone() returned 22748
clone01     1  TPASS  :  clone() returned 22750
clone01     1  TPASS  :  clone() returned 22752
clone01     1  TPASS  :  clone() returned 22754
clone01     1  TFAIL  :  clone() returned 134919589, errno = 22755
clone01     1  TPASS  :  clone() returned 22744
clone01     1  TPASS  :  clone() returned 22746,
"Serge E. Hallyn" <serue@us.ibm.com> replied: All right I don't have the patiente to wade through the parse_opts and usc_lib crap, but this is not a clone failure.  What appears to be happening is setup() at the top of clone01.c is calling lib/parse_opts.c:usc_global_setup_hook(), with STD_COPIES set to the count option you passed in.  That forks of 10 copies of the test. I don't know what happens with the actual loop then, but the reason you get the error for the last clone test is that one of those forked copies of clone01 (*not* one of the cloned children) exits, and wait() catches that one.  That is why wait() returned 22744, which isn't any of the cloned children. So one stupid way of fixing this without dealing with the convoluted setup junk would be to change the waitpid chunk of the code like so.

Modified Files:
ltp/testcases/kernel/syscalls/clone/clone01.c

13) Log Message:
Regresion testing for Microblaze: here 4 tests are from my regresion testing for Microblaze kernel debug. There is one extension for testing aligned/unaligned get/put_user macros. The rest of changes are easy. [PATCH 1/4] utimensat: Remove utimensat_user from script: We can use nobody user instead of creating new one for this special test. Latest busybox source code not support userdel, useradd that's why is better to use user which exists. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

14) Log Message:
Regresion testing for Microblaze: here 4 tests are from my regresion testing for Microblaze kernel debug. There is one extension for testing aligned/unaligned get/put_user macros. The rest of changes are easy. [PATCH 2/4] tst_is_cwd: Add support for ramfs: I added support for testing ramfs and add together tests for nfs, tmpfs and ramfs. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Added Files:
ltp/lib/tst_is_cwd.c
Removed Files:
ltp/lib/tst_is_cwd_nfs.c
ltp/lib/tst_is_cwd_tmpfs.c

15) Log Message:
Regresion testing for Microblaze: here 4 tests are from my regresion testing for Microblaze kernel debug. There is one extension for testing aligned/unaligned get/put_user macros. The rest of changes are easy. [PATCH 3/4] fcntl24,25,26: F_SETLEASE and F_WRLCK cannot work on ramfs: The same reason as was in previous patch for tmpfs. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c

16) Log Message:
Regresion testing for Microblaze: here 4 tests are from my regresion testing for Microblaze kernel debug. There is one extension for testing aligned/unaligned get/put_user macros. The rest of changes are easy. [PATCH 4/4] Add unaligned tests which tests get/put_user macros: getpeername01 and getsockname01 tests get_user macro socketpair01 tests put_user macro. Signed-off-by: Michal Simek <monstr@monstr.eu>. 

Modified Files:
ltp/testcases/kernel/syscalls/getpeername/getpeername01.c
ltp/testcases/kernel/syscalls/getsockname/getsockname01.c
ltp/testcases/kernel/syscalls/socketpair/socketpair01.c

17) Log Message:
Alternatively, since digsig never went upstream and isn't being maintained, it might be best to drop this from LTP. "Serge E. Hallyn" <serue@us.ibm.com>. 

Removed Files:
ltp/testcases/kernel/security/digsig/Makefile
ltp/testcases/kernel/security/digsig/README
ltp/testcases/kernel/security/digsig/builddigsig.sh
ltp/testcases/kernel/security/digsig/test.sh
ltp/testcases/kernel/security/digsig/twiddlebit/Makefile
ltp/testcases/kernel/security/digsig/twiddlebit/bsigntest.sh
ltp/testcases/kernel/security/digsig/twiddlebit/digsigtest.sh
ltp/testcases/kernel/security/digsig/twiddlebit/hw.c
ltp/testcases/kernel/security/digsig/twiddlebit/pubring.gpg
ltp/testcases/kernel/security/digsig/twiddlebit/random_seed
ltp/testcases/kernel/security/digsig/twiddlebit/secring.gpg
ltp/testcases/kernel/security/digsig/twiddlebit/swapbit.c
ltp/testcases/kernel/security/digsig/twiddlebit/test_pub_key
ltp/testcases/kernel/security/digsig/twiddlebit/trustdb.gpg
ltp/testcases/kernel/security/digsig/twiddlebit/twiddletest.sh
ltp/testcases/kernel/security/digsig/writeexec/Makefile
ltp/testcases/kernel/security/digsig/writeexec/edit_write.c
ltp/testcases/kernel/security/digsig/writeexec/libwritetest.c
ltp/testcases/kernel/security/digsig/writeexec/shared.c

18) Log Message:
Make the test result codes a real bitfield again: the commit "extend the test result to a bit field so we can extend the output further" from July 20th unfortunately changes the code, that was previously a bitfield, to a non-bitfield. This causes FAILED tests to return erroneously 0. This patch changes the test result codes to be individual bits in the bitfield (effectively reverting  a small part of aforementioned patch). Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/include/test.h

19) Log Message:
Added one more approach for data integrity. Data integrity is performed on two fragmented files.
1. Creating two fragmented files each of size DiskSize/2.
2. Then comapring against the original file.
3. If not equal test case fails.
My ultimate goal in creating fragmented files is that,
1. It creates many extents (fragments for each file)
2. FS code may behave wrong at corner cases which may come into picture after many extents gets added to the file.
3. Data corruption chances are there
     i. when file metadata updation is not proper(corner cases when fragments are more)
     ii.If write and read is not matching (write operation might have updated the block number some where and read may skip that block in some corner cases)
4. In reality fragments can occur only after much usage of the disk(create/delete file)
5. This is good test case for bigger size disk.(it can create more extents)
6. fsync() is called after every write, which makes it slow.
Signed-off-by: Jyoti Vantagodi <jyotiv@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/fs/fs_di/fs_di
Added Files:
ltp/testcases/kernel/fs/fs_di/frag.c

20) Log Message:
Remove pidns14 test case reference: pidns14 test case is removed in the July 2009 LTP release. So remove the reference to pidns14 test case in the runpidnstest.sh script. Signed-off-by: M. Mohan Kumar <mohan@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/runpidnstest.sh

21) Log Message:
Pls find attached patch for waitid02 test case.I have modified the test case.I have also added 2 test scenarios in the test case using WSTOPPED and WNOWAIT. Note: The testcase was failing in LTP July, 2009 release. The warning- "implicit declaration of function 'getpgid", has been removed. Signed-off-by: rohit verma <rohit170309@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/waitid/waitid02.c

22) Log Message:
I have noticed UNTESTED behavior with sched_setparam/26-1.c test case under open_posix_testsuite. Test needs to be executed as non-root user. So I have changed user id from root to non-root user by adding set_nonroot() function. Now test case got PASSED. I have attached patch and results before and after the patch. please review the same.
/*********************************************************************************************/
Before Patch:
/*********************************************************************************************/
# ./26-1.test
Run this test case as a Regular User, but not ROOT
conformance/interfaces/sched_setparam/26-1.test:execution:UNTESTED
/*********************************************************************************************/
After Patch:
/*********************************************************************************************/
# ./26-1.test
Testing with user 'bin' (uid: 1) Test PASSED
conformance/interfaces/sched_setparam/26-1.test:execution:PASSED
/*********************************************************************************************/
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/26-1.c

23) Log Message:
Top of tree fails to build on PPC fc11 box: This failure is being caused because .in files in kernel/includes are wrong. The prefixes for the names (__NR_) and the plus signs were removed. I've noticed it in .in files for several architectures in the latest LTP release (July 2009). This patch fixes bad updates to syscalls declarations for powerpc, that are causing build failures. This should be fixed for other archs accordingly. Signed-off-by Lucio Correia <luciojhc@br.ibm.com>.

Modified Files:
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in

24) Log Message:
Issue with rt_sigqueueinfo testcase in LTP: rohit verma <rohit.170309@gmail.com> reported: I have found an issue with
rt_sigqueueinfo test-case. Following is the test output:
rt_sigqueueinfo01    1  PASS  :  Test Succeeded
rt_sigqueueinfo01    1  FAIL  :  Test Failed, errno=1 : Operation not permitted
rt_sigqueueinfo01    1  PASS  :  Test Succeeded
rt_sigqueueinfo01    1  FAIL  :  Test Failed, errno=1 : Operation not permitted
rt_sigqueueinfo01    0  WARN  :  tst_rmdir(): rmobj(/tmp/rt_3FaSpK) failed: lstat(/tmp/rt_3FaSpK) failed; errno=2: No such file or directory
I think the following lines are causing the failures:
(Line - 164)
uinfo.si_errno = 0;
uinfo.si_code = 0;//SI_USER
TEST(retval = syscall(__NR_rt_sigqueueinfo, getpid(), 17, &uinfo));
Reason -
You can observe the following comment & source when you look at the Linux source (v 2.6.29) (linux-2.6.29/kernel/signal.c):
           /* Not even root can pretend to send signals from the kernel.
            Nor can they impersonate a kill(), which adds source info.  */
         if (info.si_code >= 0)
                 return -EPERM;
which implies that si_code cannot be set to ' 0 ' (SI_USER) when invoking the rt_sigqueueinfo syscall. I am not sure how to fix this issue. But, a possible fix would be to remove the second set of fork & rt_sigqueueinfo invocations and use the first set (with SI_QUEUE). If needed, the loop count can be increased.
Henry Yei <hyei@mvista.com> replied: Yes, I had just noticed this as well. Since it was "passing", it took awhile to spot. Returning pass even with tst_resm(TFAIL,.. Being called must have something to do with the forking, but I'm not familiar with how the LTP framework deals with that. In any case, I've
create this patch for our internal tree that does the following: 
- cleans up spacing for tabs, it was mix of two before
- removes the second testcase which is I think is invalid (this gets rid of the bad return code as well).
- removed the inner loop, it doesn't make sense as the tst_exit in the original code would never let it run past the first loop.
- moved cleanup() and setup() to the appropriate places where they will only be called in pairs.
Garrett Cooper <yanegomi@gmail.com> replied: I don't think that's the problem. I think that the real problem is how the testcase itself is written, because I don't see any code that checks WIFEXITED and WIFSIGNALED (I would check for both those items when doing sigqueue), and I don't see where the child(ren) actually exit... HMMM...

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigqueueinfo/rt_sigqueueinfo01.c

25) Log Message:
lcov: improvements
- added --from-package and --to-package options
- improved gcov-kernel handling

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/lcov.1

26) Log Message:
RANLIB isn't a predefined variable in make(1):
gcooper@orangebox ~ $ make -p idontexist | grep RANLIB
make: *** No rule to make target `idontexist'.  Stop.
This solves that issue. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/network/lib6/Makefile

27) Log Message:
Commit "move leading __NR_ to script to make all the .in files simpler" accidentally removed all plus signs surrounded by spaces from the syscall definition files for hppa/powerpc{,64}/s390{,x}/sh/sparc{,64}, breaking the build like:
        fstatat01.c: In function ‘main’:
        fstatat01.c:126: error: expected ‘)’ before numeric constant
        make[4]: *** [fstatat01_64.o] Error 1
Re-add the missing plus signs to fix it. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/kernel/include/hppa.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/s390x.in
ltp/testcases/kernel/include/sh.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in

28) Log Message:
I have noticed issues for patch applied on 12-Dec-2008. Because it is fixing the mq_send/5-1.c problem, but at the same time patch is affecting the building of few test cases in the same directory. I have listed the build log before and after the patch. So I have modified the patch such a way that it should not affect other test cases. Modifications:
1.    remove function definitions from “include/posixtest.h”
2.    add function definitions to new header file “include/mq_send.h”
3.    add #include ”mq_send.h” line to mq_send/5-1.c test cases
I have attached modified patch and below. Please review the same. Signed-off-by: naresh kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mq_send/5-1.c
ltp/testcases/open_posix_testsuite/include/posixtest.h
Added Files:
ltp/testcases/open_posix_testsuite/include/mq_send.h

29) Log Message:
Add option to skip tests: One problem that LTP has long suffered is that certain tests are known to be broken, sometimes for long periods of time.  In an ideal world, I think it best that these should be skipped, or at least removed from the default list of tests to run, but this isn't always practical due to a number of reasons.  Of course, another option is that a 'whitelist' of tests to run can be created and passed to runltp, but this becomes hard to maintain as there are often new tests that you may want to keep up with, and with each release of LTP, the list would have to be reexamined. So I wanted to see what people thought about a simple option, -S, to specify a list of tests that you want to blacklist from the current run. This is handy if you have an automated testing environment with an architecture that doesn't always get great attention and a list of tests that you know to be broken on that arch. The skipfile is simply a list of test names, one per line. Add a -S option to runltp that allows the user to specify a SKIPFILE of tests to skip. Signed-off-by: Paul Larson <paul.larson@canonical.com>.

Modified File(s):
ltp/runltp

30) Log Message:
gcov-kernel: update to Linux 2.6.30

Added File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.30-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.30-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.30-gcov.patch

31) Log Message:
lcov: ignore gcov errors for unnamed source files: When specifying "--ignore-errors gcov", lcov/geninfo should not abort when they cannot read a .gcov file. Fix this by introducing warnings in the respective places. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified Files:
ltp/utils/analysis/lcov/bin/geninfo

32) Log Message:
RANLIB isn't a standard Make variable, which means that when it's exported to leaf callers as an empty value, builds fail. testcases/network/lib6/Makefile is a prime example. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/Makefile

33) Log Message:
Introducing the "Kernel Fault Injection Framework" generation and testing capability in LTP. This is in line with the recent proposal made through LTP Paper at OLS 2009: "Putting LTP to test - Validating both the Linux kernel and Test-cases" (http://ltp.sourceforge.net/documentation/technical_papers/Putting_LTP_to_Test.pdf). This infrasturcture will help LTP directly in the following ways:
1) Allow test developers to test their new test cases against a faulted kernel, and then compare it on stable kernel run, impacting in better test development,
2) Allow test engineers to be able to generate more code coverage by traversing the rarely touched parts of the kernel code, As we move forward in using this, we would definitely find some other advantages of this framework. This is V2 of patchset after incorporating comments from Mike, Paul & Garret.
[PATCH v2 01/05] Provide all necessary information through ltp/README: Provide all necessary information to create/use "Fault Injection Framework" through ltp/README. This is necessary before any test case(s) can be run on this harness. Also describes the general algorithm that would be followed while running LTP tests in "Fault Injection" harness. Changed the debugfs mount point from /debug/ to /sys/kernel/debug/ as pointed out by Mike. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/README

34) Log Message:
Introducing the "Kernel Fault Injection Framework" generation and testing capability in LTP. This is in line with the recent proposal made through LTP Paper at OLS 2009: "Putting LTP to test - Validating both the Linux kernel and Test-cases" (http://ltp.sourceforge.net/documentation/technical_papers/Putting_LTP_to_Test.pdf). This infrasturcture will help LTP directly in the following ways:
1) Allow test developers to test their new test cases against a faulted kernel, and then compare it on stable kernel run, impacting in better test development,
2) Allow test engineers to be able to generate more code coverage by traversing the rarely touched parts of the kernel code, As we move forward in using this, we would definitely find some other advantages of this framework. This is V2 of patchset after incorporating comments from Mike, Paul & Garret.
[PATCH v2 02/05] Add Script which would actually do the job of injecting faults: Script which would actually do the job of injecting faults by changing various parametrs available under /debug/fail*. This would be done dynamically during LTP run, and, is capable of taking parameters from 0 to 100 to vary the probability of Fault the user wants to inject in the running kernel. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/tools/insert_kernel_faults.sh

35) Log Message:
Introducing the "Kernel Fault Injection Framework" generation and testing capability in LTP. This is in line with the recent proposal made through LTP Paper at OLS 2009: "Putting LTP to test - Validating both the Linux kernel and Test-cases" (http://ltp.sourceforge.net/documentation/technical_papers/Putting_LTP_to_Test.pdf). This infrasturcture will help LTP directly in the following ways:
1) Allow test developers to test their new test cases against a faulted kernel, and then compare it on stable kernel run, impacting in better test development,
2) Allow test engineers to be able to generate more code coverage by traversing the rarely touched parts of the kernel code, As we move forward in using this, we would definitely find some other advantages of this framework. This is V2 of patchset after incorporating comments from Mike, Paul & Garret.
[PATCH v2 03/05] Add Script so the kernel is restored back to its original pristine form: Once the faults has been injected and all the concerned tests have been run completely, the kernel needs to be restored back to its original pristine form so that it is stable again. This Script does just exactly that. This again has changes regarding the debugfs mount point. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/tools/restore_kernel_faults_default.sh

36) Log Message:
Introducing the "Kernel Fault Injection Framework" generation and testing capability in LTP. This is in line with the recent proposal made through LTP Paper at OLS 2009: "Putting LTP to test - Validating both the Linux kernel and Test-cases" (http://ltp.sourceforge.net/documentation/technical_papers/Putting_LTP_to_Test.pdf). This infrasturcture will help LTP directly in the following ways:
1) Allow test developers to test their new test cases against a faulted  kernel, and then compare it on stable kernel run, impacting in better test development,
2) Allow test engineers to be able to generate more code coverage by traversing the rarely touched parts of the kernel code, As we move forward in using this, we would definitely find some other advantages of this framework. This is V2 of patchset after incorporating comments from Mike, Paul & Garret.
[PATCH v2 04/05] Add Script which will be at the heart of this infrastructure: At the heart of this infrastructure is this Script, which will actually:
1) Change the temporary command file generated by runltp,
2) Create a new temporary command file which will have the following entries against each one entry in the command file:
        i) Same TAG COMMAND_LINE entry,
        ii) Entry to call the script to insert faults,
        iii) Entry to run as many loops as specified by the user,
        iv) Entry to call the script to restore kernel to default state,
It is capable of creating new entries in the temporary command file with the following tags and command lines:
TAG_NAME=tag1,  COMMANDLINE="test1",
TAG_NAME=tag1_loop1_under_kernel_fault,
COMMANDLINE="insert_fault_in_kernel; test1",
TAG_NAME=tag1_loop2_under_kernel_fault,    COMMANDLINE="test1",
...
TAG_NAME=tag1_loopn_under_kernel_fault,    COMMANDLINE="test1; restore_default_kernel",
Changes from V1 include:
1) Paul's suggestion to tag the results to say when a fault was, or, was not in the process of being generated. Garrett and Mike wanted this to be in Shell script. So, Garret will change this to a Shell script in future. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/tools/create_kernel_faults_in_loops_and_probability.pl

37) Log Message:
Introducing the "Kernel Fault Injection Framework" generation and testing capability in LTP. This is in line with the recent proposal made through LTP Paper at OLS 2009: "Putting LTP to test - Validating both the Linux kernel and Test-cases" (http://ltp.sourceforge.net/documentation/technical_papers/Putting_LTP_to_Test.pdf). This infrasturcture will help LTP directly in the following ways: 
1) Allow test developers to test their new test cases against a faulted kernel, and then compare it on stable kernel run, impacting in better test development,
2) Allow test engineers to be able to generate more code coverage by traversing the rarely touched parts of the kernel code, As we move forward in using this, we would definitely find some other advantages of this framework. This is V2 of patchset after incorporating comments from Mike, Paul & Garret.
[PATCH v2 05/05] Add the necessary Interface and Option through "runltp": Change the runltp script to actually create an interface for the user:
1) Introduce a new option "-F" for ability to run tests under "Fault Injection Framework", 
2) "./runltp -h" will display the new option,
3) Verifies whether Kernel has built-in capabilities for "Fault Injection",
This has no much difference from the last version, except that 'runltp' has changed in between to include Paul's -S option. This has just been created over top of it. I will try to move the 'debugfs' checking logic out of 'runltp' some time in future. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp

38) Log Message:
open10, use tst_tmpdir and tst_rmdir functions. This patch adds functions to create and cleanup temporary test directories, code style changes to match other open tests. Signed-off-by: Henry Yei<hyei@mvista.com>.

Modified Files:
ltp/testcases/kernel/syscalls/open/open10.c

39) Log Message:
I have noticed UNRESOLVED of following test cases:
mlockall/15-1.c
mlockall/speculative/15-1.c
These test cases are fixed by setting the Rlimit to zero to get EPERM as per the kernel code. I have attached patch and below. Please review the same.
/***********************************************************/
Results: Before patch:
=============
conformance/interfaces/mlockall/15-1.test:execution:UNRESOLVED
conformance/interfaces/mlockall/speculative/15-1.test:execution:UNRESOLVED
After Patch:
============
conformance/interfaces/mlockall/15-1.test:execution:PASS
conformance/interfaces/mlockall/speculative/15-1.test:execution:PASS
/***********************************************************/
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mlockall/15-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/mlockall/speculative/15-1.c

40) Log Message:
I have noticed build warnings for the following test case. This patch will fix warnings by removing unused variables in test code.
Before patch:
==========
conformance/interfaces/mq_send/5-1: build: FAILED: Compiler output: cc1: warnings being treated as errors
In file included from conformance/interfaces/mq_send/5-1.c:40:
include/mq_send.h: In function 'sync_pipe_wait_select':
include/mq_send.h:49: warning: unused variable 'buf'
conformance/interfaces/mq_send/5-1.c: In function 'main':
conformance/interfaces/mq_send/5-1.c:107: warning: unused variable 'r'
conformance/interfaces/mq_send/5-1.c:105: warning: unused variable 'act'
==========
After patch:
==========
conformance/interfaces/mq_send/5-1: build: PASS
conformance/interfaces/mq_send/5-1: link: PASS
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>,

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mq_send/5-1.c
ltp/testcases/open_posix_testsuite/include/mq_send.h

41) Log Message:
I have noticed build warnings for the following test case. This patch will fix warnings by adding <string.h> header file. 
========================================
Before patch:
==========
conformance/interfaces/sched_setparam/26-1: build: FAILED: Compiler output: cc1: warnings being treated as errors
conformance/interfaces/sched_setparam/26-1.c: In function 'set_nonroot':
conformance/interfaces/sched_setparam/26-1.c:30: warning: implicit
declaration of function 'strcmp'
============
After patch:
============
conformance/interfaces/sched_setparam/26-1: build: PASS
conformance/interfaces/sched_setparam/26-1: link: PASS
========================================
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sched_setparam/26-1.c

42) Log Message:
I have noticed sched_setscheduler/17-6.c test case as UNTESTED. Test needs to be executed as non-root user. So I have changed user id from root to non-root user by adding set_nonroot() function. Now test case got PASSED.
/************************************************************/
Before patch:
conformance/interfaces/sched_setscheduler/17-6.test:execution:UNTESTED
After patch:
conformance/interfaces/sched_setscheduler/17-6.test:execution:PASS
/*************************************************************/
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sched_setscheduler/17-6.c

43) Log Message:
Integrate MCE test suite into LTP: mce-test is a collection of tools and test scripts for testing the Linux kernel x86 MCE (Machine Check Exception) processing features. This patch integrate that into LTP. Signed-off-by: Huang Ying <ying.huang@intel.com>, Signed-off-by: Andi Kleen <ak@linux.intel.com>.

Added Files:
ltp/testcases/mce-test/COPYING ltp/testcases/mce-test/Makefile
ltp/testcases/mce-test/README
ltp/testcases/mce-test/cases/soft-inj/non-panic/cases.sh
ltp/testcases/mce-test/cases/soft-inj/non-panic/data/corrected
ltp/testcases/mce-test/cases/soft-inj/non-panic/data/corrected_hold
ltp/testcases/mce-test/cases/soft-inj/non-panic/data/corrected_no_en
ltp/testcases/mce-test/cases/soft-inj/non-panic/data/corrected_over
ltp/testcases/mce-test/cases/soft-inj/panic/cases.sh
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_eipv
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_irq
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_no_en
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_over
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_ripv
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_timeout
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_timeout_ripv
ltp/testcases/mce-test/cases/soft-inj/panic/data/fatal_userspace
ltp/testcases/mce-test/cases/soft-inj/panic/refer/fatal_no_en
ltp/testcases/mce-test/cases/soft-inj/panic_noser/cases.sh
ltp/testcases/mce-test/cases/soft-inj/panic_noser/data/uc_over
ltp/testcases/mce-test/cases/soft-inj/panic_noser/data/uc_over_corrected
ltp/testcases/mce-test/cases/soft-inj/panic_noser/data/uc_over_timeout
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/cases.sh
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/fatal_severity
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uc_no_eripv
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uc_no_eripv_timeout
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uc_no_mcip
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uc_no_mcip_timeout
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uncorrected
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/uncorrected_timeout
ltp/testcases/mce-test/cases/soft-inj/panic_npcc/data/unknown
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/cases.sh
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/s0_ar1
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/srao_ewb_noripv
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/srao_mem_scrub_noripv
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/srar_no_en
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/srar_over
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/data/srar_unkown
ltp/testcases/mce-test/cases/soft-inj/panic_ucr/refer/srar_no_en
ltp/testcases/mce-test/cases/soft-inj/poll_ucr/cases.sh
ltp/testcases/mce-test/cases/soft-inj/poll_ucr/data/ucna
ltp/testcases/mce-test/cases/soft-inj/poll_ucr/data/ucna_over
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/cases.sh
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_corrected
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_ewb
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_mem_scrub
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_no_en
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_over
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_ucna
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/data/srao_unknown
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/refer/srao_corrected
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/refer/srao_no_en
ltp/testcases/mce-test/cases/soft-inj/recoverable_ucr/refer/srao_ucna
ltp/testcases/mce-test/config/kdump.conf
ltp/testcases/mce-test/config/kdump_noser.conf
ltp/testcases/mce-test/config/kdump_panic.conf
ltp/testcases/mce-test/config/kdump_panic_noser.conf
ltp/testcases/mce-test/config/kdump_panic_npcc.conf
ltp/testcases/mce-test/config/kdump_panic_ucr.conf
ltp/testcases/mce-test/config/kdump_ser.conf
ltp/testcases/mce-test/config/simple.conf
ltp/testcases/mce-test/config/simple_non_panic.conf
ltp/testcases/mce-test/config/simple_nopanic_noser.conf
ltp/testcases/mce-test/config/simple_nopanic_ser.conf
ltp/testcases/mce-test/config/simple_noser.conf
ltp/testcases/mce-test/config/simple_panic.conf
ltp/testcases/mce-test/config/simple_panic_noser.conf
ltp/testcases/mce-test/config/simple_panic_npcc.conf
ltp/testcases/mce-test/config/simple_panic_ucr.conf
ltp/testcases/mce-test/config/simple_poll_ucr.conf
ltp/testcases/mce-test/config/simple_recoverable_ucr.conf
ltp/testcases/mce-test/config/simple_ser.conf
ltp/testcases/mce-test/doc/howto.txt
ltp/testcases/mce-test/doc/verify.txt
ltp/testcases/mce-test/doc/cases/soft-inj_non-panic.txt
ltp/testcases/mce-test/doc/cases/soft-inj_panic.txt
ltp/testcases/mce-test/doc/cases/soft-inj_panic_noser.txt
ltp/testcases/mce-test/doc/cases/soft-inj_panic_npcc.txt
ltp/testcases/mce-test/doc/cases/soft-inj_panic_ucr.txt
ltp/testcases/mce-test/doc/cases/soft-inj_poll_ucr.txt
ltp/testcases/mce-test/doc/cases/soft-inj_recoverable_ucr.txt
ltp/testcases/mce-test/drivers/kdump/driver.sh
ltp/testcases/mce-test/drivers/kdump/setup.sh
ltp/testcases/mce-test/drivers/simple/driver.sh
ltp/testcases/mce-test/lib/dirs.sh
ltp/testcases/mce-test/lib/functions.sh
ltp/testcases/mce-test/lib/mce.sh
ltp/testcases/mce-test/lib/soft-inject.sh
ltp/testcases/mce-test/tools/Makefile
ltp/testcases/mce-test/tools/gcov_merge.py
ltp/testcases/mce-test/tools/grep_result.sh
ltp/testcases/mce-test/tools/mce_shell.sh
ltp/testcases/mce-test/tools/scov_merge.py
ltp/testcases/mce-test/tsrc/Makefile
ltp/testcases/mce-test/tsrc/README
ltp/testcases/mce-test/tsrc/tcases.c
ltp/testcases/mce-test/tsrc/tinjpage-working.c
ltp/testcases/mce-test/tsrc/tinjpage.c
ltp/testcases/mce-test/tsrc/tkillpoison.c
ltp/testcases/mce-test/tsrc/tring.c
ltp/testcases/mce-test/tsrc/ttable.c
ltp/testcases/mce-test/tsrc/kinclude/README
ltp/testcases/mce-test/tsrc/kinclude/linux/debugfs.h
ltp/testcases/mce-test/tsrc/kinclude/linux/fs.h
ltp/testcases/mce-test/tsrc/kinclude/linux/init.h
ltp/testcases/mce-test/tsrc/kinclude/linux/percpu.h
ltp/testcases/mce-test/tsrc/kinclude/linux/seq_file.h
ltp/testcases/mce-test/tsrc/kinclude/linux/sysdev.h

44) Log Message:
fix for file_test for systems without rpm installed: Here's the fixed version, forgot I needed to redo these...If you run file_test.sh on a system without rpm installed, it should return tconf instead of tfail. Signed-off-by: Paul Larson <paul.larson@canonical.com>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

45) Log Message:
fix mail_tests for systems without mail installed: mail_tests should return tconf instead of tfail if mail is not installed. Signed-off-by: Paul Larson <paul.larson@canonical.com>.

Modified Files:
ltp/testcases/commands/mail/mail_tests.sh

46) Log Message:
cron tests: autodetect crond vs. cron: The cron tests check for Red Hat to decide whether to use /etc/init.d/crond or /etc/init.d/cron. This fails on other distros that use crond, e.g. on Yellow Dog Linux. Replace the distro test by an actual file existence test, as is done in testcases/kdump/runkdump.sh. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/commands/cron/cron02
ltp/testcases/commands/cron/cron03

47) Log Message:
Spelling fixes: commad => command: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>. 

Modified Files:
ltp/ChangeLog
ltp/testcases/commands/ade/file/file_test.sh
ltp/testcases/commands/eject/eject-tests.sh
ltp/testcases/open_hpi_testsuite/plugins/ilo2_ribcl/ilo2_ribcl_reset.c
ltp/tools/mkrootfs/mkrootfs

48) Log Message:
Spelling fixes: exectue => execute: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/commands/at/at_allow01
ltp/testcases/commands/at/at_deny01
ltp/testcases/commands/cron/cron_allow01
ltp/testcases/commands/cron/cron_deny01

49) Log Message:
Spelling fixes: brok -> broke: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

50) Log Message:
Patch to include workload for consolidation verification: Modified to pass workload as a parameter for cpu cosolidation verifcation function. This is required to verify cpu consolidation on Hypre threaded system for kernbench workload. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

51) Log Message:
Patch to get max sched mc & smt values based on kernel version: Replaces shell function with C functions to get max sched_mc & sched_smt value. Since this uses LTP libraray function to analyze kernel version maintenence of the code will be easier. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/get_sched_values.c

52) Log Message:
Patch for PM Master script to integrate new testcases: Modified Master script of power management testcases to include new test case and to increase test coverage on system which is not multi core but hyper threaded. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

53) Log Message:
New & modified reusable functions for new & existing testcases: Implemente reusable functions to learn system architecture before executing architecture specific testcases. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/pm_include.sh

54) Log Message:
Patch to fix make install issue in ebizzy: install: was missing in Makefile of ebizzy, hence make install was throwing error. This patch will fix make install error. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>. 

Modified Files:
ltp/utils/benchmark/ebizzy-0.3/Makefile

55) Log Message:
New testcase to test timer_migration interface: This is the new tescase to test timer migration interface. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/test_timer_migration.sh

56) Log Message:
Patch to fix cpu consolidation failure for kernbench on HT system: Threshold and validation functions modified for testcases run on HT systems. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

57) Log Message:
Patch for PM makefile for new testcases & fix test_sched_smt integration issue: Patch to integrate test_sched_smt and timer_migration testcase to LTP. Also intergrates the new file get_sched_value to LTP. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/Makefile

58) Log Message:
Patch to fix kernbench integration issue: Kernbench script's mode was not getting modified to executable as 'utils install' was missing in LTP Makefile. Hence this patch fixes this issue. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/Makefile

59) Log Message:
FYI -- there's already one change. The value of the MADV_POISON injection interface has changed in linux-next (12->100). That's fixed in the git tree now. "Kleen, Andi" <andi.kleen@intel.com>.

Modified Files:
ltp/testcases/mce-test/tsrc/tinjpage-working.c
ltp/testcases/mce-test/tsrc/tinjpage.c

60) Log Message:
Check unshare Function: This patch set fixes several problems for unshare tests. The first one is to add a build-time checking for unshare function. The second one is to fix unshare01 test,
* deal with no unshare implementation in both glibc and kernel.
* simplify logic.
* fix coding style.
The final one is to fix unshare02 test,
* deal with no unshare implementation in both glibc and kernel.
* fix an incorrect expected result and simplify logic.
* fix coding style.
Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/configure.ac
Added Files:
ltp/m4/ltp-unshare.m4

61) Log Message:
Fix unshare01: v3: simplify reporting by using TERRNO. v2: remove unneeded linux_syscall_numbers.h and simplify the checking of errno according to Mike's suggestion. When no unshare function found during the build-time checking or the kernel returns ENOSYS, it reports TCONF. It also simplify logic a little bit and fix some coding style issues. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/unshare/unshare01.c

62) Log Message:
Fix unshare02: v3: simplify reporting by using TERRNO. v2: remove unneeded linux_syscall_numbers.h and simplify the checking of errno according to Mike's suggestion. When no unshare function found during the build-time checking or the kernel returns ENOSYS, it reports TCONF. It also simplify logic a little bit and fix some coding style issues. In addition, the original test expects the following call to return 0,   TEST_RETURN = unshare(-1); and checking TEST_ERRNO for errors. Those look like incorrect, since "-1" looks like an invalid flag, and TEST_ERRNO does not set to errno from the syscall. It has been modified to expect,   TEST_RETURN = -1;   errno = EINVAL; Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/unshare/unshare02.c

63) Log Message:
Bug in memory controller test - memctl test #4: When running the Memory Controller test # 4, I'm seeing this behavior below. 
TEST 4: MEMORY CONTROLLER TESTING
RUNNING SETUP.....
TEST STARTED: Please avoid using system while this test executes /mnt/tests/kernel/distribution/ltp/20090731/ltp-full-20090731/testcases/bin/run_memctl_test.sh:
line 327: [: 62955520: unary operator expected 
TINFO   Memory Resource Controller: stat check test fails in first run /mnt/tests/kernel/distribution/ltp/20090731/ltp-full-20090731/testcases/bin/run_memctl_test.sh:
line 364: [: 78704640: unary operator expected
TFAIL   Memory Resource Controller: stat check test FAILED *** infinite loop
here, script exists memctl_test01 remains running ***
^Cincrementing stop
The bash error is due to the 'grep -w "active"' not matching anything so one of the variables isn't getting set like it is supposed to. I believe the test was written with an old version of the memory controller what put a field called memory.stat.active in the file memory.stat. The current memory controller I am testing appears to have replaced this field with "rss". There are fields showing anonymous and file backed pages in memory.stat, but I don't think they are ever going to match the memory.usage.in.bytes the test is looking for. Rss always matches and I believe that is what we should update the check in the test to look for. The attached patch fixes test #4 to compare memory.usage.in.bytes with rss. Signed-off-by: Mike Gahagan <mgahagan@redhat.com>.

Modified Files:
ltp/testcases/kernel/controllers/memctl/run_memctl_test.sh

64) Log Message:
Add support for long options: Incorporating existing tests (like pthread_cond_many) may require support for long options if the existing arguments are to remain supported.  This patch adds support for long options, while keeping the default of only short options in place.  long opts MUST have an equivalent short opt so as to not require changing (and complicating) the parse_arg signature. This patch tests for this in the rt_init routine.
Signed-off-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Vernon Mauery <vernux@us.ibm.com>,

Modified Files:
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/lib/librttest.c

65) Log Message:
Use librttest arg parsing and init_pi_mutex: This patch converts pthread_cond_many to use the librttest infrastructure for argument parsing and mutex initialization.  The default behavior of the test changes from using a non-pi mutex to a pi mutex.  This is because -p defaults to 1 in librttest. We could update run.sh with -p0, but I feel inside a realtime testsuite this test should be using PI mutexes anyway.
Signed-off-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,
CC: Paul McKenney <paulmck@linux.vnet.ibm.com>,

Modified Files:
ltp/testcases/realtime/perf/latency/pthread_cond_many.c
ltp/testcases/realtime/perf/latency/run.sh

66) Log Message:
prio-wake: Allow for optional locking prior to broadcast: Allow the user to decide if the mutex should be held prior to calling pthread_cond_broadcast(). Default remains the same. Tested with and without the argument as well as with both 0 and 1 passed to the argument. Values other than 0 and 1 will result in locking the mutex.
Signed-off-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-By: Dinakar Guniguntala <dino@in.ibm.com>,
Acked-by: Vernon Mauery <vernux@us.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/func/prio-wake/prio-wake.c

67) Log Message:
prio-wake: Enable using more than 95 threads: prio-wake will currently spew pthread errors on systems with more than 95 CPUS, or if an -n value > 95 is specified on the command line. To avoid this, spread threads out equally over the priorities by calculated the number of threads per priority. Tested with all pathological numbers (i.e. mod=0 mod=1, etc) of threads. Ran 10000 times in parallel.  Confirmed failure continues to exist without requeue PI (as it should) and success is seen with requeue PI (as it should be).
Signed-off-by: Darren Hart <dvhltc@us.ibm.com>,
Acked-By: Dinakar Guniguntala <dino@in.ibm.com>,
Acked-by: Vernon Mauery <vernux@us.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@in.ibm.com>,

Modified Files:
ltp/testcases/realtime/func/prio-wake/prio-wake.c 

68) Log Message:
smt_smp_ affinity test case is passing on Fedora but fails on Ubuntu for the same H/W.On Ubuntu system, after doing strace i observed that system call sched_getaffinity was returning -1 [ERROR:EINVAL] due to second argument. sched_getaffinity(pid, sizeof(unsigned int), &mask1). Please find attached herewith the patch which fixes the issue. Signed-off-by: Rohit Verma <rohit170309@gmail.com>.

Modified Files:
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c

69) Log Message:
Add new testcases for cgroup: We has created some testcases for cgroup in the last year. There are total 194 testcases that have been added. These testcases contain the basis operation test, part functionality test and stress test of cgroup. How to run this test: # runltp -f controllers. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified Files:
ltp/runtest/controllers
ltp/testcases/kernel/controllers/Makefile
Added Files:
ltp/testcases/kernel/controllers/cgroup_fj/Makefile
ltp/testcases/kernel/controllers/cgroup_fj/README
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_function.sh
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_function2.sh
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_proc.c
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_release_agent
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_stress.sh
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_testcases
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_utility.sh
ltp/testcases/kernel/controllers/cgroup_fj/run_cgroup_test_fj.sh

70) Log Message:
CPU Accounting Controller test case for LTP: I have developed a testcase for CPU Accounting Controller which is used to group tasks using cgroups and account the CPU usage of these groups of tasks. here is the update cpuaccounting controller patch, in which I have modified it as per the earlier coments, please review this patch and let me know if it needs any more changes. I am pasting the LOG also here for reveiwing it. Signed-off-by: Duddu Rajasekhar<rajduddu@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/README
ltp/testcases/kernel/controllers/test_controllers.sh
Added Files:
ltp/runtest/cpuacct
ltp/testcases/kernel/controllers/cpuacct/Makefile
ltp/testcases/kernel/controllers/cpuacct/README
ltp/testcases/kernel/controllers/cpuacct/cpuacct_setup.sh
ltp/testcases/kernel/controllers/cpuacct/cpuacct_task01.c
ltp/testcases/kernel/controllers/cpuacct/cpuacct_testplan.txt
ltp/testcases/kernel/controllers/cpuacct/run_cpuacct_test.sh

71) Log Message:
NETNS: don't run sysfsview testcase: It can't pass right now, and leaves the system in a bad state on its inevitable failure. Leave the testcase there though since one day we will hopefully support it. Signed-off-by: Serge Hallyn <serge@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/netns/runnetnstest.sh

72) Log Message:
Let set_thread_area Choose either user_desc or modify_ldt_ldt_s: Old glibc (like in RHEL4) has modify_ldt_ldt_s instead of user_desc structure defined in asm/ldt.h. It should follow the example of modify_ldt test cases to choose the feasible structure based on build-time checking. Also, a new header file has been created to handle code duplication. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area01.c
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area02.c
Added Files:
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area.h

73) Log Message:
Integrate Valgrind Memory Check Tool to LTP: Introducing and Integrating the Valgrind Memory Leak Check tools to LTP. This again is in line with the OLS 2009 paper where we proposed that memory leak check for LTP test cases will become part of LTP soon. Valgrind is one of the best Memory Leak Check tools available to the open source community and being widely used by many maintainers of Open Source Projects to regularly check the health of their code. On similar lines, we would like it to check the various dynamic issues related to Memory Leaks, Thread Concurrencies for the LTP tests so that we minimize those errors for the LTP tests. The following set of Patches will:
1) Integrate within LTP infrastructure the use of VALGRIND tool,
2) Internal check against unavailability of this tools on your machine,
3) Running through runltp, the various:
        3.1) Memory Leak Checks,
        3.2) Thread Concurrency Checks,
on all LTP tests that the user intents to run/check,
4) Comparisn of how a normal test run differs from the the test run through Valgrind, Now, you may ask the question why donB4t we use Valgrind independantly ? True, it can be done. But, it becomes more simple when we can ask runltp to do the job for us and remaining everything remains in LTP format. And, this is handy for test case developers who can do a quick check on the tests they have just developed. When you want to run your tests/sub-tests through Valgrind tool, what you have to just do is:
./runltp -f <your-command-file> -M [1,2,3]
CHECK_TYPE=1 => Full Memory Leak Check tracing children as well
CHECK_TYPE=2 => Thread Concurrency Check tracing children as well
CHECK_TYPE=3 => Full Memory Leak & Thread Concurrency Check tracing children as well
The above options in LTP will usher in better Test Case development. [PATCH 01/02] Create the necessary Interface with runltp: Introducing a new Option "-M" in LTP, which will take 1 argument of the type of Checks that you would need to do for the LTP tests. Even, if you would like to use these check options, it internally checks whether the desired tool is available on your machine. It goes ahead and then does the necessary checks on your tests. One limitation is that if you choose both the "Fault Injection" and "Memory Leak Checks" simultaneously, then "Memory Leak Checks" will not work, as we would not like to test how "Fault Injection" works when "Valgrind" is running. Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp

74) Log Message:
Integrate Valgrind Memory Check Tool to LTP: Introducing and Integrating the Valgrind Memory Leak Check tools to LTP. This again is in line with the OLS 2009 paper where we proposed that memory leak check for LTP test cases will become part of LTP soon. Valgrind is one of the best Memory Leak Check tools available to the open source community and being widely used by many maintainers of Open Source Projects to regularly check the health of their code. On similar lines, we would like it to check the various dynamic issues related to Memory Leaks, Thread Concurrencies for the LTP tests so that we minimize those errors for the LTP tests. The following set of Patches will:
1) Integrate within LTP infrastructure the use of VALGRIND tool,
2) Internal check against unavailability of this tools on your machine,
3) Running through runltp, the various:
        3.1) Memory Leak Checks,
        3.2) Thread Concurrency Checks,
on all LTP tests that the user intents to run/check,
4) Comparisn of how a normal test run differs from the the test run through Valgrind, Now, you may ask the question why donB4t we use Valgrind independantly ? True, it can be done. But, it becomes more simple when we can ask runltp to do the job for us and remaining everything remains in LTP format. And, this is handy for test case developers who can do a quick check on the tests they have just developed. When you want to run your tests/sub-tests through Valgrind tool, what you have to just do is:
./runltp -f <your-command-file> -M [1,2,3]
CHECK_TYPE=1 => Full Memory Leak Check tracing children as well
CHECK_TYPE=2 => Thread Concurrency Check tracing children as well
CHECK_TYPE=3 => Full Memory Leak & Thread Concurrency Check tracing children as well
The above options in LTP will usher in better Test Case development. [PATCH 02/02] Script that will actually create the COMMAND File entries: This is again a simple perl file which takes the temporary COMMAND file generated by "runltp", parses it one line by line, and then recreates single or multiple entries which will contain instruction for "cmdline" to invoke the "Valgrind" tool in itś various forms:
        1) Full "Memory Leak Check",
        2) Full "Thread Concurrency Check",
        3) Both the above,
This has been written(code reused) from the "create_kernel_faults_in_loops_and_probability.pl", and works on the similar logic for creating "cmdline" entries in the temporary COMMAND file generated. Now, this increases Garrettś work again as he hates perl. I hope he will agree to work on this to convert to Shell Script ;-). Signed-off-by: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/tools/create_valgrind_check.pl

75) Log Message:
Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com> reported: undefined macro: _m4_divert_diversion: When trying to autoconfigure current LTP on YDL, I get an error:
# make autotools
    touch config.mk
    aclocal -I m4
    m4/ltp-unshare.m4:2: error: m4_defn: undefined macro: _m4_divert_diversion
    m4/ltp-unshare.m4:2: the top level
    autom4te: /usr/local/bin/m4 failed with exit status: 1
    aclocal: autom4te failed with exit status: 1
    make: *** [aclocal.m4] Error 1
Autoconf, automake, and m4 have been compiled from source, using the versions specified in INSTALL: (I'm seeing the same thing on stock Ubuntu 9.04, but that one has autoconf 2.63, and only automake 1.9.6 and m4 1.4.11.). I also tried installing the latest m4 (1.4.13), but that didn't help. I also tried installing the latest autoconf (2.64), but that failed even harder: Anyone with a clue?
Nicolas Joly <njoly@pasteur.fr> replied: This is a quoting problem ... The following patch should fix it. Signed-off-by: Nicolas Joly <njoly@pasteur.fr>.

Modified File(s):
ltp/m4/ltp-unshare.m4

76) Log Message:
lcov: add exclusion markers. Users can exclude lines of code from coverage reports by adding keywords to the source code. Peter Oberparleiter <oberpapr@users.sourceforge.net>,

Modified File(s):
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

77) Log Message:
lcov: fix help text typo. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

78) Log Message:
Spelling fixes: excute => execute: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTenabled.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTinterrupt.c

79) Log Message:
Spelling fixes: initalization => initialization: Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/network/nfsv4/locks/locktests.c

80) Log Message:
Matt Helsley <matthltc@us.ibm.com> reported: Looks like this should be 12. Why not just use the subsystem names both to iterate over and to print out? Then it will be a little clearer what test has[n't] passed. e.g.:
SUBSYSTEMS=( debug cpuset ns cpu cpuacct memory debug,debug freezer \
                devices nonexistent none all )
Then when you're running the test cases or printing usage you could do:
for SUBSYS in "${SUBSYSTEMS[@]}" ; do
        ...
done
Sadly I didn't have a close enough look at all of the code to tell if this is do-able. Is it? If you could similarly map the other numbers it may be easier to read the output and the code.
Shi Weihua <shiwh@cn.fujitsu.com> replied: Yes, here should be 12. Sorry for it. The following small patch fixed it. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>. Thanks for your advice. Basically, I agree. But using strings to instead of number will need one or more weeks, I will do this improvement work base on August Release.

Modified Files:
ltp/testcases/kernel/controllers/cgroup_fj/cgroup_fj_function.sh

81) Log Message:
lcov: apply excluded lines also to function coverage data. Peter Oberparleiter <oberpapr@users.sourceforge.net>

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

82) Log Message:
LTP must be extracted to an accessible location: If extracted to /root and /root has permissions 750, the following tests will fail:
  - cron02: bash: /root/ltp-cvs/testcases/bin/cron_pos_tests.sh: Permission denied
  - cron_allow01: bash: /root/ltp-cvs/testcases/bin/cron_allow01: Permission denied
    bash: /root/ltp-cvs/testcases/bin/cron_allow01: Permission denied
  - cron_deny01: bash: /root/ltp-cvs/testcases/bin/cron_deny01: Permission denied
    bash: /root/ltp-cvs/testcases/bin/cron_deny01: Permission denied
  - su01: bash: /root/ltp-cvs/testcases/bin/su01_s1: Permission denied
Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/INSTALL

83) Log Message:
Annotate tst_*() helpers with __attribute__ ((format (printf, M, N))) (was: Re:  [PATCH] quotactl01: Fix tst_resm() format causing crash): This bug encouraged me to add annotations to the test helpers that take printf()-style formats, cfr. the patch below. It causes a massive amount of compiler warnings, most of them caused by TEST_ERRNO being long. According to CVS history, both TEST_RETURN and TEST_ERRNO have been changed from int to long to accomodate 64-bit platforms, but to me the change of TEST_ERRNO looks bogus. As errno is int according to C99, TEST_ERRNO should actually be int too, right? Note that there are also a few other cases where integers are used on pointer type format specifiers. These will cause crashes when the code path is executed. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/include/test.h

84) Log Message:
Fix mail_tests for systems without mail installed: Worse, as $MAIL_NOT_INSTALLED is always "0" or "1", -z always return false...`-z' tests for a string length of zero, not for a zero value, causing the test always to return false. Initialize $MAIL_NOT_INSTALLED to an empty string instead of a numerical zero to fix this. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/commands/mail/mail_tests.sh

85) Log Message:
File: Autodetect RPM topdir: Query RPM for the location of the RPM topdir, instead of guessing, which failed on YDEL6 (/usr/src/yellowdog) and Debian/Ubuntu (/usr/src/rpm). Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

86) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. New testcase to validate Ideal Load Balancer Functionality. By default sets sched_mc_power_savings & sched_smt_power savings to the value passed as argument and then triggers kernbench by pinning it to the CPUn. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/ilb_test.py

87) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 2/8] Power management master script modified to integrate ILB testcase: Power management master script modified to integrate ILB testcases. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

88) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 3/8] Patch to integrate ILB testcase to LTP: Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/Makefile

89) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 4/8] Addional new reusable functions for ILB testing: Developed new functions to support ILB test execution and result verification. Minimal changes has been done for exisitng function to support ILB test execution. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

90) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 5/8] Modified library functions based on review comments: Incorporated Garrett Cooper's comments & hence modified code. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/pm_include.sh

91) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 6/8] Included new function to check feature versus kernel version. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/check_kv_arch.c

92) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 7/8] Patch for cpu_consolidation to incorporate changes in reusable function. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

93) Log Message:
To test ILB feature in Power management a set of testcases has been developed. These patches tests ILB with respect to different test variables sched_mc, sched_smt and workload. The patches sent has been tested on Quad core machine. [Patch 8/8]Patch to modify Readme file as new functionality testcase is integrated. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/README

94) Log Message:
sched_cli_serv: Wait a bit before trying to connect: The sched_cli_serv test launches the server in the background and expects the client to be able to connect to it immediately. Depending on (earlier) system load, that may fail. Wait a bit before starting the client. Signed-off-by: Geert Uytterhoeven <Geert.Uytterhoeven@sonycom.com>.

Modified Files:
ltp/testcases/kernel/sched/clisrv/run_sched_cliserv.sh

95) Log Message:
This problem has been forgotten for some time but it still makes trouble with too strict buildsystems. See attached patch that also fixes minor style problems. Signed-off-by: chrubis@suse.cz.

Modified Files:
ltp/testcases/kernel/io/aio/aio01/aio01.c

96) Log Message:
Add autoconf tests for taskstats members not present on older kernels: The autoconf part is okay, but getdelays.c needs some more #ifdef HAVE_LINUX_CGROUPSTAT_H to build correctly on all I have here. Patch attached, however it may need minor cleanups. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/testcases/kernel/controllers/cgroup/getdelays.c

LTP-20090731

1) Log Message:
I have noticed failure under open_posix_testsuite for mq_unlink/speculative/7-2.c and fixed. After changing the uninitialized to initialized char array of mqname[] test case got PASSED. I have attached patch and below. Please review the same. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/mq_unlink/speculative/7-2.c

2) Log Message:
It looks like the io_*.sh files are now not needed since the test source has been modified to check for an autoconf definition. This patch modifies the syscalls runtest file to call those test directly. (io_cancel, io_destroy01, io_getevents01, io_setup01, io_submit01). As the scripts are not needed any more, can we remove the following?
ltp/testcases/kernel/syscalls/io_cancel01.sh
ltp/testcases/kernel/syscalls/io_destroy01.sh
ltp/testcases/kernel/syscalls/io_getevents0101.sh
ltp/testcases/kernel/syscalls/io_setup01.sh
ltp/testcases/kernel/syscalls/io_submit01.sh
These scripts were not being copied into testcases/bin anyway and so AFAIK, were not being run correctly by pan anyway. Signed-off-by: Henry Yei <hyei@mvista.com>.

Modified Files:
ltp/runtest/syscalls

3) Log Message:
Fix eventfd2_03 build failure on powerpc architecture. I've found a failure when building ltp-full-20090630 on powerpc: 
eventfd2_03.c:48:2: error: #error Cannot detect your architecture!
eventfd2_03.c: In function ‘eventfd2’:
eventfd2_03.c:54: error: ‘__NR_eventfd2’ undeclared (first use in this function)
eventfd2_03.c:54: error: (Each undeclared identifier is reported only once
eventfd2_03.c:54: error: for each function it appears in.)
eventfd2_03.c: In function ‘main’:
eventfd2_03.c:129: warning: implicit declaration of function ‘waitpid’
This patch fixes the failure, the test program identifier and adds a kernel version check. Signed-off-by Lucio Correia <ljhc@br.ibm.com>.

Modified Files:
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_03.c

4) Log Message:
netns: Report version of iproute2 tools in ver_linux: Report the version of the ip route tools in ver_linux with ip -V. The version is important to the netns testcases for example. Since it would be useful for other testcases add it to the ver_linux script. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified Files:
ltp/ver_linux

5) Log Message:
netns: Add ip tools check to netns tests: Use ip -V to exclude the network namespace testcases since they require version  ("snapshot") ss080725 or higher to set the network namespace of interfaces used for testing. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>. 

Modified Files:
ltp/testcases/kernel/containers/netns/runnetnstest.sh

6) Log Message:
Fix Security/Filecaps Build failure: inh_capped.c:70: error: too many arguments to function ‘tst_exit’. Signed-off-by : Sachin Sant <sachinp@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/security/filecaps/inh_capped.c
ltp/testcases/kernel/security/filecaps/verify_caps_exec.c

7) Log Message:
I have divided rt_sigaction01.c test case in to three test cases
1. rt_sigaction01.c (Functionality)
2. rt_sigaction02.c (EFAULT)
3. rt_sigaction03.c (EINVAL)
In these test cases rt_sigaction use signal number from SIGRTMIN (34) to SIGRTMAX (64).The Real Time (RT) signals will start from 34 to 64 as per signal.h because sigaction is testing from 1 to 30 signals I hope. If you want to test 1 to 64 signals by rt_sigaction signal number 9 and 19 i.e SIGKILL and SIGTERM will FAIL, because as per Specifications we should not use SIGKILL and SIGTERM signals with rt_sigaction/sigaction. long sys_rt_sigaction (int sig, const struct sigaction *act, struct sigaction *oact, size_t sigsetsize). SIGSETSIZE is different for different architectures that is taken care for ARM, PowerPC, X86 and MIPS in this patch. Subrata, Coding style is not as LTP, I did not get much time to fix this. If you are using any indent for LTP, please share I will use those script to fix coding style. If any body is interested to fix coding style issue please welcome... :-). I have attached fix patch and below. Please review the same.
/*******************************************************/
Test Start Time: Fri Jul  3 07:52:04 2009
-----------------------------------------
Testcase                       Result     Exit Value
--------                       ------     ----------
rt_sigaction01                 PASS       0
rt_sigaction02                 PASS       0
rt_sigaction03                 PASS       0
-----------------------------------------------
Total Tests: 3
Total Failures: 0
Kernel Version: 2.6.23.17-alp_nl-pc-g56b4520c-dirty
Machine Architecture: i686
Hostname: 43.88.101.228
************************************************************/
Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >.

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c
Added Files:
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction02.c
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction03.c

8) Log Message:
cgroups: conditionally enable building cgroup tests: controllers tests gets included into default ltp build if "/proc/cgroup" exists. It stops the ltp build in realtime kernel environment where kernel is new and supports cgroups, but necessary file "linux/cgroupstats.h" may not exist in the base OS (like RHEL5.3). So configure command enables the build, but actual build fails, due to missing header file. Below patch proposes new symbol LTP_CHECK_CGROUPSTATS to check for header file "linux/cgroupstats.h" and include controllers in the list of tests to build. Tested the patch in non-RT as well as RT environment for the changes. Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>.

Modified Files:
ltp/configure.ac
ltp/testcases/kernel/Makefile
Added Files:
ltp/m4/ltp-cgroupstats.m4

9) Log Message:
Fix failures of the clock_nanosleep01 test: The failures were caused by strange interpretation of POSIX by the test:
  - POSIX says CLOCK_THREAD_CPUTIME_ID is an invalid value for the clock_id parameter, and results in an EINVAL,
  - POSIX doesn't specify that the remaining time should be set in any way (eg. zeroed) on successful completion,
Also, the test deletes some of the superfluous uses of the TEST macro. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/clock_nanosleep/clock_nanosleep01.c

10) Log Message:
Here is the patch to remove the unneeded scripts for the io_* tests, which should be used in conjunction with the previous patch for the syscalls patch. Signed-off-by: Henry Yei <hyei@mvista.com>.

Removed Files:
ltp/testcases/kernel/syscalls/io_cancel/run-io_cancel.sh
ltp/testcases/kernel/syscalls/io_destroy/run-io_destroy.sh
ltp/testcases/kernel/syscalls/io_getevents/run-io_getevents.sh
ltp/testcases/kernel/syscalls/io_setup/run-io_setup.sh
ltp/testcases/kernel/syscalls/io_submit/run-io_submit.sh

11) Log Message:
ballista should clean out all generated binaries. A few generated files weren't being pruned with clean (blexer, bparser). This patch fixes that. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/testcases/ballista/ballista/Makefile

12) Log Message:
Make IDcheck.sh DESTDIR aware and less strict: The end goal of this patch is to make IDcheck.sh more rootfs- / cross- compilation friendly, such that it can be run from the primary compile instance, and instead of attempting to manipulate the target system data, manipulate the sys-root / rootfs data through the use of DESTDIR and by relaxing certain checks. Most of the checks were unnecessary anyhow (am i root?), etc and can be easily remedied by just relying on the other checks made by touch(1)'ing files and the post-process operation, as ENOPERM will be returned if one cannot access the configuration file of interest. Also, use awk for all operations instead of grep because it will reduces the potential for random failures when dealing with /etc/group and /etc/passwd files, and we can switch over to one subroutine instead of multiple subroutines for checks. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified Files:
ltp/IDcheck.sh

13) Log Message:
Missing limits.h include and test.h style in system_specific_process_info.c: 1. test.h is in .../include/. Thus #include should be #include "test.h", not #include <test.h>. 2. limits.h should be explicitly stated because certain constants are used in system_specific_process_info.c (SHRT_MAX for instance). Signed-off-by: Garrett Cooper <yanegomi@gmail.com>. 

Modified Files:
ltp/lib/system_specific_process_info.c

14) Log Message:
realtime: fix parameter name clash in pi-test7 due to memlock option added: Below patch just renames the parameter name for number of mid priority threads in pi-test7 from -m to -x. Original one clashes with our common memlock option used across all RT tests. Also, pi-test7 is already disabled in our default run profile, so this patch can silently update the test without any impact on any other test. Testing Informations: Tested pi-test7 binary with the patch for the changes. Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/pi-tests/testpi-7.c

15) Log Message:
realtime: Fix the pass criterion of pi_perf test case: The pass criterion in pi_perf test case is wrong. It compares the minimum amount of time taken by the low priority thread with the maximum amount of time taken by the high priority thread to calculate the PI delay. Obviously, these min and max don't necessarily happen in the same iteration, resulting in a number of false failures. The correct way is to compare the time taken by low and high priority threads in each iteration and then find the maximum delay experienced by high priority thread across the iterations. This patch implements the change. Additionally, this patch removes lock_wait_dat array, which is not needed anymore as well as makes a couple of messages easier to understand. This patch changes the messages displayed by this test case slightly. They look like the following now:
Low prio thread started
High prio thread started
Busy 0 started
Busy 1 started
Busy 2 started
Busy 3 started
Time taken for high prio thread to get the lock once released by low prio thread
Min delay = 10 us
Max delay = 36 us
Average delay = 17.06 us
Standard Deviation = 8.11 us
Quantiles:
99.0% < 36
Criteria: High prio lock wait time < (Low prio lock held time + 200 us)
Result: PASS
I have tested this by running 1000 iterations of pi_perf test on a couple of machines. Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/pi_perf/pi_perf.c

16) Log Message:
ltp-posix-mmap_18-1.c: I have noticed FAIL and fixed mmap/18-1.c under open posix testsuite. I have fixed this test case by changing the seteuid() from root to non-root. To get resource limit setrlimit(). STEPS: mmap: EAGAIN: Lock all the memory by mlockall(). Set resource limit setrlimit(). Change the user to non-root then only setrmilit is applicable. I have attached the patch and below. Please review the same.
/*****************************************************************/
[mmap]# ./18-1.test
Test Pass: mmap/18-1.c Get EAGAIN: Resource temporarily unavailable
/*****************************************************************/
Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mmap/18-1.c

17) Log Message:
Add autoconf tests for taskstats members not present on older kernels: This patch adds autoconf checks for some build failures reported by Cyril Hrubis. Please note I have not tested this on an old kernel. Also, it corrects the names of the preprocessor macros defined by autoconf. The remaining issue (the cgroupstats.h file) should be solved using the autoconf test that was committed recently. Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/include/config.h.default
ltp/m4/ltp-taskstats.m4
ltp/testcases/kernel/controllers/cgroup/getdelays.c

18) Log Message:
This is v4l-test 0.16 for LTP. Changes: Iterate through all available inputs in VIDIOC_G_STD and VIDIOC_S_STD test cases. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_foreach.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_foreach.h

19) Log Message:
Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>, "Serge E. Hallyn" <serue@us.ibm.com> & "M. Mohan Kumar" <mohan@in.ibm.com> wanted to get this removed.

Removed Files:
ltp/testcases/kernel/containers/pidns/pidns14.c

20) Log Message:
Fix some bashisms: this patch reflects the comments by various people to the previous versions. It uses "+=1" instead of postincrement because of dash, ['s boolean expressions, printf for the formatting. I've left the unzip pushd/popd and the signal names issue completely. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/runalltests.sh ltp/testcases/commands/cron/cron02
ltp/testcases/commands/cron/cron03
ltp/testcases/commands/cron/cron_allow01
ltp/testcases/commands/cron/cron_deny01
ltp/testcases/commands/su/su01
ltp/testcases/kernel/containers/netns/child.sh
ltp/testcases/kernel/containers/netns/child_1.sh
ltp/testcases/kernel/containers/netns/childipv6.sh
ltp/testcases/kernel/containers/netns/childns.sh
ltp/testcases/kernel/containers/netns/delchild.sh
ltp/testcases/kernel/containers/netns/par_ftp.sh
ltp/testcases/kernel/containers/netns/parent.sh
ltp/testcases/kernel/containers/netns/parent_1.sh
ltp/testcases/kernel/containers/netns/parent_2.sh
ltp/testcases/kernel/containers/netns/parentns.sh
ltp/testcases/kernel/containers/netns/paripv6.sh
ltp/testcases/kernel/containers/netns/rename_net.sh
ltp/testcases/kernel/power_management/runpwtests.sh
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/smt_smp_enabled.sh
ltp/testcases/kernel/syscalls/ioctl/test_ioctl
ltp/testcases/misc/tcore_patch_test_suites/tcore.sh
ltp/testcases/network/iproute/ip_tests.sh
ltp/testcases/network/nfs/nfs03/nfs03

21) Log Message:
Addition of TOMOYO Security Tests to LTP. Contributed by Tetsuo Handa <penguin-kernel@I-love.SAKURA.ne.jp>.

Added Files:
ltp/testcases/kernel/security/tomoyo/Makefile
ltp/testcases/kernel/security/tomoyo/README
ltp/testcases/kernel/security/tomoyo/include.h
ltp/testcases/kernel/security/tomoyo/newns.c
ltp/testcases/kernel/security/tomoyo/testall.sh
ltp/testcases/kernel/security/tomoyo/tomoyo_file_test.c

22) Log Message:
Here is a patch for utimensat_test.sh to change the hardcoded tmp directory to use the LTP variable TMPDIR which may bet set by the user to point to other than /tmp. Signed-off-by: Henry Yei <hyei@mvista.com>.

Modified Files:
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

23) Log Message:
Whenever system called utimes, the error message returned was EINVAL, because the member variable of struct timeval was not initialized, so initialize it. Signed-off-by:　WangYong　<wangyong2009@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/utimes/utimes01.c

24) Log Message:
Add some more documentation. Signed-off-by: Praveen <praveen@primesoftsolutionsinc.com>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

25)Log Message:
This changeset does the following:
IDcheck.sh:
1. Fixes the DESTDIR != [ "", "/" ] behavior.
2. Spew out less awk errors if files don't exist by instead short-circuiting the logic to detect whether or not the file exists in the fe subroutine. 
Makefile:
This adds SKIP_IDCHECK behavior, by request of Michal <michal.simek@petalogix.com>, so it's no longer required for make install, and can be disabled by entering specifying the variable SKIP_IDCHECK=1 when calling make install, e.g...
make \
[make-options-and-variables] \
SKIP_IDCHECK=1 \
install
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>
Tested-by Michal Simek <michal.simek@petalogix.com>

Modified File(s):
ltp/Makefile
ltp/IDcheck.sh

26)Log Message:
Fix the amd64 compile as discussed on the list because of assumptions made on syscall size. This doesn't fix the runtime issue with segfaulting at the end of the test on amd64. Please see the thread titled `Compile failure with rt_sigaction on amd64'.

Modified File(s):
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction02.c

27)Log Message:
Accidentally committed the commented line under test that causes the segfault :\.

Modified File(s):
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c

28)Log Message:
Original message from Shi Weihua <shiwh@cn.fujitsu.com>: In case cpuset, the file cpuset_syscall_test.o was not deleted after "make clean". This change is a modified version of the original patch submitted.

Modified File(s):
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/Makefile

29)Log Message:
Previous `fix' wasn't correct. Fix similar to way noted by Shi Weihua <shiwh@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/Makefile

30) Log Message:
This patch fixes the following build error on mips, mips-el toolchain: "runcc.a: could not read symbols: Archive has no index; run ranlib to add one." Signed-off-by: Henry Yei <hyei@mvista.com>.  Take the existing patch provided by Henry Yei in the email thread, `[LTP] [PATCH] network/lb6/Makefile, mips, mips-el toolchain needs explicit RANLIB call to build', and modify slightly to allow for improved cross-compilation. Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/network/lib6/Makefile

31) Log Message:
Extend the test result to a bit field so we can extend the output further. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/include/test.h
ltp/lib/tst_res.c

32) Log Message:
Convert errno handling to new tst errno helpers. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/syscalls/mmap/mmap09.c

33) Log Message:
There is no point in having an empty arch .in file. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Removed File(s):
ltp/testcases/kernel/include/microblaze.in

34) Log Message:
Move leading __NR_ to script to make all the .in files simpler. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/include/arm.in
ltp/testcases/kernel/include/hppa.in
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/regen.sh
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/s390x.in
ltp/testcases/kernel/include/sh.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/x86_64.in

35) Log Message:
fix gcc warning: parse_opts.c:582: warning: format not a string literal and no format arguments. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/lib/parse_opts.c

36) Log Message:
Fix shadowed declaration of basename(3) in testcases/kernel/fs/fsx-linux/fsx-linux.c: This is the 21st century, and yes we have a basename(3) libcall in string.h. This attached patch fixes that so -Wshadow passes: Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/fs/fsx-linux/fsx-linux.c

37) Log Message:
Fix bad strerror calls in testcases/kernel/syscalls/waitid01.c: For whatever reason the original author was using int casts to the strerror strings. That's just plain wrong. This corrects the issue by feeding back the proper strerror output, which reduces noise at compile time and results in the same desired behavior (because we shouldn't be negative testing strerror(3) in waitid01.c: Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/waitid/waitid01.c

38) Log Message:
Trim trailing whitespace. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/include/dataascii.h
ltp/include/databin.h
ltp/include/file_lock.h
ltp/include/forker.h
ltp/include/libtestsuite.h
ltp/include/open_flags.h
ltp/include/pattern.h
ltp/include/random_range.h
ltp/include/search_path.h
ltp/include/str_to_bytes.h
ltp/include/string_to_tokens.h
ltp/include/test.h
ltp/include/tlibio.h
ltp/include/usctest.h
ltp/include/write_log.h
ltp/lib/dataascii.c
ltp/lib/databin.c
ltp/lib/datapid.c
ltp/lib/file_lock.c
ltp/lib/forker.c
ltp/lib/get_high_address.c
ltp/lib/libtestsuite.c
ltp/lib/open_flags.c
ltp/lib/parse_opts.c
ltp/lib/pattern.c
ltp/lib/random_range.c
ltp/lib/rmobj.c
ltp/lib/search_path.c
ltp/lib/self_exec.c
ltp/lib/str_to_bytes.c
ltp/lib/string_to_tokens.c
ltp/lib/system_specific_hugepages_info.c
ltp/lib/system_specific_process_info.c
ltp/lib/tlibio.c
ltp/lib/tst_cwd_has_free.c
ltp/lib/tst_kvercmp.c
ltp/lib/tst_res.c
ltp/lib/tst_sig.c
ltp/lib/tst_tmpdir.c
ltp/lib/write_log.c

39) Log Message:
Use strrchr() rather than deprecated rindex(). Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/lib/libtestsuite.c

40) Log Message:
Drop special uClibc handling of LIO_WAIT_TYPES since it doesnt matter. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/include/tlibio.h

41) Log Message:
Add a standard "all" target. Signed-off-by: Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/lib/Makefile

42) Log Message:
1. Fix the utimes testcase so that it passes with the appropriate non-hardcoded directory, as provided by Wang Yong <wangyong2009@cn.fujitsu.com> 
2. Fix a compiler warning by using an intermediary const char* variable, as NULL and (const char*) NULL casting was still causing compiler warnings in gcc 4.3.2. 
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimes/utimes01.c

43) Log Message:
lcov: add support for the linux-2.6.31 upstream gcov kernel support. Signed-off-by: Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/lcov.1

44) Log Message:
lcov: improve lcov -l output. Signed-off-by: Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/lcov

45) Log Message:
lcov: fix kernel capture for new gcov-kernel version - fix problems when compiling without O=. Signed-off-by: Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/lcov

46) Log Message:
Fix compiler error for testcases/kernel/syscalls/eventfd2/eventfd2_03.c noted by CAI Qian w.r.t. the intermediate July release, as...
1. The necessary headers weren't being pulled in for waitpid.
2. gcc was complaining about -Wunused with cleanup.
3. The wrong format argument was being passed to printf.
Fix for 3 and suggestions on coding style made by Mike Frysinger.
Signed-off-by: Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_03.c

47) Log Message:
Problem with last commit was that Mike was indeed right, this would break some architectures depending on bit width with warnings. Gmail's default font (some San Serif font) is really hard to read sometimes so it's hard to discern I from l, unless one looks carefully. Signed-off-by (for the last time): Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_03.c

48) Log Message:
Fix the system call number of exit_group01. The system call number is depend on the system architecture, not always 252. This patch fixed the problem. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/exit_group/exit_group01.c

49) Log Message:
Fix the failure of get_mempolicy01 test case: Test case get_mempolicy01 failure because of the the nodemask is not used when from_node is NONE type. If the from_node is NONE, nodemask_equal() is not need. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c

50) Log Message:
[PATCHv2] Fix to set the signal handler of SIGINT in mq_timedreceive01: The test case mq_timedreceive01 does not register the signal handler of SIGINT, so the problam will be terminated by SIGINT from child process. This patch fixed the problem. And also fixed the following compile warning. mq_timedreceive01.c: In function ‘do_test’: mq_timedreceive01.c:379: warning: null argument where non-null required (argument 5). Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>,

Modified Files:
ltp/testcases/kernel/syscalls/mq_timedreceive/mq_timedreceive01.c

51) Log Message:
rohit verma <rohit.170309@gmail.com> reported: I am running waitid02.c (ltp-full-20090630/testcases/kernel/syscalls/waitid/ ) test case on 2.6.29 kernel. Test case gives following error: "Error. is your system >2.6.9 ?"; Subrata Modak <subrata@linux.vnet.ibm.com> fixed this. 

Modified Files:
ltp/testcases/kernel/syscalls/waitid/waitid02.c

52) Log Message:
- Replace bashisms: source, uid, substr, '&>' - redirection, '=='. 
- To create a file using 'sudo -u', some platforms require 'user' to exist.
- Document verifying PCR-10 fails on Ubuntu on reboot due to kexec.
- Determine if the entire boot-aggregate hash value is zero, not just the first couple of characters.
- Add a space before the continuation mark on wrapped lines.
- Explicity verify file open return codes, making sure that only one open succeeded (tpm_policy.sh: test02).
Signed-off-by: Mimi Zohar <zohar@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/security/integrity/ima/README
ltp/testcases/kernel/security/integrity/ima/tests/ima_measurements.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_policy.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_setup.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_tpm.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_violations.sh

53) Log Message:
This is v4l-test 0.17 for LTP. Changes: Test cases added for VIDIOC_ENUM_FRAMESIZES and VIDIOC_G_JPEGCOMP. New V4L2_PIX_FMT_* formats also used in test cases. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.h
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/results.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FRAMESIZES.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FRAMESIZES.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_JPEGCOMP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_JPEGCOMP.h

54) Log Message:
sync_file_range01 testcase BUG and PATCH: The testcase sync_file_range01 uses a file descriptor (variable sfd) in its second test, expcting to see an ESPIPE error. Unfortunately, the code's open of that file descriptor somehow ended up within a set of curly braces encompasing an error path, not the mainline code where it should be. Thus, sfd is never set, In practice this leaves sfd set to zero. That is actually stdin and stdin can work for the testcase but it is not guaranteed. In fact it mostly works, but it hapens to fail sometimes. The attached patch causes the open for sfd (to /dev/null) to actually get invoked. Signed-off-by: Robert Paulsen <rpaulsen@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c

55) Log Message:
Add new testcases for cpu controller: My workmate Miao Xie (miaox@cn.fujitsu.com) has created some testcases for cgroup's subsystem "cpu" in the last year. And, He catched some kernel bugs through these testcases. So we think you glad to push them into LTP. There are total 22 testcases that have been added. These testcases contain the basis operation test and part functionality test of cpu controller. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/test_controllers.sh
Added Files:
ltp/testcases/kernel/controllers/cpuctl_fj/Makefile
ltp/testcases/kernel/controllers/cpuctl_fj/README
ltp/testcases/kernel/controllers/cpuctl_fj/cpuctl_fj_cpu-hog.c
ltp/testcases/kernel/controllers/cpuctl_fj/cpuctl_fj_simple_echo.c
ltp/testcases/kernel/controllers/cpuctl_fj/run_cpuctl_test_fj.sh

56) Log Message:
I have notice HUNG status for pthread_equal/2-1.c under posix test suite. conformance/interfaces/pthread_equal/2-1.test:execution:HUNG. This because of while(do_it)loop is behaving as while(1). do_it updated value from one thread is not reflecting in the other thread because the type is not proper. I have changed the type from char -> volatile int. I have shared results before and after this patch.
Before PATCH: conformance/interfaces/pthread_equal/2-1.test:execution:HUNG,
After PATCH:  conformance/interfaces/pthread_equal/2-1.test:execution:PASS,
I have attached patch and below. Please review the same. Signed-off-by: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_equal/2-1.c

LTP-20090630

1) Log Message:
Update the KERNEL_CONFIG Options accordingly. Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/README

2) Log Message:
This is the v4l-test 0.15 patch for LTP. Changes: Test cases added for VIDIOC_G_EXT_CTRLS, VIDIOC_S_EXT_CTRLS and VIDIOC_TRY_EXT_CTRLS. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/results.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_EXT_CTRLS.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_EXT_CTRLS.h

3) Log Message:
I'd like to submit a request to change the method to check if CGROUPS support is enabled and available or not. I'm referring to the kernel/controllers/xxx testcase. I'm using the LTP-full-20090430 cross-compiled for SH based arch with a kernel 2.6.23. The used/released  method placed inside kernel/controllers/Makefile, tries to understand if the cgroups (and others related...) support has been enabled in the current kernel, performing a check in the root filesystem under "/proc". It makes something like that: CHECK_CGROUP := $(shell test -f /proc/cgroups && echo 'cgroup') Now, in the context of LTP built for i386, the above check works fine. But what happen if LTP is cross-built ? Unfortunately, the "/proc" entry checked by the above Makefile rule, is the ones placed in the host and not the "/proc" of the  target root filesysetm (in my case SH based target). This is wrong! Moreover,  "/proc" is an entry which makes sense at runtime while it is useless at built time so the above check is "always" not applicable in case of LTP is built for other arch different from i386. In order to cover the scenario in which LTP is cross-built, I've patched the Makefile , replacing the above rule with the following ones: The above checked header file "cgroupstats.h" is placed in the target rootfs.  If the cgroups support is available (and enabled...likely ;-) the above header is placed in the target rootfs. In that way, in case of cross-compilation (the env CROSS_COMPILE was defined) the check will be done in the header file instead of  /proc. The env TARGET_DIR works like a "--prefix" fixing the path of the cross-target rootfs. Of course, If you have another checks/methods which can be done to understand -at build time- if cgroups support is available and/or enabled -for target platform-, please feel free to post a comment to LTP. Anyway, I'll attach the patch I've applied in our system. Advices and feedbacks are welcome!. Signed-off-by: Francesco Rundo <francesco.rundo@st.com>.

Modified File(s):
ltp/testcases/kernel/controllers/Makefile

4) Log Message:
Test library cleanups: Removing no longer used code from test.h eg. test_error.c is no longer in ltp, and the same for t_res.c so there is no need to include function prototypes for these. Adding void to functions that doesn't take any parameters; tst_exit() -> tst_exit(void); so code that pases parameters to these is not compileable any more. Also fixes all test broken by that change. As parameters passed to tst_exit() are ignored anyway it's quite safe to just remove them; but I'would rather see someone take a closer look. Code cleanups and fixes in tst_res.c:
* removed trivial and useless comments,
* cleaned coding style,
* and much more,
TODO: there is much redundant code in tst_res.c I'll eliminate that by static functions. Signed-off-by: chrubis@suse.cz.

Modified Files:
ltp/include/compiler.h
ltp/include/test.h
ltp/lib/get_high_address.c
ltp/lib/tst_is_cwd_nfs.c
ltp/lib/tst_is_cwd_tmpfs.c
ltp/lib/tst_res.c
ltp/lib/tst_tmpdir.c
ltp/testcases/kernel/containers/mqns/mqns_01.c
ltp/testcases/kernel/containers/mqns/mqns_02.c
ltp/testcases/kernel/containers/mqns/mqns_03.c
ltp/testcases/kernel/containers/mqns/mqns_04.c
ltp/testcases/kernel/containers/pidns/pidns30.c
ltp/testcases/kernel/containers/pidns/pidns31.c
ltp/testcases/kernel/containers/sysvipc/shmnstest.c
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/security/cap_bound/cap_bounds_r.c
ltp/testcases/kernel/security/cap_bound/cap_bounds_rw.c
ltp/testcases/kernel/security/cap_bound/cap_bset_inh_bounds.c
ltp/testcases/kernel/security/cap_bound/check_pe.c
ltp/testcases/kernel/security/cap_bound/exec_with_inh.c
ltp/testcases/kernel/security/cap_bound/exec_without_inh.c
ltp/testcases/kernel/syscalls/madvise/madvise03.c
ltp/testcases/kernel/syscalls/sbrk/sbrk01.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp01.c

5) Log Message:
Detect test results more accurately when generating HTML. PFA the patch for the changes to pan driver for a possible fix to the report generation issue. I have modified genhtml.pl script to reflect changes in pan driver. Note: The 'Initiation-status' column is now present after Test-output column. Signed-off-by: rohit verma <rohit.170309@gmail.com>.

Modified Files:
ltp/pan/ltp-pan.c
ltp/tools/genhtml.pl
ltp/tools/html_report_header.txt

6) Log Message:
LTP May 2009 build fail fix for ssgetmask() syscall: Don't `syscall()' macro already take care ot this ? What about adding the __NR_sgetmask/__NR_ssetmask to <arch>.in files instead ? Just to test, i added the following lines to testcases/kernel/include/i386.in :
__NR_sgetmask            68
__NR_ssetmask            69
and the problem on x86_64 is gone, without any further modification. Nicolas Joly <njoly@pasteur.fr>.

Modified Files:
ltp/testcases/kernel/include/i386.in

7) Log Message:
chmod05: fix to modify the group ownership before do dir chmod. Refer to the manpage: # man 2 chmod: If the calling process is not privileged (Linux: does not have the CAP_FSETID capability), and the group of the file does not match the effective group ID of the process or one of its supplementary group IDs, the S_ISGID bit will be turned off, but this will not cause an error to be returned. So, if we want S_ISGID bit be turned off after chmod(), we can not have the CAP_FSETID capability and not match the effective group ID. The 'bin' group always has the CAP_FSETID capability, so we can not change the own of the TESTDIR to 'bin' group, instead, 'nobody' can be used. This patch fixed the problem by change gid of chown to 'nobody' group and change the gid of setegid() to 'bin' group. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/chmod/chmod05.c

8) Log Message:
chmod05: fix the effective user when do cleanup: The TESTDIR is created by root user, but when we do cleanup, the effective user had been changed to nobody, so the cleanup will be failed when the TESTDIR is removed.   chmod05     0  WARN  :  tst_rmdir(): rmobj(/tmp/chmOpEdLA) failed: \ remove(/tmp/chmOpEdLA) failed; errno=1: Operation not permitted. This patch fixed the problem by reset the effective user to root. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/chmod/chmod05.c

9) Log Message:
Include config.h in aio01, to get HAVE_LIBAIO_H. This patch is necessary for aio01 test to actually test something. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/io/aio/aio01/aio01.c

10) Log Message:
Don't create the message queue in mq_open01 when the test specifies O_CREAT flag: The tests need to create the message queue themselves to specify the creation attributes. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/mq_open/mq_open01.c

11) Log Message:
Change syscall numbers to symbolic constants in rt_sigprocmask01: This patch changes the syscall numbers in rt_sigprocmask01 test to symbolic constants, to make it functional on other architectures than i386. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

12) Log Message:
Change some absolute paths in the linkat test to  point to its own files instead of /etc/passwd: This avoids unwanted error when /etc and /tmp are on different devices. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/linkat/linkat01.c

13) Log Message:
Remove the signal-waiting logic from create_sig_proc(): In create_sig_proc, the child process waits for the parent to wake it with a signal. This doesn't actually solve anything, and the implementation with pause() syscall is inherently racy (the race results in a deadlock). This patch removes it; it doesn't make the function race-free (it's possible the child will send the signal before the parent had chance to run), but this is the best you can get. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/utils/common_j_h.c

14) Log Message:
Return immediately when the ZOO file couldn't be opened, prevent crash later: There was a crash in pan when the zoofile couldn't be opened; this patch fixes it by disallowing the zoo_open function to continue. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/pan/zoolib.c

15) Log Message:
Fix the error handling logic in power_management tests: There is a problem with error reporting in power_management tests. Particularly, it wouldn't report failure to pan when one of the tests failed. This patch does the following:
  - make it actually fail when one of the tests fails,
  - assume return values other than 1 (except 0, of course) are errors, too,
  - write PASS messages for successful tests,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/power_management/pm_include.sh
ltp/testcases/kernel/power_management/runpwtests.sh

16) Log Message:
gcov-kernel: updated patches to work with .. in source paths. Peter Oberparleiter <oberpapr@users.sourceforge.net>

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.23-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.25-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.26-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.27-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.28-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.29-gcov.patch

17) Log Message:
POSIX aio_error/3-1.c. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_error/3-1.c

18) Log Message:
POSIX aio_read/10-1.c. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_read/10-1.c

19) Log Message:
POSIX aio_write/8-1.c. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_write/8-1.c

20) Log Message:
POSIX aio_write/8-2.c. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_write/8-2.c

21) Log Message:
Add eventfd2_03 test for eventfd2() syscall. Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com> . Original-author-and-copyright-holder: Davide Libenzi <davidel@xmailserver.org>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_03.c

22) Log Message:
POSIX aio_cancel/3-1.c. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_cancel/3-1.c

23) Log Message:
POSIX mlock/12-1.c and mlock/speculative/12-1.c. EPERM: (Linux 2.6.9 and later) the caller was not privileged (CAP_IPC_LOCK) and its RLIMIT_MEMLOCK soft resource limit was 0. Signed-off-by: Naresh Kamboju < naresh.kernel@gmail.com >.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mlock/12-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/mlock/speculative/12-1.c

24) Log Message:
Add/Port mbind01 test for mbind() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>. 

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mbind/Makefile
ltp/testcases/kernel/syscalls/mbind/mbind01.c

25) Log Message:
Add/Port sched_getaffinity01 test for sched_getaffinity() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/sched_getaffinity/Makefile
ltp/testcases/kernel/syscalls/sched_getaffinity/sched_getaffinity01.c

26) Log Message:
Add/Port waitid01 test for waitid() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/waitid/Makefile
ltp/testcases/kernel/syscalls/waitid/waitid01.c

27) Log Message:
Add/Port waitid02 test for waitid() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/waitid/waitid02.c

28) Log Message:
Add/Port quotactl01 test for quotactl() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/quotactl/Makefile
ltp/testcases/kernel/syscalls/quotactl/quotactl01.c

29) Log Message:
kernel/controllers/ testcase and CGROUPS support. please, replace on the LTP main the previous patch with ones attached. The attached patch add the right labels of ifdef. This patch allows the cross-build of kernel/controllers (cgroups tests) testcase changing the policy to check the cgroups capability at build-time. Signed-off-by: Francesco Rundo <francesco.rundo@st.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile

30) Log Message:
fchmod05: fix to the group ownership and the effective user: This patch fixed the modify of the group ownership before do dir chmod and fixed the effective user when do cleanup. Those problems cause the test failed with the following error message:
  fchmod05    1  FAIL  :  testdir: Incorrect modes 043777, Expected 0777
  fchmod05    0  WARN  :  tst_rmdir(): rmobj(/tmp/fchUout8n) failed: remove(/tmp/fchUout8n) failed; errno=1: Operation not permitted
Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c

31) Log Message:
chown03: fix the effective user when do cleanup. The TESTDIR is created by root user, but when we do cleanup, the effective user had been changed to nobody, so the cleanup will be failed when the TESTDIR is removed.
  chown03     1  PASS  :  chown() on testfile succeeds, clears setuid/gid bits
  chown03     0  WARN  :  tst_rmdir(): rmobj(/tmp/choYm1VHD) failed: remove(/tmp/choYm1VHD) failed; errno=1: Operation not permitted
This patch fixed the problem by reset the effective user to root. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/chown/chown03.c

32) Log Message:
mmapstress03: consider passed when returning EINVAL in the large mmap test: Some architectures may return EINVAL instead of ENOMEM. This should also be ok according to mmap manual: EINVAL We don't like addr, length, or offset (e.g., they are too large, or not aligned on a page boundary). Signed-off-by: nobuhiro <nobuhiro@andestech.com>.

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c

33) Log Message:
Small typo in sgetmask01.c: Here follow a small patch that fix a typo in sgetmask01.c testcase, where __NR_ssetmask is badly used instead of __NR_sgetmask. Signed-off-by: Nicolas Joly <njoly@pasteur.fr>.

Modified Files:
ltp/testcases/kernel/syscalls/sgetmask/sgetmask01.c

34) Log Message:
Build failure of aio02 test case: --static for gcc is really needed? I cannot find strong reason for it. Signed-off-by: Masatake YAMATO <yamato@redhat.com>. 

Modified Files:
ltp/testcases/kernel/io/aio/aio02/Makefile
ltp/testcases/kernel/io/aio/aio02/main.c

35) Log Message:
pidns17 testcase bugfix/cleanup: Fix minor bugs in the test case that cause the test to fail intermittently. Also, print more debug info when test fails. This fixes a bug reported by Sachin P. Sant. Signed-off-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/pidns17.c

36) Log Message:
growfiles: fix static build which needs to link the pthread library: Signed-off-by: nobuhiro <nobuhiro@andestech.com>.

Modified Files:
ltp/testcases/kernel/fs/doio/Makefile

37) Log Message:
Script to extract description of test case from LTPROOT/doc/testcases/*.txt files: Note: The formatting is applied to only kernel, misc, network and commands test-cases. Formatting used is based on my ideas and comments from Subrata. Comments on the same are welcome. Signed-off-by: rohit verma <rohit.170309@gmail.com>.

Modified Files:
ltp/doc/testcases/commands.txt
ltp/doc/testcases/kernel.txt
ltp/doc/testcases/misc.txt
ltp/doc/testcases/network.txt

38) Log Message:
Regarding ht_enable test case failure: Pls find attached patch for ht_enabled and ht_affinity. I am not having a 16-CPU machine at my end to test ht_interrupt test code. Signed-off-by: rohit verma <rohit.170309@gmail.com>. 

Modified Files:
ltp/runtest/hyperthreading
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.h
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTenabled.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.h
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/Makefile
Added Files:
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/smt_smp_affinity.sh
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/smt_smp_enabled.sh

39) Log Message:
runltp, set user-defined tmp directory correctly: I'd like to submit this patch to fix the functionality to set user-defined tmp directories for LTP runs. This undos the hardcoded TMPDIR from version 1.33 which added some special case handling of the passed in directory string, but broke the general case with what looks like debug code. Patch is against 1.45 version iof runltp (head). Signed-off-by: Henry Yei <hyei@mvista.com>. 

Modified Files:
ltp/runltp

40) Log Message:
Fixes of the tcore test. these are little fixes of the tcore.sh script: 
- use $BIN_DIR for auxiliary files, and $TEST_DIR as temporary directory,
- don't run "cd -" if previous "cd something" failed,
- fixup the value of core_pattern, to replace possibly customized patterns using absolute paths or not using the name "core" for corefiles,
- don't hide error messages from expect.
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/misc/tcore_patch_test_suites/tcore.sh

41) Log Message:
Report error with the correct error file in tar_tests.sh: Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/tar/tar_tests.sh

42) Log Message:
Fix cleanup procedure in the setuid04 test: Cleanup has to be made only once in the parent process; when the child makes the cleanup itself, the parent has nothing to cleanup, which makes him sad. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/setuid/setuid04.c

43) Log Message:
Fix some bashisms, mainly in the controllers tests: Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/containers/netns/initialize.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_base_ops_test/cpuset_base_ops_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_exclusive_test/cpuset_exclusive_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_hierarchy_test/cpuset_hierarchy_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/cpuset_hotplug_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_inherit_test/cpuset_inherit_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuset_funcs.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_load_balance_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_sched_domains_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_pressure_test/cpuset_memory_pressure_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_spread_test/cpuset_memory_spread_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_test/cpuset_memory_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_testset.sh
ltp/testcases/kernel/controllers/memcg/memcg_regression_test.sh
ltp/testcases/kernel/io/stress_floppy/generate.sh

44) Log Message:
Setup and cleanup routines for diotest: this patch makes the cleanup procedure in diotest more robust. Particularly:
- simplify cleanup by creating setup and cleanup routines,
- use tst_tmpdir() to create the test files in a temporary directory. Note that you can still make it use a different path with the -f filename option,
- delete the file in the case it was created, but couldn't be opened with O_DIRECT,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/io/direct_io/diotest2.c
ltp/testcases/kernel/io/direct_io/diotest3.c
ltp/testcases/kernel/io/direct_io/diotest4.c
ltp/testcases/kernel/io/direct_io/diotest5.c
ltp/testcases/kernel/io/direct_io/diotest6.c

45) Log Message:
Add test environment variables (TCID et al.) to tpm_version_tests.sh: this patch adds variables needed for tst_* routines into the tpm_version_tests.sh. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/tpm-tools/tpm/tpm_version/tpm_version_tests.sh

46) Log Message:
Don't overwrite the exit code with junk value in acl_test01: the variable EXIT_CODE which contains the result of acl01 test, is overwritten at the end of the test. This patch makes it preserve the correct value. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/fs/acls/acl_test01

47) Log Message:
Include "config.h" in the aio02 test to get HAVE_LIBAIO_H: Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/io/aio/aio02/main.c

48) Log Message:
This patch fixes compiler warnings for implicit function declarations, particularly snprintf and usleep, in mq_notify and mq_timedreceive. Note that although the functions are used in common_j_c.h, the macros have to be defined in the c files that include it, before any other header. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/mq_notify/mq_notify01.c
ltp/testcases/kernel/syscalls/mq_timedreceive/mq_timedreceive01.c
ltp/testcases/kernel/syscalls/utils/common_j_h.c

49) Log Message:
Some makefiles ignore errors from commands ran in shell loops. This patch fixes that. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/doc/man1/Makefile
ltp/doc/man3/Makefile
ltp/include/Makefile
ltp/testcases/ballista/ballista/MakefileTarget.dist
ltp/testcases/commands/unzip/Makefile
ltp/testcases/kernel/containers/netns/Makefile
ltp/testcases/kernel/controllers/cpuset/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_base_ops_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_exclusive_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_hierarchy_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_inherit_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/Makefile
ltp/testcases/kernel/fs/scsi/ltpscsi/Makefile

50) Log Message:
Adapt the cgroup/test_6_2 test to the various ways clone is called on different architectures: Code shamelessly taken from clone01 test. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/controllers/cgroup/test_6_2.c
Added Files:
ltp/testcases/kernel/controllers/cgroup/clone_platform.h

51) Log Message:
Define some syscall numbers in the linux_syscall_numbers.h file, not to get build failures or crappy results on other architectures which lack them. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/x86_64.in
ltp/testcases/kernel/performance_counters/performance_counter01.c
ltp/testcases/kernel/performance_counters/performance_counter02.c
ltp/testcases/kernel/syscalls/mq_open/mq_open01.c
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c
ltp/testcases/kernel/syscalls/utils/numaif.h

52) Log Message:
The eventfd test creates some files in the current directory. I think it should be creating the files in a temporary directory instead, as is already the standard with other LTP tests, because the current might be nonwriteable and the user might not want the files left there. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c

53) Log Message:
This patch makes the telnet test avoid timeouts when the remote users prompt doesn't contain hostname, or is somehow irregular. It works by explicitly setting the prompt in the remote shell (see the PROMPT variable). Note that setting literal value as a prompt works even when the remote shell is not bash (the classic bash placeholders do not). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/tcp_cmds/telnet/telnet01

54) Log Message:
Use present autoconf test for asm/ldt.h in set_thread_area* tests to prevent build failures. Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area01.c
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area02.c

55) Log Message:
Latest fix from Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/setuid/setuid04.c

56) Log Message:
[real-time] sched_footbal atomic start: The current barrier implementation results in the lowest priority thread actually starting the game (they are the last to be scheduled to call pthread_barrier_wait).  This thread likely gets a priority boost as it holds the hb->lock for the futex associated with the barrier.  This might lead to it running ahead of the defense threads. In fact, any sort of barrier or cond var implementation (short of a pi aware cond broadcast, which is not yet readily available) will result in a thundering herd situation when the FUTEX_WAKE_ALL syscall is issued, which can result in a short run of one or more offense threads while all the threads get to the RUNNABLE state. This patch removes the complex starting mechansims and replaces them with a simple atomic counter.  All player threads are started and once the players_ready count reaches the total player count, the referee starts the game by setting the ball position to zero. Tested on two platforms (both x86_64, 4 and 8-way) for a combined total of 13,000 iterations with 0 failures. Signed-off-by: Darren Hart <dvhltc@us.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/sched_football/sched_football.c

57) Log Message:
This is a patch for the splice01 test. Previously the test was checking if the current working directory was NFS based as which the test. The patch changes this test to check whether the test directory is on NFS, as that is actually where the test gets run. Signed-off-by: Henry Yei <hyei@mvista.com>. 

Modified Files:
ltp/testcases/kernel/syscalls/splice/splice01.c

58) Log Message:
[FIX PATCHES] All patches: To make your job easy, I have attached following patched to fix system call number to __NR_syscall representation. You can commit all these patches. LIST:
ltp-fix-add_key.patch
ltp-fix-bdflush.patch
ltp-fix-keyctl.patch
ltp-fix-newuname.patch
ltp-fix-rt_sigprocmask.patch
ltp-fix-rt_sigsuspend.patch
ltp-fix-set_thread_area.patch
ltp-fix-set_tid_address.patch
ltp-fix-ssetmask.patch
ltp-fix-tkill.patch
Signed-off-by: naresh kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/add_key/add_key01.c
ltp/testcases/kernel/syscalls/add_key/add_key02.c
ltp/testcases/kernel/syscalls/bdflush/bdflush01.c
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c
ltp/testcases/kernel/syscalls/newuname/newuname01.c
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask02.c
ltp/testcases/kernel/syscalls/rt_sigsuspend/rt_sigsuspend01.c
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area01.c
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area02.c
ltp/testcases/kernel/syscalls/set_tid_address/set_tid_address01.c
ltp/testcases/kernel/syscalls/ssetmask/ssetmask01.c
ltp/testcases/kernel/syscalls/tkill/tkill01.c
ltp/testcases/kernel/syscalls/tkill/tkill02.c

59) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 1/10]Patch to integrate kernbench to LTP to test sched_mc=2 To verify CPU consolidation when sched_mc=2 we need kernbench. Hence integrating it in LTP. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/utils/benchmark/kernbench-0.42/COPYING
ltp/utils/benchmark/kernbench-0.42/Makefile
ltp/utils/benchmark/kernbench-0.42/README
ltp/utils/benchmark/kernbench-0.42/kernbench

60) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 2/10]Makefile patch to integrate to LTP. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/utils/benchmark/Makefile

61) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 3/10]Readme modified with pre-requisite for sched_mc=2 test. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/README

62) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 4/10]Reusable functions for consolidation test modified This patch has fixes for sched_domian test failures in kernel version beyond 2.6.29. Addtional new reusable functions and fixes for validation functions. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

63) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 5/10]CPU consolidation testcase updated to handle exceptions. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

64) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 6/10]sched domian testcase updated to handle exceptions. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>. 

Modified Files:
ltp/testcases/kernel/power_management/sched_domain.py

65) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 7/10]Fixes for sched_mc & sched_smt interface test Existing testcase in LTP would fail or not cover all possible sched_mc values. This patch has been written to make testcase flexible to run on future releases. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/test_sched_mc.sh
ltp/testcases/kernel/power_management/test_sched_smt.sh

66) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 8/10]New set of reusbale Library functions and fixes. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/pm_include.sh

67) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 9/10]Master script modified to cover additional test scenarios. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

68) Log Message:
Addtional test scenarios & fixes for power management testcases. On doing demo of LTP testcases to developers we realized some more test scenarios has to be added to LTP testcases for better test coverage. Also some bug fixes has to be done for existing test cases to run on future versions on Linux Kernel. We also want to integrate kernbench in LTP for sched_mc_power_savings=2. Hence this list of patches include patches to integrate kernbench into LTP. The test also covers consolidation at core level for hyper threaded system. [Patch 10/10]Patch to add another command file in runtest. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/runtest/power_management_tests_exclusive

69) Log Message:
personality test case build fail fix. Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/personality/personality01.c
ltp/testcases/kernel/syscalls/personality/personality02.c

70) Log Message:
cacheflush01, remove extraneous characters for mips specific section: I am submitting a patch for cacheflush01, it looks like there are unneeded characters before return syscall(__NR_cacheflush, addr, nbytes, cache) inside the mips section. Without this patch, the test does not compile with a mips compiler. Signed-off-by: Henry Yei <hyei@mvista.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/cacheflush/cacheflush01.c

71) Log Message:
Realtime: use mlockall optionally in realtime tests: Below patch adds the support to enable memory lock in realtime testcases optionally (with -m). Testing Informations: Tested the realtime tests in their default profile and as well as using mlock option. Signed-off-by: Vernon Mauery <vernux@us.ibm.com>, Signed-off-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Tested-by: Gowrishankar <gowrishankar.m@in.ibm.com>, Acked-by: Kiran Prakash <kiran@linux.vnet.ibm.com>, Acked-by: Dinakar Guniguntala <dino@in.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/scripts/run_c_files.sh
ltp/testcases/realtime/doc/TODO
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/lib/librttest.c
ltp/testcases/realtime/func/pi-tests/run_auto.sh

LTP-20090531

1) Log Message:
v4l-test 0.13 for LTP: Changes:
1) Added string content validation;
2) Test cases added for VIDIOC_REQBUFS,
Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMOUTPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_MODULATOR.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYMENU.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_REQBUFS.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_REQBUFS.h

2) Log Message:
v4l-test 0.14 for LTP: Changes:
1) Test cases added for VIDIOC_QUERYBUF,
2) Debug functions separated,
Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_REQBUFS.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/results.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYBUF.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYBUF.h
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_show.h

3) Log Message:
Your patch doesn't apply - looks like it is relative to further local changes you have made in your own git repo (extra args to mktemp).  But applying the corresponding change here does fix that problem for me, yes.  Diff below is relative to ltp cvs. Fix LTPBIN definition in selinux_file.sh. Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_file.sh

4) Log Message:
Fix MLS handling in selinux tests: Some of the selinux tests were using full security contexts but predated MCS/MLS and thus lacked a MLS field. This broke testing if MLS was enabled in the policy but mcstransd was not running. Change some of the tests to avoid the need to use full contexts at all, and others to conditionally append a MLS suffix if MLS is enabled. Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_file.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/mkdir/selinux_mkdir.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/relabel/selinux_relabel.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/rename/selinux_rename.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/rxdir/selinux_rxdir.sh

5) Log Message:
Update ltp selinux test script and policy: Note:  This does not obsolete or replace the other two patches I have posted (Fix LTPBIN definition in selinux_file.sh, Fix MLS handling in selinux tests), but rather should be applied on top of them. Attached is a patch and a tar file to update the ltp selinux test script and policy so that we no longer conditionally patch the test policy when we run the test script.  The patch does the following:
- Disable patching of the policy in the test script.
- Change the refpolicy Makefile to redirect to a rhel/N/ subdirectory if running on a redhat release and move the rhel-specific definitions there. 
- Change the refpolicy Makefile to only include test_bounds.te if the checkpolicy supports policy.24 (and thus typebounds statements).
- Merge the sbin_deprecated.patch into the test policy.
- Further update the test policy to build cleanly on f11, while preserving backward compatibility on f10.
- Added open permissions as necessary to the test policy (enabled in f11).
- Update the ioctl test policy to reflect the updated selinux_file_ioctl() logic in the kernel.
- Added a missing permission to the wait test policy that was causing it to wrongly report PASS.

The tar file contains a new testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5 subdirectory to preserve a legacy copy of the test policy that works on redhat 5.  The top-level refpolicy Makefile will redirect to this subdirectory when it detects redhat 5.  Similar subdirectories can be added for other stable releases going forward as needed.

Subrata, please cvs add the new subdirectory and its files.  Also, please cvs remove the following: ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_policy.te (generated file, should not be in the repository), ltp/testcases/kernel/security/selinux-testsuite/misc/*. Signed-Off-by: Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_exectrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ipc.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_policy.if
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_wait.te
ltp/testscripts/test_selinux.sh
Added Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/Makefile
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_capable_sys.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_dyntrans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_exectrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ipc.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_policy.if
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/test_wait.te
Removed Files:
ltp/testcases/kernel/security/selinux-testsuite/misc/check_sbin_deprecated.pl
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch
ltp/testcases/kernel/security/selinux-testsuite/misc/update_refpolicy.sh
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_policy.te

6) Log Message:
Update the selinux ioctl test in ltp to reflect the revised selinux_file_ioctl() logic in the kernel.  Also requires the corresponding ltp selinux test policy update. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_ioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_noioctl.c

7) Log Message:
Fix ltp selinux testsuite for rhel5: Some changes on top of the prior patches to enable the ltp selinux testsuite to run successfully on rhel5.  Changes:  
- Fix the extraction of the release version to exclude Client/Server/etc.
- Make the ioctl test detect kernel version and adjust the test logic to match the expected selinux_file_ioctl() logic.
- Prevent runcon from consuming the options to chcon in selinux_relabel.sh.
Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_noioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/relabel/selinux_relabel.sh

8) Log Message:
Enable the type bounds test in the ltp selinux testsuite: Add the type bounds test case to the runtest/selinux config so that it is executed as part of the ltp selinux testsuite.  The test passes with a sufficiently recent kernel (>= 2.6.28) and checkpolicy, as in Fedora 11.  If we want to avoid test failures on older kernels, we could add an explicit kernel version test to the test program, as I did for the ioctl test case. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/runtest/selinux

9) Log Message:
Update ltp selinux testsuite README: Update the ltp selinux testsuite README. Changes include:  
- Explain the two different locations of test policy up front and then use $POLICYDIR for subsequent references.
- Expand and clarify the kernel configuration options.
- Add a section summarizing the SELinux policy and userland dependencies.
Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/README

10) Log Message:
Fix selinux_capable_file.sh: Fix selinux_capable_file.sh to call setup before running the second set of tests.  This wasn't an issue prior to the $SELINUXTMPDIR patch as cleanup didn't previously remove the temporary directory, just the files.  The bug wasn't evident in enforcing mode since the second set of tests still got error exit values as expected just for the wrong reason. Detected by forcing a run of the testsuite under permissive mode and checking that all of the testcases FAIL as expected. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_file/selinux_capable_file.sh

11) Log Message:
There is a warning occured during i compiled ltp which was released in 20090430: The array of filename was declared with 5 elements, so if you give a value to filename[5], the array will overflow. Signed-off-by: Gui Xiaohua <guixh@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/readlinkat/readlinkat01.c

12) Log Message:
Fix faulty interpretation of PASS/FAIL  bysched_football log parser: The log parser of sched_football sometimes interprets successful runs as FAILed ones as it gets the final result based on the PASS/FAIL value of the first run in the log file. The rationale behind this patch is that sched_football testcase can itself decide if it has passed or failed based on the_ball value. There is no need of the log parser as is the case with the other test cases like pi_perf. Changelog:
- Added pass/fail detection logic to sched_football.c,
- Removed parse_football.py,
- Removed the call to parse_football.py from run_auto.sh.
Signed-off by: Kiran Prakash <kirpraka@in.ibm.com>,
Acked-by: Gowrishankar <gowrishankar.m@linux.vnet.ibm.com>,
Acked-By: Dinakar Guniguntala <dino@in.ibm.com>,
Acked-by: Sripathi Kodi <sripathik@in.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/sched_football/run_auto.sh
ltp/testcases/realtime/func/sched_football/sched_football.c
Removed Files:
ltp/testcases/realtime/func/sched_football/parse-football.py

13) Log Message:
Remove Duplicated Proc01 From Test Lists: The patch removes proc01 test from runtest/crashem, because it has also been present in runtest/fs. There is no need to run it in two places. Signed-off-by: CAI Qian <caiqian@cclom.cn>. 

Modified Files:
ltp/runtest/crashme

14) Log Message:
Add new testcases for cpuset: This is the patch of new testcases for the functionality test of cpuset. It contains cpu hotplug vs cpuset test, load balance vs cpuset test, schedule domains partition test, memory pressure measurement function test, page caches spread test and memory allocation test. Note: page caches spread test(test of cpuset11) may fail because there is something wrong with the kernel. I have made a patch to fix it. Now the patch was adding into -mm tree. Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/controllers/README
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/cpuset/Makefile
ltp/testcases/kernel/controllers/cpuset/README
ltp/testcases/kernel/controllers/cpuset/run_cpuset_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuset_funcs.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_testset.sh
Added Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/cpuset_hotplug_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_hotplug_test/cpuset_list_compute.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuinfo.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuinfo.h
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/meminfo.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/meminfo.h
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_cpu_hog.c
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_load_balance_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_sched_domains_check.c
ltp/testcases/kernel/controllers/cpuset/cpuset_load_balance_test/cpuset_sched_domains_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_pressure_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_pressure_test/cpuset_memory_pressure.c
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_pressure_test/cpuset_memory_pressure_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_spread_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_spread_test/cpuset_mem_hog.c
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_spread_test/cpuset_memory_spread_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_test/cpuset_memory_test.c
ltp/testcases/kernel/controllers/cpuset/cpuset_memory_test/cpuset_memory_testset.sh

15) Log Message:
The accept4() system call is available starting with Linux 2.6.28; support in glibc is available starting with version 2.10. In v2.9, the function was to be declared. So i did some changes like following. Signed-off-by: Gui Xiaohua <guixh@cn.fujitsu.com>. Acked-By: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/accept4/accept4_01.c

16) Log Message:
Update the ltp selinux testsuite README to note the requirement for the libselinux headers and static library, and provide URLs from which to obtain the SELinux core userland and reference policy if the base distribution does not already include them. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/README

17) Log Message:
Remove obsolete logic from the Makefile in selinux-testsuite/refpolicy/redhat/5. This Makefile only gets used if we are running the testsuite on RHEL5, so we can drop the conditional TARGET definitions based on the redhat-release value. Signed-off-by: Stephen Smalley <sds@tycho.nsa.gov>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/redhat/5/Makefile

18) Log Message:
Rohit Verma <rohit.170309@gmail.com> reported: I think there is a bug in the source code. In both the cases the string variable "Type" is not null- terminated. This variable ("Type") indicates the filesystem type, which is used later in the code. In the above said lines of code, I can observe that 'strlen(fstype)' is used within strncpy. Now, strlen returns the length of string excluding the null character. Man page of strncpy states that the 'dest' string is null terminated only if it is present in first 'n'  bytes of the 'src'. In our case, since strlen returns lenght excluding the null character the string "Type" is not null terminated.
CAI Qian <caiqian@cclom.cn> replied: Yes, that is the case. Guo Hongruan posted patches for mount02 and mount03 to fix the same problem before, and we'll also need the similar fix here. Are you capable to make patches for it? Signed-Off-By:  Rohit Verma <rohit.170309@gmail.com>, Acked-by: CAI Qian <caiqian@cclom.cn>,

Modified File(s):
ltp/testcases/kernel/syscalls/umount/umount02.c
ltp/testcases/kernel/syscalls/umount/umount03.c

19) Log Message:
Fix the splice02 test:
Particularly:
- TEST_ERRNO is only set when the syscall is executed using the TEST() macro. The tests gave bad error messages because of that.
- The end of the test was dead code; moved the TPASS code to pass at the end of file.
- The test assumes std. input is a pipe; reflect this in the runtest file.
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/splice/splice02.c

20) Log Message:
Patch for fixing Unzip01 Test Not Working Correctly. Signed-Off-By: rohit verma <rohit.170309@gmail.com>. Acked-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/commands/unzip/unzip_tests.sh

21) Log Message:
Add Memory Cgroup regression tests to LTP: Those testcases can reproduce bugs we found in memcg, and is useful to track future regressions. Note: this test may crash the system with older kernels, so it is disabled for kernels older than 2.6.30. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified Files:
ltp/runtest/controllers
ltp/testcases/kernel/controllers/Makefile
Added Files:
ltp/testcases/kernel/controllers/memcg/Makefile
ltp/testcases/kernel/controllers/memcg/README
ltp/testcases/kernel/controllers/memcg/memcg_regression_test.sh
ltp/testcases/kernel/controllers/memcg/memcg_test_1.c
ltp/testcases/kernel/controllers/memcg/memcg_test_2.c
ltp/testcases/kernel/controllers/memcg/memcg_test_4.c
ltp/testcases/kernel/controllers/memcg/memcg_test_4.sh

22) Log Message:
Attached (against ltp-full-20090430.tgz) patch renames binaries in pan directory to have ltp- prefix as plain pan when installed in /usr/bin/ directory conflict with gnome pan. It also fixes all occurrences of pan in scripts and howtos. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified Files:
ltp/ltp-devel.spec
ltp/runltp
ltp/runltplite.sh
ltp/doc/automation-README.html
ltp/doc/automation-cookbook.html
ltp/doc/ltp-howto.lyx
ltp/doc/ltp-howto.txt
ltp/doc/man1/Makefile
ltp/pan/Makefile
ltp/testscripts/diskio.sh
ltp/testscripts/ltp-aiodio.sh
ltp/testscripts/ltp-scsi_debug.sh
ltp/testscripts/ltpfslvm.sh
ltp/testscripts/ltpfsnolvm.sh
ltp/testscripts/ltpstress.sh
ltp/testscripts/networkstress.sh
ltp/testscripts/networktests.sh
ltp/testscripts/runEALtests.sh
ltp/testscripts/runpan.sh
ltp/testscripts/test_containers.sh
ltp/testscripts/test_filecaps.sh
ltp/testscripts/test_selinux.sh
ltp/testscripts/tpm_tools.sh
Added Files:
ltp/doc/man1/ltp-bump.1
ltp/doc/man1/ltp-pan.1
ltp/pan/ltp-bump.c
ltp/pan/ltp-pan.c
ltp/pan/ltp-scanner.c
Removed Files:
ltp/doc/man1/bump.1
ltp/doc/man1/pan.1
ltp/pan/bump.c
ltp/pan/pan.c
ltp/pan/scanner.c

23) Log Message:
Fix missing return. Signed-off-by: Cyril Hrubis <chrubis@suse.cz>.

Modified File(s):
ltp/testcases/kernel/security/integrity/ima/src/ima_mmap.c

24) Log Message:
Add add_key01 test for add_key syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>,

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/add_key/Makefile
ltp/testcases/kernel/syscalls/add_key/add_key01.c

25) Log Message:
Add add_key02 test for add_key syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/add_key/add_key02.c

26) Log Message:
Add bdflush01 test for bdflush syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/bdflush/Makefile
ltp/testcases/kernel/syscalls/bdflush/bdflush01.c

27) Log Message:
Add exit_group01 test for exit_group syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/exit_group/Makefile
ltp/testcases/kernel/syscalls/exit_group/exit_group01.c

28) Log Message:
Add keyctl01 test for keyctl syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/keyctl/Makefile
ltp/testcases/kernel/syscalls/keyctl/keyctl01.c

29) Log Message:
Add newuname01 test for newuname syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/newuname/Makefile
ltp/testcases/kernel/syscalls/newuname/newuname01.c

30) Log Message:
Add rt_sigaction01 test for rt_sigaction syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/rt_sigaction/Makefile
ltp/testcases/kernel/syscalls/rt_sigaction/rt_sigaction01.c

31) Log Message:
Add rt_sigprocmask01 test for rt_sigprocmask syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/rt_sigprocmask/Makefile
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask01.c

32) Log Message:
Add rt_sigprocmask02 test for rt_sigprocmask syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/rt_sigprocmask/rt_sigprocmask02.c

33) Log Message:
Add rt_sigqueueinfo01 test for rt_sigqueueinfo syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/rt_sigqueueinfo/Makefile
ltp/testcases/kernel/syscalls/rt_sigqueueinfo/rt_sigqueueinfo01.c

34) Log Message:
Add rt_sigsuspend01 test for rt_sigsuspend syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/rt_sigsuspend/Makefile
ltp/testcases/kernel/syscalls/rt_sigsuspend/rt_sigsuspend01.c

35) Log Message:
Add set_thread_area01 test for set_thread_area syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/set_thread_area/Makefile
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area01.c

36) Log Message:
Add set_thread_area02 test for set_thread_area syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/set_thread_area/set_thread_area02.c

37) Log Message:
Add set_tid_address01 test for set_tid_address syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/set_tid_address/Makefile
ltp/testcases/kernel/syscalls/set_tid_address/set_tid_address01.c

38) Log Message:
Add sgetmask01 test for sgetmask syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/sgetmask/Makefile
ltp/testcases/kernel/syscalls/sgetmask/sgetmask01.c

39) Log Message:
Add sigreturn01 test for sigreturn syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/sigreturn/Makefile
ltp/testcases/kernel/syscalls/sigreturn/sigreturn01.c

40) Log Message:
Add ssetmask01 test for ssetmask syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/ssetmask/Makefile
ltp/testcases/kernel/syscalls/ssetmask/ssetmask01.c

41) Log Message:
Add timer_getoverrun01 test for timer_getoverrun01 syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/timer_getoverrun/Makefile
ltp/testcases/kernel/syscalls/timer_getoverrun/timer_getoverrun01.c

42) Log Message:
Add timer_gettime01 test for timer_gettime syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/timer_gettime/Makefile
ltp/testcases/kernel/syscalls/timer_gettime/timer_gettime01.c

43) Log Message:
Add tkill01 test for tkill syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/tkill/Makefile
ltp/testcases/kernel/syscalls/tkill/tkill01.c

44) Log Message:
Add tkill02 test for tkill syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/tkill/tkill02.c

45) Log Message:
Patch for "File" test case issue of 30-April-2009 release. Signed-off-by: rohit verma <rohit.170309@gmail.com>.

Modified File(s):
ltp/testcases/commands/ade/file/file_test.sh

46) Log Message:
I've found that ltp didn't compile on Debian because of old kernel headers, which contain taskstats struct without some of the needed fields. This autoconf test detects it and disables the code that would otherwise break. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/configure.ac
ltp/include/config.h.default
ltp/testcases/kernel/controllers/cgroup/getdelays.c
Added Files:
ltp/m4/ltp-taskstats.m4

47) Log Message:
Crash02: Deal with SIGSTOP and SIGSEGV v3: Version 3 also fixed compilation failures on IA-64, since there is no SYS_fork either. It use clone2() instead. Version 2 fixed compilation failures on IA-64, because there is no SYS_vfork there. Instead, it uses clone() syscall for vfork(): clone(child_stack=0, flags=CLONE_VM|CLONE_VFORK|SIGCHLD). We have seen crash02 test can not finish due to the child process got SIGSTOP or SIGSEGV when calling random syscalls like this,
# ps aux
...
168      20121  0.0  0.0   3956   336 ?        Ds   15:10   0:00 ./crash02 -e
-v 100
168      20122  0.0  0.0   3956   336 ?        T    15:10   0:00 ./crash02 -e
-v 100
crash02       X ffff81007fb127a0     0 21272  21271         21273 (L-TLB)
 ffff81004c185d58 0000000000000046 ffff81007b494e08 0000000000000002
 0000000000000002 0000000000000002 ffff81007c5dc860 ffff81007fb127a0
 00000d8ebb800862 000000000000c315 ffff81007c5dca48 0000000300000001
Call Trace:
 [<ffffffff800235a7>] filp_close+0x5c/0x64
 [<ffffffff8001595a>] do_exit+0x913/0x91f
 [<ffffffff80048c18>] cpuset_exit+0x0/0x6c
 [<ffffffff8002ad05>] get_signal_to_deliver+0x42c/0x45a
 [<ffffffff8005a837>] do_notify_resume+0x9c/0x7af
 [<ffffffff80096e2b>] specific_send_sig_info+0x44/0xac
 [<ffffffff8009710e>] force_sig_info+0xae/0xb9
 [<ffffffff80066eed>] do_page_fault+0x81e/0x830
 [<ffffffff8005d6dc>] retint_signal+0x3d/0x79
crash02       X ffff810002376400     0 21273  21271               21272 (L-TLB)
 ffff81004d201f18 0000000000000046 ffff81007b494e08 0000000000000046
 0000000000000046 0000000000000002 ffff810078d3a040 ffffffff802eeae0
 00000d8ebb803430 000000000001a60c ffff810078d3a228 0000000000000000
Call Trace:
 [<ffffffff8001595a>] do_exit+0x913/0x91f
 [<ffffffff80048c18>] cpuset_exit+0x0/0x6c
 [<ffffffff8005d28d>] tracesys+0xd5/0xe0
So we use WUNTRACED option. Also, we found out that if it picks up vfork(), it will generate SIGSEGV. I am not sure what else can generate the same, so only blacklist vfork() at the moment. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/misc/crash/crash02.c

48) Log Message:
Fix sync problem between two processes of pidns12 test: The child-process wait SIGUSR1 which would be sended by parent-process, if the child-process execute sigtimedwait() after parent-process send the signal, it would never receive the SIGUSR1 from parent-process. This patch rewrite child_signal_handler() to handle to SIGUSR1 and instead sigtimedwait() with sleep for 3 seconds. Signed-off-by: Gui Xiaohua <guixh@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/pidns12.c

49) Log Message:
In reference to the issue with timer_create04 and clock_gettime03 for the kernel version 2.6.29 which was reported in the link: http://www.nabble.com/timer_create-p22376043.html, PFA the patch for fixing the issue. Detail on the issue: A new clockid 'CLOCK_MONOTONIC_RAW' was added since the kernel 2.6.28 (http://www.kernel.org/pub/linux/kernel/v2.6/ChangeLog-2.6.28). This addition caused the above testcases to fail. Now, 5 clock ID's are resent in kernel ver 2.6.28 and later. Signed-off-by: Rohit Verma <rohit.170309@gmail.com>.

Modified Files:
ltp/testcases/kernel/timers/include/common_timers.h
ltp/testcases/kernel/timers/timer_create/timer_create02.c

50) Log Message:
Postponing close() after aio_write() has finished: In aio_return/1-1.c close() is called after asynchronous I/O write was queued. This according to POSIX may end up in one of two ends and it's implementation specified. One end is writing the file correctly while the other one is behave like aio_cancel() was called. (http://www.opengroup.org/onlinepubs/9699919799/functions/close.html). Test mentoined above rely on finishing asynchronous I/O correctly in this case. To fix that you must postpone close() after asynchronous I/O has finished. Signed-of-by: chrubis@suse.cz.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/1-1.c

51) Log Message:
revert previous "style" change which did a lot more damage than good

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c

52) Log Message:
execve: remove obsoleted test case execve04. Since latest kernel do execve(2) without get file descriptor(kernel commit e7b9b550f53e81ea38e71d322d6f95730df058a2), it only use one file struct. This cause the case execve04 which test for set EMFILE errno obsoleted. This patch removed test case execve04, and changed the index of the test cases after execve04. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/doc/testcases/kernel.txt
ltp/runtest/ltplite
ltp/runtest/stress.part3
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/execve/execve04.c
ltp/testcases/kernel/syscalls/execve/execve05.c
Removed Files:
ltp/testcases/kernel/syscalls/execve/execve06.c

53) Log Message:
Fix typo in testcases/kernel/syscalls/chown/chown03.c, which use ltpuser->pw_uid in call to setegid() should be ltpuser->pw_gid. Signed-off-by: Wei Yongjun <yjwei@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/syscalls/chown/chown03.c

54) Log Message:
postponing close() after aio_write() has finished II and cleanups: I've fixed all the sources in the aio_return directory (from the same errors as previous one) and cleaned the coding style a little. Signed-off-by: Cyril Hrubis chrubis@suse.cz.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/2-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/3-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/3-2.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/aio_return/4-1.c

55) Log Message:
Renaming binaries to avoid conflicts II. I've missed these three in the first patch, here comes cosmetic changes. Signed-off-by: Cyril Hrubis chrubis@suse.cz.

Modified Files:
ltp/INSTALL ltp/README ltp/README.ltp-devel

56) Log Message:
Port Crackerjack Syscall tests(missing) to LTP. Add/Port Utility Headers for these set of tests. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>. 

Added Files:
ltp/testcases/kernel/syscalls/utils/common_j_h.c
ltp/testcases/kernel/syscalls/utils/include_j_h.h
ltp/testcases/kernel/syscalls/utils/inotify.h
ltp/testcases/kernel/syscalls/utils/ioprio.h
ltp/testcases/kernel/syscalls/utils/numaif.h
ltp/testcases/kernel/syscalls/utils/poll.h

57) Log Message:
Add/Port get_mempolicy01 test for get_mempolicy() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/get_mempolicy/Makefile
ltp/testcases/kernel/syscalls/get_mempolicy/get_mempolicy01.c

58) Log Message:
Add/Port clock_getres01 test for clock_getres() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/clock_getres/Makefile
ltp/testcases/kernel/syscalls/clock_getres/clock_getres01.c

59) Log Message:
Add/Port clock_nanosleep01 test for clock_nanosleep() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/clock_nanosleep/Makefile
ltp/testcases/kernel/syscalls/clock_nanosleep/clock_nanosleep01.c

60) Log Message:
Add/Port mq_notify01 test for mq_notify() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mq_notify/Makefile
ltp/testcases/kernel/syscalls/mq_notify/mq_notify01.c

61) Log Message:
Add/Port ppoll01 test for ppoll() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/ppoll/Makefile
ltp/testcases/kernel/syscalls/ppoll/ppoll01.c

62) Log Message:
Add/Port mq_open01 test for mq_open() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mq_open/Makefile
ltp/testcases/kernel/syscalls/mq_open/mq_open01.c

63) Log Message:
Add/Port mq_timedreceive01 test for mq_timedreceive() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mq_timedreceive/Makefile
ltp/testcases/kernel/syscalls/mq_timedreceive/mq_timedreceive01.c

64) Log Message:
Add/Port utimes01 test for utimes() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/utimes/Makefile
ltp/testcases/kernel/syscalls/utimes/utimes01.c

65) Log Message:
Add/Port mq_unlink01 test for mq_unlink() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mq_unlink/Makefile
ltp/testcases/kernel/syscalls/mq_unlink/mq_unlink01.c

66) Log Message:
Add/Port mq_timedsend01 test for mq_timedsend() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/mq_timedsend/Makefile
ltp/testcases/kernel/syscalls/mq_timedsend/mq_timedsend01.c

67) Log Message:
Add/Port unshare01 test for unshare() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/unshare/Makefile
ltp/testcases/kernel/syscalls/unshare/unshare01.c

68) Log Message:
Add/Port unshare02 test for unshare() syscall. Signed-off-by: Manas Kumar Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/unshare/unshare02.c

69) Log Message:
The following patch solves the problem: 
1) Avoids build problem on your very old kernel,
2) Will not run on on your old kernel but on kernel > 2.6.17,
Will revert to Autoconf later. Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/splice/splice02.c

70) Log Message:
Being a non-NUMA machine is not a failure, but an info. So it should not cause the test to have a non zero exit status. Signed-off-by: Suzuki Poulose <suzuki@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

71) Log Message:
I come across with this kernel issue in 2.6.27:
http://lkml.org/lkml/2008/9/23/218,
http://lkml.org/lkml/2008/9/23/228,
http://lkml.org/lkml/2008/9/24/180,
http://lkml.org/lkml/2008/9/24/186,
http://lkml.org/lkml/2008/9/24/193,
http://lkml.org/lkml/2008/9/24/243,
http://lkml.org/lkml/2008/9/24/247,
Test cases modification noticed for ltp/testcases/open_posix_testsuite/conformance/interfaces/sigaction/10-1.c. I have modified patch and submitting fix patch. This test case is passed now. Signed-off-by: naresh kamboju <naresh.kernel@gmail.com>.

Modified Files:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sigaction/10-1.c

LTP-20090430

1) Log Message:
This patch adds Integrity Measurement Architecture(IMA) testing support:
Changes:
- updated README
- add test for existence of openssl-devel (m4/ltp-crypto.m4)
- add support for finding an audit message in different log files
Signed-off-by: Mimi Zohar <zohar@us.ibm.com>.

Modified Files:
ltp/config.mk.in
ltp/configure.ac
ltp/testcases/kernel/security/Makefile
Added Files:
ltp/m4/ltp-crypto.m4
ltp/runtest/ima
ltp/testcases/kernel/security/integrity/Makefile
ltp/testcases/kernel/security/integrity/ima/Makefile
ltp/testcases/kernel/security/integrity/ima/README
ltp/testcases/kernel/security/integrity/ima/policy/Makefile
ltp/testcases/kernel/security/integrity/ima/policy/measure.policy
ltp/testcases/kernel/security/integrity/ima/policy/measure.policy-invalid
ltp/testcases/kernel/security/integrity/ima/src/Makefile
ltp/testcases/kernel/security/integrity/ima/src/ima_boot_aggregate.c
ltp/testcases/kernel/security/integrity/ima/src/ima_measure.c
ltp/testcases/kernel/security/integrity/ima/src/ima_mmap.c
ltp/testcases/kernel/security/integrity/ima/tests/Makefile
ltp/testcases/kernel/security/integrity/ima/tests/ima_measurements.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_policy.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_setup.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_tpm.sh
ltp/testcases/kernel/security/integrity/ima/tests/ima_violations.sh

2) Log Message:
Addition of per_cpu_atomic_operations_vs_interrupt_disabling_module test to LTP. Signed-Off-By: Mathieu Desnoyers <mathieu.desnoyers@polymtl.ca>.

Added Files:
ltp/testcases/kernel/device-drivers/misc_modules/per_cpu_atomic_operations_vs_interrupt_disabling_module/Makefile
ltp/testcases/kernel/device-drivers/misc_modules/per_cpu_atomic_operations_vs_interrupt_disabling_module/test-cmpxchg-nolock.c

3) Log Message:
Module to test Per CPU Allocator. Signed-Off-By: Tejun Heo <tj@kernel.org>.

Added Files:
ltp/testcases/kernel/device-drivers/misc_modules/per_cpu_allocator_module/Makefile
ltp/testcases/kernel/device-drivers/misc_modules/per_cpu_allocator_module/test_per_cpu_allocator_module.c

4) Log Message:
Patch for fixing the testcase's segment fault. Signed-Off-By: Fan He <fhe@novell.com>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/timer_gettime/speculative/6-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/timer_settime/speculative/12-1.c

5) Log Message:
Extended the summary info to the case of LTP cross-built i.e. running on different arch with respect to the host. Moreover, a more detailed summary about LTP test results has been added. Signed-off-by: Francesco Rundo <francesco.rundo@st.com>.

Modified File(s):
ltp/tools/genhtml.pl

6) Log Message:
Add Simple Test for PERFORMANCE COUNTER in Linux. Signed-Off-By: Ingo Molnar <mingo@elte.hu>. Ported-To-And-Tested-On-LTP-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh
Added Files:
ltp/runtest/perfcounters
ltp/testcases/kernel/performance_counters/Makefile
ltp/testcases/kernel/performance_counters/performance_counter01.c

7) Log Message:
Add Test for Software and Hardware PERFORMANCE COUNTERS verification in Linux. Signed-Off-By: Paul Mackerras <paulus@samba.org>. Ported-To-And-Tested-On-LTP-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/perfcounters
Added Files:
ltp/testcases/kernel/performance_counters/performance_counter02.c

8) Log Message:
Add Test for Checking mmap() corruption. Signed-Off-By: Ying Han <yinghan@google.com>. Ported-To-And-Tested-On-LTP-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/stress.part1
Added Files:
ltp/testcases/kernel/mem/mmapstress/mmap-corruption01.c

9) Log Message:
Growfiles: Fix Test Failures. See: http://marc.info/?t=123866461100001&r=1&w=2&n=2, for more info. Signed-Off-By: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/lib/Makefile
ltp/testcases/kernel/fs/doio/growfiles.c

10) Log Message:
While running the latest LTP testsuite (CVS checkout), some tests failed due to small errors in the testscripts. I've attached two diffs for both testcases/kernel/syscalls/utimensat/utimensat_tests.sh and testcases/kernel/syscalls/ioctl/test_ioctl. Signed-Off-By: Christian Kujau <lists@nerdbynature.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/test_ioctl
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

11) Log Message:
Patch to integrate sched_smt cpu consolidation testcase to LTP. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/pm_include.sh
ltp/testcases/kernel/power_management/runpwtests.sh

12) Log Message:
This is v4l-test 0.11 patch for LTP. Changes:
 - Test cases added for VIDIOC_G_OUTPUT, VIDIOC_S_OUTPUT, VIDIOC_G_FMT, VIDIOC_G_SLICED_VBI_CAP, VIDIOC_QUERYMENU;
 - Cleaned up ret and errno variable names;
 - Separated the NULL parameter test cases to a separated testsuite and reworked most of the NULL parameter test cases;
 - Added camera enabling through /sys/devices/platform/eeepc/camera;
 - Added results page to documentation;
 - Follow kernel API changes in video_dummy.ko
Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/kernel_space/video_dummy.c
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/dev_video.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMOUTPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_INPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_INPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_LOG_STATUS.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_MODULATOR.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PARM.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PRIORITY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_invalid_ioctl.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FMT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_G_SLICED_VBI_CAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_G_SLICED_VBI_CAP.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_OUTPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_OUTPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYMENU.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYMENU.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/results.html

13) Log Message:
Patch for fixing the openposix_getoverrun_speculative_6_1 testcase's segment fault. Signed-Off-By: Fan He <fhe@novell.com>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/timer_getoverrun/speculative/6-1.c

14) Log Message:
Patch for fixing the openposix_timer_delete_speculative_5_1 testcase's segment fault. Signed-Off-By: Fan He <fhe@novell.com>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/timer_delete/speculative/5-1.c

15) Log Message:
I am not sure what kinds of IO and wait methods are available on uClinux, but by looking at the code in tlibio.h, the following method seems not supported there. So whenever LIO_IO_SYNCP was chosen as the random IO method, it will skip the above code and failback to "No I/O method chosen". Can you try the following patch to see if it fixes the problem? It drops LIO_IO_SYNCP as an avaliable method for uClinux, and also narrows down the wait methods since it does not support async IO there. I'd hope someone knew better than me about uClinux to review this patch. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/include/tlibio.h

16) Log Message:
Fix clone07 bug. Signed-Off-By: Guo Hongruan <guo.hongruan@gulessoft.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/clone/clone07.c

17) Log Message:
Addition of splice02 test for splice() syscall. Original-Author: Jens Axboe <axboe@kernel.dk>, Ported-To-LTP:By: Manas K Nayak <maknayak@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/splice/splice02.c

18) Log Message:
Addition of clock_nanosleep2_01 test for clock_nanosleep2() syscall. Original-Author: M. Koehrer <mathias_koehrer@arcor.de>, Ported-To-LTP-By: Manas K Nayak <maknayak@in.ibm.com>,

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/clock_nanosleep2/Makefile
ltp/testcases/kernel/syscalls/clock_nanosleep2/clock_nanosleep2_01.c

19) Log Message:
Addition of cacheflush01 test for cacheflush() syscall. Original-Author: Maxin John <maxin.john@gmail.com>, Ported-To-LTP-By: Manas K Nayak <maknayak@in.ibm.com>,

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/cacheflush/Makefile
ltp/testcases/kernel/syscalls/cacheflush/cacheflush01.c

20) Log Message:
Fix mount02 and mount03. Signed-Off-By: Guo Hongruan <guo.hongruan@gulessoft.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/mount/mount02.c
ltp/testcases/kernel/syscalls/mount/mount03.c

21) Log Message:
How many loops should setuid04 run test case using "setuid04 -i 2"? It should be 2 but in fact, it is 3, This patch solves this problem. Hoppe it is useful. Thanks a lot!. Signed-Off-By: Guo Hongruan <guo.hongruan@gulessoft.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/setuid/setuid04.c

22) Log Message:
Rohit verma <rohit.170309@gmail.com> wrote: There is a change in compilation mechanism in LTP from Feb 09 distribution.The previous Make mechanism did not provide any optimization while compiling the fork05 test program and the test used to Pass . However the newer Makefile uses optimization level 2 while compiling, if this file is executed the test case fails. CAI Qian <caiqian@cclom.cn> replied: This is definitely a case. I can reproduce it on Fedora 10, so I have created a bug of it, and copied the author Ulrich Drepper, https://bugzilla.redhat.com/show_bug.cgi?id=495296. Ulrich Drepper has pointed out in the above bug report that this failure was due to incorrect test code. The test code isn't correct.  The compiler cannot look inside the asm statements in main() and see that they are really necessary.  Based on the information given the compiler can drop some of them. Change all asms in main from asm(...) to asm volatile(...), and the code works fine. With the following patch, it works fine with and without compilation optimization. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/fork/fork05.c

23) Log Message:
Fix from CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/network/lib6/runcc.c

24) Log Message:
It turns out that -s option does not has any effect for binutils ar, which makes related test cases invalid in ar01 test. Nick Clifton replied in the bug report, https://bugzilla.redhat.com/show_bug.cgi?id=490797. It does make a difference on some versions of the ar program, notably those on some Unix and Solaris systems.  These versions of ar do not automatically added a symbol index when the archive is created. But the binutils ar automatically adds a symbol index when an archive is created.  So the -s option is supported mainly for backwards compatibility with these other versions of ar. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/commands/ade/ar/ar01

25) Log Message:
The library file in powermanagement testcase is modified to support sched_mc=2 testing. Wrote a another function to generate load in the system through make -j x. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

26) Log Message:
CPU consolidation testcase is modified such that workload is not passed as input to the testcase. Based on sched_mc input corresponding workload is triggered. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

27) Log Message:
Master script of Powermanagement testcase is modified to invoke cpu_consolidation testcase without workload. Restructured cpu_consolidation testcase within a loop. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/runpwtests.sh

28) Log Message:
This testcase test sched_smt_power_saving interface with valid and inavlid values. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/test_sched_smt.sh

29) Log Message:
Modifed test_sched_mc interface testing testcase to use reusable function. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/test_sched_mc.sh

30) Log Message:
The test_dma_thread_diotest contains an unnecessary bashism. This patch fixes that. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/io/direct_io/test_dma_thread_diotest7.sh

31) Log Message:
Make fs/quota_remount_test01 more POSIX-shell friendly. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/fs/quota_remount/quota_remount_test01.sh

32) Log Message:
First, there was bug in test - it used seconds part of struct timespec structure, because total_sec was 5 from previous loop, and 1..4 millions of nanoseconds in addition to these 5 seconds did nothing in test result, checking sleep time for correctness also used total_sec. Also pselect takes struct timespec as its argument, not struct timeval, now code in test uses struct timeval as argument of pselect and suppose second field of this structure is microseconds instead of nanoseconds. Let's fix this part of test - I suggest to set nanoseconds to 1e8 ... 4e8 with step 1e8 and check sleep time differs from expected value no more than 10% of it. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/pselect/pselect01.c

33) Log Message:
This is the patch of the v4l-test 0.12 for LTP. Changes: Test cases added for VIDIOC_S_FMT; NULL parameter test suite split to read only, write only and write/read ioctl suite; More verbose debug output in VIDIOC_S_FREQUENCY and in some other test cases; More strict check added for strings in different test cases. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified File(s):
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMOUTPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FMT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_MODULATOR.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYMENU.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/results.html

34) Log Message:
Jiri Palecek <jpalecek@web.de> wrote: While running the selinux tests, I was contemplating the way the $SELINUXTMPDIR is created. It seems to me that creating it in each test individually would allow running the tests in parallel, make some hacks needed to prevent interference of the tests unnecessary, allow the tests to be run directly from ltpmenu et al., and wouldn't add much more code. What do you think about this? Signed-off-by: Jiri Palecek <jpalecek@web.de>.
"Serge E. Hallyn" <serue@us.ibm.com> replied:
If the motivation is to support multiple concurrent ltp runs, wouldn't it be better to have selinux-testsuite/tests/runtest.sh set/export SELINUXTMPDIR to a per-run tempdir? Even as simple as /tmp/selinux-$pid. Well, and testscripts/test_selinux.sh I guess. Hmm, no, bc at that level you can't easily support multiple policy module loads anyway. Never mind.
Jiri Palecek <jpalecek@web.de> replied back: No, the motivation was mostly to allow running these tests directly from PAN, without any supporting scripts. The ability to run the tests concurrently is just a pleasant bonus. I chose this way, because I find the needed changes pretty small. 
"Serge E. Hallyn" <serue@us.ibm.com> finally replied: Yeah - seems like a good idea. If the directories sometimes don't get deleted, then you might help out the admin by giving the directories easy to spot names so they can manually clean up...  i.e. use mktemp -d /tmp/ltpselinuxXXXX or maybe even better mkdir -p /tmp/ltpselinux; mktemp -d -p /tmp/ltpselinux.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/tests/bounds/selinux_bounds.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_file/selinux_capable_file.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_capable_sys.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/entrypoint/selinux_entrypoint.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/execute_no_trans/selinux_execute_no_trans.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_file.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_ioctl.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/link/selinux_link.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/mkdir/selinux_mkdir.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/open/selinux_open.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/readlink/selinux_readlink.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/relabel/selinux_relabel.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/rename/selinux_rename.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/rxdir/selinux_rxdir.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/setattr/selinux_setattr.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/stat/selinux_stat.sh

35) Log Message:
I have been trying to run the selinux tests on Debian and discovered a small flaw. The test was using a return value variable which wasn't set by the test. I've coma across another strange (at least to me) fact - when you execute a program without path, it is searched for in $PATH. However, if the program is in one directory if $PATH and selinux rejects to run the file, the following directories in $PATH are search, and the call can succeed. Is this behavior planned? I know it can't tamper the security of selinux, but it can lead to surprising results. Also, I've found some uses of macros not present in Debian's refpolicy. Should I send a patch for them? Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/tests/entrypoint/selinux_entrypoint.sh

36) Log Message:
Add cgroup regression tests to LTP: Those testcases can reproduce bugs we found in cgroups, and is useful to track future regressions. Note: this test may crash the system with older kernels, so it is disabled for kernels older than 2.6.29. Another note: getdelays.c is linux-2.6/Documentation/accounting/getdelays.c. How to run this test:     # runltp -f controllers
Result:
cgroup_regression_test    1  PASS  :  no kernel bug was found
cgroup_regression_test    2  PASS  :  notify_on_release is inherited
cgroup_regression_test    3  PASS  :  no kernel bug was found
cgroup_regression_test    4  PASS  :  no lockdep BUG was found
cgroup_regression_test    5  PASS  :  no kernel bug was found
cgroup_regression_test    6  PASS  :  no kernel bug was found
cgroup_regression_test    7  PASS  :  no kernel bug was found
cgroup_regression_test    8  PASS  :  no kernel bug was found
cgroup_regression_test    9  PASS  :  no kernel warning was found
cgroup_regression_test   10  PASS  :  no kernel warning was found
Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified Files:
ltp/runtest/controllers
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/README
Added Files:
ltp/testcases/kernel/controllers/cgroup/Makefile
ltp/testcases/kernel/controllers/cgroup/README
ltp/testcases/kernel/controllers/cgroup/cgroup_regression_test.sh
ltp/testcases/kernel/controllers/cgroup/fork_processes.c
ltp/testcases/kernel/controllers/cgroup/getdelays.c
ltp/testcases/kernel/controllers/cgroup/test_10_1.sh
ltp/testcases/kernel/controllers/cgroup/test_10_2.sh
ltp/testcases/kernel/controllers/cgroup/test_3_1.sh
ltp/testcases/kernel/controllers/cgroup/test_3_2.sh
ltp/testcases/kernel/controllers/cgroup/test_6_1.sh
ltp/testcases/kernel/controllers/cgroup/test_6_2.c
ltp/testcases/kernel/controllers/cgroup/test_9_1.sh
ltp/testcases/kernel/controllers/cgroup/test_9_2.sh

37) Log Message:
Test suite for cpuset: This is the test suite for the basis operation test and part functionality test of cpuset. It contains adding/removing cpus/mems test, setting flags test, exclusive function test, hierarchy relation test, inherit relation test and cpuset VS syscall test. More testcases will be added in future. Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/README
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/testplan.txt
Added Files:
ltp/testcases/kernel/controllers/cpuset/Makefile
ltp/testcases/kernel/controllers/cpuset/README
ltp/testcases/kernel/controllers/cpuset/run_cpuset_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_base_ops_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_base_ops_test/cpuset_base_ops_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_exclusive_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_exclusive_test/cpuset_exclusive_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_hierarchy_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_hierarchy_test/cpuset_hierarchy_test.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_inherit_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_inherit_test/cpuset_inherit_testset.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuset_funcs.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_testset.sh

38) Log Message:
While running the su01 test on Debian, I encountered a different error message on changing the password and giving a wrong old password. I guess the error message is actually OK, so I suggest to add it to the possible successful outcomes. Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/testcases/commands/su/su01_s1

39) Log Message:
Fix running of the selinux tests: while running the ltp selinux tests on Debian, I found some problems: 1) the testdomain attribute cannot have setcurrent permission to itself. This is because in Debian refpolicy, only domains with attribute set_curr_context can have setcurrent permission on own processes (otherwise, it's forbidden by neverallow). And AFAIK, it's impossible to specify that domains having attribute testdomain also have attribute set_curr_context. Moreover, I found only two tests (dyntrans and dyntrace) that actually need it so far, so I'm not convinced it has to be granted globally. 2) the testscripts (eg. selinux_file.sh) have the test_file_t context, but they are to be run as sysadm_t. Sysadm_t therefore needs execute_no_trans permission on the test files. Please correct me if I'm wrong. - allow sysadm_t execute_no_trans on test_file_t to allow him to run the test shell scripts - get rid of setexec permission for testdomain, it conflicts with refpolicy and AFAIK is unneeded. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te

40) Log Message:

README: update kernel config for cgroup testing: lockdep is needed in one of the testcases in cgroup regression test. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified Files:
ltp/README

41) Log Message:
Fix fsync02 usage on filesystems which have undefined amount of free space: "Fields that are undefined for a particular file system are set to 0". Note that if it's ramfs or tmpfs with -o nr_blocks=0, there is no such thing as "amount of free space", reserved for root or not. - Al Viro. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/fsync/fsync02.c

42) Log Message:
Delete the change_owner binary, as it is an insecure suid root binary; rewrite tests that use it: This patch is based on Jiri's change_owner patch. I removed references in runtest/syscalls and fix some coding style violations. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/chmod/Makefile
ltp/testcases/kernel/syscalls/chmod/chmod05.c
ltp/testcases/kernel/syscalls/chmod/chmod06.c
ltp/testcases/kernel/syscalls/chown/Makefile
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/chown/chown04.c
ltp/testcases/kernel/syscalls/fchmod/Makefile
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchown/Makefile
ltp/testcases/kernel/syscalls/fchown/fchown03.c
ltp/testcases/kernel/syscalls/fchown/fchown04.c

43) Log Message:
The attached patch fixes this bug. This is the bug of the kernel. The following patch has fixed the bug.
commit af76aba00fdcfb21535c9f9872245d14097a4561
Author: Rusty Russell <rusty@rustcorp.com.au>
Date:   Mon Mar 30 22:05:11 2009 -0600
    cpumask: fix seq_bitmap_*() functions.
     1) seq_bitmap_list() should take a const.
     2) All the seq_bitmap should use cpumask_bits().
    Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>
But after applying this patch, Case 5 and 6 still failed. It is because the max size of CPUSET in the glibc is 1024, but the  max size of your kernel is 4096, when we invoke the sched_getaffinity, the kernel will check whether the size of mask passed into the function is >= the size of the mask in the kernel. If not, the function returns -1. So it is not the bug of the tesecase. This patch contains two lib files written by Paul Jackson who is ex-maintainer of cpuset. These two lib files are used for both this bug fix and the testcases that will be added in future. Signed-Off-By: Miao Xie <miaox@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuset_funcs.sh
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/Makefile
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_test.c
ltp/testcases/kernel/controllers/cpuset/cpuset_syscall_test/cpuset_syscall_testset.sh
Added Files:
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/bitmask.h
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/common.h
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/cpuset.h
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/libbitmask.c
ltp/testcases/kernel/controllers/cpuset/cpuset_lib/libcpuset.c

44) Log Message:
Add capability bounding set testcases, to verify the following:
        1. prctl(CAP_BSET_READ, 0..NCAPS) returns 1
        2. prctl(CAP_BSET_READ, -1|NCAPS+1) return -1
        3. prctl(CAP_BSET_DROP, -1|NCAPS+1) returns -1
        4. prctl(CAP_BSET_DROP, 0..NCAPS) returns 1
           4b. prctl(CAP_BSET_READ, N) returns 0 after each unset, 1 for those not yet removed
        5. fI=empty; N \notin pP; prctl(CAPBSET_DROP, N); setting pI=N fails
        6. pI=N; fI=fE=N; prctl(CAPBSET_DROP, N); exec(f) - N \in pE
                (or make f setuid-root)
        7. pI=0; fI=fE=N; prctl(CAPBSET_DROP, N); exec(f) - N \notin pE
                (or make f setuid-root)
A set of securebits and keepcaps tests have yet to be written (as per an email I sent a few months ago). Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified Files:
ltp/runltp
ltp/testcases/kernel/security/Makefile
Added Files:
ltp/runtest/cap_bounds
ltp/testcases/kernel/security/cap_bound/Makefile
ltp/testcases/kernel/security/cap_bound/cap_bounds_r.c
ltp/testcases/kernel/security/cap_bound/cap_bounds_rw.c
ltp/testcases/kernel/security/cap_bound/cap_bset_inh_bounds.c
ltp/testcases/kernel/security/cap_bound/check_for_libcap.sh
ltp/testcases/kernel/security/cap_bound/check_pe.c
ltp/testcases/kernel/security/cap_bound/dummy.c
ltp/testcases/kernel/security/cap_bound/exec_with_inh.c
ltp/testcases/kernel/security/cap_bound/exec_without_inh.c
ltp/testcases/kernel/security/cap_bound/run_capbounds.sh

45) Log Message:
Exit in testsf_s6 when host lookup fails to prevent segfaults later. Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/ipv6/sendfile6/testsf_s6.c

46) Log Message:
Fix collateral damage caused by recent coding style cleanups. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

47) Log Message:
This patch is a rewrite of symlinkat and linkat tests aimed to: 
 - simplify the code
 - cease using the current directory for testfiles
Hope this applies, since I'm sending this from a weekly (er.. monthly) version of Opera. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/linkat/linkat01.c
ltp/testcases/kernel/syscalls/symlinkat/symlinkat01.c

48) Log Message:
fallocate tests call syscall() incorrectly for 32-bit powerpc. Signed-off-by: Dave Kleikamp <shaggy@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c

49) Log Message:
IMA update openssl-devel existence test: Verify the existence of openssl/sha.h not libcrypto, which is included in multiple packages, to determine if openssl-devel is installed. Signed-off-by: Mimi Zohar <zohar@us.ibm.com>. Acked-by: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/m4/ltp-crypto.m4

50) Log Message:
Reverting Jiri Palecek <jpalecek@web.de> patch: <SUBJECT: Fix running of the selinux tests>, as Stephen Smalley <sds@tycho.nsa.gov> objected as: NAK to this one as well - if you look at the commented-out line immediately following the setcurrent one, you'll see what you need to do to make this work _if_ you aren't following the README instructions in the first place.  sysadm_t one might be valid due to tightening of sysadm_t in more modern refpolicy, but just revert the patch for now please and await an ack on future ones.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te

51) Log Message:
Reverting "Christopher J. PeBenito" <cpebenito@tresys.com> patch: <SUBJECT: LTP SELinux policy error> applied on 02-02-2009, as, Stephen Smalley <sds@tycho.nsa.gov> objected as: Subrata - this patch never should have been applied.  Chris said that it was incomplete, and I noted that it conflicted with Serge's conditionally applied patch.  Please revert this, as it breaks the selinux ltp testsuite and the resulting policy will not build.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_exectrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ipc.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_wait.te

LTP-20090331

1) Log Message:
Addition of CONTROLLER AREA NETWORK tests to LTP. Signed-Off-By: Oliver Hartkopp <oliver.hartkopp@volkswagen.de>.

Added Files:
ltp/testcases/network/can/filter-tests/00_Descriptions.txt
ltp/testcases/network/can/filter-tests/INSTALL
ltp/testcases/network/can/filter-tests/Makefile
ltp/testcases/network/can/filter-tests/canecho.c
ltp/testcases/network/can/filter-tests/run_ltp-can_tests.sh
ltp/testcases/network/can/filter-tests/tst-bcm-cycle.c
ltp/testcases/network/can/filter-tests/tst-bcm-dump.c
ltp/testcases/network/can/filter-tests/tst-bcm-filter.c
ltp/testcases/network/can/filter-tests/tst-bcm-rtr.c
ltp/testcases/network/can/filter-tests/tst-bcm-rx-sendto.c
ltp/testcases/network/can/filter-tests/tst-bcm-server.c
ltp/testcases/network/can/filter-tests/tst-bcm-single.c
ltp/testcases/network/can/filter-tests/tst-bcm-throttle.c
ltp/testcases/network/can/filter-tests/tst-bcm-tx-sendto.c
ltp/testcases/network/can/filter-tests/tst-bcm-tx_read.c
ltp/testcases/network/can/filter-tests/tst-err.c
ltp/testcases/network/can/filter-tests/tst-filter-master.c
ltp/testcases/network/can/filter-tests/tst-filter-server.c
ltp/testcases/network/can/filter-tests/tst-packet.c
ltp/testcases/network/can/filter-tests/tst-proc.c
ltp/testcases/network/can/filter-tests/tst-raw-filter.c
ltp/testcases/network/can/filter-tests/tst-raw-sendto.c
ltp/testcases/network/can/filter-tests/tst-raw.c

2) Log Message:
Add LTP Command File for CAN Filter Tests. Signed-Off-By: Oliver Hartkopp <oliver.hartkopp@volkswagen.de>.

Added Files:
ltp/runtest/can

3) Log Message:
Add Info For Running CAN tests in runalltests.sh. Signed-Off-By: Oliver Hartkopp <oliver.hartkopp@volkswagen.de>.

Modified Files:
ltp/runalltests.sh

4) Log Message:
Add Kernel Config Options for CAN tests. Signed-Off-By: Oliver Hartkopp <oliver.hartkopp@volkswagen.de>.

Modified Files:
ltp/README

5) Log Message:
[PATCH 1/4] ltp: posix message queue namespaces: first test: Add the first test for posix message queue namespaces, plus a test to detect whether they are enabled. Note that the kernel version check is currently bogus - these are are in -mm. Based on older version by Nadia Derbey.
Changelog:
        Mar 02 2009: moved to the libclone do_clone() helper.
Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>,
Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified Files:
ltp/README
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/README
ltp/testcases/kernel/containers/container_test.sh
Added Files:
ltp/testcases/kernel/containers/mqns/Makefile
ltp/testcases/kernel/containers/mqns/check_mqns_enabled.c
ltp/testcases/kernel/containers/mqns/mqns.h
ltp/testcases/kernel/containers/mqns/mqns_01.c
ltp/testcases/kernel/containers/mqns/runmqnstest.sh

6) Log Message:
[PATCH 2/4] ltp: posix mqns: test parent to child mq access: It's kind of redundant with test 01 since there is no hierarchical relationship between ipc namespaces - they are all completely isolated. But heck it can't hurt. 
Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>,
Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/mqns/runmqnstest.sh
Added Files:
ltp/testcases/kernel/containers/mqns/mqns_02.c

7) Log Message:
[PATCH 3/4] ltp: posix mqns: test vfs and mq interaction: Test that the interaction between mqueuefs and ipc namespaces is correct (one mqueuefs for each ipc namespace, living at least as long as the namespace). Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/mqns/mqns.h
ltp/testcases/kernel/containers/mqns/runmqnstest.sh
Added Files:
ltp/testcases/kernel/containers/mqns/mqns_03.c

8) Log Message:
[PATCH 4/4] ltp: posix mqns: test that user mount of posixmq survives the ipcns: If the mqueuefs for a ipc namespace is mounted in a mounts namespace which outlives the ipcns, then the view of the fs remains valid until someone umounts it.  Run some tests to make sure that all is sane. Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/mqns/mqns.h
ltp/testcases/kernel/containers/mqns/runmqnstest.sh
Added Files:
ltp/testcases/kernel/containers/mqns/mqns_04.c

9) Log Message:
Make the acpi device-driver test compilable with Linux kernel 2.6.28. Completely drop supporting older kernels which are not compatible with 2.6.28. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified File(s):
ltp/testcases/kernel/device-drivers/acpi/LtpAcpiCmds.c
ltp/testcases/kernel/device-drivers/acpi/LtpAcpiMain.c
ltp/testcases/kernel/device-drivers/acpi/Makefile

10) Log Message:
Replace ARCH_i386 with __i386__: Because of compilation fault for non x86 arch. (In my case for Microblaze cpu). Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified File(s):
ltp/testcases/kernel/sched/hyperthreading/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTenabled.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTinterrupt.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTutils.c

11) Log Message:
[Patch 1/5]Library of reusable functions for Power Management testing: Library of reusable functions modified. Few more functions implemented to support sched domain validation. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

12) Log Message:
[PATCH 02/05]: Patch to implement test case to validate sched domain tree: Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/sched_domain.py

13) Log Message:
Patch to integrate sched domain testcase to LTP: Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/Makefile
ltp/testcases/kernel/power_management/runpwtests.sh

14) Log Message:
Patch for modified cpu_consolidation testcase: Patch for for cpu_consolidation testcase modified w.r.t new function calls and review comments by developers. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

15) Log Message:
Patch to fix cpufreq governor load and unload. Signed-Off-By: Poornima nayak <mpnayak@linux.vnet.ibm.com>. 

Modified Files:
ltp/testcases/kernel/power_management/pwkm_load_unload.sh

16) Log Message:
Calculate the allowed latency dynamicaly for cpu controller latency tests: This patch adds the proper logic for calculating the allowed value of latency that is being used as the PASS/FAIL criterion in cpuctl latency testcases. Signed-off-by Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/cpuctl/cpuctl_latency_check_task.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_testplan.txt
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_latency_test.sh

17) Log Message:
INOTIFY02: add warning about bug: we have many messages about this bug in mail lists. Signed-Off-BY: Andrew Vagin <avagin@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify02.c

18) Log Message:
Patch for enabling the ftruncate04 testcase:
-add mount mandatory option to enable test run. this test case doesn't work almost all the time we use it.
-modified ftruncate04.c for the situation when the /tmp(or other test) directory is in a LVM filesystem where there are three output lines
-modified ltp-full-20081031/runtest/syscalls and testcases/kernel/syscalls/ftruncate/Makefile to make this testcase can be started by the two new added script ftruncate.sh and ftruncate_64.sh.
Signed-off-by : fredrick he <fhe@novell.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
Added Files:
ltp/testcases/kernel/syscalls/ftruncate/ftruncate.sh
ltp/testcases/kernel/syscalls/ftruncate/ftruncate_64.sh

19) Log Message:
utimensat testcase: do kernel version check at build time: I'd like to submit a change to be done on utimensat testcase. This test performs a kernel version check both at build time and  runtime. At build time, the test performs a check at makefile level. The same check is also repeated in the "install" target of the same Makefile. Moreover, at runtime the script "utimensat_tests.sh" used to run the test (by standard runltp script) performs again the same check. Now, my opinion about that is the following:
1) for i386 arch: One of the above checks should be removed.
2) for cross-build: The above structure of the test is really a problem. In fact, at build time the Makefile (as it is) cross-builds (by ${CC} env var.) the binary "check_for_utimensat_support" which, clearly, can't be executed on the host side (even though it will detect the "host" kernel version and not the "target" ones!). I cross-build & run LTP on SH based archs so that the utimensat testcase failed at runtime as the binary utimensat01 wasn't copied to $LTPROOT/testcases/bin due to error on "check_for_utimensat_support" execution (Exec format error. Wrong Architecture). I've solved the above problem disabling the check of the kernel version at build time (removing the check on the Makefile). I keep only the check at runtime. Signed-Off-By: Francesco RUNDO <francesco.rundo@st.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/Makefile

20) Log Message:
lcov: improve function name filtering. Only remove those characters from function names which would conflict with internal delimiters. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

21) Log Message:
pselect01 & nanosleep02: Warnings about Syscall Execution Time: This patch addes warnings in pselect01 and nanosleep02 test cases that the certain failures may due to the limitation of the way it calculates the system call execution time. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/pselect/pselect01.c

22) Log Message:
Proc01: Check Both SELinux Libraries and Headers v3: Version 3 fixes line wrapping problem and adds more comments. This late patch is to address Masatake YAMATO's concern for,
<1> selinux.h is available, but libselinux is not.
<2> libselinux is available, but selinux.h is not.
Therefore, we only set HAVE_LIBSELINUX_DEVEL when all libraries and headers are available. Signed-off-by: Masatake YAMATO <yamato@redhat.com>, Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modifies File(s):
ltp/m4/ltp-selinux.m4
ltp/testcases/kernel/fs/proc/proc01.c

23) Log Message:
Stress script to load all modules: In testing one of the distros (unreleased), i recently discovered a problem where the kernel hangs while loading all the modules sequentially. This was a random testing conducted through the following simple script. The distro kernel hanged in several instances of testing, and, the machine had to be rebooted each time. When i verified the same script through some other already stable distros, i found that those stable kernels handle the situation well by not laoding those modules for which controllers does not exist. Module loading errors were expected, nevertheless i expected the kernel to hang each time this script executed. I thought this could be a good stress generation script for any system. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Added Files:
ltp/testscripts/load_stress_all_kernel_modules.sh

24) Log Message:
This is the v4l-test 0.9 for LTP patch. Changes: Test cases added for VIDIOC_S_CROP. Test steps added for VIDIOC_S_CTRL. Signed-Off-By: Márton Németh <nm127@freemail.hu>.

Modified File(s):
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/video_limits.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html

25) Log Message:
Formatted the 'ls -l' command for testcase #22, which verifies the verbose output of 'ar' against a formatted 'ls -l' of file1.in, file2.in, and file3.in.

Modified File(s):
ltp/testcases/commands/ade/ar/ar01

26) Log Message:
Fixed test #17 that tests the -s flag to regenerate the symbol table.  It was incorrectly testing for this by reading block size. The simple solution was to compare file size before running 'strip', after running 'strip and 'ar -s'.  I suppose a more "elegant" solution would be to use 'nm'. Also removed an irrelevant use of the "-t" flag in test #17.

Modified File(s):
ltp/testcases/commands/ade/ar/ar01

27) Log Message:
Symlink01: Not Run Invalid Tests v2: Renumber testcases in the symlink01 file, reflecting some added tests: http://article.gmane.org/gmane.linux.ltp/6987. Enabled 2 seems invalid tests, which caused link01 and rename01A test cases failure,Looking from the code, the first failure looks indeed broken according to its own comment,The second one is because it makes assumption that the link and target files are located in different filesystems, which is incorrect.This patch reverts some parts of the above patch, and return it to its original behavior. I have also added some comments there to explain so. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/symlink/symlink01.c

28) Log Message:
Sysconf01: Fix Wrong Errno v2: This patch fixes an error that use the return of the function instead of errno. In addition, errno has been saved first to avoid to be changed by tst_resm(). Signed-off-by: CAI Qian <caiqian@cclom.cn>. 

Modified Files:
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c

29) Log Message:
Ln_test01 & Unzip01: Fix Bugs v2: The patch fixes 2 bugs. The first one is in ln_test01, which always failed due to the expected result file is wrongly generated,The second one is in unzip01 caused by the recently introduced Makefile change named: http://article.gmane.org/gmane.linux.ltp/7635. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/commands/fileutils/ln/ln_tests.sh
ltp/testcases/commands/unzip/Makefile

30) Log Message:
Fixed testcase #19 in a similar manner as #17.

Modified File(s):
ltp/testcases/commands/ade/ar/ar01

31) Log Message:
Modified two scripts ftruncate.sh and ftruncate_64.sh to improvement this testcase. Signed-off-by : fredrick he <fhe@novell.com>, Acked-By: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/ftruncate/ftruncate.sh
ltp/testcases/kernel/syscalls/ftruncate/ftruncate_64.sh

32) Log Message:
The epoll-ltp testcase tests zero size argument to epoll_create and reports that particular case as a failure if the kernel returned a positive integer. According to 'man epoll_create', this size argument is actually ignored and the kernel dynamically sizes the required data structures. Hence removing this check in epoll-ltp testcase. Signed-Off-By: Chandru S <chandru@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/epoll/epoll-ltp.c

33) Log Message:
Writev06: Fix Error Checking for mmap(): Sometimes, writev06 test case failed due to receiving a SIGSEGV signal. The test gives too little information to figure it out what might be wrong. This failure is not always reproducible, and I have seen the SIGSEGV has just arrived after a few mmap() calls. The following patch makes it easier to debug this type of failure by fixing error checking code for mmap() calls. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/writev/writev06.c

34) Log Message:
Writev06: Fix Error Checking for mmap() v2: Sometimes, writev06 test case failed due to receiving a SIGSEGV signal. This is due to out of range access of array. In addition, The test gives too little information to figure it out what might be wrong. The following patch makes it easier to debug this type of failure by fixing error checking code for mmap() calls. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/writev/writev06.c

35) Log Message:
The following patch named: [PATCH 3/6] Integrate the File System Permissions Tests in to Default LTP run, http://article.gmane.org/gmane.linux.ltp/6875. Added fs_perm test case to the default run, but it failed to execute properly. The following patch fixes it by installing a needed binary. Signed-off-by: CAI Qian <caiqian@redhat.com>, Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>,

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/Makefile
ltp/testcases/kernel/fs/fs_perms/fs_perms.c
ltp/testcases/kernel/fs/fs_perms/fs_perms_simpletest.sh

36) Log Message:
Pipeio: Fix Error Use of Semctl(2): [PATCH] aio and nonblocking io in tlibio.c and pipeio.c, http://article.gmane.org/gmane.linux.ltp/6643, unfortunately introduced a segmentation fault on PPC64.
# ./pipeio -T pipeio_1 -c 5 -s 4090 -i 100 -b -f x80
Segmentation fault
This is due to the error use of semctl(2) pointed by Jakub Jelinek. The testcase is buggy. See man 3p semctl: The semctl() function provides a variety of semaphore control operations as specified by cmd. The fourth argument is optional and depends upon the operation requested. If you fix the testcase up, it works just fine. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/ipc/pipeio/pipeio.c

37) Log Message:
This patch is to fix the 2 further issues apart from the patch I sent out yestoday: [PATCH] Fs_perms: Miss Installing a Binary. Fs_perms test always gives false failure. This is because in the script, it returns whatever the last "fs_perms" command returns. In the case, if "fs_perms" passes, it will return "1" (it returns whatever the expected result specificed. That is 1 here). The patch fixes it by validating the return code of every "fs_perms" command, and returns the final result at the end of the main script -- fs_perms_simpletest.sh. The other issue is that, some tests need to access files in "${LTPROOT}/testcases/bin" directory. For example, "fs_perms" and "fs_racer". As the result, if we are running the tests outside of that directory through "pan" alone, "runltp.sh" or "runltplite.sh", those tests are not running properly. The patch fixes it in both "runltp.sh" and "runltplite.sh" by changing the current working directory to the "bin" just before running "pan", and restore it back. However, the problem still exist if running those tests by "pan" alone not through either "runltp.sh" or "runltplite.sh". This patch has been tested by running the most of LTP tests through "runltp.sh" without seen any negative affect. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/runltp
ltp/runltplite.sh
ltp/testcases/kernel/fs/fs_perms/fs_perms_simpletest.sh

38) Log Message:
v4l-test 0.10 for LTP: Changes: Test cases added for VIDIOC_G_PARM. Duplicated test for V4L2_BUF_TYPE_VIDEO_CAPTURE removed in VIDIOC_ENUM_FMT test. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PARM.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PARM.h

39) Log Message:
Fs_perms & Runltp: Fix 2 Issues: Subrata, can you apply the following to revert this part of patch that you made previous? I don't think we need this part yet after all other related patches applied. In addition, it causes the test failed to run from the its own directory, which we could test it there before. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/fs/fs_perms/fs_perms.c

40) Log Message:
Fallocate: Use TCONF instead of TWARN: This patch fixes TWARN with TCONF to indicate the system does not support those test cases. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c

41) Log Message:
Execve04: No Such File: Execve04 test case can fail due to the required file not found. It because it uses a relative path, so it depends on where to run the test. This patch fixes it by using a absolute path, and also make sure it can handle a long name. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/execve/execve04.c

42) Log Message:
Realtime: fix testpi2 parser from invalid index type error: realtime: fix testpi2 parser from invalid index type error. Signed-off-by: Gowrishankar M <gowrishankar.m@in.ibm.com>, Tested-by: Gowrishankar M <gowrishankar.m@in.ibm.com>, Acked-by: Vernon Mauery <vernux@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/pi-tests/parse-testpi2.py

43) Log Message:
Cleanup user space device-driver Makefiles: Signed-Off-By: Németh Márton <nm127@freemail.hu>.

Modified File(s):
ltp/testcases/kernel/device-drivers/agp/user_space/Makefile
ltp/testcases/kernel/device-drivers/base/user_base/Makefile
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/Makefile
ltp/testcases/kernel/device-drivers/pci/user_tpci/Makefile
ltp/testcases/kernel/device-drivers/tbio/user_space/Makefile
ltp/testcases/kernel/device-drivers/usb/user_usb/Makefile

44) Log Message:
Coding Syle Cleanups. Signed-Off-By: <michal.simek@petalogix.com>.

Modified Files:
ltp/testcases/kernel/syscalls/abort/abort01.c
ltp/testcases/kernel/syscalls/accept/accept01.c
ltp/testcases/kernel/syscalls/accept4/accept4_01.c
ltp/testcases/kernel/syscalls/access/access01.c
ltp/testcases/kernel/syscalls/access/access02.c
ltp/testcases/kernel/syscalls/access/access03.c
ltp/testcases/kernel/syscalls/access/access04.c
ltp/testcases/kernel/syscalls/access/access05.c
ltp/testcases/kernel/syscalls/acct/acct01.c
ltp/testcases/kernel/syscalls/acct/acct02.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex01.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex02.c
ltp/testcases/kernel/syscalls/alarm/alarm01.c
ltp/testcases/kernel/syscalls/alarm/alarm02.c
ltp/testcases/kernel/syscalls/alarm/alarm03.c
ltp/testcases/kernel/syscalls/alarm/alarm05.c
ltp/testcases/kernel/syscalls/alarm/alarm06.c
ltp/testcases/kernel/syscalls/alarm/alarm07.c
ltp/testcases/kernel/syscalls/asyncio/asyncio02.c
ltp/testcases/kernel/syscalls/bind/bind01.c
ltp/testcases/kernel/syscalls/bind/bind02.c
ltp/testcases/kernel/syscalls/brk/brk01.c
ltp/testcases/kernel/syscalls/capget/capget01.c
ltp/testcases/kernel/syscalls/capget/capget02.c
ltp/testcases/kernel/syscalls/capset/capset01.c
ltp/testcases/kernel/syscalls/capset/capset02.c
ltp/testcases/kernel/syscalls/chdir/chdir01.c
ltp/testcases/kernel/syscalls/chdir/chdir02.c
ltp/testcases/kernel/syscalls/chdir/chdir03.c
ltp/testcases/kernel/syscalls/chdir/chdir04.c
ltp/testcases/kernel/syscalls/chmod/change_owner.c
ltp/testcases/kernel/syscalls/chmod/change_owner.mode.sh
ltp/testcases/kernel/syscalls/chmod/chmod01.c
ltp/testcases/kernel/syscalls/chmod/chmod02.c
ltp/testcases/kernel/syscalls/chmod/chmod03.c
ltp/testcases/kernel/syscalls/chmod/chmod04.c
ltp/testcases/kernel/syscalls/chmod/chmod05.c
ltp/testcases/kernel/syscalls/chmod/chmod06.c
ltp/testcases/kernel/syscalls/chmod/chmod07.c
ltp/testcases/kernel/syscalls/chown/change_owner.c
ltp/testcases/kernel/syscalls/chown/change_owner.mode.sh
ltp/testcases/kernel/syscalls/chown/chown01.c
ltp/testcases/kernel/syscalls/chown/chown02.c
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/chown/chown04.c
ltp/testcases/kernel/syscalls/chown/chown05.c
ltp/testcases/kernel/syscalls/chroot/chroot01.c
ltp/testcases/kernel/syscalls/chroot/chroot02.c
ltp/testcases/kernel/syscalls/chroot/chroot03.c
ltp/testcases/kernel/syscalls/chroot/chroot04.c
ltp/testcases/kernel/syscalls/clone/clone01.c
ltp/testcases/kernel/syscalls/clone/clone02.c
ltp/testcases/kernel/syscalls/clone/clone03.c
ltp/testcases/kernel/syscalls/clone/clone04.c
ltp/testcases/kernel/syscalls/clone/clone05.c
ltp/testcases/kernel/syscalls/clone/clone06.c
ltp/testcases/kernel/syscalls/clone/clone07.c
ltp/testcases/kernel/syscalls/close/close01.c
ltp/testcases/kernel/syscalls/close/close02.c
ltp/testcases/kernel/syscalls/close/close08.c
ltp/testcases/kernel/syscalls/confstr/confstr01.c
ltp/testcases/kernel/syscalls/connect/connect01.c
ltp/testcases/kernel/syscalls/creat/creat01.c
ltp/testcases/kernel/syscalls/creat/creat03.c
ltp/testcases/kernel/syscalls/creat/creat04.c
ltp/testcases/kernel/syscalls/creat/creat05.c
ltp/testcases/kernel/syscalls/creat/creat06.c
ltp/testcases/kernel/syscalls/creat/creat07.c
ltp/testcases/kernel/syscalls/creat/creat08.c
ltp/testcases/kernel/syscalls/creat/creat09.c
ltp/testcases/kernel/syscalls/creat/test1.c
ltp/testcases/kernel/syscalls/dup/dup01.c
ltp/testcases/kernel/syscalls/dup/dup02.c
ltp/testcases/kernel/syscalls/dup/dup03.c
ltp/testcases/kernel/syscalls/dup/dup04.c
ltp/testcases/kernel/syscalls/dup/dup05.c
ltp/testcases/kernel/syscalls/dup/dup06.c
ltp/testcases/kernel/syscalls/dup/dup07.c
ltp/testcases/kernel/syscalls/dup2/dup201.c
ltp/testcases/kernel/syscalls/dup2/dup202.c
ltp/testcases/kernel/syscalls/dup2/dup203.c
ltp/testcases/kernel/syscalls/dup2/dup204.c
ltp/testcases/kernel/syscalls/dup2/dup205.c
ltp/testcases/kernel/syscalls/dup3/dup3_01.c
ltp/testcases/kernel/syscalls/epoll/README.1ST
ltp/testcases/kernel/syscalls/epoll/epoll-ltp.c
ltp/testcases/kernel/syscalls/epoll2/examples/epoll-test.c
ltp/testcases/kernel/syscalls/epoll2/man/epoll.4
ltp/testcases/kernel/syscalls/epoll2/man/epoll_create.2
ltp/testcases/kernel/syscalls/epoll2/man/epoll_ctl.2
ltp/testcases/kernel/syscalls/epoll2/man/epoll_wait.2
ltp/testcases/kernel/syscalls/epoll2/src/epoll.c
ltp/testcases/kernel/syscalls/epoll_create1/epoll_create1_01.c
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_02.c
ltp/testcases/kernel/syscalls/execl/execl01.c
ltp/testcases/kernel/syscalls/execle/execle01.c
ltp/testcases/kernel/syscalls/execlp/execlp01.c
ltp/testcases/kernel/syscalls/execv/execv01.c
ltp/testcases/kernel/syscalls/execve/execve01.c
ltp/testcases/kernel/syscalls/execve/execve02.c
ltp/testcases/kernel/syscalls/execve/execve03.c
ltp/testcases/kernel/syscalls/execve/execve04.c
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/execve/execve06.c
ltp/testcases/kernel/syscalls/execvp/execvp01.c
ltp/testcases/kernel/syscalls/exit/exit01.c
ltp/testcases/kernel/syscalls/exit/exit02.c
ltp/testcases/kernel/syscalls/faccessat/faccessat01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fchdir/fchdir01.c
ltp/testcases/kernel/syscalls/fchdir/fchdir02.c
ltp/testcases/kernel/syscalls/fchdir/fchdir03.c
ltp/testcases/kernel/syscalls/fchmod/change_owner.c
ltp/testcases/kernel/syscalls/fchmod/change_owner.mode.sh
ltp/testcases/kernel/syscalls/fchmod/fchmod01.c
ltp/testcases/kernel/syscalls/fchmod/fchmod02.c
ltp/testcases/kernel/syscalls/fchmod/fchmod03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod04.c
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchmod/fchmod07.c
ltp/testcases/kernel/syscalls/fchmodat/fchmodat01.c
ltp/testcases/kernel/syscalls/fchown/change_owner.mode.sh
ltp/testcases/kernel/syscalls/fchownat/fchownat01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl02.c
ltp/testcases/kernel/syscalls/fcntl/fcntl03.c
ltp/testcases/kernel/syscalls/fcntl/fcntl04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl05.c
ltp/testcases/kernel/syscalls/fcntl/fcntl06.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07B.c
ltp/testcases/kernel/syscalls/fcntl/fcntl08.c
ltp/testcases/kernel/syscalls/fcntl/fcntl09.c
ltp/testcases/kernel/syscalls/fcntl/fcntl10.c
ltp/testcases/kernel/syscalls/fcntl/fcntl11.c
ltp/testcases/kernel/syscalls/fcntl/fcntl12.c
ltp/testcases/kernel/syscalls/fcntl/fcntl13.c
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl15.c
ltp/testcases/kernel/syscalls/fcntl/fcntl16.c
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c
ltp/testcases/kernel/syscalls/fcntl/fcntl18.c
ltp/testcases/kernel/syscalls/fcntl/fcntl19.c
ltp/testcases/kernel/syscalls/fcntl/fcntl20.c
ltp/testcases/kernel/syscalls/fcntl/fcntl21.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync01.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync02.c
ltp/testcases/kernel/syscalls/flock/flock01.c
ltp/testcases/kernel/syscalls/flock/flock02.c
ltp/testcases/kernel/syscalls/flock/flock03.c
ltp/testcases/kernel/syscalls/flock/flock04.c
ltp/testcases/kernel/syscalls/flock/flock05.c
ltp/testcases/kernel/syscalls/flock/flock06.c
ltp/testcases/kernel/syscalls/fmtmsg/fmtmsg01.c
ltp/testcases/kernel/syscalls/fork/fork01.c
ltp/testcases/kernel/syscalls/fork/fork02.c
ltp/testcases/kernel/syscalls/fork/fork03.c
ltp/testcases/kernel/syscalls/fork/fork04.c
ltp/testcases/kernel/syscalls/fork/fork05.c
ltp/testcases/kernel/syscalls/fork/fork06.c
ltp/testcases/kernel/syscalls/fork/fork07.c
ltp/testcases/kernel/syscalls/fork/fork08.c
ltp/testcases/kernel/syscalls/fork/fork09.c
ltp/testcases/kernel/syscalls/fork/fork10.c
ltp/testcases/kernel/syscalls/fork/fork11.c
ltp/testcases/kernel/syscalls/fork/fork12.c
ltp/testcases/kernel/syscalls/fpathconf/fpathconf01.c
ltp/testcases/kernel/syscalls/fstat/fstat01.c
ltp/testcases/kernel/syscalls/fstat/fstat02.c
ltp/testcases/kernel/syscalls/fstat/fstat03.c
ltp/testcases/kernel/syscalls/fstat/fstat04.c
ltp/testcases/kernel/syscalls/fstat/fstat05.c
ltp/testcases/kernel/syscalls/fstatat/fstatat01.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs01.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs02.c
ltp/testcases/kernel/syscalls/fsync/fsync01.c
ltp/testcases/kernel/syscalls/fsync/fsync02.c
ltp/testcases/kernel/syscalls/fsync/fsync03.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate03.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/get_robust_list/get_robust_list01.c
ltp/testcases/kernel/syscalls/getcontext/getcontext01.c
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c
ltp/testcases/kernel/syscalls/getcwd/getcwd01.c
ltp/testcases/kernel/syscalls/getcwd/getcwd02.c
ltp/testcases/kernel/syscalls/getcwd/getcwd03.c
ltp/testcases/kernel/syscalls/getdents/getdents01.c
ltp/testcases/kernel/syscalls/getdents/getdents02.c
ltp/testcases/kernel/syscalls/getdents/getdents03.c
ltp/testcases/kernel/syscalls/getdents/getdents04.c
ltp/testcases/kernel/syscalls/getdomainname/getdomainname01.c
ltp/testcases/kernel/syscalls/getdtablesize/getdtablesize01.c
ltp/testcases/kernel/syscalls/getegid/getegid01.c
ltp/testcases/kernel/syscalls/getegid/getegid02.c
ltp/testcases/kernel/syscalls/geteuid/geteuid01.c
ltp/testcases/kernel/syscalls/getgid/getgid01.c
ltp/testcases/kernel/syscalls/getgid/getgid03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups01.c
ltp/testcases/kernel/syscalls/getgroups/getgroups02.c
ltp/testcases/kernel/syscalls/getgroups/getgroups03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups04.c
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c
ltp/testcases/kernel/syscalls/gethostname/gethostname01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer02.c
ltp/testcases/kernel/syscalls/getitimer/getitimer03.c
ltp/testcases/kernel/syscalls/getpagesize/getpagesize01.c
ltp/testcases/kernel/syscalls/getpeername/getpeername01.c
ltp/testcases/kernel/syscalls/getpgid/getpgid01.c
ltp/testcases/kernel/syscalls/getpgid/getpgid02.c
ltp/testcases/kernel/syscalls/getpgrp/getpgrp01.c
ltp/testcases/kernel/syscalls/getpid/getpid01.c
ltp/testcases/kernel/syscalls/getpid/getpid02.c
ltp/testcases/kernel/syscalls/getppid/getppid01.c
ltp/testcases/kernel/syscalls/getppid/getppid02.c
ltp/testcases/kernel/syscalls/getpriority/getpriority01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid01.c
ltp/testcases/kernel/syscalls/getresgid/getresgid02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid03.c
ltp/testcases/kernel/syscalls/getresuid/getresuid01.c
ltp/testcases/kernel/syscalls/getresuid/getresuid02.c
ltp/testcases/kernel/syscalls/getresuid/getresuid03.c
ltp/testcases/kernel/syscalls/getrlimit/getrlimit01.c
ltp/testcases/kernel/syscalls/getrlimit/getrlimit02.c
ltp/testcases/kernel/syscalls/getrusage/getrusage01.c
ltp/testcases/kernel/syscalls/getrusage/getrusage02.c
ltp/testcases/kernel/syscalls/getsid/getsid01.c
ltp/testcases/kernel/syscalls/getsid/getsid02.c
ltp/testcases/kernel/syscalls/getsockname/getsockname01.c
ltp/testcases/kernel/syscalls/getsockopt/getsockopt01.c
ltp/testcases/kernel/syscalls/gettid/gettid01.c
ltp/testcases/kernel/syscalls/gettimeofday/gettimeofday01.c
ltp/testcases/kernel/syscalls/gettimeofday/gettimeofday02.c
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/getuid/getuid02.c
ltp/testcases/kernel/syscalls/getuid/getuid03.c
ltp/testcases/kernel/syscalls/inotify/README
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c
ltp/testcases/kernel/syscalls/inotify/inotify03.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_01.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_02.c
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c
ltp/testcases/kernel/syscalls/ioctl/ioctl03.c
ltp/testcases/kernel/syscalls/ioctl/test_ioctl
ltp/testcases/kernel/syscalls/ioperm/ioperm01.c
ltp/testcases/kernel/syscalls/ioperm/ioperm02.c
ltp/testcases/kernel/syscalls/iopl/iopl01.c
ltp/testcases/kernel/syscalls/iopl/iopl02.c
ltp/testcases/kernel/syscalls/ipc/lib/libipc.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl01.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl02.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl03.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl04.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl05.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl06.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl10.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget01.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget02.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget03.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv01.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv02.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv03.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd01.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd02.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd03.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd04.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl02.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl03.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl04.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl05.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl07.c
ltp/testcases/kernel/syscalls/ipc/semget/semget01.c
ltp/testcases/kernel/syscalls/ipc/semget/semget02.c
ltp/testcases/kernel/syscalls/ipc/semget/semget03.c
ltp/testcases/kernel/syscalls/ipc/semget/semget05.c
ltp/testcases/kernel/syscalls/ipc/semget/semget06.c
ltp/testcases/kernel/syscalls/ipc/semop/semop01.c
ltp/testcases/kernel/syscalls/ipc/semop/semop02.c
ltp/testcases/kernel/syscalls/ipc/semop/semop03.c
ltp/testcases/kernel/syscalls/ipc/semop/semop04.c
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl02.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl04.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt01.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget01.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget03.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget04.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget05.c
ltp/testcases/kernel/syscalls/kill/kill01.c
ltp/testcases/kernel/syscalls/kill/kill02.c
ltp/testcases/kernel/syscalls/kill/kill03.c
ltp/testcases/kernel/syscalls/kill/kill04.c
ltp/testcases/kernel/syscalls/kill/kill05.c
ltp/testcases/kernel/syscalls/kill/kill06.c
ltp/testcases/kernel/syscalls/kill/kill07.c
ltp/testcases/kernel/syscalls/kill/kill08.c
ltp/testcases/kernel/syscalls/kill/kill09.c
ltp/testcases/kernel/syscalls/kill/kill10.c
ltp/testcases/kernel/syscalls/kill/kill11.c
ltp/testcases/kernel/syscalls/kill/kill12.c
ltp/testcases/kernel/syscalls/lchown/create_link.c
ltp/testcases/kernel/syscalls/lchown/create_link.mode.sh
ltp/testcases/kernel/syscalls/lchown/lchown01.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c
ltp/testcases/kernel/syscalls/libevent/buffer.c
ltp/testcases/kernel/syscalls/libevent/epoll.c
ltp/testcases/kernel/syscalls/libevent/epoll_sub.c
ltp/testcases/kernel/syscalls/libevent/err.c
ltp/testcases/kernel/syscalls/libevent/evbuffer.c
ltp/testcases/kernel/syscalls/libevent/event.3
ltp/testcases/kernel/syscalls/libevent/event.c
ltp/testcases/kernel/syscalls/libevent/install-sh
ltp/testcases/kernel/syscalls/libevent/kqueue.c
ltp/testcases/kernel/syscalls/libevent/poll.c
ltp/testcases/kernel/syscalls/libevent/rtsig.c
ltp/testcases/kernel/syscalls/libevent/select.c
ltp/testcases/kernel/syscalls/libevent/signal.c
ltp/testcases/kernel/syscalls/libevent/sample/event-test.c
ltp/testcases/kernel/syscalls/libevent/sample/signal-test.c
ltp/testcases/kernel/syscalls/libevent/sample/time-test.c
ltp/testcases/kernel/syscalls/libevent/test/bench.c
ltp/testcases/kernel/syscalls/libevent/test/regress.c
ltp/testcases/kernel/syscalls/libevent/test/test-eof.c
ltp/testcases/kernel/syscalls/libevent/test/test-init.c
ltp/testcases/kernel/syscalls/libevent/test/test-time.c
ltp/testcases/kernel/syscalls/libevent/test/test-weof.c
ltp/testcases/kernel/syscalls/libevent/test/test.sh
ltp/testcases/kernel/syscalls/link/link02.c
ltp/testcases/kernel/syscalls/link/link03.c
ltp/testcases/kernel/syscalls/link/link04.c
ltp/testcases/kernel/syscalls/link/link05.c
ltp/testcases/kernel/syscalls/link/link06.c
ltp/testcases/kernel/syscalls/link/link07.c
ltp/testcases/kernel/syscalls/linkat/linkat01.c
ltp/testcases/kernel/syscalls/listen/listen01.c
ltp/testcases/kernel/syscalls/llseek/llseek01.c
ltp/testcases/kernel/syscalls/llseek/llseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek01.c
ltp/testcases/kernel/syscalls/lseek/lseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek03.c
ltp/testcases/kernel/syscalls/lseek/lseek04.c
ltp/testcases/kernel/syscalls/lseek/lseek05.c
ltp/testcases/kernel/syscalls/lseek/lseek06.c
ltp/testcases/kernel/syscalls/lseek/lseek07.c
ltp/testcases/kernel/syscalls/lseek/lseek08.c
ltp/testcases/kernel/syscalls/lseek/lseek09.c
ltp/testcases/kernel/syscalls/lseek/lseek10.c
ltp/testcases/kernel/syscalls/lstat/lstat01.c
ltp/testcases/kernel/syscalls/lstat/lstat02.c
ltp/testcases/kernel/syscalls/lstat/lstat03.c
ltp/testcases/kernel/syscalls/madvise/madvise01.c
ltp/testcases/kernel/syscalls/madvise/madvise02.c
ltp/testcases/kernel/syscalls/madvise/madvise03.c
ltp/testcases/kernel/syscalls/mallopt/mallopt01.c
ltp/testcases/kernel/syscalls/memcmp/memcmp01.c
ltp/testcases/kernel/syscalls/memcpy/memcpy01.c
ltp/testcases/kernel/syscalls/memmap/mem03.c
ltp/testcases/kernel/syscalls/memset/memset01.c
ltp/testcases/kernel/syscalls/mincore/mincore01.c
ltp/testcases/kernel/syscalls/mincore/mincore02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir01.c
ltp/testcases/kernel/syscalls/mkdir/mkdir02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir03.c
ltp/testcases/kernel/syscalls/mkdir/mkdir04.c
ltp/testcases/kernel/syscalls/mkdir/mkdir05.c
ltp/testcases/kernel/syscalls/mkdir/mkdir08.c
ltp/testcases/kernel/syscalls/mkdir/mkdir09.c
ltp/testcases/kernel/syscalls/mknod/mknod01.c
ltp/testcases/kernel/syscalls/mknod/mknod02.c
ltp/testcases/kernel/syscalls/mknod/mknod03.c
ltp/testcases/kernel/syscalls/mknod/mknod04.c
ltp/testcases/kernel/syscalls/mknod/mknod05.c
ltp/testcases/kernel/syscalls/mknod/mknod06.c
ltp/testcases/kernel/syscalls/mknod/mknod07.c
ltp/testcases/kernel/syscalls/mknod/mknod08.c
ltp/testcases/kernel/syscalls/mknod/mknod09.c
ltp/testcases/kernel/syscalls/mknodat/mknodat01.c
ltp/testcases/kernel/syscalls/mlock/mlock01.c
ltp/testcases/kernel/syscalls/mlock/mlock02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall01.c
ltp/testcases/kernel/syscalls/mlockall/mlockall02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall03.c
ltp/testcases/kernel/syscalls/mmap/mmap001.c
ltp/testcases/kernel/syscalls/mmap/mmap01.c
ltp/testcases/kernel/syscalls/mmap/mmap02.c
ltp/testcases/kernel/syscalls/mmap/mmap03.c
ltp/testcases/kernel/syscalls/mmap/mmap04.c
ltp/testcases/kernel/syscalls/mmap/mmap05.c
ltp/testcases/kernel/syscalls/mmap/mmap06.c
ltp/testcases/kernel/syscalls/mmap/mmap07.c
ltp/testcases/kernel/syscalls/mmap/mmap08.c
ltp/testcases/kernel/syscalls/mmap/mmap09.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt01.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt02.c
ltp/testcases/kernel/syscalls/mount/mount01.c
ltp/testcases/kernel/syscalls/mount/mount02.c
ltp/testcases/kernel/syscalls/mount/mount03.c
ltp/testcases/kernel/syscalls/mount/mount04.c
ltp/testcases/kernel/syscalls/mount/setuid_test.c
ltp/testcases/kernel/syscalls/mount/setuid_test.mode.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages01.c
ltp/testcases/kernel/syscalls/move_pages/move_pages02.c
ltp/testcases/kernel/syscalls/move_pages/move_pages03.c
ltp/testcases/kernel/syscalls/move_pages/move_pages04.c
ltp/testcases/kernel/syscalls/move_pages/move_pages05.c
ltp/testcases/kernel/syscalls/move_pages/move_pages06.c
ltp/testcases/kernel/syscalls/move_pages/move_pages07.c
ltp/testcases/kernel/syscalls/move_pages/move_pages08.c
ltp/testcases/kernel/syscalls/move_pages/move_pages09.c
ltp/testcases/kernel/syscalls/move_pages/move_pages10.c
ltp/testcases/kernel/syscalls/move_pages/move_pages11.c
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.c
ltp/testcases/kernel/syscalls/mprotect/mprotect01.c
ltp/testcases/kernel/syscalls/mprotect/mprotect02.c
ltp/testcases/kernel/syscalls/mprotect/mprotect03.c
ltp/testcases/kernel/syscalls/mremap/mremap01.c
ltp/testcases/kernel/syscalls/mremap/mremap02.c
ltp/testcases/kernel/syscalls/mremap/mremap03.c
ltp/testcases/kernel/syscalls/mremap/mremap04.c
ltp/testcases/kernel/syscalls/msync/msync01.c
ltp/testcases/kernel/syscalls/msync/msync02.c
ltp/testcases/kernel/syscalls/msync/msync03.c
ltp/testcases/kernel/syscalls/msync/msync04.c
ltp/testcases/kernel/syscalls/msync/msync05.c
ltp/testcases/kernel/syscalls/munlock/munlock01.c
ltp/testcases/kernel/syscalls/munlock/munlock02.c
ltp/testcases/kernel/syscalls/munlockall/munlockall01.c
ltp/testcases/kernel/syscalls/munlockall/munlockall02.c
ltp/testcases/kernel/syscalls/munmap/munmap01.c
ltp/testcases/kernel/syscalls/munmap/munmap02.c
ltp/testcases/kernel/syscalls/munmap/munmap03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep01.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep04.c
ltp/testcases/kernel/syscalls/nftw/lib.c
ltp/testcases/kernel/syscalls/nftw/lib64.c
ltp/testcases/kernel/syscalls/nftw/nftw.c
ltp/testcases/kernel/syscalls/nftw/nftw64.c
ltp/testcases/kernel/syscalls/nftw/test.c
ltp/testcases/kernel/syscalls/nftw/test64.c
ltp/testcases/kernel/syscalls/nftw/test_func.c
ltp/testcases/kernel/syscalls/nftw/test_func64.c
ltp/testcases/kernel/syscalls/nftw/tools.c
ltp/testcases/kernel/syscalls/nftw/tools64.c
ltp/testcases/kernel/syscalls/nice/nice01.c
ltp/testcases/kernel/syscalls/nice/nice02.c
ltp/testcases/kernel/syscalls/nice/nice03.c
ltp/testcases/kernel/syscalls/nice/nice04.c
ltp/testcases/kernel/syscalls/nice/nice05.c
ltp/testcases/kernel/syscalls/open/open01.c
ltp/testcases/kernel/syscalls/open/open02.c
ltp/testcases/kernel/syscalls/open/open03.c
ltp/testcases/kernel/syscalls/open/open04.c
ltp/testcases/kernel/syscalls/open/open05.c
ltp/testcases/kernel/syscalls/open/open06.c
ltp/testcases/kernel/syscalls/open/open07.c
ltp/testcases/kernel/syscalls/open/open08.c
ltp/testcases/kernel/syscalls/open/open09.c
ltp/testcases/kernel/syscalls/open/open10.c
ltp/testcases/kernel/syscalls/openat/openat01.c
ltp/testcases/kernel/syscalls/pathconf/pathconf01.c
ltp/testcases/kernel/syscalls/pause/pause01.c
ltp/testcases/kernel/syscalls/pause/pause02.c
ltp/testcases/kernel/syscalls/pause/pause03.c
ltp/testcases/kernel/syscalls/pcllib/README
ltp/testcases/kernel/syscalls/pcllib/config.guess
ltp/testcases/kernel/syscalls/pcllib/libtool
ltp/testcases/kernel/syscalls/pcllib/ltmain.sh
ltp/testcases/kernel/syscalls/pcllib/pcl/pcl.c
ltp/testcases/kernel/syscalls/pcllib/pcl/pcl_version.c
ltp/testcases/kernel/syscalls/pcllib/test/cobench.c
ltp/testcases/kernel/syscalls/pcllib/test/cothread.c
ltp/testcases/kernel/syscalls/personality/personality01.c
ltp/testcases/kernel/syscalls/personality/personality02.c
ltp/testcases/kernel/syscalls/pipe/pipe01.c
ltp/testcases/kernel/syscalls/pipe/pipe02.c
ltp/testcases/kernel/syscalls/pipe/pipe03.c
ltp/testcases/kernel/syscalls/pipe/pipe04.c
ltp/testcases/kernel/syscalls/pipe/pipe05.c
ltp/testcases/kernel/syscalls/pipe/pipe06.c
ltp/testcases/kernel/syscalls/pipe/pipe07.c
ltp/testcases/kernel/syscalls/pipe/pipe08.c
ltp/testcases/kernel/syscalls/pipe/pipe09.c
ltp/testcases/kernel/syscalls/pipe/pipe10.c
ltp/testcases/kernel/syscalls/pipe/pipe11.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_01.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_02.c
ltp/testcases/kernel/syscalls/poll/poll01.c
ltp/testcases/kernel/syscalls/prctl/prctl01.c
ltp/testcases/kernel/syscalls/prctl/prctl02.c
ltp/testcases/kernel/syscalls/pread/pread01.c
ltp/testcases/kernel/syscalls/pread/pread02.c
ltp/testcases/kernel/syscalls/pread/pread03.c
ltp/testcases/kernel/syscalls/profil/profil01.c
ltp/testcases/kernel/syscalls/pselect/pselect01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace02.c
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c
ltp/testcases/kernel/syscalls/pwrite/pwrite01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite02.c
ltp/testcases/kernel/syscalls/pwrite/pwrite03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/kernel/syscalls/read/read01.c
ltp/testcases/kernel/syscalls/read/read02.c
ltp/testcases/kernel/syscalls/read/read03.c
ltp/testcases/kernel/syscalls/read/read04.c
ltp/testcases/kernel/syscalls/readdir/readdir01.c
ltp/testcases/kernel/syscalls/readdir/readdir02.c
ltp/testcases/kernel/syscalls/readlink/creat_slink.c
ltp/testcases/kernel/syscalls/readlink/readlink01.c
ltp/testcases/kernel/syscalls/readlink/readlink02.c
ltp/testcases/kernel/syscalls/readlink/readlink03.c
ltp/testcases/kernel/syscalls/readlink/readlink04.c
ltp/testcases/kernel/syscalls/readlinkat/readlinkat01.c
ltp/testcases/kernel/syscalls/readv/readv01.c
ltp/testcases/kernel/syscalls/readv/readv02.c
ltp/testcases/kernel/syscalls/readv/readv03.c
ltp/testcases/kernel/syscalls/reboot/reboot01.c
ltp/testcases/kernel/syscalls/reboot/reboot02.c
ltp/testcases/kernel/syscalls/recv/recv01.c
ltp/testcases/kernel/syscalls/recvfrom/recvfrom01.c
ltp/testcases/kernel/syscalls/recvmsg/recvmsg01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c
ltp/testcases/kernel/syscalls/rename/rename01.c
ltp/testcases/kernel/syscalls/rename/rename02.c
ltp/testcases/kernel/syscalls/rename/rename03.c
ltp/testcases/kernel/syscalls/rename/rename04.c
ltp/testcases/kernel/syscalls/rename/rename05.c
ltp/testcases/kernel/syscalls/rename/rename06.c
ltp/testcases/kernel/syscalls/rename/rename07.c
ltp/testcases/kernel/syscalls/rename/rename08.c
ltp/testcases/kernel/syscalls/rename/rename09.c
ltp/testcases/kernel/syscalls/rename/rename10.c
ltp/testcases/kernel/syscalls/rename/rename12.c
ltp/testcases/kernel/syscalls/rename/rename13.c
ltp/testcases/kernel/syscalls/rename/rename14.c
ltp/testcases/kernel/syscalls/renameat/renameat01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir02.c
ltp/testcases/kernel/syscalls/rmdir/rmdir03.c
ltp/testcases/kernel/syscalls/rmdir/rmdir04.c
ltp/testcases/kernel/syscalls/rmdir/rmdir05.c
ltp/testcases/kernel/syscalls/sbrk/sbrk01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max02.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min01.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam01.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam03.c
ltp/testcases/kernel/syscalls/sched_getscheduler/sched_getscheduler01.c
ltp/testcases/kernel/syscalls/sched_getscheduler/sched_getscheduler02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval01.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam01.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam02.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam04.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam05.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler02.c
ltp/testcases/kernel/syscalls/sched_yield/sched_yield01.c
ltp/testcases/kernel/syscalls/select/select01.c
ltp/testcases/kernel/syscalls/select/select02.c
ltp/testcases/kernel/syscalls/select/select03.c
ltp/testcases/kernel/syscalls/send/send01.c
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile03.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c
ltp/testcases/kernel/syscalls/sendmsg/sendmsg01.c
ltp/testcases/kernel/syscalls/sendto/sendto01.c
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname02.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname03.c
ltp/testcases/kernel/syscalls/setegid/setegid01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid02.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid03.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid02.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid03.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c
ltp/testcases/kernel/syscalls/sethostname/sethostname01.c
ltp/testcases/kernel/syscalls/sethostname/sethostname02.c
ltp/testcases/kernel/syscalls/sethostname/sethostname03.c
ltp/testcases/kernel/syscalls/setitimer/setitimer01.c
ltp/testcases/kernel/syscalls/setitimer/setitimer02.c
ltp/testcases/kernel/syscalls/setitimer/setitimer03.c
ltp/testcases/kernel/syscalls/setpgid/setpgid01.c
ltp/testcases/kernel/syscalls/setpgid/setpgid02.c
ltp/testcases/kernel/syscalls/setpgid/setpgid03.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp01.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp02.c
ltp/testcases/kernel/syscalls/setpriority/setpriority01.c
ltp/testcases/kernel/syscalls/setpriority/setpriority02.c
ltp/testcases/kernel/syscalls/setpriority/setpriority03.c
ltp/testcases/kernel/syscalls/setpriority/setpriority04.c
ltp/testcases/kernel/syscalls/setpriority/setpriority05.c
ltp/testcases/kernel/syscalls/setregid/setregid01.c
ltp/testcases/kernel/syscalls/setregid/setregid02.c
ltp/testcases/kernel/syscalls/setregid/setregid03.c
ltp/testcases/kernel/syscalls/setregid/setregid04.c
ltp/testcases/kernel/syscalls/setresgid/setresgid01.c
ltp/testcases/kernel/syscalls/setresgid/setresgid02.c
ltp/testcases/kernel/syscalls/setresgid/setresgid03.c
ltp/testcases/kernel/syscalls/setresuid/setresuid01.c
ltp/testcases/kernel/syscalls/setresuid/setresuid02.c
ltp/testcases/kernel/syscalls/setresuid/setresuid03.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid01.c
ltp/testcases/kernel/syscalls/setreuid/setreuid02.c
ltp/testcases/kernel/syscalls/setreuid/setreuid03.c
ltp/testcases/kernel/syscalls/setreuid/setreuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid05.c
ltp/testcases/kernel/syscalls/setreuid/setreuid06.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit01.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit02.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit03.c
ltp/testcases/kernel/syscalls/setsid/setsid01.c
ltp/testcases/kernel/syscalls/setsockopt/setsockopt01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday02.c
ltp/testcases/kernel/syscalls/setuid/setuid01.c
ltp/testcases/kernel/syscalls/setuid/setuid02.c
ltp/testcases/kernel/syscalls/setuid/setuid03.c
ltp/testcases/kernel/syscalls/setuid/setuid04.c
ltp/testcases/kernel/syscalls/sigaction/sigaction01.c
ltp/testcases/kernel/syscalls/sigaction/sigaction02.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack01.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack02.c
ltp/testcases/kernel/syscalls/sighold/sighold02.c
ltp/testcases/kernel/syscalls/signal/signal01.c
ltp/testcases/kernel/syscalls/signal/signal02.c
ltp/testcases/kernel/syscalls/signal/signal03.c
ltp/testcases/kernel/syscalls/signal/signal04.c
ltp/testcases/kernel/syscalls/signal/signal05.c
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_01.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_02.c
ltp/testcases/kernel/syscalls/sigpending/sigpending02.c
ltp/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
ltp/testcases/kernel/syscalls/sigrelse/sigrelse01.c
ltp/testcases/kernel/syscalls/sigsuspend/sigsuspend01.c
ltp/testcases/kernel/syscalls/socket/socket01.c
ltp/testcases/kernel/syscalls/socket/socket02.c
ltp/testcases/kernel/syscalls/socket/socket03.c
ltp/testcases/kernel/syscalls/socketcall/socketcall01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall02.c
ltp/testcases/kernel/syscalls/socketcall/socketcall03.c
ltp/testcases/kernel/syscalls/socketcall/socketcall04.c
ltp/testcases/kernel/syscalls/socketpair/socketpair01.c
ltp/testcases/kernel/syscalls/socketpair/socketpair02.c
ltp/testcases/kernel/syscalls/sockioctl/sockioctl01.c
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/stat/stat01.c
ltp/testcases/kernel/syscalls/stat/stat02.c
ltp/testcases/kernel/syscalls/stat/stat03.c
ltp/testcases/kernel/syscalls/stat/stat05.c
ltp/testcases/kernel/syscalls/stat/stat06.c
ltp/testcases/kernel/syscalls/statfs/statfs01.c
ltp/testcases/kernel/syscalls/statfs/statfs02.c
ltp/testcases/kernel/syscalls/statfs/statfs03.c
ltp/testcases/kernel/syscalls/statvfs/statvfs01.c
ltp/testcases/kernel/syscalls/stime/stime01.c
ltp/testcases/kernel/syscalls/stime/stime02.c
ltp/testcases/kernel/syscalls/string/string01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c
ltp/testcases/kernel/syscalls/swapon/swapon01.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/testcases/kernel/syscalls/switch/endian_switch01.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c
ltp/testcases/kernel/syscalls/symlink/symlink02.c
ltp/testcases/kernel/syscalls/symlink/symlink03.c
ltp/testcases/kernel/syscalls/symlink/symlink04.c
ltp/testcases/kernel/syscalls/symlink/symlink05.c
ltp/testcases/kernel/syscalls/symlinkat/symlinkat01.c
ltp/testcases/kernel/syscalls/sync/sync01.c
ltp/testcases/kernel/syscalls/sync/sync02.c
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c
ltp/testcases/kernel/syscalls/syscall/syscall01.c
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl03.c
ltp/testcases/kernel/syscalls/sysctl/sysctl04.c
ltp/testcases/kernel/syscalls/sysctl/sysctl05.c
ltp/testcases/kernel/syscalls/sysfs/sysfs01.c
ltp/testcases/kernel/syscalls/sysfs/sysfs02.c
ltp/testcases/kernel/syscalls/sysfs/sysfs03.c
ltp/testcases/kernel/syscalls/sysfs/sysfs04.c
ltp/testcases/kernel/syscalls/sysfs/sysfs05.c
ltp/testcases/kernel/syscalls/sysfs/sysfs06.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo01.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo02.c
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10
ltp/testcases/kernel/syscalls/syslog/syslog11.c
ltp/testcases/kernel/syscalls/syslog/syslog12.c
ltp/testcases/kernel/syscalls/syslog/syslogtst.c
ltp/testcases/kernel/syscalls/tee/tee01.c
ltp/testcases/kernel/syscalls/time/time01.c
ltp/testcases/kernel/syscalls/time/time02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c
ltp/testcases/kernel/syscalls/timerfd/timerfd02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd03.c
ltp/testcases/kernel/syscalls/times/times01.c
ltp/testcases/kernel/syscalls/times/times03.c
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate02.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/truncate/truncate04.c
ltp/testcases/kernel/syscalls/ulimit/ulimit01.c
ltp/testcases/kernel/syscalls/umask/umask01.c
ltp/testcases/kernel/syscalls/umask/umask02.c
ltp/testcases/kernel/syscalls/umask/umask03.c
ltp/testcases/kernel/syscalls/umount/umount01.c
ltp/testcases/kernel/syscalls/umount/umount02.c
ltp/testcases/kernel/syscalls/umount/umount03.c
ltp/testcases/kernel/syscalls/uname/uname01.c
ltp/testcases/kernel/syscalls/uname/uname02.c
ltp/testcases/kernel/syscalls/uname/uname03.c
ltp/testcases/kernel/syscalls/unlink/unlink05.c
ltp/testcases/kernel/syscalls/unlink/unlink06.c
ltp/testcases/kernel/syscalls/unlink/unlink07.c
ltp/testcases/kernel/syscalls/unlink/unlink08.c
ltp/testcases/kernel/syscalls/unlinkat/unlinkat01.c
ltp/testcases/kernel/syscalls/ustat/ustat01.c
ltp/testcases/kernel/syscalls/ustat/ustat02.c
ltp/testcases/kernel/syscalls/utime/utime01.c
ltp/testcases/kernel/syscalls/utime/utime02.c
ltp/testcases/kernel/syscalls/utime/utime03.c
ltp/testcases/kernel/syscalls/utime/utime04.c
ltp/testcases/kernel/syscalls/utime/utime05.c
ltp/testcases/kernel/syscalls/utime/utime06.c
ltp/testcases/kernel/syscalls/utimensat/check_for_utimensat_support.c
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh
ltp/testcases/kernel/syscalls/vfork/vfork01.c
ltp/testcases/kernel/syscalls/vfork/vfork02.c
ltp/testcases/kernel/syscalls/vhangup/vhangup01.c
ltp/testcases/kernel/syscalls/vhangup/vhangup02.c
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c
ltp/testcases/kernel/syscalls/wait/wait02.c
ltp/testcases/kernel/syscalls/wait4/wait401.c
ltp/testcases/kernel/syscalls/wait4/wait402.c
ltp/testcases/kernel/syscalls/waitpid/waitpid01.c
ltp/testcases/kernel/syscalls/waitpid/waitpid02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid03.c
ltp/testcases/kernel/syscalls/waitpid/waitpid04.c
ltp/testcases/kernel/syscalls/waitpid/waitpid05.c
ltp/testcases/kernel/syscalls/waitpid/waitpid06.c
ltp/testcases/kernel/syscalls/waitpid/waitpid07.c
ltp/testcases/kernel/syscalls/waitpid/waitpid08.c
ltp/testcases/kernel/syscalls/waitpid/waitpid09.c
ltp/testcases/kernel/syscalls/waitpid/waitpid10.c
ltp/testcases/kernel/syscalls/waitpid/waitpid11.c
ltp/testcases/kernel/syscalls/waitpid/waitpid12.c
ltp/testcases/kernel/syscalls/waitpid/waitpid13.c
ltp/testcases/kernel/syscalls/write/write01.c
ltp/testcases/kernel/syscalls/write/write02.c
ltp/testcases/kernel/syscalls/write/write03.c
ltp/testcases/kernel/syscalls/write/write04.c
ltp/testcases/kernel/syscalls/write/write05.c
ltp/testcases/kernel/syscalls/writev/writev01.c
ltp/testcases/kernel/syscalls/writev/writev02.c
ltp/testcases/kernel/syscalls/writev/writev03.c
ltp/testcases/kernel/syscalls/writev/writev04.c
ltp/testcases/kernel/syscalls/writev/writev05.c
ltp/testcases/kernel/syscalls/writev/writev06.c


45) Log Message:
Integrate ebizzy-0.3. Signed-Off-By: Poornima Nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/utils/Makefile
ltp/utils/benchmark/Makefile
Added Files:
ltp/utils/benchmark/ebizzy-0.3/ChangeLog
ltp/utils/benchmark/ebizzy-0.3/LICENSE
ltp/utils/benchmark/ebizzy-0.3/Makefile
ltp/utils/benchmark/ebizzy-0.3/README
ltp/utils/benchmark/ebizzy-0.3/configure
ltp/utils/benchmark/ebizzy-0.3/ebizzy.c
ltp/utils/benchmark/ebizzy-0.3/ebizzy.h
Removed Files:
ltp/utils/benchmark/ebizzy-0.2/ChangeLog
ltp/utils/benchmark/ebizzy-0.2/LICENSE
ltp/utils/benchmark/ebizzy-0.2/Makefile
ltp/utils/benchmark/ebizzy-0.2/README
ltp/utils/benchmark/ebizzy-0.2/configure
ltp/utils/benchmark/ebizzy-0.2/ebizzy.c

46) Log Message:
Patch to fix ebizzy compile issue. Signed-Off-By: Poornima Nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/Makefile

47) Log Message:
Patch to fix testcases exit status issue. Signed-Off-By: Poornima Nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/change_freq.sh
ltp/testcases/kernel/power_management/change_govr.sh
ltp/testcases/kernel/power_management/check_config.sh
ltp/testcases/kernel/power_management/check_cpufreq_sysfs_files.sh
ltp/testcases/kernel/power_management/check_cpuidle_sysfs_files.sh
ltp/testcases/kernel/power_management/cpu_consolidation.py
ltp/testcases/kernel/power_management/pwkm_load_unload.sh
ltp/testcases/kernel/power_management/runpwtests.sh
ltp/testcases/kernel/power_management/sched_domain.py
ltp/testcases/kernel/power_management/test_sched_mc.sh

48) Log Message:
mqns: update kernel version check: (Against the March intermediate release) mqns support is expect in 2.6.30, not 2.6.29. Signed-off-by: Serge Hallyn <serge@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/mqns/check_mqns_enabled.c

49) Log Message:
Modified existing reusable functions to test cpu consolidation on hyper threaded system. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

50) Log Message:
Modified cpu consolidation testcase to support sched_smt_mc_power_savings & sched_smt_power_saving FVT. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

51) Log Message:
Modified sched domain validation testcase to run on hyper threaded system. Signed-off-by: poornima nayak <mpnayak@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/sched_domain.py

52) Log Message:
gcov-kernel: add patches for 2.6.29. Signed-Off-By: Peter Oberparleiter <oberpapr@users.sourceforge.net>

Added File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.29-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.29-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.29-gcov.patch

53) Log Message:
It has come to our attention that when running multicast tests that the multicast ping test assumes that all the machines on the network, including the machine getting tested, have multicast ping enabled.  This has not been the case since 2005 when multicast ping was disabled by default, mostly to inhibit ddos activity.  See this conversation for more details: https://bugzilla.redhat.com/show_bug.cgi?id=159367. Now on all kernels, /proc/sys/net/icmp_echo_ignore_broadcasts is set to 1 by default, thereby failing this test.  But the error message is wrong. Multicast is not disabled, only multicast ping.  This patch modifies the error message and tells that it is now normal to fail.Signed-off-by: Vernon Mauery <vernux@us.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>.

Modified File(s):
ltp/testcases/network/multicast/mc_cmds/mc_cmds

LTP-20090228

1) Log Message:
We can just add the files related to LSM, to known failure list. We already check for their return value, if not EINVAL report test failure or else skip. Added the nfsd files to the list. Signed-Off-By: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

2) Log Message:
James Morris <jmorris@namei.org> reported: I'm trying to run the LTP SELinux tests using the latest CVS version of LTP and current Fedora development, and get the following policy compilation error: Is this likely to be fixed soon, and/or any suggestions for a workaround?
"Christopher J. PeBenito" <cpebenito@tresys.com> replied: It won't compile with the current trunk refpolicy, since the current release was a major, API breaking change.  I'll try to get a patch out shortly. I updated the policy since its fairly old, though I didn't convert its raw rules over to use interfaces.  However this didn't completely fix it, as there is usage of a "unconfined_runs_test()", which isn't in the upstream refpolicy nor the fedora policy, as far as I can see.  One of the updates includes use of sysadm_entry_spec_domtrans_to(), which is in the upstream refpolicy, but doesn't seem to have made its way downstream to the fedora policy.  I have attached my work so someone familiar with the LTP test cases can use it to complete the fix. Signed-Off-By: "Christopher J. PeBenito" <cpebenito@tresys.com>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_dyntrans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_entrypoint.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execshare.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_exectrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_execute_no_trans.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_inherit.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ipc.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_link.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_mkdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_open.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ptrace.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_relabel.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rename.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setattr.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sigkill.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_getsid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setsched.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_transition.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_wait.te

3) Log Message:
I send attached the v4l-test 0.5 for LTP. Changes: Test cases added for VIDIOC_QUERYSTD, VIDIOC_G_FREQUENCY and VIDIOC_G_TUNER. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYSTD.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.h
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.h

4) Log Message:
Fix a build failure of tcore on non-x86 archs: I report a build failure and a patch for it. If your system is not either i386 or x86_64, making in ltp-full-20090131 fails as follows: It's because wrong position of TST_TOTAL definition. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified File(s):
ltp/testcases/misc/tcore_patch_test_suites/tcore.c

5) Log Message:
Fix build failures of some new syscall tests on non-x86 archs: I report build failures of some new syscall tests introduced in ltp-full-20090131. Failures happen on non-x86 arch systems.I made a patch for it; stopping #error macro and including linux_syscall_numbers.h instead. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/regen.sh
ltp/testcases/kernel/include/x86_64.in
ltp/testcases/kernel/syscalls/dup3/dup3_01.c
ltp/testcases/kernel/syscalls/epoll_create2/epoll_create2_01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_02.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_01.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_02.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_01.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_02.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_01.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd03.c

6) Log Message:
Change epoll_create2_01 to epoll_create1_01: Recently the epoll_create2_01 syscall test was added into LTP but I found the kernel has already changed the name of it into epoll_create1, and its interface, too. http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=9fe5ad9c8cef9ad5873d8ee55d1cf00d9b607df0. I wrote a patch for it. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/x86_64.in
Added Files:
ltp/testcases/kernel/syscalls/epoll_create1/Makefile
ltp/testcases/kernel/syscalls/epoll_create1/epoll_create1_01.c
Removed Files:
ltp/testcases/kernel/syscalls/epoll_create2/Makefile
ltp/testcases/kernel/syscalls/epoll_create2/epoll_create2_01.c

7) Log Message:
v4l-test 0.6 for LTP: Please find attached the v4l-test 0.6 patch for LTP. Changes: Test cases added for VIDIOC_G_AUDIO, VIDIOC_G_AUDOUT, VIDIOC_G_MODULATOR, VIDIOC_G_PRIORITY, VIDIOC_S_PRIORITY and VIDIOC_S_FREQUENCY. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_FREQUENCY.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_validator.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_MODULATOR.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_MODULATOR.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PRIORITY.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_PRIORITY.h

8) Log Message:
[PATCH 1/3] Proc01: Fix for PPC64 and Support SELinux-enabled Environment v2: The following patches add an entry from a PPC64 kernel to the list of known issue, which may return errno EINVAL depends on the content of the file and the read buffer it is testing. Also, they add support for SELinux-enabled testing environment by using the correct expected results if it is able to detect SELinux is enabled. It does not affect the testing for systems with no LSM, LSM other than SELinux, and SELinux-disabled. Version 2 is created base on the suggestion from Serge E. Hallyn. This patch adds /proc/ppc64/rtas/error_log to the known failure list according to a Red Hat kernel developer,
"In kernel's rtas_log_read() the first check is:
...
        if (!buf || count < rtas_error_log_buffer_max)
                return -EINVAL;
...
This code tries to avoid to be overcomplicated by rejecting partial reads of log strings. rtas_error_log_buffer_max is a maximal length of error message, and reader should provide enough space for it, or it will loose." The default of this test is to use 1024-byte read buffer, and it is proved not enough, as well as 4096-byte sometimes. I don't want to special case here. Hence, add it to the list. Reference, https://bugzilla.redhat.com/show_bug.cgi?id=460106. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/fs/proc/proc01.c

9) Log Message:
[PATCH 2/3] Proc01: Fix for PPC64 and Support SELinux-enabled Environment v2: The following patches add an entry from a PPC64 kernel to the list of known issue, which may return errno EINVAL depends on the content of the file and the read buffer it is testing. Also, they add support for SELinux-enabled testing environment by using the correct expected results if it is able to detect SELinux is enabled. It does not affect the testing for systems with no LSM, LSM other than SELinux, and SELinux-disabled. Version 2 is created base on the suggestion from Serge E. Hallyn. This patch is using configure script to automatically detect if the system has libselinux libraries and header installed, so we can use a macro later on to actually check if SELinux is enabled. Otherwise, or if you don't want to run configure script at all, the test and other tests should behave as normal. Also, it removes some unnecessary comments from the Makefile, and replaces LOADLIBES to LDLIBS according to the LTP INSTALL file, LDLIBS   - libraries listed after objects during link. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/config.mk.in
ltp/configure.ac
ltp/testcases/kernel/fs/proc/Makefile
Added Files:
ltp/m4/ltp-selinux.m4

10) Log Message:
[PATCH 3/3] Proc01: Fix for PPC64 and Support SELinux-enabled Environment v2: The following patches add an entry from a PPC64 kernel to the list of known issue, which may return errno EINVAL depends on the content of the file and the read buffer it is testing. Also, they add support for SELinux-enabled testing environment by using the correct expected results if it is able to detect SELinux is enabled. It does not affect the testing for systems with no LSM, LSM other than SELinux, and SELinux-disabled. Version 2 is created base on the suggestion from Serge E. Hallyn. The following patch adds checking for SELinux. If it is enabled, the following entries are expected to be read successfully,
/proc/self/attr/* 
/proc/self/task/[0-9]*/attr/*
If it is disabled, expecting read(2) return -1 with -EINVAL. It does not affect the testing for systems with no LSM, LSM other than SELinux, and SELinux-disabled. As discussed before, I don't want to put those entries to a separate test, so I can read them the same way as the rest of procfs entries. The version 2 of this patch has been modified to make it easier to support other LSM enabled testing environments. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/fs/proc/proc01.c

11) Log Message:
Cleanup and update of linux_syscall_numbers.h: I compared syscall numbers in testcases/kernel/include/*.in files of LTP with those in arch/*/include/asm/unistd.h headers of 2.6.28 kernel. A lot of numbers are missing in *.in files, so I wrote a patch. Adding syscall numbers might increase FAIL results on non-i386 archs. Succeeded to build on ia64 and x86_64 with this patch. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/x86_64.in

12) Log Message:
lcov: fix double-counting of function data

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

13) Log Message:
lcov: use install -pD -m <mode> for file installation

Modified File(s):
ltp/utils/analysis/lcov/bin/install.sh
ltp/utils/analysis/lcov/Makefile

14) Log Message:
lcov: fix warning when $HOME is not set. - based on patch by acalando@free.fr.

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

15) Log Message:
Reason to fix pthread_key_create_speculative_5_1: 
1: keys[5] is a static array that is far too small. It is expected to hold the cumulative keys from each iteration of the loop, which on my system should execute 1025 times. It crashed immediately.
2. The test is just wrong and will always fail. The only valid result from that loop is i == NUM_OF_KEYS && rc == EAGAIN. The generic test against rc isn't skipped when that result is found. It goes on to report a failure if rc is anything other than 0 without respect to the value of i.Signed-Off-By: Yi
Xu <yxu@suse.de>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_key_create/speculative/5-1.c

16) Log Message:
Proc01: Fix for PPC64 and Support SELinux-enabled Environment v2: The distribution we are using may be well maintained. But I guess there may be broken distributions on the earth. If a user of such broken distributions wants to run ltp on one's system, what happens? Shooting the trouble on such system takes rather longer time. Could you review my patch? With LTP_CHECK_LIB defined in ltp-common.m4, we can check the existence of libselinux and can define SELINUX_LIBS shell variable easily. LTP_CHECK_SELINUX uses LTP_CHECK_LIB. I think `lsm_should_work' in proc01.c is not guarded with HAVE_SELINUX_SELINUX_H. Do you afraid the binary size? Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/m4/ltp-selinux.m4
ltp/testcases/kernel/fs/proc/proc01.c
Added Files:
ltp/m4/ltp-common.m4

17) Log Message:
lcov: fix error when combining tracefiles without function data
- lcov: Can't use an undefined value as a HASH reference at lcov line 1341.
- bug reported by <richard.corden@gmail.com>.

Modified File(s):
ltp/utils/analysis/lcov/bin/lcov

18) Log Message:
swapon03: report FAIL if setting up MAX_SWAPFILES swaps failed: If we can't enable MAX_SWAPFILES swaps - something wrong in this system, and we must report FAIL. Now result of preparing swaps ignored and test can report PASS, if next swapon will also return error. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/swapon/swapon03.c

19) Log Message:
Fix bug in rusers01 test script: This is in reference to bug in "rusers01" test which I reported on Feb 10, 2009. Current rusers01 script have following lines, "rusers $RHOST | grep $RHOST > /dev/null". If my remote host do not have any user logged in, then test returns failure even if "users $RHOST" executes without any error. In my subsequent mail, I am sending patch to fix this bug ( I have tested patch on machines ). The following patch PASS the "rusers01" test correctly if "rusers" command executes without any error. It reports the failure if "rusers" command fails. Signed-off-by: vivek@linsyssoft.com.

Modified File(s):
ltp/testcases/network/rpc/basic_tests/rusers/rusers01

20) Log Message:
Fix strftime/2-1.test segment fault. Signed-off-by: Xiao Xiao <xxiao@novell.com>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/strftime/2-1.c

21) Log Message:
genhtml: fix error when combining tracefiles without function data
- genhtml: Can't use an undefined value as a HASH reference at genhtml line 1506.
- bug reported by <richard.corden@gmail.com>.

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml

22) Log Message:
genhtml: update comment. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml

23) Log Message:
genhtml: added --demangle-cpp option
- used to convert C++ internal function names to human readable format
- based on a patch by <slava.semushin@gmail.com>

Modified File(s):
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/bin/genhtml

24) Log Message:
genhtml: minor man page update. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/man/genhtml.1

25) Log Message:
Realtime: Usability fix for matrix_mult test case: Here is a simple usability fix for matrix_mult test case. I think this print statement was missed out when the test was written. 
Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>,
Acked-By: Gowrishankar <gowrishankar.m@linux.vnet.ibm.com>,
Acked-by: Vernon Mauery <vernux@us.ibm.com>,
Acked-by: Darren Hart <dvhltc@us.ibm.com>,

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

26) Log Message:
v4l-test 0.7 for LTP: here is the v4l-test 0.7 for LTP. Changes:  Test cases added for VIDIOC_G_AUDIO, VIDIOC_G_AUDOUT, VIDIOC_S_AUDIO and VIDIOC_G_CROP. Added video_dummy kernel driver to verify the test environment. Some cleanup. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDIO.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_AUDOUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_INPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.h
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/kernel_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/kernel_space/video_dummy.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.h

27) Log Message:
Proc01: Revert A Wrong Patch: The following patch reverts a wrong patch that has been commited accidentally, http://article.gmane.org/gmane.linux.ltp/7459. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/m4/ltp-selinux.m4
ltp/testcases/kernel/fs/proc/proc01.c
Removed Files:
ltp/m4/ltp-common.m4

28) Log Message:
Linux-2.6.26 introduced a new feature for Quota on Remount for RO Fs. This test cases will test that feature. For more info, please see: http://kernelnewbies.org/Linux_2_6_26, and, http://git.kernel.org/git/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=0ff5af8340aa6be44220d7237ef4a654314cf795. Signed-Off-By: Jan Kara <jack@suse.cz>. P
orted-To-Ltp-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs
ltp/testcases/kernel/fs/Makefile
Added Files:
ltp/testcases/kernel/fs/quota_remount/Makefile
ltp/testcases/kernel/fs/quota_remount/quota_remount_test01.sh

29) Log Message:
Limit starts when running for certain time, too: Please find attached a small patch to add this simple feature to pan without changing its previous behaviour. Running a test only once by pan for a specific time is currently also possible without this patch. Just give the '-t <time>' option *and* than the '-s 1' option. But it is racy yet, to do so. Adding this patch removes this race. With: $ pan <....> -t 60s -s 1 -- my_test, the my_test will now run for one time only. If everyhing went ok, it returns happy within the 60 seconds period. If my_test runs amok, it will never return and pan will kill it after 60 seconds. --8<--------8<-------8<-------8<--------8<-------8<-----8<--------8<------. This patches add a feature to limit the number of times a test is started when running for a certain time instead of infinite runs. This could be used to give a timeout for a certain test. Signed-off-by: Marc Kleine-Budde <mkl@pengutronix.de>, Acked-by: Juergen Beisert <jbe@pengutronix.de>.

Modified File(s):
ltp/pan/pan.c

30) Log Message:
Include errno.h in some tests to get the errno variable on Debian: This patch fails FTBFS I got on Debian system due to missing headers. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/dup3/dup3_01.c
ltp/testcases/kernel/syscalls/epoll_create1/epoll_create1_01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_02.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_01.c
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_02.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_01.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_02.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_01.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd02.c
ltp/testcases/kernel/syscalls/timerfd/timerfd03.c

31) Log Message:
Use the macro HAVE_SYS_INOTIFY_H instead of incorrect HAVE_SYS_INOTIFY: This patch fixes incorrect compilation issue which caused the inotify tests not to be compiled when they should. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c
ltp/testcases/kernel/syscalls/inotify/inotify03.c

32) Log Message:
Delete the crontab of the test user in crontab tests: This patch cleans up the crontabs after the cron tests. When the crontab was not deleted, after deletion of the test user, it became a file with bogus permissions (owned by a nonexistent user). This caused subsequent crontab creation for a user of the same name (but different ID) to fail. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/cron/cron_allow01
ltp/testcases/commands/cron/cron_deny01

33) Log Message:
Fixes of the su expect test script: These are some fixes of the su test. 
- remove fail branches where the failure is implicit,
- add behaviour of the Debian su (particularly different response strings),
- get rid of errors "spawn id ... not open while executing close",
Signed-off-by: Jiri Palecek <jpalecek@web.de>,

Modified Files:
ltp/testcases/commands/su/su01_s1

34) Log Message:
Add an error message instead of assert() in aio-stress: This patch fixes a problem with reporting errors in aio-stress, namely, that failure to open a file given on the command line will result in an assertion failure rather than an error message. This patch makes it print an error message instead. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/io/ltp-aiodio/aio-stress.c

35) Log Message:
Add an error message instead of assert() in aio-stress: This patch fixes a problem with reporting errors in aio-stress, namely, that failure to open a file given on the command line will result in an assertion failure rather than an error message. This patch makes it print an error message instead. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/network/ipv6/echo6/echoes6.c

36) Log Message:
pan: Honor the -q command line option: If one wants pan to be quiet, pan should honor this. Signed-off-by: Juergen Beisert <jbe@pengutronix.de>.

Modified File(s):
ltp/pan/pan.c

37) Log Message:
pan: Forward error messages to stderr: Unsure if I understand the code in the right manner, but other error messages are also forwarded to stderr instead of stdout. Signed-off-by: Juergen Beisert <jbe@pengutronix.de>.

Modified File(s):
ltp/pan/pan.c

38) Log Message:
aio02: Fixing CFLAGS and LDFLAGS in Makefile: This patch fix CFLAGS and LDFLAGS in aio02 Makefile, now it will append the value of these envar in the Makefile values. Signed-Off-By: Higor Aparecido Vieira Alves <halves@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/io/aio/aio02/Makefile

39) Log Message:
runcc: add cflags option on runcc function to compile lib6 tests for different architectures: Runcc function was compiling all tests with default compiler architecture (32bits on RHEL and 64bits on SLES). This patch fix this problem adding support to get CFLAGS envar and use it to compile lib6 test for different architectures (32bits and 64bits). Signed-Off-By: Higor Aparecido Vieira Alves <halves@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/runcc.c

40) Log Message:
v4l-test 0.8 for LTP: Today I released v4l-test 0.8. Please find attached the patch for LTP. Changes: Test cases added for VIDIOC_G_CROP, VIDIOC_G_CTRL and VIDIOC_S_CTRL. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROP.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_TUNER.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/video_limits.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.h

41) Log Message:
RFC: Fixes for Shared Memory test case shmat: Shmat1.c(testcases/kernel/mem/mtest06) is a test case which tries to create 3 threads during its execution. One thread allocates shared memory, second writes to the shared memory and the third reads from the shared memory. All the 3 threads are synchronized using a global variable. In case of signal (sigsegv) sighandler will be called. The current test case implementation is complete only for x86 arc and is not valid for other archs. We have noticed various issues while executing this test case. Test case issues can be summarized as:
1. signals are masked once the signal handler is called
2. comparison signal_context->edi == map address is dubious leading to test case failures under x86 architecture,
Solution:
Issue 1: This is due to calling siglongjmp() with in the signal handler. Once the signal handler is called all the signals will be masked. It wont be set back to the original value unless sigsetjmp() is called with a non zero second parameter. This was not happening earlier leading to segmentation faults while executing the tests.
Issue 2: In the x86 architecture source and destination index with in the ES or DS segments are stored in esi and edi registers. While the shared memory address is being written to edi will have the map_address, returned by shmget, while when the data is read from map_address: will be contained in esi register. So it is inappropriate to just compare map_address to edi register. 
Even after fixing these 2 issues I still see the test case failing some time with messages like: process exited with errors -1 etc. I wanted to know whether we should keep this test case in LTP suite or if there is a better way to fix the issues? Whether comparing signal_context->edi (or esi) == map_address is it the right thing to do? Signed-Off-By: Sharyathi Nagesh <sharyath@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest06/shmat1.c 

42) Log Message:
I had a look on testcases/kernel/device-drivers/usb/tusb and deleted what is no longer supported by Linux 2.6.28, for example struct usb_operations, http://lwn.net/Articles/196429/. The result is that nearly nothing left which would test any pieces of the USB code. I attached the patch, but I don't know if it is worth to keep the "tusb" directory at all. Signed-Off-By: Németh Márton <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/usb/tusb/Makefile
ltp/testcases/kernel/device-drivers/usb/tusb/st_tusb.h
ltp/testcases/kernel/device-drivers/usb/tusb/tusb.c
Added Files:
ltp/testcases/kernel/device-drivers/usb/tusb/README
Removed Files:
ltp/testcases/kernel/device-drivers/usb/tusb/tusb.mod.c

43) Log Message:
Don't declare lseek in the fork10 test to prevent clashes with system definition: This is a patch for bug #2128681 suggested by Fathi Boudra. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/fork/fork10.c

44) Log Message:
Fix broken line in runtest/scsi_debug.part1 file: This is another broken line in a runtest file. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/runtest/quickhit
ltp/runtest/scsi_debug.part1

45) Log Message:
Correct possible errors in the runtest files: This patch changes some runtest lines, st. the same tests are referred to as same test IDs. Also, ot fixes some (presumably by accident) broken lines in runtest files. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/runtest/scsi_debug.part1

46) Log Message:
I'm a user of LTP. I use LTP for testing SH based Linux kernel for our embedded systems. I'm using a kernel 2.6.23. I've downloaded latest LTP release: ltp-full-20090131.tgz. I've found  the following issues: 1) I found some instructions on some LTP Makefiles reporting direct calls to "gcc" or "g++" instead of using the related env. variables $(CC) and/or $(CXX). The usage of gcc/g++ hardcoded, didn't allow to cross-build the related LTP tests. I've done a patch  which is attached to this email ( ltp-full-20090131-allow-cross-build-fix.patch). Signed-off-by: Francesco Rundo <francesco.rundo@st.com>.

Modified Files:
ltp/testcases/ballista/ballista/Makefile
ltp/testcases/ballista/ballista/compile/Makefile
ltp/testcases/kernel/device-drivers/acpi/Makefile
ltp/testcases/kernel/device-drivers/agp/user_space/Makefile
ltp/testcases/kernel/device-drivers/base/user_base/Makefile
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/Makefile
ltp/testcases/kernel/device-drivers/drm/user_space/Makefile
ltp/testcases/kernel/device-drivers/include/Makefile
ltp/testcases/kernel/device-drivers/nls/Makefile
ltp/testcases/kernel/device-drivers/pci/user_tpci/Makefile
ltp/testcases/kernel/device-drivers/tbio/user_space/Makefile
ltp/testcases/kernel/device-drivers/usb/user_usb/Makefile
ltp/testcases/kernel/fs/fs-bench/Makefile
ltp/testcases/kernel/fs/scsi/ltpfs/Makefile
ltp/testcases/kernel/fs/scsi/ltpscsi/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/Makefile
ltp/testcases/kernel/security/digsig/twiddlebit/Makefile
ltp/testcases/kernel/security/digsig/writeexec/Makefile
ltp/testcases/kernel/syscalls/epoll2/examples/Makefile
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/Makefile.hdr
ltp/testcases/pounder21/Makefile
ltp/testcases/pounder21/src/cpufreq/Makefile
ltp/testcases/pounder21/src/mem_alloc_test/Makefile
ltp/testcases/pounder21/src/memxfer5b/Makefile
ltp/testcases/pounder21/src/ramsnake/Makefile
ltp/testcases/pounder21/src/randacoords/Makefile
ltp/testcases/pounder21/src/randasyscall/Makefile
ltp/testcases/pounder21/src/time_tests/Makefile
ltp/testcases/pounder21/src/xbonkers/Makefile

47) Log Message:
I'm a user of LTP. I use LTP for testing SH based Linux kernel for our embedded systems. I'm using a kernel 2.6.23. I've downloaded latest LTP release: ltp-full-20090131.tgz. I've found the following issues: 2) Under $LTP_ROOT/lib/ there are the tlibio.[ch] files which include some code based on Async IO functionalities. The Async IO is well supported if LTP was built with glibc but it is not supported by uclibc as, currently, the uclibc doesn't provide AsyncIO extensions. I think the code for AsyncIO, have to be placed under "#if !defined (__UCLIBC__)". I've made a patch to fix it. Signed-off-by: Francesco Rundo <francesco.rundo@st.com>. 

Modified Files:
ltp/include/tlibio.h
ltp/lib/Makefile
ltp/lib/tlibio.c

48) Log Message:
Addition of Freezer Controller Testcases to LTP. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>. More Details: http://marc.info/?t=123557050800005&r=1&w=2&n=3,

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/test_controllers.sh
Added Files:
ltp/testcases/kernel/controllers/freezer/00_description.txt
ltp/testcases/kernel/controllers/freezer/CHANGELOG
ltp/testcases/kernel/controllers/freezer/COPYING
ltp/testcases/kernel/controllers/freezer/Makefile
ltp/testcases/kernel/controllers/freezer/README
ltp/testcases/kernel/controllers/freezer/TODO
ltp/testcases/kernel/controllers/freezer/fork_exec_loop.c
ltp/testcases/kernel/controllers/freezer/fork_freeze.sh
ltp/testcases/kernel/controllers/freezer/freeze_cancel.sh
ltp/testcases/kernel/controllers/freezer/freeze_kill_thaw.sh
ltp/testcases/kernel/controllers/freezer/freeze_move_thaw.sh
ltp/testcases/kernel/controllers/freezer/freeze_self_thaw.sh
ltp/testcases/kernel/controllers/freezer/freeze_sleep_thaw.sh
ltp/testcases/kernel/controllers/freezer/freeze_thaw.sh
ltp/testcases/kernel/controllers/freezer/freeze_write_freezing.sh
ltp/testcases/kernel/controllers/freezer/libcgroup_freezer
ltp/testcases/kernel/controllers/freezer/libltp
ltp/testcases/kernel/controllers/freezer/run.sh
ltp/testcases/kernel/controllers/freezer/stop_freeze_sleep_thaw_cont.sh
ltp/testcases/kernel/controllers/freezer/stop_freeze_thaw_cont.sh
ltp/testcases/kernel/controllers/freezer/timed_forkbomb.c
ltp/testcases/kernel/controllers/freezer/vfork.c
ltp/testcases/kernel/controllers/freezer/vfork_freeze.sh
ltp/testcases/kernel/controllers/freezer/write_freezing.sh

49) Log Message:
Add microblaze support for linux_syscall_number.h. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/include/order

50) Log Message:
uclinux: It is necessary to compile include. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/Makefile
ltp/testcases/kernel/include/Makefile

51) Log Message:
Use make install for uclinux too. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

52) Log Message:
fix uclinux build. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/kill/kill05.c

53) Log Message:
uclinux doens't use remap_file_page. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/syscalls/Makefile

54) Log Message:
Fix return(0) to return 0. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/fs/dmapi/mmapfile.c
ltp/testcases/kernel/fs/ftest/ftest01.c
ltp/testcases/kernel/fs/ftest/ftest02.c
ltp/testcases/kernel/fs/ftest/ftest03.c
ltp/testcases/kernel/fs/ftest/ftest04.c
ltp/testcases/kernel/fs/ftest/ftest05.c
ltp/testcases/kernel/fs/ftest/ftest06.c
ltp/testcases/kernel/fs/ftest/ftest07.c
ltp/testcases/kernel/fs/ftest/ftest08.c
ltp/testcases/kernel/fs/inode/inode01.c
ltp/testcases/kernel/fs/inode/inode02.c
ltp/testcases/kernel/fs/scsi/ltpfs/main.c
ltp/testcases/kernel/fs/stream/stream01.c
ltp/testcases/kernel/fs/stream/stream02.c
ltp/testcases/kernel/fs/stream/stream03.c
ltp/testcases/kernel/fs/stream/stream04.c
ltp/testcases/kernel/fs/stream/stream05.c
ltp/testcases/kernel/io/direct_io/diotest2.c
ltp/testcases/kernel/io/direct_io/diotest3.c
ltp/testcases/kernel/io/direct_io/diotest5.c
ltp/testcases/kernel/io/direct_io/diotest6.c
ltp/testcases/kernel/io/direct_io/diotest_routines.c
ltp/testcases/kernel/io/disktest/dump.c
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/parse.c
ltp/testcases/kernel/io/disktest/sfunc.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmdt/hugeshmdt01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget05.c
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/mem/mmapstress/mmapstress02.c
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c
ltp/testcases/kernel/mem/mmapstress/mmapstress04.c
ltp/testcases/kernel/mem/mmapstress/mmapstress05.c
ltp/testcases/kernel/mem/mmapstress/mmapstress06.c
ltp/testcases/kernel/mem/mmapstress/mmapstress07.c
ltp/testcases/kernel/mem/mmapstress/mmapstress08.c
ltp/testcases/kernel/mem/mmapstress/mmapstress09.c
ltp/testcases/kernel/mem/mmapstress/mmapstress10.c
ltp/testcases/kernel/mem/page/page01.c
ltp/testcases/kernel/mem/page/page02.c
ltp/testcases/kernel/mem/vmtests/data_space.c
ltp/testcases/kernel/mem/vmtests/stack_space.c
ltp/testcases/kernel/pty/hangup01.c
ltp/testcases/kernel/pty/ptem01.c
ltp/testcases/kernel/pty/pty01.c
ltp/testcases/kernel/sched/clisrv/readline.c
ltp/testcases/kernel/sched/pthreads/pth_str02.c
ltp/testcases/kernel/syscalls/abort/abort01.c
ltp/testcases/kernel/syscalls/acct/acct01.c
ltp/testcases/kernel/syscalls/acct/acct02.c
ltp/testcases/kernel/syscalls/confstr/confstr01.c
ltp/testcases/kernel/syscalls/creat/creat08.c
ltp/testcases/kernel/syscalls/dup/dup06.c
ltp/testcases/kernel/syscalls/dup/dup07.c
ltp/testcases/kernel/syscalls/dup2/dup201.c
ltp/testcases/kernel/syscalls/dup2/dup202.c
ltp/testcases/kernel/syscalls/dup2/dup203.c
ltp/testcases/kernel/syscalls/dup2/dup204.c
ltp/testcases/kernel/syscalls/dup2/dup205.c
ltp/testcases/kernel/syscalls/execve/execve02.c
ltp/testcases/kernel/syscalls/execve/execve03.c
ltp/testcases/kernel/syscalls/execve/execve04.c
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/execve/execve06.c
ltp/testcases/kernel/syscalls/exit/exit01.c
ltp/testcases/kernel/syscalls/exit/exit02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fchdir/fchdir01.c
ltp/testcases/kernel/syscalls/fchdir/fchdir02.c
ltp/testcases/kernel/syscalls/fchdir/fchdir03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod02.c
ltp/testcases/kernel/syscalls/fchmod/fchmod03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod04.c
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchmod/fchmod07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl06.c
ltp/testcases/kernel/syscalls/fcntl/fcntl11.c
ltp/testcases/kernel/syscalls/fcntl/fcntl12.c
ltp/testcases/kernel/syscalls/fcntl/fcntl13.c
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl15.c
ltp/testcases/kernel/syscalls/fcntl/fcntl16.c
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c
ltp/testcases/kernel/syscalls/fcntl/fcntl18.c
ltp/testcases/kernel/syscalls/fcntl/fcntl19.c
ltp/testcases/kernel/syscalls/fcntl/fcntl20.c
ltp/testcases/kernel/syscalls/fcntl/fcntl21.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fmtmsg/fmtmsg01.c
ltp/testcases/kernel/syscalls/fork/fork02.c
ltp/testcases/kernel/syscalls/fork/fork03.c
ltp/testcases/kernel/syscalls/fork/fork05.c
ltp/testcases/kernel/syscalls/fork/fork06.c
ltp/testcases/kernel/syscalls/fork/fork08.c
ltp/testcases/kernel/syscalls/fork/fork09.c
ltp/testcases/kernel/syscalls/fork/fork10.c
ltp/testcases/kernel/syscalls/fork/fork11.c
ltp/testcases/kernel/syscalls/fstat/fstat02.c
ltp/testcases/kernel/syscalls/fstat/fstat03.c
ltp/testcases/kernel/syscalls/fstat/fstat04.c
ltp/testcases/kernel/syscalls/fstat/fstat05.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs02.c
ltp/testcases/kernel/syscalls/fsync/fsync02.c
ltp/testcases/kernel/syscalls/fsync/fsync03.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c
ltp/testcases/kernel/syscalls/getcwd/getcwd01.c
ltp/testcases/kernel/syscalls/getcwd/getcwd02.c
ltp/testcases/kernel/syscalls/getcwd/getcwd03.c
ltp/testcases/kernel/syscalls/getdents/getdents01.c
ltp/testcases/kernel/syscalls/getdents/getdents02.c
ltp/testcases/kernel/syscalls/getdents/getdents03.c
ltp/testcases/kernel/syscalls/getdents/getdents04.c
ltp/testcases/kernel/syscalls/getegid/getegid02.c
ltp/testcases/kernel/syscalls/getgid/getgid03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups04.c
ltp/testcases/kernel/syscalls/getitimer/getitimer01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer02.c
ltp/testcases/kernel/syscalls/getitimer/getitimer03.c
ltp/testcases/kernel/syscalls/getpeername/getpeername01.c
ltp/testcases/kernel/syscalls/getpgid/getpgid01.c
ltp/testcases/kernel/syscalls/getpgid/getpgid02.c
ltp/testcases/kernel/syscalls/getpid/getpid01.c
ltp/testcases/kernel/syscalls/getpid/getpid02.c
ltp/testcases/kernel/syscalls/getppid/getppid02.c
ltp/testcases/kernel/syscalls/getpriority/getpriority01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid01.c
ltp/testcases/kernel/syscalls/getresgid/getresgid02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid03.c
ltp/testcases/kernel/syscalls/getresuid/getresuid01.c
ltp/testcases/kernel/syscalls/getresuid/getresuid02.c
ltp/testcases/kernel/syscalls/getresuid/getresuid03.c
ltp/testcases/kernel/syscalls/getsid/getsid01.c
ltp/testcases/kernel/syscalls/getsid/getsid02.c
ltp/testcases/kernel/syscalls/getsockname/getsockname01.c
ltp/testcases/kernel/syscalls/getsockopt/getsockopt01.c
ltp/testcases/kernel/syscalls/gettid/gettid01.c
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/getuid/getuid02.c
ltp/testcases/kernel/syscalls/getuid/getuid03.c
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c
ltp/testcases/kernel/syscalls/ioperm/ioperm01.c
ltp/testcases/kernel/syscalls/ioperm/ioperm02.c
ltp/testcases/kernel/syscalls/iopl/iopl01.c
ltp/testcases/kernel/syscalls/iopl/iopl02.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl01.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl02.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl03.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl04.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl05.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget01.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget02.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget03.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv01.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv02.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv03.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd01.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd02.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd03.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd04.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl02.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl03.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl04.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl05.c
ltp/testcases/kernel/syscalls/ipc/semget/semget01.c
ltp/testcases/kernel/syscalls/ipc/semget/semget02.c
ltp/testcases/kernel/syscalls/ipc/semget/semget03.c
ltp/testcases/kernel/syscalls/ipc/semget/semget06.c
ltp/testcases/kernel/syscalls/ipc/semop/semop02.c
ltp/testcases/kernel/syscalls/ipc/semop/semop03.c
ltp/testcases/kernel/syscalls/ipc/semop/semop04.c
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl02.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl04.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt01.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget01.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget03.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget04.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget05.c
ltp/testcases/kernel/syscalls/kill/kill01.c
ltp/testcases/kernel/syscalls/kill/kill03.c
ltp/testcases/kernel/syscalls/kill/kill04.c
ltp/testcases/kernel/syscalls/kill/kill05.c
ltp/testcases/kernel/syscalls/kill/kill06.c
ltp/testcases/kernel/syscalls/kill/kill07.c
ltp/testcases/kernel/syscalls/kill/kill08.c
ltp/testcases/kernel/syscalls/kill/kill11.c
ltp/testcases/kernel/syscalls/kill/kill12.c
ltp/testcases/kernel/syscalls/lchown/lchown01.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c
ltp/testcases/kernel/syscalls/listen/listen01.c
ltp/testcases/kernel/syscalls/llseek/llseek01.c
ltp/testcases/kernel/syscalls/llseek/llseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek06.c
ltp/testcases/kernel/syscalls/lseek/lseek07.c
ltp/testcases/kernel/syscalls/lseek/lseek08.c
ltp/testcases/kernel/syscalls/lseek/lseek09.c
ltp/testcases/kernel/syscalls/lseek/lseek10.c
ltp/testcases/kernel/syscalls/lstat/lstat02.c
ltp/testcases/kernel/syscalls/lstat/lstat03.c
ltp/testcases/kernel/syscalls/mallopt/mallopt01.c
ltp/testcases/kernel/syscalls/memcmp/memcmp01.c
ltp/testcases/kernel/syscalls/memcpy/memcpy01.c
ltp/testcases/kernel/syscalls/memset/memset01.c
ltp/testcases/kernel/syscalls/mincore/mincore01.c
ltp/testcases/kernel/syscalls/mkdir/mkdir02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir03.c
ltp/testcases/kernel/syscalls/mkdir/mkdir04.c
ltp/testcases/kernel/syscalls/mkdir/mkdir05.c
ltp/testcases/kernel/syscalls/mkdir/mkdir09.c
ltp/testcases/kernel/syscalls/mknod/mknod02.c
ltp/testcases/kernel/syscalls/mknod/mknod03.c
ltp/testcases/kernel/syscalls/mknod/mknod04.c
ltp/testcases/kernel/syscalls/mknod/mknod05.c
ltp/testcases/kernel/syscalls/mknod/mknod06.c
ltp/testcases/kernel/syscalls/mknod/mknod07.c
ltp/testcases/kernel/syscalls/mknod/mknod08.c
ltp/testcases/kernel/syscalls/mknod/mknod09.c
ltp/testcases/kernel/syscalls/mmap/mmap04.c
ltp/testcases/kernel/syscalls/mmap/mmap05.c
ltp/testcases/kernel/syscalls/mmap/mmap06.c
ltp/testcases/kernel/syscalls/mmap/mmap07.c
ltp/testcases/kernel/syscalls/mmap/mmap08.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt01.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt02.c
ltp/testcases/kernel/syscalls/mprotect/mprotect01.c
ltp/testcases/kernel/syscalls/mprotect/mprotect02.c
ltp/testcases/kernel/syscalls/mprotect/mprotect03.c
ltp/testcases/kernel/syscalls/mremap/mremap01.c
ltp/testcases/kernel/syscalls/mremap/mremap02.c
ltp/testcases/kernel/syscalls/mremap/mremap03.c
ltp/testcases/kernel/syscalls/mremap/mremap04.c
ltp/testcases/kernel/syscalls/msync/msync01.c
ltp/testcases/kernel/syscalls/msync/msync02.c
ltp/testcases/kernel/syscalls/msync/msync03.c
ltp/testcases/kernel/syscalls/msync/msync04.c
ltp/testcases/kernel/syscalls/msync/msync05.c
ltp/testcases/kernel/syscalls/munmap/munmap01.c
ltp/testcases/kernel/syscalls/munmap/munmap02.c
ltp/testcases/kernel/syscalls/munmap/munmap03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep04.c
ltp/testcases/kernel/syscalls/nftw/nftw.c
ltp/testcases/kernel/syscalls/nftw/nftw64.c
ltp/testcases/kernel/syscalls/nice/nice01.c
ltp/testcases/kernel/syscalls/nice/nice02.c
ltp/testcases/kernel/syscalls/nice/nice03.c
ltp/testcases/kernel/syscalls/nice/nice04.c
ltp/testcases/kernel/syscalls/open/open01.c
ltp/testcases/kernel/syscalls/open/open02.c
ltp/testcases/kernel/syscalls/open/open04.c
ltp/testcases/kernel/syscalls/open/open05.c
ltp/testcases/kernel/syscalls/open/open06.c
ltp/testcases/kernel/syscalls/open/open07.c
ltp/testcases/kernel/syscalls/open/open08.c
ltp/testcases/kernel/syscalls/open/open09.c
ltp/testcases/kernel/syscalls/open/open10.c
ltp/testcases/kernel/syscalls/pause/pause02.c
ltp/testcases/kernel/syscalls/pause/pause03.c
ltp/testcases/kernel/syscalls/personality/personality01.c
ltp/testcases/kernel/syscalls/personality/personality02.c
ltp/testcases/kernel/syscalls/pipe/pipe01.c
ltp/testcases/kernel/syscalls/pipe/pipe05.c
ltp/testcases/kernel/syscalls/pipe/pipe06.c
ltp/testcases/kernel/syscalls/pipe/pipe08.c
ltp/testcases/kernel/syscalls/pipe/pipe09.c
ltp/testcases/kernel/syscalls/pipe/pipe10.c
ltp/testcases/kernel/syscalls/pipe/pipe11.c
ltp/testcases/kernel/syscalls/poll/poll01.c
ltp/testcases/kernel/syscalls/pread/pread01.c
ltp/testcases/kernel/syscalls/pread/pread02.c
ltp/testcases/kernel/syscalls/pread/pread03.c
ltp/testcases/kernel/syscalls/profil/profil01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite02.c
ltp/testcases/kernel/syscalls/pwrite/pwrite03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/kernel/syscalls/read/read02.c
ltp/testcases/kernel/syscalls/read/read03.c
ltp/testcases/kernel/syscalls/read/read04.c
ltp/testcases/kernel/syscalls/readlink/readlink01.c
ltp/testcases/kernel/syscalls/readlink/readlink03.c
ltp/testcases/kernel/syscalls/readlink/readlink04.c
ltp/testcases/kernel/syscalls/readv/readv01.c
ltp/testcases/kernel/syscalls/readv/readv02.c
ltp/testcases/kernel/syscalls/readv/readv03.c
ltp/testcases/kernel/syscalls/recv/recv01.c
ltp/testcases/kernel/syscalls/rename/rename01.c
ltp/testcases/kernel/syscalls/rename/rename03.c
ltp/testcases/kernel/syscalls/rename/rename04.c
ltp/testcases/kernel/syscalls/rename/rename05.c
ltp/testcases/kernel/syscalls/rename/rename06.c
ltp/testcases/kernel/syscalls/rename/rename07.c
ltp/testcases/kernel/syscalls/rename/rename08.c
ltp/testcases/kernel/syscalls/rename/rename09.c
ltp/testcases/kernel/syscalls/rename/rename10.c
ltp/testcases/kernel/syscalls/rename/rename12.c
ltp/testcases/kernel/syscalls/rename/rename13.c
ltp/testcases/kernel/syscalls/rename/rename14.c
ltp/testcases/kernel/syscalls/rmdir/rmdir01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir02.c
ltp/testcases/kernel/syscalls/rmdir/rmdir03.c
ltp/testcases/kernel/syscalls/sched_getscheduler/sched_getscheduler02.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler02.c
ltp/testcases/kernel/syscalls/sched_yield/sched_yield01.c
ltp/testcases/kernel/syscalls/send/send01.c
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile03.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c
ltp/testcases/kernel/syscalls/sendmsg/sendmsg01.c
ltp/testcases/kernel/syscalls/sendto/sendto01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c
ltp/testcases/kernel/syscalls/setitimer/setitimer01.c
ltp/testcases/kernel/syscalls/setitimer/setitimer02.c
ltp/testcases/kernel/syscalls/setitimer/setitimer03.c
ltp/testcases/kernel/syscalls/setpgid/setpgid02.c
ltp/testcases/kernel/syscalls/setpgid/setpgid03.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp02.c
ltp/testcases/kernel/syscalls/setpriority/setpriority01.c
ltp/testcases/kernel/syscalls/setpriority/setpriority02.c
ltp/testcases/kernel/syscalls/setpriority/setpriority03.c
ltp/testcases/kernel/syscalls/setpriority/setpriority04.c
ltp/testcases/kernel/syscalls/setpriority/setpriority05.c
ltp/testcases/kernel/syscalls/setregid/setregid02.c
ltp/testcases/kernel/syscalls/setregid/setregid03.c
ltp/testcases/kernel/syscalls/setregid/setregid04.c
ltp/testcases/kernel/syscalls/setresuid/setresuid01.c
ltp/testcases/kernel/syscalls/setresuid/setresuid02.c
ltp/testcases/kernel/syscalls/setresuid/setresuid03.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid02.c
ltp/testcases/kernel/syscalls/setreuid/setreuid03.c
ltp/testcases/kernel/syscalls/setreuid/setreuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid05.c
ltp/testcases/kernel/syscalls/setreuid/setreuid06.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit01.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit02.c
ltp/testcases/kernel/syscalls/setsid/setsid01.c
ltp/testcases/kernel/syscalls/setsockopt/setsockopt01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday02.c
ltp/testcases/kernel/syscalls/setuid/setuid03.c
ltp/testcases/kernel/syscalls/setuid/setuid04.c
ltp/testcases/kernel/syscalls/sigaction/sigaction01.c
ltp/testcases/kernel/syscalls/sigaction/sigaction02.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack01.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack02.c
ltp/testcases/kernel/syscalls/sighold/sighold02.c
ltp/testcases/kernel/syscalls/signal/signal02.c
ltp/testcases/kernel/syscalls/signal/signal03.c
ltp/testcases/kernel/syscalls/signal/signal04.c
ltp/testcases/kernel/syscalls/signal/signal05.c
ltp/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
ltp/testcases/kernel/syscalls/sigrelse/sigrelse01.c
ltp/testcases/kernel/syscalls/sigsuspend/sigsuspend01.c
ltp/testcases/kernel/syscalls/socket/socket01.c
ltp/testcases/kernel/syscalls/socketpair/socketpair01.c
ltp/testcases/kernel/syscalls/sockioctl/sockioctl01.c
ltp/testcases/kernel/syscalls/stat/stat01.c
ltp/testcases/kernel/syscalls/stat/stat02.c
ltp/testcases/kernel/syscalls/stat/stat03.c
ltp/testcases/kernel/syscalls/statfs/statfs02.c
ltp/testcases/kernel/syscalls/statfs/statfs03.c
ltp/testcases/kernel/syscalls/stime/stime01.c
ltp/testcases/kernel/syscalls/stime/stime02.c
ltp/testcases/kernel/syscalls/string/string01.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c
ltp/testcases/kernel/syscalls/symlink/symlink03.c
ltp/testcases/kernel/syscalls/symlink/symlink04.c
ltp/testcases/kernel/syscalls/symlink/symlink05.c
ltp/testcases/kernel/syscalls/sync/sync02.c
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c
ltp/testcases/kernel/syscalls/syscall/syscall01.c
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl03.c
ltp/testcases/kernel/syscalls/sysctl/sysctl04.c
ltp/testcases/kernel/syscalls/sysctl/sysctl05.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo01.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo02.c
ltp/testcases/kernel/syscalls/time/time02.c
ltp/testcases/kernel/syscalls/times/times03.c
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate02.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/truncate/truncate04.c
ltp/testcases/kernel/syscalls/umask/umask02.c
ltp/testcases/kernel/syscalls/umask/umask03.c
ltp/testcases/kernel/syscalls/uname/uname02.c
ltp/testcases/kernel/syscalls/uname/uname03.c
ltp/testcases/kernel/syscalls/utime/utime01.c
ltp/testcases/kernel/syscalls/utime/utime02.c
ltp/testcases/kernel/syscalls/utime/utime03.c
ltp/testcases/kernel/syscalls/utime/utime04.c
ltp/testcases/kernel/syscalls/utime/utime05.c
ltp/testcases/kernel/syscalls/utime/utime06.c
ltp/testcases/kernel/syscalls/vfork/vfork01.c
ltp/testcases/kernel/syscalls/vhangup/vhangup01.c
ltp/testcases/kernel/syscalls/vhangup/vhangup02.c
ltp/testcases/kernel/syscalls/wait4/wait401.c
ltp/testcases/kernel/syscalls/wait4/wait402.c
ltp/testcases/kernel/syscalls/waitpid/waitpid01.c
ltp/testcases/kernel/syscalls/waitpid/waitpid02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid03.c
ltp/testcases/kernel/syscalls/waitpid/waitpid04.c
ltp/testcases/kernel/syscalls/waitpid/waitpid05.c
ltp/testcases/kernel/syscalls/waitpid/waitpid06.c
ltp/testcases/kernel/syscalls/waitpid/waitpid07.c
ltp/testcases/kernel/syscalls/waitpid/waitpid08.c
ltp/testcases/kernel/syscalls/waitpid/waitpid09.c
ltp/testcases/kernel/syscalls/waitpid/waitpid10.c
ltp/testcases/kernel/syscalls/waitpid/waitpid11.c
ltp/testcases/kernel/syscalls/waitpid/waitpid12.c
ltp/testcases/kernel/syscalls/waitpid/waitpid13.c
ltp/testcases/kernel/syscalls/write/write02.c
ltp/testcases/kernel/syscalls/write/write03.c
ltp/testcases/kernel/syscalls/write/write04.c
ltp/testcases/kernel/syscalls/write/write05.c
ltp/testcases/kernel/syscalls/writev/writev01.c
ltp/testcases/kernel/syscalls/writev/writev02.c
ltp/testcases/kernel/syscalls/writev/writev03.c
ltp/testcases/kernel/syscalls/writev/writev04.c
ltp/testcases/kernel/syscalls/writev/writev05.c
ltp/testcases/kernel/syscalls/writev/writev06.c

55) Log Message:
fix return(1) -> return 1. Signed-off-by: Michal Simek <monstr@monstr.eu>. 

Modified Files:
ltp/testcases/kernel/fs/inode/inode02.c
ltp/testcases/kernel/fs/scsi/ltpfs/main.c
ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap03.c
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/mem/mmapstress/mmapstress09.c
ltp/testcases/kernel/mem/mmapstress/mmapstress10.c
ltp/testcases/kernel/mem/page/page01.c
ltp/testcases/kernel/sched/nptl/nptl01.c
ltp/testcases/kernel/sched/sched_stress/sched_tc6.c
ltp/testcases/kernel/syscalls/abort/abort01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07B.c
ltp/testcases/kernel/syscalls/fcntl/fcntl15.c
ltp/testcases/kernel/syscalls/fcntl/fcntl16.c
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c

56) Log Message:
Fix return(NULL) -> return NULL. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/syscalls/sigrelse/sigrelse01.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c

57) Log Message:
Clear Trailing Whitespace. Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/containers/netns/crtchild.c
ltp/testcases/kernel/containers/netns/crtchild_delchild.c
ltp/testcases/kernel/containers/netns/par_chld_ftp.c
ltp/testcases/kernel/containers/netns/par_chld_ipv6.c
ltp/testcases/kernel/containers/netns/sysfsview.c
ltp/testcases/kernel/containers/netns/two_children_ns.c
ltp/testcases/kernel/containers/pidns/pidns04.c
ltp/testcases/kernel/containers/sysvipc/check_ipcns_enabled.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/device-drivers/acpi/LtpAcpiCmds.c
ltp/testcases/kernel/device-drivers/agp/kernel_space/tagp.c
ltp/testcases/kernel/device-drivers/agp/user_space/tagp_ki.c
ltp/testcases/kernel/device-drivers/agp/user_space/user_tagp.c
ltp/testcases/kernel/device-drivers/base/tbase/tbase.c
ltp/testcases/kernel/device-drivers/base/user_base/tbase_ki.c
ltp/testcases/kernel/device-drivers/base/user_base/user_tbase.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/kernel_space/tmod.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/tmod_ki.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/user_tmod.c
ltp/testcases/kernel/device-drivers/drm/kernel_space/tdrm.c
ltp/testcases/kernel/device-drivers/drm/user_space/user_tdrm.c
ltp/testcases/kernel/device-drivers/include/includeTest.c
ltp/testcases/kernel/device-drivers/include/userBlockInclude.c
ltp/testcases/kernel/device-drivers/nls/userBlockNLS.c
ltp/testcases/kernel/device-drivers/pci/tpci/tpci.c
ltp/testcases/kernel/device-drivers/pci/user_tpci/tpci_ki.c
ltp/testcases/kernel/device-drivers/pci/user_tpci/user_tpci.c
ltp/testcases/kernel/device-drivers/tbio/kernel_space/tbio.c
ltp/testcases/kernel/device-drivers/tbio/user_space/tbio_ki.c
ltp/testcases/kernel/device-drivers/tbio/user_space/user_tbio.c
ltp/testcases/kernel/device-drivers/usb/tusb/tusb.c
ltp/testcases/kernel/device-drivers/usb/user_usb/tusb_ki.c
ltp/testcases/kernel/device-drivers/usb/user_usb/user_tusb.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/fs/acls/acl_file_test.c
ltp/testcases/kernel/fs/dmapi/attr.c
ltp/testcases/kernel/fs/dmapi/config.c
ltp/testcases/kernel/fs/dmapi/disp.c
ltp/testcases/kernel/fs/dmapi/dm_test.c
ltp/testcases/kernel/fs/dmapi/event.c
ltp/testcases/kernel/fs/dmapi/event_am.c
ltp/testcases/kernel/fs/dmapi/event_an.c
ltp/testcases/kernel/fs/dmapi/event_sd.c
ltp/testcases/kernel/fs/dmapi/event_sn.c
ltp/testcases/kernel/fs/dmapi/event_us.c
ltp/testcases/kernel/fs/dmapi/handle.c
ltp/testcases/kernel/fs/dmapi/hole.c
ltp/testcases/kernel/fs/dmapi/invis.c
ltp/testcases/kernel/fs/dmapi/mmap.c
ltp/testcases/kernel/fs/dmapi/mmapfile.c
ltp/testcases/kernel/fs/dmapi/mount.c
ltp/testcases/kernel/fs/dmapi/objref.c
ltp/testcases/kernel/fs/dmapi/pmr_post.c
ltp/testcases/kernel/fs/dmapi/pmr_pre.c
ltp/testcases/kernel/fs/dmapi/right.c
ltp/testcases/kernel/fs/dmapi/session.c
ltp/testcases/kernel/fs/dmapi/token.c
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/fs/doio/growfiles.c
ltp/testcases/kernel/fs/doio/iogen.c
ltp/testcases/kernel/fs/fs-bench/create-files.c
ltp/testcases/kernel/fs/fs-bench/random-del-create.c
ltp/testcases/kernel/fs/fs_di/create_datafile.c
ltp/testcases/kernel/fs/fsstress/fsstress.c
ltp/testcases/kernel/fs/fsx-linux/fsx-linux.c
ltp/testcases/kernel/fs/ftest/ftest01.c
ltp/testcases/kernel/fs/ftest/ftest02.c
ltp/testcases/kernel/fs/ftest/ftest03.c
ltp/testcases/kernel/fs/ftest/ftest04.c
ltp/testcases/kernel/fs/ftest/ftest06.c
ltp/testcases/kernel/fs/ftest/ftest07.c
ltp/testcases/kernel/fs/inode/inode01.c
ltp/testcases/kernel/fs/inode/inode02.c
ltp/testcases/kernel/fs/mongo/map5.c
ltp/testcases/kernel/fs/mongo/mongo_compare.c
ltp/testcases/kernel/fs/mongo/mongo_read.c
ltp/testcases/kernel/fs/mongo/mongo_slinks.c
ltp/testcases/kernel/fs/mongo/reiser_fract_tree.c
ltp/testcases/kernel/fs/mongo/summ.c
ltp/testcases/kernel/fs/openfile/openfile.c
ltp/testcases/kernel/fs/proc/proc01.c
ltp/testcases/kernel/fs/scsi/ltpfs/LtpfsCmds.c
ltp/testcases/kernel/fs/scsi/ltpfs/main.c
ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.c
ltp/testcases/kernel/fs/scsi/ltpscsi/sg_err.c
ltp/testcases/kernel/fs/stream/stream01.c
ltp/testcases/kernel/fs/stream/stream02.c
ltp/testcases/kernel/fs/stream/stream03.c
ltp/testcases/kernel/fs/stream/stream04.c
ltp/testcases/kernel/fs/stream/stream05.c
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.c
ltp/testcases/kernel/hotplug/memory_hotplug/segment.c
ltp/testcases/kernel/io/aio/aio01/aio01.c
ltp/testcases/kernel/io/aio/aio02/main.c
ltp/testcases/kernel/io/aio/aio02/cases/aio_tio.c
ltp/testcases/kernel/io/direct_io/diotest1.c
ltp/testcases/kernel/io/direct_io/diotest2.c
ltp/testcases/kernel/io/direct_io/diotest3.c
ltp/testcases/kernel/io/direct_io/diotest4.c
ltp/testcases/kernel/io/direct_io/diotest5.c
ltp/testcases/kernel/io/direct_io/diotest6.c
ltp/testcases/kernel/io/direct_io/diotest_routines.c
ltp/testcases/kernel/io/direct_io/dma_thread_diotest7.c
ltp/testcases/kernel/io/disktest/childmain.c
ltp/testcases/kernel/io/disktest/dump.c
ltp/testcases/kernel/io/disktest/globals.c
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/parse.c
ltp/testcases/kernel/io/disktest/sfunc.c
ltp/testcases/kernel/io/disktest/threading.c
ltp/testcases/kernel/io/disktest/timer.c
ltp/testcases/kernel/io/ltp-aiodio/aio-stress.c
ltp/testcases/kernel/io/ltp-aiodio/aiocp.c
ltp/testcases/kernel/io/ltp-aiodio/aiodio_sparse.c
ltp/testcases/kernel/io/ltp-aiodio/dio_sparse.c
ltp/testcases/kernel/io/ltp-aiodio/ltp-diorh.c
ltp/testcases/kernel/io/ltp-aiodio/read_checkzero.c
ltp/testcases/kernel/io/stress_cd/stress_cd.c
ltp/testcases/kernel/io/writetest/writetest.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_ctl.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_get.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_rcv.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_snd.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_04.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_05.c
ltp/testcases/kernel/ipc/ipc_stress/pipe_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/pipe_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_04.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_05.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_06.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_07.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_04.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_05.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_06.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_07.c
ltp/testcases/kernel/ipc/pipeio/pipeio.c
ltp/testcases/kernel/ipc/semaphore/sem01.c
ltp/testcases/kernel/ipc/semaphore/sem02.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap01.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap03.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmdt/hugeshmdt01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget05.c
ltp/testcases/kernel/mem/hugetlb/lib/libipc.c
ltp/testcases/kernel/mem/libmm/mm_core_apis.c
ltp/testcases/kernel/mem/mem/mem01.c
ltp/testcases/kernel/mem/mem/mem02.c
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/mem/mmapstress/mmapstress04.c
ltp/testcases/kernel/mem/mmapstress/mmapstress05.c
ltp/testcases/kernel/mem/mmapstress/mmapstress09.c
ltp/testcases/kernel/mem/mmapstress/mmapstress10.c
ltp/testcases/kernel/mem/mtest01/mtest01.c
ltp/testcases/kernel/mem/mtest05/mmstress.c
ltp/testcases/kernel/mem/mtest06/mmap1.c
ltp/testcases/kernel/mem/mtest06/mmap2.c
ltp/testcases/kernel/mem/mtest06/mmap3.c
ltp/testcases/kernel/mem/mtest06/shmat1.c
ltp/testcases/kernel/mem/mtest07/mallocstress.c
ltp/testcases/kernel/mem/mtest07/shm_test.c
ltp/testcases/kernel/mem/page/page01.c
ltp/testcases/kernel/mem/page/page02.c
ltp/testcases/kernel/module/create_module/create_module01.c
ltp/testcases/kernel/module/create_module/create_module02.c
ltp/testcases/kernel/module/delete_module/delete_module01.c
ltp/testcases/kernel/module/delete_module/delete_module02.c
ltp/testcases/kernel/module/delete_module/delete_module03.c
ltp/testcases/kernel/module/delete_module/dummy_del_mod.c
ltp/testcases/kernel/module/query_module/query_module01.c
ltp/testcases/kernel/module/query_module/query_module02.c
ltp/testcases/kernel/module/query_module/query_module03.c
ltp/testcases/kernel/numa/numa_node_size.c
ltp/testcases/kernel/numa/support_numa.c
ltp/testcases/kernel/power_management/check_kv_arch.c
ltp/testcases/kernel/pty/pty01.c
ltp/testcases/kernel/sched/clisrv/pthcli.c
ltp/testcases/kernel/sched/clisrv/pthserv.c
ltp/testcases/kernel/sched/clisrv/readline.c
ltp/testcases/kernel/sched/nptl/nptl01.c
ltp/testcases/kernel/sched/process_stress/process.c
ltp/testcases/kernel/sched/pthreads/pth_str02.c
ltp/testcases/kernel/sched/pthreads/pth_str03.c
ltp/testcases/kernel/sched/sched_stress/sched.c
ltp/testcases/kernel/sched/sched_stress/sched_driver.c
ltp/testcases/kernel/sched/sched_stress/sched_tc0.c
ltp/testcases/kernel/sched/sched_stress/sched_tc1.c
ltp/testcases/kernel/sched/sched_stress/sched_tc2.c
ltp/testcases/kernel/sched/sched_stress/sched_tc3.c
ltp/testcases/kernel/sched/sched_stress/sched_tc4.c
ltp/testcases/kernel/sched/sched_stress/sched_tc5.c
ltp/testcases/kernel/sched/sched_stress/sched_tc6.c
ltp/testcases/kernel/sched/tool/time-schedule.c
ltp/testcases/kernel/sched/tool/trace_sched.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_file/selinux_lease.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_chroot.c
ltp/testcases/kernel/security/selinux-testsuite/tests/capable_sys/selinux_rawio.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrace/selinux_dyntrace_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrace/selinux_dyntrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/exectrace/selinux_exectrace_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/exectrace/selinux_exectrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive_client.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_fcntl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_lock.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_mmap.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_mprotect.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_nofcntl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_seek.c
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_sigiotask.c
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_ioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ioctl/selinux_noioctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/msg/selinux_msgctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/open/selinux_append2write.c
ltp/testcases/kernel/security/selinux-testsuite/tests/open/selinux_fopen.c
ltp/testcases/kernel/security/selinux-testsuite/tests/ptrace/selinux_ptrace.c
ltp/testcases/kernel/security/selinux-testsuite/tests/sem/selinux_semctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/setnice/selinux_setnice_child.c
ltp/testcases/kernel/security/selinux-testsuite/tests/setnice/selinux_setnice_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/shm/selinux_shmctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/sigkill/selinux_sigkill_server.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_create/selinux_task_create_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getpgid/selinux_task_getpgid_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getpgid/selinux_task_getpgid_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getscheduler/selinux_task_getscheduler_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getscheduler/selinux_task_getscheduler_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getsid/selinux_task_getsid_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_getsid/selinux_task_getsid_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setnice/selinux_task_setnice_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setscheduler/selinux_task_setscheduler_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setscheduler/selinux_task_setscheduler_target.c
ltp/testcases/kernel/security/selinux-testsuite/tests/wait/selinux_wait_child.c
ltp/testcases/kernel/syscalls/accept/accept01.c
ltp/testcases/kernel/syscalls/accept4/accept4_01.c
ltp/testcases/kernel/syscalls/access/access01.c
ltp/testcases/kernel/syscalls/access/access02.c
ltp/testcases/kernel/syscalls/access/access03.c
ltp/testcases/kernel/syscalls/access/access04.c
ltp/testcases/kernel/syscalls/access/access05.c
ltp/testcases/kernel/syscalls/acct/acct01.c
ltp/testcases/kernel/syscalls/acct/acct02.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex01.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex02.c
ltp/testcases/kernel/syscalls/alarm/alarm01.c
ltp/testcases/kernel/syscalls/alarm/alarm02.c
ltp/testcases/kernel/syscalls/alarm/alarm03.c
ltp/testcases/kernel/syscalls/alarm/alarm05.c
ltp/testcases/kernel/syscalls/alarm/alarm06.c
ltp/testcases/kernel/syscalls/alarm/alarm07.c
ltp/testcases/kernel/syscalls/asyncio/asyncio02.c
ltp/testcases/kernel/syscalls/bind/bind01.c
ltp/testcases/kernel/syscalls/bind/bind02.c
ltp/testcases/kernel/syscalls/brk/brk01.c
ltp/testcases/kernel/syscalls/capget/capget01.c
ltp/testcases/kernel/syscalls/capget/capget02.c
ltp/testcases/kernel/syscalls/capset/capset01.c
ltp/testcases/kernel/syscalls/capset/capset02.c
ltp/testcases/kernel/syscalls/chdir/chdir02.c
ltp/testcases/kernel/syscalls/chdir/chdir03.c
ltp/testcases/kernel/syscalls/chdir/chdir04.c
ltp/testcases/kernel/syscalls/chmod/change_owner.c
ltp/testcases/kernel/syscalls/chmod/chmod01.c
ltp/testcases/kernel/syscalls/chmod/chmod02.c
ltp/testcases/kernel/syscalls/chmod/chmod03.c
ltp/testcases/kernel/syscalls/chmod/chmod04.c
ltp/testcases/kernel/syscalls/chmod/chmod05.c
ltp/testcases/kernel/syscalls/chmod/chmod06.c
ltp/testcases/kernel/syscalls/chmod/chmod07.c
ltp/testcases/kernel/syscalls/chown/chown01.c
ltp/testcases/kernel/syscalls/chown/chown02.c
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/chown/chown04.c
ltp/testcases/kernel/syscalls/chown/chown05.c
ltp/testcases/kernel/syscalls/chroot/chroot02.c
ltp/testcases/kernel/syscalls/chroot/chroot04.c
ltp/testcases/kernel/syscalls/clone/clone01.c
ltp/testcases/kernel/syscalls/clone/clone02.c
ltp/testcases/kernel/syscalls/clone/clone03.c
ltp/testcases/kernel/syscalls/clone/clone04.c
ltp/testcases/kernel/syscalls/clone/clone05.c
ltp/testcases/kernel/syscalls/clone/clone06.c
ltp/testcases/kernel/syscalls/clone/clone07.c
ltp/testcases/kernel/syscalls/close/close08.c
ltp/testcases/kernel/syscalls/confstr/confstr01.c
ltp/testcases/kernel/syscalls/connect/connect01.c
ltp/testcases/kernel/syscalls/creat/creat08.c
ltp/testcases/kernel/syscalls/creat/creat09.c
ltp/testcases/kernel/syscalls/dup/dup01.c
ltp/testcases/kernel/syscalls/dup/dup02.c
ltp/testcases/kernel/syscalls/dup/dup03.c
ltp/testcases/kernel/syscalls/dup/dup04.c
ltp/testcases/kernel/syscalls/dup/dup05.c
ltp/testcases/kernel/syscalls/dup/dup06.c
ltp/testcases/kernel/syscalls/dup/dup07.c
ltp/testcases/kernel/syscalls/dup2/dup201.c
ltp/testcases/kernel/syscalls/dup2/dup204.c
ltp/testcases/kernel/syscalls/epoll/epoll-ltp.c
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_02.c
ltp/testcases/kernel/syscalls/execl/execl01.c
ltp/testcases/kernel/syscalls/execle/execle01.c
ltp/testcases/kernel/syscalls/execlp/execlp01.c
ltp/testcases/kernel/syscalls/execv/execv01.c
ltp/testcases/kernel/syscalls/execve/execve01.c
ltp/testcases/kernel/syscalls/execve/execve02.c
ltp/testcases/kernel/syscalls/execve/execve03.c
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/execve/execve06.c
ltp/testcases/kernel/syscalls/execvp/execvp01.c
ltp/testcases/kernel/syscalls/exit/exit02.c
ltp/testcases/kernel/syscalls/faccessat/faccessat01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fchdir/fchdir03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod01.c
ltp/testcases/kernel/syscalls/fchmod/fchmod02.c
ltp/testcases/kernel/syscalls/fchmod/fchmod03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod04.c
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchmod/fchmod07.c
ltp/testcases/kernel/syscalls/fchmodat/fchmodat01.c
ltp/testcases/kernel/syscalls/fchownat/fchownat01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl02.c
ltp/testcases/kernel/syscalls/fcntl/fcntl03.c
ltp/testcases/kernel/syscalls/fcntl/fcntl04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl05.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07B.c
ltp/testcases/kernel/syscalls/fcntl/fcntl08.c
ltp/testcases/kernel/syscalls/fcntl/fcntl09.c
ltp/testcases/kernel/syscalls/fcntl/fcntl10.c
ltp/testcases/kernel/syscalls/fcntl/fcntl11.c
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl15.c
ltp/testcases/kernel/syscalls/fcntl/fcntl16.c
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c
ltp/testcases/kernel/syscalls/fcntl/fcntl19.c
ltp/testcases/kernel/syscalls/fcntl/fcntl20.c
ltp/testcases/kernel/syscalls/fcntl/fcntl21.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync01.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync02.c
ltp/testcases/kernel/syscalls/flock/flock01.c
ltp/testcases/kernel/syscalls/flock/flock02.c
ltp/testcases/kernel/syscalls/flock/flock03.c
ltp/testcases/kernel/syscalls/flock/flock04.c
ltp/testcases/kernel/syscalls/flock/flock05.c
ltp/testcases/kernel/syscalls/flock/flock06.c
ltp/testcases/kernel/syscalls/fmtmsg/fmtmsg01.c
ltp/testcases/kernel/syscalls/fork/fork01.c
ltp/testcases/kernel/syscalls/fork/fork04.c
ltp/testcases/kernel/syscalls/fork/fork05.c
ltp/testcases/kernel/syscalls/fork/fork07.c
ltp/testcases/kernel/syscalls/fork/fork08.c
ltp/testcases/kernel/syscalls/fork/fork09.c
ltp/testcases/kernel/syscalls/fork/fork10.c
ltp/testcases/kernel/syscalls/fork/fork12.c
ltp/testcases/kernel/syscalls/fpathconf/fpathconf01.c
ltp/testcases/kernel/syscalls/fstat/fstat01.c
ltp/testcases/kernel/syscalls/fstat/fstat02.c
ltp/testcases/kernel/syscalls/fstat/fstat03.c
ltp/testcases/kernel/syscalls/fstat/fstat04.c
ltp/testcases/kernel/syscalls/fstat/fstat05.c
ltp/testcases/kernel/syscalls/fstatat/fstatat01.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs01.c
ltp/testcases/kernel/syscalls/fsync/fsync01.c
ltp/testcases/kernel/syscalls/fsync/fsync02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate03.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/futimesat/futimesat01.c
ltp/testcases/kernel/syscalls/getcontext/getcontext01.c
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c
ltp/testcases/kernel/syscalls/getcwd/getcwd02.c
ltp/testcases/kernel/syscalls/getdents/getdents01.c
ltp/testcases/kernel/syscalls/getdents/getdents02.c
ltp/testcases/kernel/syscalls/getdents/getdents03.c
ltp/testcases/kernel/syscalls/getdents/getdents04.c
ltp/testcases/kernel/syscalls/getdomainname/getdomainname01.c
ltp/testcases/kernel/syscalls/getegid/getegid01.c
ltp/testcases/kernel/syscalls/getegid/getegid02.c
ltp/testcases/kernel/syscalls/geteuid/geteuid01.c
ltp/testcases/kernel/syscalls/getgid/getgid01.c
ltp/testcases/kernel/syscalls/getgid/getgid03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups02.c
ltp/testcases/kernel/syscalls/getgroups/getgroups03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups04.c
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c
ltp/testcases/kernel/syscalls/gethostname/gethostname01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer03.c
ltp/testcases/kernel/syscalls/getpagesize/getpagesize01.c
ltp/testcases/kernel/syscalls/getpeername/getpeername01.c
ltp/testcases/kernel/syscalls/getpgrp/getpgrp01.c
ltp/testcases/kernel/syscalls/getpid/getpid01.c
ltp/testcases/kernel/syscalls/getpid/getpid02.c
ltp/testcases/kernel/syscalls/getppid/getppid01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid01.c
ltp/testcases/kernel/syscalls/getresgid/getresgid02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid03.c
ltp/testcases/kernel/syscalls/getresuid/getresuid01.c
ltp/testcases/kernel/syscalls/getresuid/getresuid02.c
ltp/testcases/kernel/syscalls/getresuid/getresuid03.c
ltp/testcases/kernel/syscalls/getrlimit/getrlimit01.c
ltp/testcases/kernel/syscalls/getrlimit/getrlimit02.c
ltp/testcases/kernel/syscalls/getrusage/getrusage01.c
ltp/testcases/kernel/syscalls/getrusage/getrusage02.c
ltp/testcases/kernel/syscalls/getsid/getsid02.c
ltp/testcases/kernel/syscalls/getsockname/getsockname01.c
ltp/testcases/kernel/syscalls/getsockopt/getsockopt01.c
ltp/testcases/kernel/syscalls/gettid/gettid01.c
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/getuid/getuid03.c
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c
ltp/testcases/kernel/syscalls/ioctl/ioctl03.c
ltp/testcases/kernel/syscalls/ioperm/ioperm01.c
ltp/testcases/kernel/syscalls/ioperm/ioperm02.c
ltp/testcases/kernel/syscalls/iopl/iopl01.c
ltp/testcases/kernel/syscalls/iopl/iopl02.c
ltp/testcases/kernel/syscalls/ipc/lib/libipc.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl06.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget02.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl02.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl03.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl04.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl05.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl07.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl04.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt01.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget03.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget05.c
ltp/testcases/kernel/syscalls/kill/kill02.c
ltp/testcases/kernel/syscalls/kill/kill05.c
ltp/testcases/kernel/syscalls/kill/kill07.c
ltp/testcases/kernel/syscalls/kill/kill09.c
ltp/testcases/kernel/syscalls/kill/kill10.c
ltp/testcases/kernel/syscalls/kill/kill11.c
ltp/testcases/kernel/syscalls/kill/kill12.c
ltp/testcases/kernel/syscalls/lchown/lchown01.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c
ltp/testcases/kernel/syscalls/libevent/buffer.c
ltp/testcases/kernel/syscalls/libevent/epoll.c
ltp/testcases/kernel/syscalls/libevent/evbuffer.c
ltp/testcases/kernel/syscalls/libevent/event.c
ltp/testcases/kernel/syscalls/libevent/kqueue.c
ltp/testcases/kernel/syscalls/libevent/poll.c
ltp/testcases/kernel/syscalls/libevent/select.c
ltp/testcases/kernel/syscalls/libevent/sample/event-test.c
ltp/testcases/kernel/syscalls/libevent/sample/signal-test.c
ltp/testcases/kernel/syscalls/libevent/sample/time-test.c
ltp/testcases/kernel/syscalls/link/link02.c
ltp/testcases/kernel/syscalls/link/link03.c
ltp/testcases/kernel/syscalls/link/link04.c
ltp/testcases/kernel/syscalls/link/link05.c
ltp/testcases/kernel/syscalls/link/link06.c
ltp/testcases/kernel/syscalls/link/link07.c
ltp/testcases/kernel/syscalls/linkat/linkat01.c
ltp/testcases/kernel/syscalls/listen/listen01.c
ltp/testcases/kernel/syscalls/lseek/lseek01.c
ltp/testcases/kernel/syscalls/lseek/lseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek03.c
ltp/testcases/kernel/syscalls/lseek/lseek04.c
ltp/testcases/kernel/syscalls/lseek/lseek05.c
ltp/testcases/kernel/syscalls/lseek/lseek06.c
ltp/testcases/kernel/syscalls/lseek/lseek07.c
ltp/testcases/kernel/syscalls/lseek/lseek08.c
ltp/testcases/kernel/syscalls/lseek/lseek09.c
ltp/testcases/kernel/syscalls/lseek/lseek10.c
ltp/testcases/kernel/syscalls/lstat/lstat01.c
ltp/testcases/kernel/syscalls/lstat/lstat02.c
ltp/testcases/kernel/syscalls/lstat/lstat03.c
ltp/testcases/kernel/syscalls/madvise/madvise01.c
ltp/testcases/kernel/syscalls/madvise/madvise02.c
ltp/testcases/kernel/syscalls/madvise/madvise03.c
ltp/testcases/kernel/syscalls/mallopt/mallopt01.c
ltp/testcases/kernel/syscalls/mincore/mincore01.c
ltp/testcases/kernel/syscalls/mincore/mincore02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir01.c
ltp/testcases/kernel/syscalls/mkdir/mkdir02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir03.c
ltp/testcases/kernel/syscalls/mkdir/mkdir04.c
ltp/testcases/kernel/syscalls/mkdir/mkdir05.c
ltp/testcases/kernel/syscalls/mkdir/mkdir08.c
ltp/testcases/kernel/syscalls/mkdir/mkdir09.c
ltp/testcases/kernel/syscalls/mkdirat/mkdirat01.c
ltp/testcases/kernel/syscalls/mknod/mknod01.c
ltp/testcases/kernel/syscalls/mknod/mknod02.c
ltp/testcases/kernel/syscalls/mknod/mknod03.c
ltp/testcases/kernel/syscalls/mknod/mknod04.c
ltp/testcases/kernel/syscalls/mknod/mknod05.c
ltp/testcases/kernel/syscalls/mknod/mknod06.c
ltp/testcases/kernel/syscalls/mknod/mknod07.c
ltp/testcases/kernel/syscalls/mknod/mknod08.c
ltp/testcases/kernel/syscalls/mknod/mknod09.c
ltp/testcases/kernel/syscalls/mknodat/mknodat01.c
ltp/testcases/kernel/syscalls/mlock/mlock01.c
ltp/testcases/kernel/syscalls/mlock/mlock02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall01.c
ltp/testcases/kernel/syscalls/mlockall/mlockall02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall03.c
ltp/testcases/kernel/syscalls/mmap/mmap001.c
ltp/testcases/kernel/syscalls/mmap/mmap01.c
ltp/testcases/kernel/syscalls/mmap/mmap02.c
ltp/testcases/kernel/syscalls/mmap/mmap03.c
ltp/testcases/kernel/syscalls/mmap/mmap04.c
ltp/testcases/kernel/syscalls/mmap/mmap05.c
ltp/testcases/kernel/syscalls/mmap/mmap06.c
ltp/testcases/kernel/syscalls/mmap/mmap07.c
ltp/testcases/kernel/syscalls/mmap/mmap08.c
ltp/testcases/kernel/syscalls/mmap/mmap09.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt01.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt02.c
ltp/testcases/kernel/syscalls/mount/mount01.c
ltp/testcases/kernel/syscalls/mount/mount02.c
ltp/testcases/kernel/syscalls/mount/mount03.c
ltp/testcases/kernel/syscalls/mount/mount04.c
ltp/testcases/kernel/syscalls/mount/setuid_test.c
ltp/testcases/kernel/syscalls/mprotect/mprotect01.c
ltp/testcases/kernel/syscalls/mprotect/mprotect02.c
ltp/testcases/kernel/syscalls/mremap/mremap01.c
ltp/testcases/kernel/syscalls/mremap/mremap02.c
ltp/testcases/kernel/syscalls/mremap/mremap03.c
ltp/testcases/kernel/syscalls/mremap/mremap04.c
ltp/testcases/kernel/syscalls/msync/msync01.c
ltp/testcases/kernel/syscalls/msync/msync02.c
ltp/testcases/kernel/syscalls/msync/msync03.c
ltp/testcases/kernel/syscalls/msync/msync04.c
ltp/testcases/kernel/syscalls/msync/msync05.c
ltp/testcases/kernel/syscalls/munlock/munlock01.c
ltp/testcases/kernel/syscalls/munlock/munlock02.c
ltp/testcases/kernel/syscalls/munlockall/munlockall01.c
ltp/testcases/kernel/syscalls/munlockall/munlockall02.c
ltp/testcases/kernel/syscalls/munmap/munmap01.c
ltp/testcases/kernel/syscalls/munmap/munmap02.c
ltp/testcases/kernel/syscalls/munmap/munmap03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep01.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep04.c
ltp/testcases/kernel/syscalls/nftw/lib.c
ltp/testcases/kernel/syscalls/nftw/lib64.c
ltp/testcases/kernel/syscalls/nftw/nftw.c
ltp/testcases/kernel/syscalls/nftw/nftw64.c
ltp/testcases/kernel/syscalls/nftw/test.c
ltp/testcases/kernel/syscalls/nftw/test64.c
ltp/testcases/kernel/syscalls/nftw/test_func.c
ltp/testcases/kernel/syscalls/nftw/test_func64.c
ltp/testcases/kernel/syscalls/nftw/tools.c
ltp/testcases/kernel/syscalls/nftw/tools64.c
ltp/testcases/kernel/syscalls/nice/nice01.c
ltp/testcases/kernel/syscalls/nice/nice02.c
ltp/testcases/kernel/syscalls/nice/nice03.c
ltp/testcases/kernel/syscalls/nice/nice04.c
ltp/testcases/kernel/syscalls/nice/nice05.c
ltp/testcases/kernel/syscalls/open/open01.c
ltp/testcases/kernel/syscalls/open/open02.c
ltp/testcases/kernel/syscalls/open/open03.c
ltp/testcases/kernel/syscalls/open/open04.c
ltp/testcases/kernel/syscalls/open/open10.c
ltp/testcases/kernel/syscalls/openat/openat01.c
ltp/testcases/kernel/syscalls/pathconf/pathconf01.c
ltp/testcases/kernel/syscalls/pause/pause01.c
ltp/testcases/kernel/syscalls/pause/pause02.c
ltp/testcases/kernel/syscalls/pause/pause03.c
ltp/testcases/kernel/syscalls/pcllib/pcl/pcl.c
ltp/testcases/kernel/syscalls/pipe/pipe02.c
ltp/testcases/kernel/syscalls/pipe/pipe03.c
ltp/testcases/kernel/syscalls/pipe/pipe04.c
ltp/testcases/kernel/syscalls/pipe/pipe10.c
ltp/testcases/kernel/syscalls/pipe/pipe11.c
ltp/testcases/kernel/syscalls/pipe2/pipe2_02.c
ltp/testcases/kernel/syscalls/poll/poll01.c
ltp/testcases/kernel/syscalls/prctl/prctl01.c
ltp/testcases/kernel/syscalls/prctl/prctl02.c
ltp/testcases/kernel/syscalls/profil/profil01.c
ltp/testcases/kernel/syscalls/pselect/pselect01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace02.c
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite02.c
ltp/testcases/kernel/syscalls/pwrite/pwrite03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/kernel/syscalls/read/read01.c
ltp/testcases/kernel/syscalls/readdir/readdir01.c
ltp/testcases/kernel/syscalls/readdir/readdir02.c
ltp/testcases/kernel/syscalls/readlink/readlink01.c
ltp/testcases/kernel/syscalls/readlink/readlink02.c
ltp/testcases/kernel/syscalls/readlink/readlink03.c
ltp/testcases/kernel/syscalls/readlink/readlink04.c
ltp/testcases/kernel/syscalls/readlinkat/readlinkat01.c
ltp/testcases/kernel/syscalls/readv/readv03.c
ltp/testcases/kernel/syscalls/reboot/reboot01.c
ltp/testcases/kernel/syscalls/reboot/reboot02.c
ltp/testcases/kernel/syscalls/recv/recv01.c
ltp/testcases/kernel/syscalls/recvfrom/recvfrom01.c
ltp/testcases/kernel/syscalls/recvmsg/recvmsg01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c
ltp/testcases/kernel/syscalls/rename/rename01.c
ltp/testcases/kernel/syscalls/rename/rename02.c
ltp/testcases/kernel/syscalls/rename/rename03.c
ltp/testcases/kernel/syscalls/rename/rename04.c
ltp/testcases/kernel/syscalls/rename/rename05.c
ltp/testcases/kernel/syscalls/rename/rename06.c
ltp/testcases/kernel/syscalls/rename/rename07.c
ltp/testcases/kernel/syscalls/rename/rename08.c
ltp/testcases/kernel/syscalls/rename/rename09.c
ltp/testcases/kernel/syscalls/rename/rename10.c
ltp/testcases/kernel/syscalls/rename/rename12.c
ltp/testcases/kernel/syscalls/rename/rename13.c
ltp/testcases/kernel/syscalls/rename/rename14.c
ltp/testcases/kernel/syscalls/renameat/renameat01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir02.c
ltp/testcases/kernel/syscalls/rmdir/rmdir03.c
ltp/testcases/kernel/syscalls/rmdir/rmdir04.c
ltp/testcases/kernel/syscalls/rmdir/rmdir05.c
ltp/testcases/kernel/syscalls/sbrk/sbrk01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max02.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min01.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam01.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval01.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval02.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam01.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam02.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam05.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler02.c
ltp/testcases/kernel/syscalls/select/select01.c
ltp/testcases/kernel/syscalls/select/select02.c
ltp/testcases/kernel/syscalls/select/select03.c
ltp/testcases/kernel/syscalls/send/send01.c
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c
ltp/testcases/kernel/syscalls/sendmsg/sendmsg01.c
ltp/testcases/kernel/syscalls/sendto/sendto01.c
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname03.c
ltp/testcases/kernel/syscalls/setegid/setegid01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c
ltp/testcases/kernel/syscalls/sethostname/sethostname01.c
ltp/testcases/kernel/syscalls/sethostname/sethostname02.c
ltp/testcases/kernel/syscalls/sethostname/sethostname03.c
ltp/testcases/kernel/syscalls/setpgid/setpgid01.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp01.c
ltp/testcases/kernel/syscalls/setregid/setregid01.c
ltp/testcases/kernel/syscalls/setregid/setregid02.c
ltp/testcases/kernel/syscalls/setresgid/setresgid01.c
ltp/testcases/kernel/syscalls/setresgid/setresgid02.c
ltp/testcases/kernel/syscalls/setresgid/setresgid03.c
ltp/testcases/kernel/syscalls/setresuid/setresuid02.c
ltp/testcases/kernel/syscalls/setresuid/setresuid03.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid01.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit01.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit02.c
ltp/testcases/kernel/syscalls/setsockopt/setsockopt01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday02.c
ltp/testcases/kernel/syscalls/setuid/setuid01.c
ltp/testcases/kernel/syscalls/setuid/setuid02.c
ltp/testcases/kernel/syscalls/setuid/setuid04.c
ltp/testcases/kernel/syscalls/sigaction/sigaction01.c
ltp/testcases/kernel/syscalls/sigaction/sigaction02.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack01.c
ltp/testcases/kernel/syscalls/sighold/sighold02.c
ltp/testcases/kernel/syscalls/signal/signal01.c
ltp/testcases/kernel/syscalls/signal/signal04.c
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_02.c
ltp/testcases/kernel/syscalls/sigpending/sigpending02.c
ltp/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
ltp/testcases/kernel/syscalls/sigrelse/sigrelse01.c
ltp/testcases/kernel/syscalls/sigsuspend/sigsuspend01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall02.c
ltp/testcases/kernel/syscalls/socketcall/socketcall03.c
ltp/testcases/kernel/syscalls/socketcall/socketcall04.c
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/stat/stat01.c
ltp/testcases/kernel/syscalls/stat/stat02.c
ltp/testcases/kernel/syscalls/stat/stat03.c
ltp/testcases/kernel/syscalls/stat/stat05.c
ltp/testcases/kernel/syscalls/stat/stat06.c
ltp/testcases/kernel/syscalls/statfs/statfs01.c
ltp/testcases/kernel/syscalls/statfs/statfs03.c
ltp/testcases/kernel/syscalls/statvfs/statvfs01.c
ltp/testcases/kernel/syscalls/stime/stime01.c
ltp/testcases/kernel/syscalls/stime/stime02.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c
ltp/testcases/kernel/syscalls/swapon/swapon01.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c
ltp/testcases/kernel/syscalls/symlink/symlink02.c
ltp/testcases/kernel/syscalls/symlink/symlink03.c
ltp/testcases/kernel/syscalls/symlink/symlink04.c
ltp/testcases/kernel/syscalls/symlink/symlink05.c
ltp/testcases/kernel/syscalls/symlinkat/symlinkat01.c
ltp/testcases/kernel/syscalls/sync/sync01.c
ltp/testcases/kernel/syscalls/sync/sync02.c
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c
ltp/testcases/kernel/syscalls/syscall/syscall01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl03.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo01.c
ltp/testcases/kernel/syscalls/sysinfo/sysinfo02.c
ltp/testcases/kernel/syscalls/syslog/syslog11.c
ltp/testcases/kernel/syscalls/syslog/syslog12.c
ltp/testcases/kernel/syscalls/syslog/syslogtst.c
ltp/testcases/kernel/syscalls/tee/tee01.c
ltp/testcases/kernel/syscalls/time/time01.c
ltp/testcases/kernel/syscalls/time/time02.c
ltp/testcases/kernel/syscalls/times/times01.c
ltp/testcases/kernel/syscalls/times/times03.c
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate02.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/truncate/truncate04.c
ltp/testcases/kernel/syscalls/ulimit/ulimit01.c
ltp/testcases/kernel/syscalls/umask/umask01.c
ltp/testcases/kernel/syscalls/umask/umask03.c
ltp/testcases/kernel/syscalls/umount/umount01.c
ltp/testcases/kernel/syscalls/umount/umount02.c
ltp/testcases/kernel/syscalls/umount/umount03.c
ltp/testcases/kernel/syscalls/uname/uname01.c
ltp/testcases/kernel/syscalls/unlink/unlink05.c
ltp/testcases/kernel/syscalls/unlink/unlink06.c
ltp/testcases/kernel/syscalls/unlink/unlink07.c
ltp/testcases/kernel/syscalls/unlink/unlink08.c
ltp/testcases/kernel/syscalls/unlinkat/unlinkat01.c
ltp/testcases/kernel/syscalls/ustat/ustat01.c
ltp/testcases/kernel/syscalls/ustat/ustat02.c
ltp/testcases/kernel/syscalls/utime/utime01.c
ltp/testcases/kernel/syscalls/utime/utime02.c
ltp/testcases/kernel/syscalls/utime/utime03.c
ltp/testcases/kernel/syscalls/utime/utime04.c
ltp/testcases/kernel/syscalls/utime/utime05.c
ltp/testcases/kernel/syscalls/utime/utime06.c
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c
ltp/testcases/kernel/syscalls/vfork/vfork01.c
ltp/testcases/kernel/syscalls/vfork/vfork02.c
ltp/testcases/kernel/syscalls/vhangup/vhangup01.c
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c
ltp/testcases/kernel/syscalls/wait/wait02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid05.c
ltp/testcases/kernel/syscalls/waitpid/waitpid09.c
ltp/testcases/kernel/syscalls/waitpid/waitpid10.c
ltp/testcases/kernel/syscalls/write/write01.c
ltp/testcases/kernel/syscalls/write/write02.c
ltp/testcases/kernel/syscalls/write/write04.c
ltp/testcases/kernel/syscalls/writev/writev01.c
ltp/testcases/kernel/syscalls/writev/writev02.c
ltp/testcases/kernel/syscalls/writev/writev06.c

58) Log Message:
Clean Trailing Tab: Signed-off-by: Michal Simek <monstr@monstr.eu>.

Modified Files:
ltp/testcases/kernel/device-drivers/agp/kernel_space/tagp.c
ltp/testcases/kernel/device-drivers/agp/user_space/tagp_ki.c
ltp/testcases/kernel/device-drivers/agp/user_space/user_tagp.c
ltp/testcases/kernel/device-drivers/base/tbase/tbase.c
ltp/testcases/kernel/device-drivers/base/user_base/user_tbase.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/kernel_space/tmod.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/tmod_ki.c
ltp/testcases/kernel/device-drivers/dev_sim_framework/user_space/user_tmod.c
ltp/testcases/kernel/device-drivers/drm/kernel_space/tdrm.c
ltp/testcases/kernel/device-drivers/drm/user_space/user_tdrm.c
ltp/testcases/kernel/device-drivers/include/includeTest.c
ltp/testcases/kernel/device-drivers/include/userBlockInclude.c
ltp/testcases/kernel/device-drivers/nls/userBlockNLS.c
ltp/testcases/kernel/device-drivers/pci/tpci/tpci.c
ltp/testcases/kernel/device-drivers/pci/user_tpci/tpci_ki.c
ltp/testcases/kernel/device-drivers/pci/user_tpci/user_tpci.c
ltp/testcases/kernel/device-drivers/tbio/kernel_space/tbio.c
ltp/testcases/kernel/device-drivers/tbio/user_space/tbio_ki.c
ltp/testcases/kernel/device-drivers/tbio/user_space/user_tbio.c
ltp/testcases/kernel/device-drivers/usb/tusb/tusb.c
ltp/testcases/kernel/device-drivers/usb/user_usb/user_tusb.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/fs/acls/acl_file_test.c
ltp/testcases/kernel/fs/acls/acl_link_test.c
ltp/testcases/kernel/fs/dmapi/attr.c
ltp/testcases/kernel/fs/dmapi/config.c
ltp/testcases/kernel/fs/dmapi/disp.c
ltp/testcases/kernel/fs/dmapi/dm_test.c
ltp/testcases/kernel/fs/dmapi/event.c
ltp/testcases/kernel/fs/dmapi/event_am.c
ltp/testcases/kernel/fs/dmapi/event_an.c
ltp/testcases/kernel/fs/dmapi/event_sd.c
ltp/testcases/kernel/fs/dmapi/event_sn.c
ltp/testcases/kernel/fs/dmapi/event_us.c
ltp/testcases/kernel/fs/dmapi/handle.c
ltp/testcases/kernel/fs/dmapi/hole.c
ltp/testcases/kernel/fs/dmapi/invis.c
ltp/testcases/kernel/fs/dmapi/mmap.c
ltp/testcases/kernel/fs/dmapi/mmapfile.c
ltp/testcases/kernel/fs/dmapi/mount.c
ltp/testcases/kernel/fs/dmapi/objref.c
ltp/testcases/kernel/fs/dmapi/pmr_post.c
ltp/testcases/kernel/fs/dmapi/pmr_pre.c
ltp/testcases/kernel/fs/dmapi/right.c
ltp/testcases/kernel/fs/dmapi/session.c
ltp/testcases/kernel/fs/dmapi/token.c
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/fs/doio/growfiles.c
ltp/testcases/kernel/fs/doio/iogen.c
ltp/testcases/kernel/fs/fs_di/create_datafile.c
ltp/testcases/kernel/fs/fsstress/fsstress.c
ltp/testcases/kernel/fs/fsx-linux/fsx-linux.c
ltp/testcases/kernel/fs/ftest/ftest01.c
ltp/testcases/kernel/fs/ftest/ftest02.c
ltp/testcases/kernel/fs/ftest/ftest03.c
ltp/testcases/kernel/fs/ftest/ftest04.c
ltp/testcases/kernel/fs/ftest/ftest05.c
ltp/testcases/kernel/fs/ftest/ftest06.c
ltp/testcases/kernel/fs/ftest/ftest07.c
ltp/testcases/kernel/fs/ftest/ftest08.c
ltp/testcases/kernel/fs/inode/inode01.c
ltp/testcases/kernel/fs/inode/inode02.c
ltp/testcases/kernel/fs/mongo/mongo_compare.c
ltp/testcases/kernel/fs/mongo/reiser_fract_tree.c
ltp/testcases/kernel/fs/openfile/openfile.c
ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.c
ltp/testcases/kernel/fs/stream/stream01.c
ltp/testcases/kernel/fs/stream/stream02.c
ltp/testcases/kernel/fs/stream/stream03.c
ltp/testcases/kernel/fs/stream/stream04.c
ltp/testcases/kernel/fs/stream/stream05.c
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.c
ltp/testcases/kernel/hotplug/memory_hotplug/segment.c
ltp/testcases/kernel/io/aio/aio01/aio01.c
ltp/testcases/kernel/io/aio/aio02/cases/aio_tio.c
ltp/testcases/kernel/io/direct_io/diotest1.c
ltp/testcases/kernel/io/direct_io/diotest2.c
ltp/testcases/kernel/io/direct_io/diotest4.c
ltp/testcases/kernel/io/direct_io/diotest5.c
ltp/testcases/kernel/io/direct_io/diotest_routines.c
ltp/testcases/kernel/io/disktest/childmain.c
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/threading.c
ltp/testcases/kernel/io/ltp-aiodio/aiocp.c
ltp/testcases/kernel/io/ltp-aiodio/aiodio_append.c
ltp/testcases/kernel/io/ltp-aiodio/aiodio_sparse.c
ltp/testcases/kernel/io/ltp-aiodio/ltp-diorh.c
ltp/testcases/kernel/io/stress_cd/stress_cd.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_ctl.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_get.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_rcv.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_02_snd.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_04.c
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_05.c
ltp/testcases/kernel/ipc/ipc_stress/pipe_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/pipe_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_04.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_05.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_07.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_01.c
ltp/testcases/kernel/ipc/ipc_stress/signal_test_04.c
ltp/testcases/kernel/ipc/pipeio/pipeio.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap01.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap03.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmdt/hugeshmdt01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget05.c
ltp/testcases/kernel/mem/mem/mem01.c
ltp/testcases/kernel/mem/mem/mem02.c
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/mem/mmapstress/mmapstress02.c
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c
ltp/testcases/kernel/mem/mmapstress/mmapstress07.c
ltp/testcases/kernel/mem/mmapstress/mmapstress09.c
ltp/testcases/kernel/mem/mmapstress/mmapstress10.c
ltp/testcases/kernel/mem/mtest06/mmap1.c
ltp/testcases/kernel/mem/mtest06/shmat1.c
ltp/testcases/kernel/mem/mtest07/shm_test.c
ltp/testcases/kernel/mem/page/page01.c
ltp/testcases/kernel/mem/page/page02.c
ltp/testcases/kernel/mem/vmtests/data_space.c
ltp/testcases/kernel/mem/vmtests/stack_space.c
ltp/testcases/kernel/module/create_module/create_module01.c
ltp/testcases/kernel/module/delete_module/delete_module01.c
ltp/testcases/kernel/module/query_module/query_module01.c
ltp/testcases/kernel/module/query_module/query_module03.c
ltp/testcases/kernel/numa/numa_node_size.c
ltp/testcases/kernel/pty/hangup01.c
ltp/testcases/kernel/pty/ptem01.c
ltp/testcases/kernel/pty/pty01.c
ltp/testcases/kernel/sched/clisrv/pthserv.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTutils.c
ltp/testcases/kernel/sched/nptl/nptl01.c
ltp/testcases/kernel/sched/process_stress/process.c
ltp/testcases/kernel/sched/sched_stress/sched_tc0.c
ltp/testcases/kernel/sched/sched_stress/sched_tc6.c
ltp/testcases/kernel/sched/tool/time-schedule.c
ltp/testcases/kernel/sched/tool/trace_sched.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrace/selinux_dyntrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/dyntrans/selinux_dyntrans_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/exectrace/selinux_exectrace_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive_client.c
ltp/testcases/kernel/security/selinux-testsuite/tests/fdreceive/selinux_fdreceive_server.c
ltp/testcases/kernel/security/selinux-testsuite/tests/inherit/selinux_inherit_parent.c
ltp/testcases/kernel/security/selinux-testsuite/tests/msg/selinux_msgctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/sem/selinux_semctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/shm/selinux_shmctl.c
ltp/testcases/kernel/security/selinux-testsuite/tests/sigkill/selinux_sigkill_server.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setpgid/selinux_task_setpgid_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/task_setscheduler/selinux_task_setscheduler_source.c
ltp/testcases/kernel/security/selinux-testsuite/tests/wait/selinux_wait_parent.c
ltp/testcases/kernel/syscalls/access/access01.c
ltp/testcases/kernel/syscalls/access/access02.c
ltp/testcases/kernel/syscalls/access/access03.c
ltp/testcases/kernel/syscalls/access/access04.c
ltp/testcases/kernel/syscalls/acct/acct01.c
ltp/testcases/kernel/syscalls/acct/acct02.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex01.c
ltp/testcases/kernel/syscalls/adjtimex/adjtimex02.c
ltp/testcases/kernel/syscalls/alarm/alarm01.c
ltp/testcases/kernel/syscalls/alarm/alarm03.c
ltp/testcases/kernel/syscalls/alarm/alarm05.c
ltp/testcases/kernel/syscalls/alarm/alarm06.c
ltp/testcases/kernel/syscalls/alarm/alarm07.c
ltp/testcases/kernel/syscalls/asyncio/asyncio02.c
ltp/testcases/kernel/syscalls/bind/bind02.c
ltp/testcases/kernel/syscalls/brk/brk01.c
ltp/testcases/kernel/syscalls/capget/capget02.c
ltp/testcases/kernel/syscalls/capset/capset02.c
ltp/testcases/kernel/syscalls/chdir/chdir02.c
ltp/testcases/kernel/syscalls/chmod/chmod01.c
ltp/testcases/kernel/syscalls/chmod/chmod02.c
ltp/testcases/kernel/syscalls/chmod/chmod03.c
ltp/testcases/kernel/syscalls/chmod/chmod04.c
ltp/testcases/kernel/syscalls/chmod/chmod05.c
ltp/testcases/kernel/syscalls/chmod/chmod06.c
ltp/testcases/kernel/syscalls/chmod/chmod07.c
ltp/testcases/kernel/syscalls/chown/chown01.c
ltp/testcases/kernel/syscalls/chown/chown02.c
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/chown/chown04.c
ltp/testcases/kernel/syscalls/chown/chown05.c
ltp/testcases/kernel/syscalls/chroot/chroot02.c
ltp/testcases/kernel/syscalls/clone/clone01.c
ltp/testcases/kernel/syscalls/clone/clone02.c
ltp/testcases/kernel/syscalls/clone/clone03.c
ltp/testcases/kernel/syscalls/clone/clone04.c
ltp/testcases/kernel/syscalls/clone/clone05.c
ltp/testcases/kernel/syscalls/clone/clone06.c
ltp/testcases/kernel/syscalls/clone/clone07.c
ltp/testcases/kernel/syscalls/close/close01.c
ltp/testcases/kernel/syscalls/close/close08.c
ltp/testcases/kernel/syscalls/creat/creat08.c
ltp/testcases/kernel/syscalls/creat/creat09.c
ltp/testcases/kernel/syscalls/dup/dup01.c
ltp/testcases/kernel/syscalls/dup/dup02.c
ltp/testcases/kernel/syscalls/dup/dup03.c
ltp/testcases/kernel/syscalls/dup/dup04.c
ltp/testcases/kernel/syscalls/dup/dup05.c
ltp/testcases/kernel/syscalls/dup/dup06.c
ltp/testcases/kernel/syscalls/dup/dup07.c
ltp/testcases/kernel/syscalls/dup2/dup205.c
ltp/testcases/kernel/syscalls/epoll/epoll-ltp.c
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c
ltp/testcases/kernel/syscalls/execl/execl01.c
ltp/testcases/kernel/syscalls/execle/execle01.c
ltp/testcases/kernel/syscalls/execlp/execlp01.c
ltp/testcases/kernel/syscalls/execv/execv01.c
ltp/testcases/kernel/syscalls/execve/execve01.c
ltp/testcases/kernel/syscalls/execve/execve02.c
ltp/testcases/kernel/syscalls/execve/execve04.c
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/execve/execve06.c
ltp/testcases/kernel/syscalls/execvp/execvp01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fchdir/fchdir01.c
ltp/testcases/kernel/syscalls/fchdir/fchdir02.c
ltp/testcases/kernel/syscalls/fchmod/fchmod01.c
ltp/testcases/kernel/syscalls/fchmod/fchmod02.c
ltp/testcases/kernel/syscalls/fchmod/fchmod03.c
ltp/testcases/kernel/syscalls/fchmod/fchmod04.c
ltp/testcases/kernel/syscalls/fchmod/fchmod05.c
ltp/testcases/kernel/syscalls/fchmod/fchmod06.c
ltp/testcases/kernel/syscalls/fchmod/fchmod07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl01.c
ltp/testcases/kernel/syscalls/fcntl/fcntl02.c
ltp/testcases/kernel/syscalls/fcntl/fcntl03.c
ltp/testcases/kernel/syscalls/fcntl/fcntl04.c
ltp/testcases/kernel/syscalls/fcntl/fcntl05.c
ltp/testcases/kernel/syscalls/fcntl/fcntl06.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07.c
ltp/testcases/kernel/syscalls/fcntl/fcntl07B.c
ltp/testcases/kernel/syscalls/fcntl/fcntl08.c
ltp/testcases/kernel/syscalls/fcntl/fcntl09.c
ltp/testcases/kernel/syscalls/fcntl/fcntl10.c
ltp/testcases/kernel/syscalls/fcntl/fcntl11.c
ltp/testcases/kernel/syscalls/fcntl/fcntl12.c
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl15.c
ltp/testcases/kernel/syscalls/fcntl/fcntl16.c
ltp/testcases/kernel/syscalls/fcntl/fcntl19.c
ltp/testcases/kernel/syscalls/fcntl/fcntl20.c
ltp/testcases/kernel/syscalls/fcntl/fcntl21.c
ltp/testcases/kernel/syscalls/fcntl/fcntl22.c
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c
ltp/testcases/kernel/syscalls/flock/flock01.c
ltp/testcases/kernel/syscalls/flock/flock02.c
ltp/testcases/kernel/syscalls/flock/flock03.c
ltp/testcases/kernel/syscalls/flock/flock04.c
ltp/testcases/kernel/syscalls/flock/flock05.c
ltp/testcases/kernel/syscalls/flock/flock06.c
ltp/testcases/kernel/syscalls/fork/fork01.c
ltp/testcases/kernel/syscalls/fork/fork03.c
ltp/testcases/kernel/syscalls/fork/fork04.c
ltp/testcases/kernel/syscalls/fork/fork07.c
ltp/testcases/kernel/syscalls/fork/fork08.c
ltp/testcases/kernel/syscalls/fork/fork09.c
ltp/testcases/kernel/syscalls/fork/fork10.c
ltp/testcases/kernel/syscalls/fork/fork12.c
ltp/testcases/kernel/syscalls/fpathconf/fpathconf01.c
ltp/testcases/kernel/syscalls/fstat/fstat01.c
ltp/testcases/kernel/syscalls/fstat/fstat02.c
ltp/testcases/kernel/syscalls/fstat/fstat03.c
ltp/testcases/kernel/syscalls/fstat/fstat04.c
ltp/testcases/kernel/syscalls/fstat/fstat05.c
ltp/testcases/kernel/syscalls/fstatfs/fstatfs01.c
ltp/testcases/kernel/syscalls/fsync/fsync01.c
ltp/testcases/kernel/syscalls/fsync/fsync02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c
ltp/testcases/kernel/syscalls/getdents/getdents01.c
ltp/testcases/kernel/syscalls/getdents/getdents02.c
ltp/testcases/kernel/syscalls/getdents/getdents03.c
ltp/testcases/kernel/syscalls/getdents/getdents04.c
ltp/testcases/kernel/syscalls/getdomainname/getdomainname01.c
ltp/testcases/kernel/syscalls/getegid/getegid01.c
ltp/testcases/kernel/syscalls/geteuid/geteuid01.c
ltp/testcases/kernel/syscalls/getgid/getgid01.c
ltp/testcases/kernel/syscalls/getgroups/getgroups01.c
ltp/testcases/kernel/syscalls/getgroups/getgroups02.c
ltp/testcases/kernel/syscalls/getgroups/getgroups03.c
ltp/testcases/kernel/syscalls/getgroups/getgroups04.c
ltp/testcases/kernel/syscalls/gethostname/gethostname01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer01.c
ltp/testcases/kernel/syscalls/getitimer/getitimer02.c
ltp/testcases/kernel/syscalls/getitimer/getitimer03.c
ltp/testcases/kernel/syscalls/getpgrp/getpgrp01.c
ltp/testcases/kernel/syscalls/getpid/getpid01.c
ltp/testcases/kernel/syscalls/getpid/getpid02.c
ltp/testcases/kernel/syscalls/getppid/getppid01.c
ltp/testcases/kernel/syscalls/getpriority/getpriority01.c
ltp/testcases/kernel/syscalls/getresgid/getresgid01.c
ltp/testcases/kernel/syscalls/getresgid/getresgid02.c
ltp/testcases/kernel/syscalls/getresgid/getresgid03.c
ltp/testcases/kernel/syscalls/getresuid/getresuid01.c
ltp/testcases/kernel/syscalls/getresuid/getresuid02.c
ltp/testcases/kernel/syscalls/getresuid/getresuid03.c
ltp/testcases/kernel/syscalls/getrlimit/getrlimit02.c
ltp/testcases/kernel/syscalls/getrusage/getrusage02.c
ltp/testcases/kernel/syscalls/getsid/getsid01.c
ltp/testcases/kernel/syscalls/getsid/getsid02.c
ltp/testcases/kernel/syscalls/getuid/getuid01.c
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c
ltp/testcases/kernel/syscalls/ioperm/ioperm01.c
ltp/testcases/kernel/syscalls/iopl/iopl01.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl01.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl02.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl03.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl05.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget01.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget03.c
ltp/testcases/kernel/syscalls/ipc/msgget/msgget04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv02.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv03.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd01.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd02.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd03.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd04.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl02.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl03.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl04.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl05.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl06.c
ltp/testcases/kernel/syscalls/ipc/semget/semget01.c
ltp/testcases/kernel/syscalls/ipc/semget/semget02.c
ltp/testcases/kernel/syscalls/ipc/semget/semget03.c
ltp/testcases/kernel/syscalls/ipc/semget/semget06.c
ltp/testcases/kernel/syscalls/ipc/semop/semop02.c
ltp/testcases/kernel/syscalls/ipc/semop/semop03.c
ltp/testcases/kernel/syscalls/ipc/semop/semop04.c
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl02.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl03.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl04.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt01.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget01.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget03.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget04.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget05.c
ltp/testcases/kernel/syscalls/kill/kill01.c
ltp/testcases/kernel/syscalls/kill/kill02.c
ltp/testcases/kernel/syscalls/kill/kill03.c
ltp/testcases/kernel/syscalls/kill/kill04.c
ltp/testcases/kernel/syscalls/kill/kill05.c
ltp/testcases/kernel/syscalls/kill/kill07.c
ltp/testcases/kernel/syscalls/kill/kill09.c
ltp/testcases/kernel/syscalls/kill/kill10.c
ltp/testcases/kernel/syscalls/kill/kill11.c
ltp/testcases/kernel/syscalls/kill/kill12.c
ltp/testcases/kernel/syscalls/lchown/lchown01.c
ltp/testcases/kernel/syscalls/lchown/lchown02.c
ltp/testcases/kernel/syscalls/libevent/buffer.c
ltp/testcases/kernel/syscalls/libevent/err.c
ltp/testcases/kernel/syscalls/libevent/event.c
ltp/testcases/kernel/syscalls/libevent/kqueue.c
ltp/testcases/kernel/syscalls/libevent/poll.c
ltp/testcases/kernel/syscalls/libevent/signal.c
ltp/testcases/kernel/syscalls/libevent/sample/event-test.c
ltp/testcases/kernel/syscalls/libevent/sample/signal-test.c
ltp/testcases/kernel/syscalls/libevent/sample/time-test.c
ltp/testcases/kernel/syscalls/libevent/test/regress.c
ltp/testcases/kernel/syscalls/libevent/test/test-eof.c
ltp/testcases/kernel/syscalls/link/link02.c
ltp/testcases/kernel/syscalls/link/link03.c
ltp/testcases/kernel/syscalls/link/link04.c
ltp/testcases/kernel/syscalls/link/link05.c
ltp/testcases/kernel/syscalls/link/link06.c
ltp/testcases/kernel/syscalls/link/link07.c
ltp/testcases/kernel/syscalls/lseek/lseek01.c
ltp/testcases/kernel/syscalls/lseek/lseek02.c
ltp/testcases/kernel/syscalls/lseek/lseek03.c
ltp/testcases/kernel/syscalls/lseek/lseek04.c
ltp/testcases/kernel/syscalls/lseek/lseek05.c
ltp/testcases/kernel/syscalls/lseek/lseek06.c
ltp/testcases/kernel/syscalls/lseek/lseek07.c
ltp/testcases/kernel/syscalls/lseek/lseek08.c
ltp/testcases/kernel/syscalls/lseek/lseek09.c
ltp/testcases/kernel/syscalls/lseek/lseek10.c
ltp/testcases/kernel/syscalls/lstat/lstat01.c
ltp/testcases/kernel/syscalls/lstat/lstat02.c
ltp/testcases/kernel/syscalls/lstat/lstat03.c
ltp/testcases/kernel/syscalls/madvise/madvise01.c
ltp/testcases/kernel/syscalls/madvise/madvise02.c
ltp/testcases/kernel/syscalls/madvise/madvise03.c
ltp/testcases/kernel/syscalls/memcmp/memcmp01.c
ltp/testcases/kernel/syscalls/memcpy/memcpy01.c
ltp/testcases/kernel/syscalls/memmap/mem03.c
ltp/testcases/kernel/syscalls/mincore/mincore01.c
ltp/testcases/kernel/syscalls/mincore/mincore02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir01.c
ltp/testcases/kernel/syscalls/mkdir/mkdir02.c
ltp/testcases/kernel/syscalls/mkdir/mkdir03.c
ltp/testcases/kernel/syscalls/mkdir/mkdir04.c
ltp/testcases/kernel/syscalls/mkdir/mkdir05.c
ltp/testcases/kernel/syscalls/mkdir/mkdir08.c
ltp/testcases/kernel/syscalls/mkdir/mkdir09.c
ltp/testcases/kernel/syscalls/mknod/mknod01.c
ltp/testcases/kernel/syscalls/mknod/mknod02.c
ltp/testcases/kernel/syscalls/mknod/mknod03.c
ltp/testcases/kernel/syscalls/mknod/mknod04.c
ltp/testcases/kernel/syscalls/mknod/mknod05.c
ltp/testcases/kernel/syscalls/mknod/mknod06.c
ltp/testcases/kernel/syscalls/mknod/mknod07.c
ltp/testcases/kernel/syscalls/mknod/mknod08.c
ltp/testcases/kernel/syscalls/mknod/mknod09.c
ltp/testcases/kernel/syscalls/mlock/mlock01.c
ltp/testcases/kernel/syscalls/mlock/mlock02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall02.c
ltp/testcases/kernel/syscalls/mlockall/mlockall03.c
ltp/testcases/kernel/syscalls/mmap/mmap01.c
ltp/testcases/kernel/syscalls/mmap/mmap02.c
ltp/testcases/kernel/syscalls/mmap/mmap03.c
ltp/testcases/kernel/syscalls/mmap/mmap04.c
ltp/testcases/kernel/syscalls/mmap/mmap05.c
ltp/testcases/kernel/syscalls/mmap/mmap06.c
ltp/testcases/kernel/syscalls/mmap/mmap07.c
ltp/testcases/kernel/syscalls/mmap/mmap08.c
ltp/testcases/kernel/syscalls/mmap/mmap09.c
ltp/testcases/kernel/syscalls/mount/mount02.c
ltp/testcases/kernel/syscalls/mount/mount03.c
ltp/testcases/kernel/syscalls/mount/mount04.c
ltp/testcases/kernel/syscalls/mremap/mremap01.c
ltp/testcases/kernel/syscalls/mremap/mremap02.c
ltp/testcases/kernel/syscalls/mremap/mremap03.c
ltp/testcases/kernel/syscalls/mremap/mremap04.c
ltp/testcases/kernel/syscalls/msync/msync01.c
ltp/testcases/kernel/syscalls/msync/msync02.c
ltp/testcases/kernel/syscalls/msync/msync03.c
ltp/testcases/kernel/syscalls/msync/msync04.c
ltp/testcases/kernel/syscalls/msync/msync05.c
ltp/testcases/kernel/syscalls/munlockall/munlockall01.c
ltp/testcases/kernel/syscalls/munlockall/munlockall02.c
ltp/testcases/kernel/syscalls/munmap/munmap01.c
ltp/testcases/kernel/syscalls/munmap/munmap02.c
ltp/testcases/kernel/syscalls/munmap/munmap03.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep02.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep03.c
ltp/testcases/kernel/syscalls/nftw/nftw.c
ltp/testcases/kernel/syscalls/nftw/nftw64.c
ltp/testcases/kernel/syscalls/nftw/test.c
ltp/testcases/kernel/syscalls/nftw/test64.c
ltp/testcases/kernel/syscalls/nftw/test_func.c
ltp/testcases/kernel/syscalls/nftw/test_func64.c
ltp/testcases/kernel/syscalls/nftw/tools.c
ltp/testcases/kernel/syscalls/nftw/tools64.c
ltp/testcases/kernel/syscalls/nice/nice01.c
ltp/testcases/kernel/syscalls/nice/nice02.c
ltp/testcases/kernel/syscalls/nice/nice03.c
ltp/testcases/kernel/syscalls/nice/nice05.c
ltp/testcases/kernel/syscalls/open/open01.c
ltp/testcases/kernel/syscalls/open/open03.c
ltp/testcases/kernel/syscalls/open/open05.c
ltp/testcases/kernel/syscalls/open/open07.c
ltp/testcases/kernel/syscalls/open/open08.c
ltp/testcases/kernel/syscalls/open/open09.c
ltp/testcases/kernel/syscalls/open/open10.c
ltp/testcases/kernel/syscalls/pathconf/pathconf01.c
ltp/testcases/kernel/syscalls/pause/pause01.c
ltp/testcases/kernel/syscalls/pause/pause02.c
ltp/testcases/kernel/syscalls/pause/pause03.c
ltp/testcases/kernel/syscalls/personality/personality01.c
ltp/testcases/kernel/syscalls/pipe/pipe01.c
ltp/testcases/kernel/syscalls/pipe/pipe05.c
ltp/testcases/kernel/syscalls/pipe/pipe06.c
ltp/testcases/kernel/syscalls/poll/poll01.c
ltp/testcases/kernel/syscalls/prctl/prctl01.c
ltp/testcases/kernel/syscalls/prctl/prctl02.c
ltp/testcases/kernel/syscalls/profil/profil01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace01.c
ltp/testcases/kernel/syscalls/ptrace/ptrace02.c
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite01.c
ltp/testcases/kernel/syscalls/pwrite/pwrite02.c
ltp/testcases/kernel/syscalls/pwrite/pwrite03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/kernel/syscalls/read/read01.c
ltp/testcases/kernel/syscalls/read/read02.c
ltp/testcases/kernel/syscalls/readdir/readdir01.c
ltp/testcases/kernel/syscalls/readdir/readdir02.c
ltp/testcases/kernel/syscalls/readlink/readlink01.c
ltp/testcases/kernel/syscalls/readlink/readlink02.c
ltp/testcases/kernel/syscalls/readlink/readlink03.c
ltp/testcases/kernel/syscalls/readlink/readlink04.c
ltp/testcases/kernel/syscalls/reboot/reboot02.c
ltp/testcases/kernel/syscalls/recvmsg/recvmsg01.c
ltp/testcases/kernel/syscalls/rename/rename01.c
ltp/testcases/kernel/syscalls/rename/rename02.c
ltp/testcases/kernel/syscalls/rename/rename03.c
ltp/testcases/kernel/syscalls/rename/rename04.c
ltp/testcases/kernel/syscalls/rename/rename05.c
ltp/testcases/kernel/syscalls/rename/rename06.c
ltp/testcases/kernel/syscalls/rename/rename07.c
ltp/testcases/kernel/syscalls/rename/rename08.c
ltp/testcases/kernel/syscalls/rename/rename09.c
ltp/testcases/kernel/syscalls/rename/rename10.c
ltp/testcases/kernel/syscalls/rename/rename12.c
ltp/testcases/kernel/syscalls/rename/rename13.c
ltp/testcases/kernel/syscalls/rename/rename14.c
ltp/testcases/kernel/syscalls/rmdir/rmdir01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir02.c
ltp/testcases/kernel/syscalls/rmdir/rmdir03.c
ltp/testcases/kernel/syscalls/rmdir/rmdir04.c
ltp/testcases/kernel/syscalls/rmdir/rmdir05.c
ltp/testcases/kernel/syscalls/sbrk/sbrk01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max01.c
ltp/testcases/kernel/syscalls/sched_get_priority_max/sched_get_priority_max02.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min01.c
ltp/testcases/kernel/syscalls/sched_get_priority_min/sched_get_priority_min02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam01.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam02.c
ltp/testcases/kernel/syscalls/sched_getparam/sched_getparam03.c
ltp/testcases/kernel/syscalls/sched_getscheduler/sched_getscheduler01.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval01.c
ltp/testcases/kernel/syscalls/sched_rr_get_interval/sched_rr_get_interval02.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam01.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam02.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam03.c
ltp/testcases/kernel/syscalls/sched_setparam/sched_setparam04.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler01.c
ltp/testcases/kernel/syscalls/sched_setscheduler/sched_setscheduler02.c
ltp/testcases/kernel/syscalls/select/select01.c
ltp/testcases/kernel/syscalls/select/select02.c
ltp/testcases/kernel/syscalls/select/select03.c
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname01.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname02.c
ltp/testcases/kernel/syscalls/setdomainname/setdomainname03.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid01.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid02.c
ltp/testcases/kernel/syscalls/setfsgid/setfsgid03.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid01.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid02.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid03.c
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c
ltp/testcases/kernel/syscalls/sethostname/sethostname01.c
ltp/testcases/kernel/syscalls/setitimer/setitimer01.c
ltp/testcases/kernel/syscalls/setitimer/setitimer02.c
ltp/testcases/kernel/syscalls/setitimer/setitimer03.c
ltp/testcases/kernel/syscalls/setpgid/setpgid01.c
ltp/testcases/kernel/syscalls/setpgrp/setpgrp01.c
ltp/testcases/kernel/syscalls/setpriority/setpriority01.c
ltp/testcases/kernel/syscalls/setpriority/setpriority02.c
ltp/testcases/kernel/syscalls/setpriority/setpriority03.c
ltp/testcases/kernel/syscalls/setpriority/setpriority04.c
ltp/testcases/kernel/syscalls/setpriority/setpriority05.c
ltp/testcases/kernel/syscalls/setregid/setregid01.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid01.c
ltp/testcases/kernel/syscalls/setreuid/setreuid03.c
ltp/testcases/kernel/syscalls/setreuid/setreuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid06.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c
ltp/testcases/kernel/syscalls/setrlimit/setrlimit01.c
ltp/testcases/kernel/syscalls/setsid/setsid01.c
ltp/testcases/kernel/syscalls/setsockopt/setsockopt01.c
ltp/testcases/kernel/syscalls/settimeofday/settimeofday01.c
ltp/testcases/kernel/syscalls/setuid/setuid01.c
ltp/testcases/kernel/syscalls/setuid/setuid02.c
ltp/testcases/kernel/syscalls/setuid/setuid03.c
ltp/testcases/kernel/syscalls/setuid/setuid04.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack01.c
ltp/testcases/kernel/syscalls/sigaltstack/sigaltstack02.c
ltp/testcases/kernel/syscalls/sighold/sighold02.c
ltp/testcases/kernel/syscalls/signal/signal01.c
ltp/testcases/kernel/syscalls/signal/signal02.c
ltp/testcases/kernel/syscalls/signal/signal04.c
ltp/testcases/kernel/syscalls/signal/signal05.c
ltp/testcases/kernel/syscalls/sigpending/sigpending02.c
ltp/testcases/kernel/syscalls/sigprocmask/sigprocmask01.c
ltp/testcases/kernel/syscalls/sigrelse/sigrelse01.c
ltp/testcases/kernel/syscalls/sigsuspend/sigsuspend01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall01.c
ltp/testcases/kernel/syscalls/socketcall/socketcall02.c
ltp/testcases/kernel/syscalls/socketcall/socketcall03.c
ltp/testcases/kernel/syscalls/socketcall/socketcall04.c
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/stat/stat01.c
ltp/testcases/kernel/syscalls/stat/stat02.c
ltp/testcases/kernel/syscalls/stat/stat03.c
ltp/testcases/kernel/syscalls/stat/stat05.c
ltp/testcases/kernel/syscalls/stat/stat06.c
ltp/testcases/kernel/syscalls/statfs/statfs01.c
ltp/testcases/kernel/syscalls/statfs/statfs02.c
ltp/testcases/kernel/syscalls/statfs/statfs03.c
ltp/testcases/kernel/syscalls/stime/stime01.c
ltp/testcases/kernel/syscalls/string/string01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff01.c
ltp/testcases/kernel/syscalls/swapoff/swapoff02.c
ltp/testcases/kernel/syscalls/swapon/swapon02.c
ltp/testcases/kernel/syscalls/swapon/swapon03.c
ltp/testcases/kernel/syscalls/symlink/symlink01.c
ltp/testcases/kernel/syscalls/symlink/symlink02.c
ltp/testcases/kernel/syscalls/symlink/symlink03.c
ltp/testcases/kernel/syscalls/symlink/symlink04.c
ltp/testcases/kernel/syscalls/symlink/symlink05.c
ltp/testcases/kernel/syscalls/sync/sync01.c
ltp/testcases/kernel/syscalls/sync/sync02.c
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c
ltp/testcases/kernel/syscalls/sysctl/sysctl03.c
ltp/testcases/kernel/syscalls/syslog/syslogtst.c
ltp/testcases/kernel/syscalls/tee/tee01.c
ltp/testcases/kernel/syscalls/time/time01.c
ltp/testcases/kernel/syscalls/time/time02.c
ltp/testcases/kernel/syscalls/times/times01.c
ltp/testcases/kernel/syscalls/times/times03.c
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate02.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/ulimit/ulimit01.c
ltp/testcases/kernel/syscalls/umask/umask01.c
ltp/testcases/kernel/syscalls/umask/umask03.c
ltp/testcases/kernel/syscalls/umount/umount02.c
ltp/testcases/kernel/syscalls/umount/umount03.c
ltp/testcases/kernel/syscalls/uname/uname01.c
ltp/testcases/kernel/syscalls/uname/uname02.c
ltp/testcases/kernel/syscalls/uname/uname03.c
ltp/testcases/kernel/syscalls/unlink/unlink05.c
ltp/testcases/kernel/syscalls/unlink/unlink06.c
ltp/testcases/kernel/syscalls/unlink/unlink07.c
ltp/testcases/kernel/syscalls/unlink/unlink08.c
ltp/testcases/kernel/syscalls/ustat/ustat02.c
ltp/testcases/kernel/syscalls/utime/utime01.c
ltp/testcases/kernel/syscalls/utime/utime02.c
ltp/testcases/kernel/syscalls/utime/utime03.c
ltp/testcases/kernel/syscalls/utime/utime04.c
ltp/testcases/kernel/syscalls/utime/utime05.c
ltp/testcases/kernel/syscalls/vfork/vfork01.c
ltp/testcases/kernel/syscalls/vfork/vfork02.c
ltp/testcases/kernel/syscalls/wait/wait02.c
ltp/testcases/kernel/syscalls/wait4/wait401.c
ltp/testcases/kernel/syscalls/wait4/wait402.c
ltp/testcases/kernel/syscalls/waitpid/waitpid02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid05.c
ltp/testcases/kernel/syscalls/waitpid/waitpid07.c
ltp/testcases/kernel/syscalls/waitpid/waitpid08.c
ltp/testcases/kernel/syscalls/waitpid/waitpid09.c
ltp/testcases/kernel/syscalls/waitpid/waitpid10.c
ltp/testcases/kernel/syscalls/waitpid/waitpid11.c
ltp/testcases/kernel/syscalls/waitpid/waitpid12.c
ltp/testcases/kernel/syscalls/waitpid/waitpid13.c
ltp/testcases/kernel/syscalls/write/write01.c
ltp/testcases/kernel/syscalls/writev/writev01.c
ltp/testcases/kernel/syscalls/writev/writev03.c
ltp/testcases/kernel/syscalls/writev/writev04.c
ltp/testcases/kernel/syscalls/writev/writev05.c
ltp/testcases/kernel/syscalls/writev/writev06.c

59) Log Message:
Rename description files: While working on adding a new testcase I noticed that not all of the description files are named consistently. I guess that 00_ was meant to place it first in any directory listing so presumably that's the correct description name. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Removed File(s):
ltp/testcases/kdump/doc/OO_Descriptions.txt
ltp/testcases/kernel/fs/fs_bind/bind/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/cloneNS/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/move/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/rbind/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/regression/OO_descriptions.txt
ltp/testcases/realtime/OO_DESCRIPTION.txt

Added File(s):
ltp/testcases/kdump/doc/00_Descriptions.txt
ltp/testcases/kernel/fs/fs_bind/bind/00_descriptions.txt       
ltp/testcases/kernel/fs/fs_bind/cloneNS/00_descriptions.txt    
ltp/testcases/kernel/fs/fs_bind/move/00_descriptions.txt       
ltp/testcases/kernel/fs/fs_bind/rbind/00_descriptions.txt      
ltp/testcases/kernel/fs/fs_bind/regression/00_descriptions.txt
ltp/testcases/realtime/00_DESCRIPTION.txt

60) Log Message:
Fix spelling and grammar nits. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified File(s):
ltp/runltp
ltp/testcases/commands/gzip/gzip_tests.sh

61) Log Message:
Update unzip command test: build and run successfully without unzip: Suprisingly, not every Linux distribution comes with unzip installed. Thankfully unzip does not appear to be needed for any other tests. This patch cleans up the unzip test so that if zip or unzip does not exist the test will not be built or run. This patch changes the way the build and run portions of the script are spread across the Makefile and unzip_tests.sh script. Previously part of the build was performed during the test -- building the sample zip archive. Now that sample archive is conditionally built using Make instead of shell script. Also, as near as I can tell, the comments "describing" the test are totally incorrect -- they appear to be a copy-paste artifact. So I updated them. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified File(s):
ltp/runtest/commands
ltp/testcases/commands/unzip/Makefile
ltp/testcases/commands/unzip/unzip_genfile.sh
ltp/testcases/commands/unzip/unzip_tests.sh

62) Log Message:
Containers: Remove capability dependency: Review of these test source files suggests that absolutley no capability APIs are in use. I suspect these #ifdefs were added because the original tests had unnecessarily included sys/capability.h. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/pidns14.c
ltp/testcases/kernel/containers/pidns/pidns16.c

63) Log Message:
I look at testcases/kernel/include/ and there is no microblaze.in. I am not cvs expert but I hope that is possible to create only simple file. If not please create it with one space. This should be fix before next release. Michal Simek <michal.simek@petalogix.com>.

Added Files:
ltp/testcases/kernel/include/microblaze.in

64) Log Message:
Testcase to test cpu consolidation feature of power management: Testcase Description: When sched_mc_power_saving is set to 1 and when number of threads running in the system is less then or equal to number of cores in the package, all the threads should be running in cores belonging to one package. This automated testcase triggers ebizzy with number of threads equal to number of cores in a package. Identifies cpu's utilized and verifies if all the cpu's utilized belong to same package.
[PATCH 01/05]: This patch will integrate ebizzy into LTP in utils/benchmark path. Ebizzy is used to validate cpu consolidation when sched_mc_power_saving is set to 1. Signed-Off-By: Poornima Nayak <Poornima.Nayak@in.ibm.com>.

Added Files:
ltp/utils/Makefile
ltp/utils/benchmark/Makefile
ltp/utils/benchmark/ebizzy-0.2/ChangeLog
ltp/utils/benchmark/ebizzy-0.2/LICENSE
ltp/utils/benchmark/ebizzy-0.2/Makefile
ltp/utils/benchmark/ebizzy-0.2/README
ltp/utils/benchmark/ebizzy-0.2/configure
ltp/utils/benchmark/ebizzy-0.2/ebizzy.c

65) Log Message:
Testcase to test cpu consolidation feature of power management: Testcase Description: When sched_mc_power_saving is set to 1 and when number of threads running in the system is less then or equal to number of cores in the package, all the threads should be running in cores belonging to one package. This automated testcase triggers ebizzy with number of threads equal to number of cores in a package. Identifies cpu's utilized and verifies if all the cpu's utilized belong to same package.
[PATCH 02/05]: This patch is library of reusable functions written in Python. Signed-Off-By: Poornima Nayak <Poornima.Nayak@in.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/lib/sched_mc.py

66) Log Message:
Testcase Description: When sched_mc_power_saving is set to 1 and when number of threads running in the system is less then or equal to number of cores in the package, all the threads should be running in cores belonging to one package. This automated testcase triggers ebizzy with number of threads equal to number of cores in a package. Identifies cpu's utilized and verifies if all the cpu's utilized belong to same package.
[PATCH 03/05]: This patch implements cpu consolidation testcase. This testcase can be executed independently by typing ./cpu_consoilidation.py -w ebizzy -l 1. The arguments passed are workload and sched_mc_power_saving level. Signed-Off-By: Poornima Nayak <Poornima.Nayak@in.ibm.com>.

Added Files:
ltp/testcases/kernel/power_management/cpu_consolidation.py

67) Log Message:
Testcase to test cpu consolidation feature of power management: Testcase Description: When sched_mc_power_saving is set to 1 and when number of threads running in the system is less then or equal to number of cores in the package, all the threads should be running in cores belonging to one package. This automated testcase triggers ebizzy with number of threads equal to number of cores in a package. Identifies cpu's utilized and verifies if all the cpu's utilized belong to same package.
[PATCH 04/05]: This patch integrates cpu consolidation testcase to LTP. Signed-Off-By: Signed-off-by: Poornima.Nayak@in.ibm.com.

Modified Files:
ltp/testcases/kernel/power_management/Makefile
ltp/testcases/kernel/power_management/runpwtests.sh

68) Log Message:
Testcase to test cpu consolidation feature of power management: Testcas Description: When sched_mc_power_saving is set to 1 and when number of threads running in the system is less then or equal to number of cores in the package, all the threads should be running in cores belonging to one package. This automated testcase triggers ebizzy with number of threads equal to number of cores in a package. Identifies cpu's utilized and verifies if all the cpu's utilized belong to same package. 
[PATCH 05/05]: Readme modified to mention how cpu consolidation testcase has to be executed. Signed-off-by: <Poornima.Nayak@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/README

LTP-20090131

1) Log Message:
Please find a patch to fix the sigsegv error on pidns13.c on containers. Signed-off-by: Veerendra C <veerendrac@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/pidns13.c

2) Log Message:
Today I released version 0.3 of v4l-test, see http://v4l-test.sourceforge.net/ for details. I also updated the LTP tree, and I attached the two files in this email. The first file is a patch against ltp-full-20081231. The second file is a tar.gz which contains the binary image files which are part of the original V4L2 API specification, revision 0.24. Signed-Off-By: Németh Márton <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.h
ltp/testcases/kernel/device-drivers/v4l/user_space/video_limits.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html

Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDOUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDOUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMOUTPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMOUTPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_LOG_STATUS.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_LOG_STATUS.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCTRL.h

3) Log Message:
Introduce autoconf to inotify03.c. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify03.c

4) Log Message:
The way to report a bug about configure: Introducing autoconf still causes a troble. Shooting the trouble may not be so difficult. However, some information is needed. I'll write them on INSTALL file. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/INSTALL

5) Log Message:
Convert hardlinks to softlinks in testcases/commands/unzip/Makefile:
Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> wrote: The make install of the testcases/commands/unzip fails, when the ltp sources are mounted on different filesystem other than /tmp, because the hardlinks are created by the testcase Makefile. This patches converts the hardlinks to softlinks. Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>.
CAI Qian <caiqian@cclom.cn> replied: Are you really want to change the above two soft links to hard links? I do not see it helps to fix your problem, and it will leave broken links after "make clean".
Kamalesh Babulal <kamalesh@linux.vnet.ibm.com> replied: Thanks for the review. I am resending the patch with the changes you have recommended. Signed-off-by: Kamalesh Babulal <kamalesh@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/commands/unzip/Makefile

6) Log Message:
There is a testcase in mmapstress03, which checks, that we can't mmap 2Gb-512Kb of RAM at address 0x7ff80000. But if host has > 2Gb of RAM+swap - it's valid operation: mmap maps 2Gb of ram at some other address and returns no errors. For correct working of this testcase we should add MAP_FIXED flag to mmap. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c

7) Log Message:
mmapstress03: fix mmapstress03 on x86_64: There is a testcase in mmapstress03, which tries to mmap 2Gb-4Kb at address 0x7ffff000 and checks it returns error and errno is set to ENOMEM. But such mmap is possible on x86_64. So lets tune size and address to more suitable for 64-bit architectures.. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>. 

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c

8) Log Message:
madvice03: report TCONF instead of TWARN on old kernels: If kernel is too old for executing this test, we should report TCONF for exit code will be 0. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified Files:
ltp/testcases/kernel/syscalls/madvise/madvise03.c

9) Log Message:
Nancy <nancydreaming@gmail.com> reported: Case "endian_switch01" FAIL on IBM Power 6 machine. The case failed on IBM JS22, p570 and p550. Is that the case bug or the OS bug? Thank you!. Subrata Modak <subrata@linux.vnet.ibm.com> replied: This will fail for all POWER machines which are not P6 & above, and, for all other archs. However, for other archs, it will throw you appropriate message like: 
$./testcases/bin/endian_switch01 
endian_switch01    1  CONF  :  This system does not support running of switch() syscall
In P6 (and above), even it will fail if the kernel is not 2.6.26 & above. The support for this syscall was added only from then. Please see: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=745a14cc264b1832c638e41812e0cb04328b2db1. If you are running 2.6.26 on p6, then we need to investigate why this is failing, else, i would prefer to merge the following patch for avoiding to test in systems where the switch() support is not available at the first place itself. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>,

Modified File(s):
ltp/testcases/kernel/syscalls/switch/endian_switch01.c

10) Log Message:
This patch adds RHEL4 and RHEL5 detection to refpolicy Makefile and fixes policy compilation errors on RHEL5 introduced by the bounds test policy. Signed-off-by: Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile

11) Log Messsage:
checking sys/capability.c for pidns14 and pidns16: this patch adds "sys/capability.c" checking for pidns14 and pidns16 testcases using autoconf support. Signed-off-by: Edjunior B. Machado <emachado@linux.vnet.ibm.com>.

Modified File(s):
ltp/configure.ac
ltp/testcases/kernel/containers/pidns/pidns14.c
ltp/testcases/kernel/containers/pidns/pidns16.c

12) Log Message:
Edjunior Barbosa Machado <emachado@linux.vnet.ibm.com> wrote: in a ppc64 machine running SLES11 RC1, I'm trying to build the December 2008 LTP release (ltp-full-20081231) but it fails on "make". Mike Frysinger <vapier@gentoo.org> replied: tcore only works on x86 systems ... building/running on other systems makes no sense. Subrata Modak <subrata@linux.vnet.ibm.com> answered: Mike, Then the following Patch will be needed: Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files(s):
ltp/testcases/misc/tcore_patch_test_suites/tcore.c

13) Log Message:
A while back I had submitted an LTP patch for the vmsplice01 test case (sent on 03/27/2008). However, the code I see in the vmsplice01.c file now is not what the patch contains. Please find below the correction against the latest ltp release : Signed-off by: Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c

14) Log Message:
Update kernel/device-drivers/nls test for 2.6.25: the attached patch makes the ltp/testcases/kernel/device-drivers/nls testsuite compileable under Linux kernel 2.6.25. Currently the test_nls_base() crashes with 2.6.25, but without calling that function the module loads and unloads cleanly. This can be a base for checking what is going wrong with nls. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/nls/Makefile
ltp/testcases/kernel/device-drivers/nls/nlsTest.c
ltp/testcases/kernel/device-drivers/nls/nlsTest.h
ltp/testcases/kernel/device-drivers/nls/userBlockNLS.c
ltp/testcases/kernel/device-drivers/tbio/kernel_space/Makefile
Added Files:
ltp/testcases/kernel/device-drivers/nls/README

15) Log Message:
gcov-kernel: add patches for 2.6.28, by, Peter Oberparleiter <oberpapr@users.sourceforge.net>

Added Files:
ltp/utils/analysis/gcov-kernel/linux-2.6.28-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.28-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.28-gcov.patch

16) Log Message:
Sending the new patch along with the batch file to run the tests. Also made small modifications in the mesgq_nstest.c to fix
a) the warnings on tst_exit().
b) to remove the global var.
And to return correct error num in the batch file runipcnstest.sh. Signed-off-by: Veerendra C <veerendra@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
Added Files:
ltp/testcases/kernel/containers/sysvipc/mesgq_nstest.c

17) Log Message:
Avoiding build failures on ppc64, adding proper FLAG definitions and improving a bit of LTP specific stuff. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/misc/tcore_patch_test_suites/Makefile
ltp/testcases/misc/tcore_patch_test_suites/tcore.c
ltp/testcases/misc/tcore_patch_test_suites/tcore.sh

18) Log Message:
set flags properly and just use implicit make rules. Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/misc/tcore_patch_test_suites/Makefile

19) Log Message:
I attached a preliminary testsuite for testing linux/block/genhd.c. The goal of this test suite is to check whether using block device is stable enough. A lot of test suites under ltp/testcases/kernel/device-drivers are based on the usage of block device so it shall work relayable. Note that the module under test is different in case of ltp/testcases/kernel/device-drivers/tbio/kernel_space testsuite. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Added Files:
ltp/testcases/kernel/device-drivers/block/kernel_space/Makefile
ltp/testcases/kernel/device-drivers/block/kernel_space/README
ltp/testcases/kernel/device-drivers/block/kernel_space/test_block.c
ltp/testcases/kernel/device-drivers/block/kernel_space/test_genhd.c

20) Log Message:
[2nd Updates for kernel/device-drivers/nls test for 2.6.25]: Németh Márton initially wrote: the attached patch makes the ltp/testcases/kernel/device-drivers/nls testsuite compileable under Linux kernel 2.6.25. Currently the test_nls_base() crashes with 2.6.25, but without calling that function the module loads and unloads cleanly. This can be a base for checking what is going wrong with nls. Signed-off-by: Márton Németh <nm127@freemail.hu>.
Subrata Modak replied: Thanks Németh for the patch. I tested the build on my machine 2.6.27, x86_64. I have merged this Patch. However, i would request you to send me another patch containing the following information: 
1) Kernel config options to be enabled & any special library(s) to be installed to allow these tests to be built/run on kernel(s) > 2.6.25 in the following README: http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/README, 
2) Then, http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/testcases/kernel/device-drivers/nls/README, should contain information to build/install/run these tests. Since these are device drivers tests, and will be executed through insmod, etc, can we have a script which automates these steps and reports error in loading/unloading of modules as such. I think it can be a very small script as well. 
Németh Márton responded by: I added some descriptions in the mentioned READMEs. However, I would wait adding an automated shell script because the tests fails on my x86_32 system with 2.6.28, and for example "rmmod nlsTest" reports "ERROR: Module nlsTest is in use". The real problem is, however, that the one of the test case already caused NULL pointer exception. I also don't have any easy solution to report only the nlsTest output to the user other than first running "dmesg -c" and then load nlsTest.ko. After the module was loaded the "dmesg" will only show the output of the testsuite. The drawback is that the user will loose the first part of his/her "dmesg" in this way. Signed-Off-By: Németh Márton <nm127@freemail.hu>.

Modified File(s):
ltp/README
ltp/testcases/kernel/device-drivers/nls/Makefile
ltp/testcases/kernel/device-drivers/nls/README

21) Log Message:
Prevent false negatives in cron_pos_tests caused by returning exit value of wrong command. This patch fixes erroneous failure caused by returning return value of a wrong command in cron tests. Signed-Off-By: "Jiri Palecek" <jirka@debian.POK.IBM.COM>.

Modified File(s):
ltp/testcases/commands/cron/cron_pos_tests.sh

22) Log Message:
This patch fixes the following error when running sched_cli_serv test case via runltp by making the path of the data file as a runtime option and giving an absolute path of it. Signed-Off-By: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/sched/clisrv/pthcli.c
ltp/testcases/kernel/sched/clisrv/run_sched_cliserv.sh

23) Log Message:
Fix broken symlink to tst_unzip_file.zip: Creating a link to tst_unzip_file.zip by testcases/commands/unzip/Makefile, has a problem and it seems to be fixed by http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/testcases/commands/unzip/Makefile?r1=1.2&r2=1.3. So I made a fix (this patch against ltp-full-20081231). Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified File(s):
ltp/testcases/commands/unzip/Makefile

24) Log Message:
Fix for msgctl11.c: Resending the fix after modifications based on suggestions from Mike Frysinger. PS: I've retained SHRT_MAX return value in the patch below as per the reason stated earlier. Signed-off by: Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c
Added Files:
ltp/include/system_specific_process_info.h
ltp/lib/system_specific_process_info.c

25) Log Message:
I encountered a failure on running ltpstress.sh. This problem seems to be introduced by http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/testscripts/ltpstress.sh?r1=1.26&r2=1.27, Since I don't know why it wanted to eliminate rpcinfo command, I wrote two solutions attached. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>. 

Modified File(s):
ltp/testscripts/ltpstress.sh

26) Log Message:
Adding AUTOCONF rules for eventfd syscall tests. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/configure.ac
ltp/testcases/kernel/syscalls/eventfd/Makefile
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c
Added Files:
ltp/config.mk.in
ltp/m4/ltp-eventfd.m4

27) Log Message:
Add "tc" paramter for "block" testsuite which enables the testsuite to run test cases separately. The default value of tc is 0 which preserves the original behaviour and runs all the available test cases. A user space shell script "run.sh" is also added which helps to run the test cases in kernel space. Signed-off-by: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/testcases/kernel/device-drivers/block/kernel_space/Makefile
ltp/testcases/kernel/device-drivers/block/kernel_space/test_block.c
Added Files:
ltp/testcases/kernel/device-drivers/block/kernel_space/run.sh

28) Log Message:
Add  socket02  syscall  test, testing socket(SOCK_CLOEXEC)  and socketpair(SOCK_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/socket/socket02.c

29) Log Message:
Add  paccept01  syscall  test, testing paccept(SOCK_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>,

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/paccept/Makefile
ltp/testcases/kernel/syscalls/paccept/paccept01.c

30) Log Message:
Add  signalfd4_01  syscall  test, testing signalfd4(SFD_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>,

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/signalfd4/Makefile
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_01.c

31) Log Message:
Add  eventfd2_01  syscall  test, testing eventfd2(EFD_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/eventfd2/Makefile
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_01.c

32) Log Message:
Add  timerfd02  syscall  test, testing timerfd_create(TFD_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/timerfd/timerfd02.c

33) Log Message:
Add  epoll_create2_01  syscall  test, testing epoll_create2(EPOLL_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/epoll_create2/Makefile
ltp/testcases/kernel/syscalls/epoll_create2/epoll_create2_01.c

34) Log Message:
Add  dup3_01  syscall  test, testing dup3   (O_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>,.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/dup3/Makefile
ltp/testcases/kernel/syscalls/dup3/dup3_01.c

35) Log Message:
Add  pipe2_01  syscall  test, testing pipe2(O_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/pipe2/Makefile
ltp/testcases/kernel/syscalls/pipe2/pipe2_01.c

36) Log Message:
Add  inotify_init1_01  syscall  test, testing inotify_init1(O_CLOEXEC). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/inotify_init/Makefile
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_01.c

37) Log Message:
Add  socket03  syscall  test, testing socket(SOCK_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/socket/Makefile
Added Files:
ltp/testcases/kernel/syscalls/socket/socket03.c

38) Log Message:
Add  socketpair02  syscall  test, testing socketpair(SOCK_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/socketpair/Makefile
Added Files:
ltp/testcases/kernel/syscalls/socketpair/socketpair02.c

39) Log Message:
Add  paccept02  syscall  test, testing paccept(SOCK_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/paccept/paccept02.c

40) Log Message:
Add  signalfd4_02  syscall  test, testing signalfd4(SFD_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/signalfd4/signalfd4_02.c

41) Log Message:
Add  eventfd2_02  syscall  test, testing eventfd2(EFD_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/eventfd2/eventfd2_02.c

42) Log Message:
Add  timerfd03  syscall  test, testing timerfd_create(TFD_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/timerfd/timerfd03.c

43) Log Message:
Add  pipe2_02  syscall  test, testing pipe2(O_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/pipe2/pipe2_02.c

44) Log Message:
Add  inotify_init1_02  syscall  test, testing inotify_init1(IN_NONBLOCK). Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/inotify_init/inotify_init1_02.c

45) Log Message:
This patch fixes fcntl27 and fcntl28 test cases failures seen on RHEL 4 kernel (2.6.9 based).
# ./fcntl27
fcntl27     1  FAIL  :  fcntl(tfile_1206, F_SETLEASE, F_RDLCK) failed with errno 11 : Resource temporarily unavailable
# ./fcntl28 
fcntl28     1  FAIL  :  fcntl(tfile_1213, F_SETLEASE, F_RDLCK) failed with errno 11 : Resource temporarily unavailable

It because the expected result in incorrect. There is a kernel version comparison code in both tests.
    if ((results=tst_kvercmp(2,6,10)) >= 0)
          {
            expected_result = -1;
          }
    else if( ((results=tst_kvercmp(2,4,0)) >= 0)&&\
             ((results=tst_kvercmp(2,6,0))< 0) )
      {
            expected_result = 1;
      }
    else if( ((results=tst_kvercmp(2,6,0)) >= 0)&&\
         ((results=tst_kvercmp(2,6,10))< 0) )
      {
            expected_result = 0;
      }
    else
      {
             expected_result = -1;
      }

Because it is kernel 2.6.9, the "expected_result" will be 0. However, th actual return code is the same as other kernels like 2.6.18, as it only allow F_RDLCK option to be placed on a read-only file descriptor (man fcntl). 
# strace ./fcntl27 
...
open("tfile_1453", O_RDWR|O_CREAT, 0777) = 3
...
fcntl(3, 0x400 /* F_??? */, 0)          = -1 EAGAIN (Resource temporarily unavailable)

I have no idea where is the above kernel version and expected code mapping originally came from. I have searched the manpage of fcntl(), but not found any mention of 2.6.10. Since there is a check already, #ifdef F_SETLEASE I have removed the above code like other fcntl* test cases, but I am willing to listen other options. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c

46) Log Message:
This problem was reported earlier. Following is a brief history for this issue: The ltp/testcases/kernel/syscalls/ioctl/ioctl02 testcase was failing on 2.6.27 on x86_64 kernel(s).
# ./ioctl02 -D /dev/tty0
ioctl02     0  INFO  :  cflag has incorrect value. 4277
ioctl02     1  FAIL  :  TCGETA/TCSETA tests FAILED with 1 error
ioctl02     0  INFO  :  child: Got SIGTERM from parent.
The following mail archive tells that it can be a kernel driver problem: http://sourceforge.net/mailarchive/message.php?msg_name=48F4CFF7.8070303%0terra.com.br. It seems there is some modification between 2.6.23 and 2.6.24-rc1 which raise this problem. Looking at the git log of file drivers/char/tty_ioctl.c there are few commits between these two releases (3 to be exactly, and one of them is a typo):
tty: expose new methods needed for drivers to get termios right:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=5f519d728169fa9975bcba001de425f11e18e8e3,
tty_ioctl: fix the baud_table check in encode_baud_rate:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=75e8b71d559632dd70c9799ea8b5c133a2ddcea9,
Somebody says: The ltp-list thread referenced seems to imply that the new functionality is correct and that the relevant LTP test needs to change, whereas others disagreed: Afaics, the ltp-list thread didn't conclude if the testcase should be fixed or if there's a problem in the kernel tty modification. Beyond this, there is this comment from Alan Cox on commit 5f519d728169fa9975bcba001de425f11e18e8e3 (mainly the last 3 paragraphs), mentioning that he was expecting some "tweaking" until the drivers were fixed. However, i tried to set only the HUPCL | CREAD | CLOCAL bits, still the tests failed for 2.6.27 kernels. So, i have prepared 2 patches: 
1) PATCH 1: Patch to Find the core problem with ioctl02: (This is for demonstration and not to be applied)
This clearly demonstrates that something goes wrong when: ioctl(parentfd, TCGETA, &termio) gets called. It alters the value of c_cflag. However other flags´ values remain unchanged:
# ./ioctl02 -D /dev/tty0
ioctl02     0  INFO  :  Trying to the Set the value of c_cflag, present value of c_cflag=0 
ioctl02     0  INFO  :  Trying to the Set the value of c_cflag, value of c_cflag to be set to=5641
ioctl02     0  INFO  :  After Setting the value of c_cflag, value of c_cflag=5641
ioctl02     0  INFO  :  Before Calling ioctl(parentfd, TCSETA, &termio), the value of c_cflag, value of c_cflag=5641
ioctl02     0  INFO  :  After Calling ioctl(parentfd, TCSETA, &termio), the value of c_cflag, value of c_cflag=5641
ioctl02     0  INFO  :  Before Calling ioctl(parentfd, TCGETA, &termio), the value of c_cflag, value of c_cflag=5641
ioctl02     0  INFO  :  After Calling ioctl(parentfd, TCGETA, &termio), the value of c_cflag, value of c_cflag=4277
ioctl02     0  INFO  :  cflag has incorrect value. 4277  
ioctl02     1  FAIL  :  TCGETA/TCSETA tests FAILED with 1 error 
ioctl02     0  INFO  :  child: Got SIGTERM from parent.
2) PATCH 2: Patch to Remove Checking for "termio.c_cflag": The only way Test can handle this to make it pass is to avoid checking for this flag which is causing the trouble, which this patch does: 
# ./ioctl02 -D /dev/tty0
ioctl02     0  INFO  :  termio values are set as expected
ioctl02     1  PASS  :  TCGETA/TCSETA tests SUCCEEDED
ioctl02     0  INFO  :  child: Got SIGTERM from parent.
However, i still believe that there is something to be fixed from the kernel side, rather than from the test side, although this patch will make the test PASS for the time being. And i will not have any problem applying this patch. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c

47) Log Message:
Integrate autotools a bit more so that we can take advantage of the configure features like toolchain selection and build flags. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/.gitignore
ltp/Makefile
ltp/config.mk.in
ltp/configure.ac
ltp/m4/GNUmakefile
ltp/m4/Makefile.am
ltp/m4/ac_prog_ar.m4

48) Log Message:
Move documentation from Makefile to INSTALL ... patch by Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/INSTALL
ltp/Makefile

49) Log Message:
Update to OpenHPI 2.13.2. See http://openhpi.org/ for more details.

Modified File(s):
/ltp/testcases/open_hpi_testsuite/

50) Log Message:
The at tests copy the testscript to the home directories of newly created users. This may fail if the home directory does not exist. This patch fixes that by adding an option to create home directories to useradd. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/commands/at/at_allow01
ltp/testcases/commands/at/at_deny01

51) Log Message:
This patch fixes a segfault of pan, when the command file doesn't end with a newline. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/pan/pan.c

52) Log Message:
Seiichi Ikarashi reported:: I report ia64-specific build failures and a patch for them. Since ia64 glibc does not have the clone() function call, building testcases/kernel/containers/pidns/pidns12.c fails as follows. It's same for pidns13.c, pidns14.c, pidns16.c, pidns20.c, pidns21.c, pidns30.c, and pidns31.c. They should call clone2() instead of clone(), like check_pidns_enabled.c. I attached a patch to fix them. Signed-Off-By: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>. Complete mail thread: http://marc.info/?l=ltp-list&m=123232695003986&w=2.

Modified File(s):
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/pidns/check_pidns_enabled.c
ltp/testcases/kernel/containers/pidns/pidns12.c
ltp/testcases/kernel/containers/pidns/pidns13.c
ltp/testcases/kernel/containers/pidns/pidns14.c
ltp/testcases/kernel/containers/pidns/pidns16.c
ltp/testcases/kernel/containers/pidns/pidns20.c
ltp/testcases/kernel/containers/pidns/pidns21.c
ltp/testcases/kernel/containers/pidns/pidns30.c
ltp/testcases/kernel/containers/pidns/pidns31.c

53) Log Message:
ftest02: size of 'name' buffer must be more than 3:: name will be passed to mkname function, which will copy to it temporary directory name. So let's it will be 128 as other buffers, passed to mkname. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/testcases/kernel/fs/ftest/ftest02.c

54) Log Message:
Help text needs updating then ... now we need to run `make autotools`. this will invoke aclocal and automake.  we dont actually use automake-generated Makefiles, but the fun helper files (install.sh, config.guess, etc...) come from automake. Here is a quickfix. However, it is not perfect. Could you improve this? Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/INSTALL
ltp/Makefile

55) Log Message:
Removed check_header from Makefile of io_* testcases and use autoconf instead of the macro. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/testcases/kernel/syscalls/io_cancel/Makefile
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_destroy/Makefile
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_getevents/Makefile
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_setup/Makefile
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/Makefile
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c

56) Log Message:
This patch fixes the syslog tests on Debian. The tests currently fail on Debian, because they check for a nonexistent file. Besides that, this patch adds rsyslogd as another possibility to supported syslog daemons. The patch changes the detection of syslog_cmd and CONFIG_FILE names; they are all detected by checking for possible files. I have not tested it on a different distro than Debian, but it should work on them too. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

57) Log Message:
lcov: remove CRLF line breaks in source code when generating html output - added patch by michael.knigge@set-software.de.

Modified Files:
ltp/utils/analysis/lcov/bin/genhtml

58) Log Message:
Create a dummy config.mk when running just `make`. Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/Makefile

59) Log Message:
Require automake-1.10. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/configure.ac

60) Log Message:
Info regarding various dependant packages for LTP build/install. Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/INSTALL

61) Log Message:
lcov: modify end-of-line CR removal
- s///g is 10% slower than s///
- \r may be 0x10 or 0x13 (see man perlport),
Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified Files:
ltp/utils/analysis/lcov/bin/genhtml

62) Log Message:
geninfo: need to add CR removal to geninfo as well or checksumming will fail. Peter Oberparleiter <oberpapr@users.sourceforge.net>

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

63) Log Message:
[PATCH 1/6] Do not cleanup if it doesn't make sense: This is the first from the series of minor patches to syslog tests. Parts inspired by CAI Qian's remarks. Resend due to line-wrapping problems.
- Check for existence of the backup file before moving it back,
- Do not restart syslog daemon, if syslog command was not found,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

64) Log Message:
[PATCH 2/6] Use TFAIL/TPASS in some syslog tests. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

65) Log Message:
[PATCH 3/6] Fix paths for detecting syslog daemons: Allow /usr/sbin/syslog-ng as path to syslog-ng, because this is the path used in Debian syslog-ng packages. Also, detect /sbin/rsyslogd as rsyslog, which is its location on Fedora. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

66) Log Message:
[PATCH 4/6] Don't check for existence of the log file before the test with syslog-ng, because it might not exist and still work correctly. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog09

67) Log Message:
[PATCH 5/6] Add support for rsyslog in not-syslog-compatible mode: This adds the configuration directive: $ModLoad imuxsock.so; to the beginning of the syslog configuration file when using rsyslog. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

68) Log Message:
[PATCH 6/6] Change the message and return value used to report missing supported syslog daemon.
- note rsyslog in the message,
- use TCONF to report unsuitable configuration,
- return 0, which corresponds to other tests failing on TCONF,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

69) Log Message:
CAI Qian wrote: After apply the whole series of patches with the help of '-l'. The only failure for rsyslogd is syslog06:
syslog06    0  INFO  :  syslog: Testing the log option: LOG_NDELAY...
syslogtst    1  FAIL  :  open() has returned unexpected fd: -1,
I have noticed this line here,
# cat syslogtst.c
...
        case 6:
                config_file = "/etc/syslog.conf";
                if (system("[ -e /sbin/syslog-ng ]") == 0)
                        config_file = "/etc/syslog-ng/syslog-ng.conf";
                openlog("without log_ndelay", LOG_PID, LOG_USER);
                fd = open(config_file, O_RDONLY);
...
so it is not a surprise that open() returned -1.
Jiri Palecek <jpalecek@web.de> wrote back: Yes, that code is a gem :-) Does it work with the attached patch?
CAI Qian tested back: It works apart from something untidy.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

70) Log Message:
Fix the following build warning:
cc -I../../../../include -Wall    syslogtst.c  -L../../../../lib -lltp -o
syslogtst
syslogtst.c: In function ‘main’:
syslogtst.c:50: warning: unused variable ‘config_file’
Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

71) Log Message:
Matt Helsley reported: The dependency description in testcases/network/lib6/Makefile breaks parallel builds:
 make autoconf
 ./configure
 make -j4 all
 ...
 cc -I../../../include -g -D_GNU_SOURCE   -c -o runcc.o runcc.c
 cc -I../../../include -g -D_GNU_SOURCE    asapi_01.c -L../../../lib runcc.a
-lltp -lpthread  -o asapi_01
 cc: runcc.a: No such file or directory
This patch fixes the problem by properly expressing the build depdency between the TARGET objects and runcc.a. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.
Garrett Cooper <yanegomi@gmail.com> replied: Sorry to knitpick, but runcc.a should really be librunc"c.a; otherwise it's not really linkable with ld when using -lruncc. You could also omit the lime with CC if implicit rules are enabled. Other than that the patch looks groovy!.
Matt Helsley replied back: Since the -l flag is not being used to link with runcc.a that's not a problem. -l adds the naming requirement and searches multiple directories. Otherwise gcc behaves as if it were just another .o. I think the only reason to prefer -l is if we're going to install it as a library. I checked and, as best I could tell, runcc.a is only used in the network/lib6 testcases. This means using -l has no advantages so I don't intend to change this part of the patch. In fact I can't see why they bothered making an archive at all. But that's a different change than I intend to make :). I guess I never relied much on the implicit rules -- I suppose the implicit rule compiling and linking each target will be triggered because the "empty" rule: 
$(TARGETS): %: %.c runcc.a
did not actually wind up creating its supposed target.. Thanks for the review. I'll post an updated patch soon. This patch fixes the problem by properly expressing the build depdency between the TARGET objects and runcc.a. Rely on the implicit rules as suggested by Garrett Cooper. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/Makefile

72) Log Message:
[Patch 1/2] Used named PIPE in test cases for NOMMU arch instead of anonymous: In NOMMU arch, anonymous PIPE can't be accessed in child process if it is started by vfork/execve. This patch use named PIPE instead. The API sync_pipe_create() and sync_pipe_close() are changed to accept PIPE name. Signed-off-by: Sonic Zhang <sonic.adi@gmail.com>.

Modified Files:
ltp/include/libtestsuite.h
ltp/lib/libtestsuite.c

73) Log Message:
[Patch 2/2] Used named PIPE in test cases for NOMMU arch instead of anonymous: In NOMMU arch, anonymous PIPE can't be accessed in child process if it is started by vfork/execve. This patch uses named PIPE instead and changes related test cases accordingly. Signed-off-by: Sonic Zhang <sonic.adi@gmail.com>.

Modified Files:
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c

74) Log Message:
Submitting a new testcase on semaphore to test the IPCNS in the containers. This patch contains the batch file to run the test on LTP. In this patch , I am checking  the IPCNS functionaity: "Semaphore in parent NS is isolated from the container". Changelog: Removed the extra semget call in the check_semaphore(). Corrected the indentation. Acked-by: Serge Hallyn <serue@us.ibm.com>. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
Added Files:
ltp/testcases/kernel/containers/sysvipc/sem_nstest.c

75) Log Message:
Here it goes. What i have tried to do is fix only the broken issues, where the test case(s) will not execute if enough hugepages are not available in the system. Now, i leave it on the discrition of the user to increase the hugepages in their system before executing these tests. Else, if you all agree on some way to autoset that before test execution, it would be welcome. Following patches Follow:
__001-Fix_Hugepages-Add_declaration_for_new_functions.patch
__002-Fix_Hugepages-Add_definitions_for_new_functions.patch
__003-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugepageshmget01.patch
__004-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugepageshmget03.patch
__005-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugepageshmget03_remaining_fixes.patch
__006-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugepageshmget05.patch
__007-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugepageshmget02.patch
__008-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmat01.patch
__009-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmat02.patch
__010-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmat03.patch
__011-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmctl01.patch
__012-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmctl02.patch
__013-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmctl03.patch
__014-Fix_Hugepages-Allocate_hugepages_only_if_available_to_hugeshmdt01.patch
Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmat/hugeshmat03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmdt/hugeshmdt01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget01.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget02.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget03.c
ltp/testcases/kernel/mem/hugetlb/hugeshmget/hugeshmget05.c
Added Files:
ltp/include/system_specific_hugepages_info.h
ltp/lib/system_specific_hugepages_info.c

76) Log Message:
Modify Makefile to include dma_thread_diotest7. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/io/direct_io/Makefile

77) Log Message:
Add dma_thread_diotest7. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/io/direct_io/dma_thread_diotest7.c

78) Log Message:
Add test dma_thread_diotest7.sh. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/io/direct_io/test_dma_thread_diotest7.sh

79) Log Message:
Add test dma_thread_diotest7 command file. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Added Files:
ltp/runtest/test_dma_thread_diotest7

80) Log Message:
Add test_dma_thread_diotest7 to runalltests.sh. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

81) Log Message:
Testing semaphore isolation between 2 containers: Here is a test case to test the semaphore isloation in container environment. Test Assertion: 
- This testcase verifies the semaphore isoloation in 2 diff containers.
- It tries to create/access a semaphore created with the same KEY.
changelog: version 2
* Modified testcase, to use only 2 pipe's to sync between 2 containers.
* Corrected the indentation. 
Signed-off-by: Veerendra C <vechandr@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
Added Files:
ltp/testcases/kernel/containers/sysvipc/semtest_2ns.c

82) Log Message:
Testing shmem isolation between 2 containers: Please find the testcase to test the shared memory isolation in between 2 containers. Test Assertion:
- This testcase verifies the Shared Memory isoloation in 2 containers.
- It tries to create/access a Shared Memory created with the same KEY.
Changelog: Version2
Removed extra pipe, to use only 2 pipe's for synchronizing between containers. Corrected from TPASS to TFAIL in the print statement. Signed-off-by: Veerendra C <vechandr@in.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
Added Files:
ltp/testcases/kernel/containers/sysvipc/shmem_2nstest.c

83) Log Message:
v4l-test 0.4 for LTP: Test cases for MAX_EM28XX_INPUT, MAX_EM28XX_TVNORMS removed as they might have confusing results if the tests are not executed agains em28xx driver. Some typos fixed. Signed-Off-By: Németh Márton <nm127@freemail.hu>.

Modified File(s):
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c

84) Log Message:
This patch fixes compilation warnings introduced recently. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/lib/libtestsuite.c
ltp/lib/system_specific_process_info.c
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/HTutils.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c
ltp/testcases/kernel/syscalls/paccept/paccept01.c
ltp/testcases/kernel/syscalls/paccept/paccept02.c
ltp/testcases/kernel/syscalls/socket/socket02.c
ltp/testcases/kernel/syscalls/socket/socket03.c
ltp/testcases/kernel/syscalls/socketpair/socketpair02.c

85) Log Message:
Paccept() has not been accepted upstream, and accept4() has already been tested in LTP, which does the pretty much same thing as the test here, http://lkml.org/lkml/2008/10/26/123. Hence, remove this test. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/runtest/syscalls
Removed Files:
ltp/testcases/kernel/syscalls/paccept/Makefile
ltp/testcases/kernel/syscalls/paccept/paccept01.c
ltp/testcases/kernel/syscalls/paccept/paccept02.c

86) Log Message:
Make ltp compilable without libaio: This is a patch inspired by numerous whining recently seen on ltp-list concerning compile failures when libaio is not present. This includes changes:
- add stubs to the aio tests,
- remove -laio from doio and pipeio makefile, as it was superfluous,
Changed the signatures of main() function (requested by Garrett Cooper). Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/fs/doio/Makefile
ltp/testcases/kernel/io/aio/aio01/Makefile
ltp/testcases/kernel/io/aio/aio01/aio01.c
ltp/testcases/kernel/io/aio/aio02/Makefile
ltp/testcases/kernel/io/aio/aio02/main.c
ltp/testcases/kernel/ipc/pipeio/Makefile

LTP-20081231

1) Log Message:
fix from Jiri Palecek: Fix syntax errors (and bashisms) in some shell files.

Modified File(s):
ltp/testcases/commands/unzip/unzip_genfile.sh
ltp/testcases/commands/unzip/unzip_tests.sh
ltp/testcases/commands/fileutils/mkdir/mkdir_tests.sh
ltp/testcases/commands/fileutils/cp/cp_tests.sh
ltp/testcases/commands/fileutils/ln/ln_tests.sh
ltp/testcases/commands/fileutils/mv/mv_tests.sh

2) Log Message:
Fix for failure in syscalls/stat04_64 and syscalls/lstat01A_64 testcases, by, Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/runtest/syscalls

3) Log Message:
Add _GNU_SOURCE for strsignal in spawn_ptrace_child.h. Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c

4) Log Message:
I've added small help target to Makefile & INSTALL talking about the new configuration setups. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/INSTALL
ltp/Makefile

5) Log Message:
sbrk has arguments of type intptr_t, which is long in on x86_64. There is following line in mmapstress03:
        if (sbrk(-NUM_SEGS * pagesize) == NEG1) {
Here the type of argument is int, because of constant NUM_SEGS, and this test fails here on x86_64. So let constants will be long. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/testcases/kernel/mem/mmapstress/mmapstress03.c

6) Log Message:
This test case requires write permission for the dummy program. It would fail for those who put LTP on an read-only environment. So this patch copies the dummy test program to and performs the test in a private directory. p.s. this patch copy the one Renaud Lottiaux sent for execve02.c. Signed-Off-By: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve05.c

7) Log Message:
The following patch fixes two problems in loop variables of gtod_latency test case :
1) The loop variable 'k' could overflow on 32 bit systems, leading to a SEGV.
2) The inner loop was not of constant duration. This meant the frequency of calls to usleep() depend on the number of total iterations. It is desirable to make this frequency a constant.
Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c

8) Log Message:
These patches enable AIO and listio in tlibio.c for linux, mostly by reusing code that is already in tlibio.c, and makes non-blocking read()/write() actually work. Also, they change pipeio.c to use this. Comments:
1) Patch 0001 enables aio and other types of io in tlibio.c code. Note that this means programs using functions from tlibio need linking with libaio and librt,
2) Patch 0002 changes non-blocking io in tlibio, so that it doesn't report EAGAIN to the client, but rather waits with select() for the io to become available (it would be possible extend this by adding more wait types). Also, it makes some minor changes to pipeio to make it work (eg. make opening the pipe always block, regardless of non-blocking setting).
3) Patch 0003 adds a semaphore to pipeio, to ensure all children have opened their pipes before reading & writing takes place. This avoids situations where one child gets to open the pipe after the parent deleted it (eg. because of an error). Also, it should eliminate all empty reads.
4) Patch 0004 changes error handling in pipeio to interpret every negative number as -errno.
5) Patch 0005 changes the way the end of the test is handled - before, the test ended after the last child was dead, but possibly before all data was read. The new way is to read all data and only if no data can be read, see if the children are dead.
The patches should be applied in sequence. Signed-Off-By: Jiří Paleček <jpalecek@web.de>,

Modified File(s):
ltp/include/tlibio.h ltp/lib/tlibio.c
ltp/testcases/commands/eject/Makefile
ltp/testcases/kernel/fs/doio/Makefile
ltp/testcases/kernel/ipc/pipeio/Makefile
ltp/testcases/kernel/ipc/pipeio/pipeio.c

9) Log Message:
The aiodio_sparse (and dio_sparse) tests use mmaped region of memory backed by a file, and populate the pages by writing to them. This can fail, eg. when Linux overcommits memory and the newly created pages do not fit; it results in the file not being properly deleted. This patch fixes that by trapping signals in these test (I used the standard libltp functions for that) and deleting the file in a cleanup function. Sorry that the patch may be little unclean - it was hand-edited. I will do something about that if it matters. Signed-Off-By: Jiří Paleček <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/io/ltp-aiodio/Makefile
ltp/testcases/kernel/io/ltp-aiodio/aiodio_sparse.c
ltp/testcases/kernel/io/ltp-aiodio/dio_sparse.c

10) Log Message:
The following patch removes a known failure that has been fixed in RHEL 5.3 and the fix also sent upstream, as well as adds missing copyright information. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

11) Log Message:
Here is a new patch to be applied on the November Release (ltp-full-20081130.tgz). It fixes and improves build/install scripts in the Sun-RPC/TI RPC test suite. It takes care also about some portmap/rpcbind conflicts in the tests scripts. Signed-Off-By: Le Rouzic <aime.le-rouzic@bull.net>.

Modified File(s):
ltp/runtest/stress.part3
ltp/testcases/network/rpc/basic_tests/rpcinfo/rpcinfo01
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/README
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.auto
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.interactive
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/install.ftr
ltp/testscripts/ltpstress.sh

12) Log Message:
This patch fixes compilation errors on RHEL5 introduced by addition of the bounds test to default test list. Signed-off-by: Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile

13) Log Message:
I report a bug of the msgctl02 testcase and a patch for it. When you set /proc/sys/kernel/msgmnb to a value larger than 65536, msgctl02 always results FAIL because of a bug itself. An example when /proc/sys/kernel/msgmnb == 4194304,
# cd ./testcases/kernel/syscalls/ipc/msgctl
# ./msgctl02
msgctl02    1  FAIL  :  qs_buf.msg_qbytes value is not expected
msgctl02    0  INFO  :  expected - 65535, received - 4194303
#
This is because the variable "new_bytes" storing "expected" value above is defined as "unsigned short" type and cannot hold a value larger than 65535. It should be "msglen_t" type as same as the member msg_qnum of struct msqid_ds, but msg_qnum seems to be declared as "unsigned long int" type on some architecture like ia64, I recommend you to use "unsigned long int" for new_bytes. Signed-off-by: Seiichi Ikarashi <s.ikarashi@jp.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl02.c

14) Log Message:
Veerendra <veeren@linux.vnet.ibm.com> reported: In the latest LTP release (LTP-full-20081130) the make is failing for Power machines for the 'utimensat' tests. Jiri Palecek <jpalecek@web.de> replied: This is because TCID is needed to call tst_brk if the syscall doesn't exist or optimization doesn't eliminate the call. At the first sight, it might seem that syscall() is not called when __NR_utimensat is undefined, because it is guarded by #ifdef, but it's not really so, because __NR_utimensat is stubbed in linux_syscall_numbers.h. To fix it, apply the first patch, which moves the definition of TCID outside the #ifdef block - it should be there anyway. The second patch removes the conditional compilation altogether, because it is never effective. The patches should be applied in sequence. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c

15) Log Message:
The following patches fixes a useless error log and possible segmentation fault with fclose[1], a failure to report client and server failures[2], and missing data file installation[3]. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/sched/clisrv/Makefile
ltp/testcases/kernel/sched/clisrv/pthcli.c
ltp/testcases/kernel/sched/clisrv/run_sched_cliserv.sh

16) Log Message:
Fixed typo when not defining SPEW_SIGNALS in my_yield(). Signed-Off-By: nobuhiro <nobuhiro@andestech.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/mallocstress.c

17) Log Message:
This series of patches fixes failures with mmapstress04, mmapstress07 and mmapstress08 test cases on IA-64, s390x and PPC64 mostly due to assuming page sizes on those architectures are 4K. This patch fixes mm testing list by removing hard-coded (4K alignment) arguments. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/runtest/mm

18) Log Message:
This series of patches fixes failures with mmapstress04, mmapstress07 and mmapstress08 test cases on IA-64, s390x and PPC64 mostly due to assuming page sizes on those architectures are 4K. This patch fixes mmapstress04 test case by obtaining default settings from default page size. It also preserve the possibility to use user-specified arguments. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress04.c

19) Log Message:
This series of patches fixes failures with mmapstress04, mmapstress07 and mmapstress08 test cases on IA-64, s390x and PPC64 mostly due to assuming page sizes on those architectures are 4K. This patch fixes mmapstress07 test case by obtaining default settings from default page size. It also preserve the possibility to use user-specified arguments. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress07.c

20) Log Message:
This series of patches fixes failures with mmapstress04, mmapstress07 and mmapstress08 test cases on IA-64, s390x and PPC64 mostly due to assuming page sizes on those architectures are 4K. This patch fixes mmapstress08 test case by limiting this test to run for x86 architecture only due to it makes several assumptions about 4K page size etc, and I don't see the obvious way to make it work for non-x86 architectures. Signed-off-by: CAI Qian <caiqian@cclom.cn>. 

Modified Files:
ltp/testcases/kernel/mem/mmapstress/mmapstress08.c

21) Log Message:
Mem01 test case sometimes trigger OOM Killer. As the result, the test failed with a non-error code. This patch reduces the chance of OOM Killer by always reserving 16MB memory. It is a trade-off between not testing all available memory and dealing with false failure (extra work to waive the failure in automated environment and clean up unexpected test leftovers). I prefer the formal. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/mem/mem/mem01.c

22) Log Message:
commands/unzip: check exit code of all comands: 1. don't redirect all output to /dev/null. It's bad idea, because we can't investigate bugs without error messages. 2. check exit code of command "zip". If it failed, we get error during make install that can't found a zip file. Signed-Off-By: Andrew Vagin <avagin@parallels.com>.

Modified File(s):
ltp/testcases/commands/unzip/unzip_genfile.sh

23) Log Message:
Version 2: The test failed a few hours after I sent this off. I think it was caused by a pid collision which caused the test to use the same queue as an earlier failed test that didn't close out its queue. This version of the test uses O_EXCL to avoid this. And it cleans up the queue on every failure case. This test was racy. It relied on signals interrupting sleeps to do syncronization between processes. It also didn't cleanup the queue on the failure cases and assumed that its queue didn't already exist. This patch fixes these issues. Reported failures: https://bugzilla.novell.com/show_bug.cgi?id=375897. Instead use a syncronization pipe to have the child thread send messages to the parent thread (with reasonable timeouts since this is testing blocking calls).
# Apply to root of ltp-full-20081031 tree
$ cd testcases/open_posix_testsuite/
$ make conformance/interfaces/mq_send/5-1.test
$ conformance/interfaces/mq_send/5-1.test
Signed-off-by: Brandon Philips <bphilips@suse.de>

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/mq_send/5-1.c
ltp/testcases/open_posix_testsuite/include/posixtest.h

24) Log Message:
This is a proposal for 2 new testcases in the pidns testcases. They are related to POSIX message queues and notification on message arrival. Could you please review them? If a process registers for asynchronous notification on a POSIX message queue, it gets a signal and a siginfo_t structure when a message arrives on the message queue. The si_pid in the siginfo_t structure is set to the PID of the process that sent the message. If the process that sent the message is not in the same namespace as the notified one, this should be taken into account. 
pidns30 : notified process is in a descendant namespace wrt to the notifier. so the signal receiver doesn't know about the sender's pid.
pidns31 : notified process is in an ancestor namespace wrt to the notifier. so the signal receiver should get the sender's PID in the signal receiver namespace.
They currently fail, since the si_pid is not correctly set. But I just proposed a patch to fix this (see http://lkml.org/lkml/2008/12/5/13). This testcase checks if the si_pid is correctly set when a process that has registered for notification on a posix mqueue is in a descendant namespace wrt the process that sends a message to that posix mqueue. Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>, Acked-By: <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns30.c

25) Log Message:
This is a proposal for 2 new testcases in the pidns testcases. They are related to POSIX message queues and notification on message arrival. Could you please review them? If a process registers for asynchronous notification on a POSIX message queue, it gets a signal and a siginfo_t structure when a message arrives on the message queue. The si_pid in the siginfo_t structure is set to the PID of the process that sent the message. If the process that sent the message is not in the same namespace as the notified one, this should be taken into account.
pidns30 : notified process is in a descendant namespace wrt to the notifier. so the signal receiver doesn't know about the sender's pid.
pidns31 : notified process is in an ancestor namespace wrt to the notifier. so the signal receiver should get the sender's PID in the signal receiver namespace.
They currently fail, since the si_pid is not correctly set. But I just proposed a patch to fix this (see http://lkml.org/lkml/2008/12/5/13). This testcase checks if the si_pid is correctly set when a process that has registered for notification on a posix mqueue is in an ancestor namespace wrt the process that sends a message to that posix mqueue. Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>, Acked-By: <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns31.c

26) Log Message:
Tests in testcase/network/lib6 has been excluded because they occured build break on the earlier distributions. Now autoconf is introduced, we can include it again. Ths series of patches enable the lib6 tests. The initialization style of union, ".<member>=<value>", is one of the latest gcc extention. It's better not to use it. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/network/lib6/asapi_01.c
ltp/testcases/network/lib6/asapi_02.c
ltp/testcases/network/lib6/asapi_03.c
ltp/testcases/network/lib6/asapi_05.c
ltp/testcases/network/lib6/asapi_06.c
ltp/testcases/network/lib6/asapi_07.c

27) Log Message:
Tests in testcase/network/lib6 has been excluded because they occured build break on the earlier distributions. Now autoconf is introduced, we can include it again. Ths series of patches enable the lib6 tests. For socket related functions, sys/socket.h should be included. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/network/lib6/asapi_04.c
ltp/testcases/network/lib6/asapi_05.c

28) Log Message:
Tests in testcase/network/lib6 has been excluded because they occured build break on the earlier distributions. Now autoconf is introduced, we can include it again. Ths series of patches enable the lib6 tests. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified Files:
ltp/configure.ac
ltp/include/config.h.default
ltp/testcases/network/Makefile
ltp/testcases/network/lib6/asapi_06.c

29) Log Message:
Give others to use this file created by Root during Install.

Modified Files:
ltp/testcases/commands/unzip/Makefile

30) Log Message:
COMPILATION ERROR FIX for NETNS on ia64: Serge/Subrata, I have the patch , to fix the make problem for containers. Would you please review this ? In containers, it would dynamically check for the unshare() defn, in the linked libraries. This would not halt the make, if the unshare() is not found in the system. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>. 

Modified File(s):
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/check_for_unshare.c

31) Log Message:
Subrata Modak <subrata@linux.vnet.ibm.com> wrote: Hi Rusty, I found that you wrote a test program to verify whether all the valid IFF flags are implemented by TUNGETFEATURES ioctl (recently in 2.6.27: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commit;h=07240fd0902c872f044f523893364a1a24c9f278). I ported the same into LTP format and created the first draft version. Yet to test it on the latest kernel, but the first draft works fine. If you do not have any issue(s), can we add this code to LTP with your permission ??. Rusty Russell <rusty@rustcorp.com.au> replied: Thanks, of course!. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>. Signed-Off-By: Rusty Russell <rusty@rustcorp.com.au>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/ioctl/test_ioctl
Added Files:
ltp/testcases/kernel/syscalls/ioctl/ioctl03.c

32) Log Message:
Please find the patch for the pidns14.c testcase. Test Assertion:
** kill -USR1 container_init from outside a container,
** $ Where init has not defined a custom handler for USR1,
** $ Should kill the container,
** $ else the test fails,
Signed-off-by: Veerendra C <vechandr@in.ibm.com>,
Results:
# ./pidns14
pidns14     1  PASS  :  container init is killed, as expected
Sukadev, Included the changes suggested by you after doing waitpid() at the end.

Added Files:
ltp/testcases/kernel/containers/pidns/pidns14.c

33) Log Message:
Please find the testcase for the below scenario. Assertion:
** kill - USR1 container_init,
**      - from the parent process and also inside a container,
**      - Where init has defined a custom handler for USR1,
**      - Should call the handler, and,
**      - Verify whether the signal handler is called from the proper process.
Signed-off by: Veerendra C <vechandr@in.ibm.com>,
Results:
# ./pidns16
pidns16     0  INFO  :  sig_handler is signalled from pid  29640
pidns16     0  INFO  :  Container: Resumed after receiving SIGUSR1 from parentNS
pidns16     0  INFO  :  sig_handler is signalled from pid  1
pidns16     0  INFO  :  Container: Resumed after sending SIGUSR1 from container itself
pidns16     1  PASS  :  container init continued successfuly, after handling signal -USR1
Suka,
After your comments, now I am checking in the signal handler the sending procee id. If it is from the parent ns and when it is from container init. Also made some small changes after doing waitpid() in main.

Added Files:
ltp/testcases/kernel/containers/pidns/pidns16.c

34) Log Message:
Just a few fixes I've done while running the complete LTP suite on a ppc64 system. The test fails while running command "numa_node_size" which is unknown to my system. This patch replaces numa_node_size by "numactl --hardware". Signed-off-by: Gilles Carry <gilles.carry@bull.net>.

Modified Files:
ltp/testcases/kernel/numa/numa01.sh

35) Log Message:
Just a few fixes I've done while running the complete LTP suite on a ppc64 system. This definition is missing on powerpc specific code. utimensat test fails without this patch. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. 

Modified Files:
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in

36) Log Message:
Just a few fixes I've done while running the complete LTP suite on a ppc64 system. Crontab command fail if user is not present in cron.allow file. This moves away cron.allow and restores it afterward. Signed-off-by: Gilles Carry <gilles.carry@bull.net>.

Modified Files:
ltp/testcases/commands/cron/cron_deny01

37) Log Message:
Just a few fixes I've done while running the complete LTP suite on a ppc64 system. Crontab command fail if user is not present in cron.allow file. This moves away cron.allow and restores it afterward. Signed-off-by: Gilles Carry <gilles.carry@bull.net>.

Modified Files:
ltp/testcases/commands/cron/cron_pos_tests.sh

38) Log Message:
CPU controller latency testcases v-4: Add some documentation with respect to test. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_testplan.txt

39) Log Message:
CPU controller latency testcases v-4: The patch adds a binary to be run as load on the machine. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_latency_test.c

40) Log Message:
CPU controller latency testcases v-4: The patch adds a binary to be run as the latency check task. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_latency_check_task.c

41) Log Message:
CPU controller latency testcases v-4: The patch adds a script which runs the load tasks and the latency check task. The script creates setup for both the tests(with and without cpu controller). Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_latency_test.sh

42) Log Message:
CPU controller latency testcases v-4: Edit the makefile. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/Makefile

43) Log Message:
CPU controller latency testcases v-4: Add the test to be run with other cpu controller testcases. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/test_controllers.sh

44) Log Message:
Testcase pidns10 on pidnamespace: The pidns10.c testcase verifies inside the container, if kill(-1, sig) fails with ESRCH when there are no processes in container besides container-init. Signed-off-by: Gowrishankar M <gowrishankar.m@in.ibm.com>, Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns10.c

45) Log Message:
Please accept below testcase patches for pid namespace. 
pidns12:
Description:
  The pidns12.c testcase verifies that siginfo->si_pid is set to 0 if sender (parent process) is not in receiver's namespace.
pidns13:
  The pidns13.c testcase checks container init, for async I/O triggered by peer namespace process.
pidns17:
  The pidns17.c testcase verifies inside the container, if kill(-1, SIGUSR1) terminates all children running inside.
Signed-off-by: Gowrishankar M <gowrishankar.m@in.ibm.com>,
Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns12.c
ltp/testcases/kernel/containers/pidns/pidns13.c
ltp/testcases/kernel/containers/pidns/pidns17.c

46) Log Message:
Per request of Mike Frysinger, I resend this patch. The patch itself is  the same, but the explanation is extended. Hope it's better this time. 
Hello,
I'm sorry to say this, but some changes in the "Fix Warnings and Badness v2" patch[1] from October actually create bugs in the ltp tests. I think they should be reverted by applying the attached patch. The problems are of those types:
1) Calling:
pthread_create(&th, &newattr, (void *)&new_thread, (void *)&newsockfd) is wrong if eg. newsockfd is a variable subsequently modified by the parent thread, not protected by locking. This is because there is a data race between the read in the new thread and the write in the parent thread. Moreover, it is quite often meant to pass different values to more threads in the ltp tests, which results in the different threads actually sharing the variable, which leads to unpredictable results.
2) Calling
pthread_exit((void *)&exit_val); is wrong if exit_val is a local or thread-local variable, incl. errno. These variables cease to exist when the thread finishes, so subsequent dereferencing & read in the joining thread would read nonexistent variable. I think they should be reverted, because the warning (conversion pointer/integer) doesn't mean anything bad in this context (provided you use the same type on both sides, eg. the calling thread and the created thread) and other solutions just add unnecessary complexity. The patch goes a little further, while I was searching for related problems, I've found one typo and changed the signatures of some thread functions (they really should be (void* (*)(void*)), not (void* (*)(int))). I've discovered this when I debugged a deadlock in test_1_to_1_threads. BTW, shouldn't the first (or last) thread in this test call t_recv instead of t_send (see the relay function). Signed-Of-By: Jiří Paleček <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/fs/openfile/openfile.c
ltp/testcases/kernel/io/disktest/childmain.c
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/timer.c
ltp/testcases/kernel/mem/mtest06/mmap1.c
ltp/testcases/kernel/mem/mtest07/mallocstress.c
ltp/testcases/kernel/mem/mtest07/shm_test.c
ltp/testcases/kernel/sched/clisrv/pthserv.c
ltp/testcases/network/sctp/func_tests/test_1_to_1_threads.c

47) Log Message:
The test case "utimensat01" will test the function "utimensat" when the file is not owned by self. It excepts it will return some error code. But if the test user is "root", it has super property and can be success. Signed-off-by: Zhang Xiliang <zhangxiliang@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

48) Log Message:
This patch adds a menu to networktests.sh in order to select the network tests like networkstress.sh. For the backword compatibility, the default test sets are left as-is. Namely, networktests.sh doesn't run any additional tests when no option is specified. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified Files:
ltp/testscripts/networktests.sh
Added Files:
ltp/runtest/tcp_cmds_addition

49) Log Message:
Adding the patch for running the tests pidns14.c and pidns16.c. Please accept this. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/runpidnstest.sh

50) Log Message:
The description of the networktests.sh in INTALL file is a bit old. This patch adds the description regarding PAM and test menu. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/INSTALL

51) Log Message:
Please accept below testcase patches for pid namespace. They carry minor comments suggested by Suka and Nadia in lxc-dev.
---
pidns20:
     The pidns20.c testcase verifies that signal handler of SIGUSR1 is called (and cinit is NOT terminated) when:
        - container-init blocks SIGUSR1,
        - parent queues SIGUSR1 and
        - a handler is specified for SIGUSR1 before it is unblocked.
 Change log:
   version 2:
     * added two pipes for reliable testing.
   version 1:
     * Submitted in lxc-dev
pidns21:
    The pidns21.c testcase verifies that container-init is terminated by
SIGUSR1 when:
       - a handler is specified for SIGUSR1,
       - container-init blocks SIGUSR1,
       - parent queues SIGUSR1 and
       - handler for SIGUSR1 is set to system default before SIGUSR1 is
         unblocked.
Change log:
   version 2:
     * added two pipes for reliable testing.
   version 1:
    * Submitted in lxc-dev
Signed-off-by: Gowrishankar M <gowrishankar.m@in.ibm.com>, Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns20.c
ltp/testcases/kernel/containers/pidns/pidns21.c

52) Log Message:
I made few changes to ltp/testcases/kernel/fs/acl/tacl_xattr.sh. It is not working perfectly still there are issues with this script. I have posted patch and logs.attached strace log file. Please cross check results. Signed-off-by: Naresh Kamboju<naresh.kernel@gmail.com>.

Modified File(s):
ltp/testcases/kernel/fs/acl/tacl_xattr.sh

53) Log Message:
The problem is noticed only for these 2 tests lstat01A_64 and stat04_64. Analysis of the problem showed that these tests are called from runtest/syscall file. The problem is noticed because the symlink01.c file doesn't have implementation to take care lstat01A_64 and stat04_64 arguments that are passed in the file runtest/syscall. Solution: Simple solution is to remove lines.
lstat01A_64 symlink01 -T lstat01_64
stat04_64 symlink01 -T stat04_64
from runtest/syscall.
Other option is to provide feature in symlink01.c so that it can execute these tests successfully. I worked on one such patch. Please have a look. This runs same tests for lstat01A_64 and stat04_64 as is run for lstat01 and stat04 respectively. Signed-Off-By: Sharyathi Nagesh <sharyath@in.ibm.com>.

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/symlink/symlink01.c

54) Log Message:
Subrata Modak <subrata@linux.vnet.ibm.com> wrote:
The tcore_patch_test_suite was added to LTP on Fri Jan 17 22:07:55 2003 UTC, with contribution from you. As i try to compile it today, i get the following error:
[tcore_patch_test_suites]$ make
 gcc  -o tcore tcore.c -lm -lpthread
 tcore.c: In function ‘producer’:
 tcore.c:129: error: memory input 0 is not directly addressable
 tcore.c: In function ‘consumer’:
 tcore.c:166: error: memory input 0 is not directly addressable
 tcore.c:167: error: memory input 0 is not directly addressable
 make: *** [tcore] Error 1
Can you please let me know:
 1) Any fix for this Failure ?
 2) Relevance of this test case today, whether they need to be there in  LTP or not ?

Gowrishankar <gomuthuk@linux.vnet.ibm.com> replied:
I have made it to compile and run with below patch. Using proper extended asm stops this problem. Below patch uses gcc's extended asm instead of basic inlines on this test which stops compilation problem with newer gcc's (v4). Signed-off-by: Gowrishankar M <gowrishankar.m@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/misc/tcore_patch_test_suites/tcore.c
ltp/testcases/misc/tcore_patch_test_suites/tcore.sh

55) Log Message:
Small updates from Pradeep K Surisetty <pradeepkumars@in.ibm.com>.

Modified File(s):
ltp/testcases/pounder21/README
ltp/testcases/pounder21/src/ramsnake/Makefile
ltp/testcases/pounder21/src/ramsnake/snake.c

56) Log Message:
The attached patch fixes and then integrates the Hyperthreading tests to default LTP run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp
ltp/testcases/kernel/sched/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTaffinity.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_affinity/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/Makefile

57) Log Message:
Thanks very much for fixing this. Now i am able to build and install properly. As a fallout to your fix, i am adding this test to build & install default, however i am reserving to run it only through runalltests.sh, as it creates a core file of size > 20MB. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>,

Modified Files:
ltp/runalltests.sh
ltp/testcases/misc/Makefile
Added Files:
ltp/runtest/tcore

58) Log Message:
The newly added test case ioctl03[1] introduces some problems. First, compilation errors. Second, test failures and misuse of TCONF. The following patch fixes them by changing an order of a header file and also checking IFF_VNET_HDR. It also tidy up the code and add some more information to test output.Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/ioctl03.c

59) Log Message:
This patch fix man miscellenous compilation warnings. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/lib/tlibio.c
ltp/testcases/kernel/fs/openfile/openfile.c
ltp/testcases/kernel/io/disktest/childmain.c
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/timer.c
ltp/testcases/kernel/mem/mtest07/mallocstress.c
ltp/testcases/kernel/mem/mtest07/shm_test.c
ltp/testcases/kernel/sched/clisrv/pthserv.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/HTutils.c
ltp/testcases/kernel/sched/hyperthreading/ht_enabled/Makefile
ltp/testcases/kernel/sched/hyperthreading/ht_interrupt/Makefile
ltp/testcases/network/sctp/func_tests/Makefile
ltp/testcases/network/sctp/func_tests/test_1_to_1_threads.c

60) Log Message:
I have reviewed test cases for set_robust_list and get_robust_list. These test cases are working fine and generating results as PASS. I have found a small correction in comment line. Here I am posting the same. Signed-Off-By: Naresh Kamboju <naresh.kernel@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c

61) Log Message:
=========================================================
Manas K. Nayak <maknayak@in.ibm.com> reported:
=========================================================
accept4_01 test cases are broken because the function accept04() is not implemented in testcase. Used ltp version: ltp-full-20081130.tgz. Manually executed the test as below:
[accept4]# ./accept4_01
accept04_01    1  BROK  :  accept4() Error: Function not implemented
=========================================================
Subrata Modak <subrata@linux.vnet.ibm.com> replied:
=========================================================
Fix on x86_64 as well, as it behaves properly on other Architectures. Supriya/Manas, accept4_01.c is a new test case for the new system call accept4() recently introduced in kernel-2.6.26 only for the x86_64 architecture. The test has the code to handle if it is not supported in some architecture. Interestingly it executes the expected way on x86 machines: 
# uname -a
Linux 2.6.25-gcov-nomodconfig-smp #1 SMP Thu Jun 12 06:29:27 EDT 2008 i686 i686 i386 GNU/Linux 
# ./ltp-intermediate-20081216/testcases/bin/accept4_01
accept04_01    1  CONF  :  syscall __NR_accept4 not supported on your arch
But on x86_64, it behaves differently:
# uname -a
Linux 2.6.18-125.el5 #1 SMP Mon Dec 1 17:38:25 EST 2008 x86_64 x86_64 x86_64 GNU/Linux
# ./accept4_01
accept04_01    1  BROK  :  accept4() Error: Function not implemented
It means though the interface calls for:
syscall(__NR_socketcall, SYS_ACCEPT4, args)
&
syscall(__NR_accept4, fd, sockaddr, addrlen, flags)
will execute as __NR_socketcall & __NR_accept4 are defined inside the system, the exact implementation of the interface is yet to come as the kernel < 2.6.26. So, i changed the code accordingly. Please verify the patch. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/accept4/accept4_01.c

62) Log Message:
======================================================
Manas K. Nayak <maknayak@in.ibm.com> reported:
======================================================
Ltp iptables testcases failed against sles with following ping failures. Looks like iptables chain rules set to block ping from loopback address.
======================================================
Sridhar Vinay Replied:
======================================================
Manas, This looks like default SLES behaviour. When all rules are flushed, the default behaviour for SUSE firewall is to drop all packets. This is not the case with RH where absence of any rule results in all packets accepted. So we may need to adjust the test accordingly. Modification to test case to indicate certain distributions dropping all packets when firewall is enabled and no rule is present.
======================================================
Manas K. Nayak <maknayak@in.ibm.com> reverted back:
======================================================
I verified the patch using ltp release "ltp-full-20081130" on SLES and it is generating expected information as mentioned. Subrata you can make this patch available in coming ltp release. Signed-Off-By: Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/iptables/iptables_tests.sh

63) Log Message:
Include File Systems Data Integrity Tests to Default  LTP run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs

64) Log Message:
Increase the No. of Loops for the File System INOD tests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs

65) Log Message:
Integrate the File System Permissions Tests in to Default LTP run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs ltp/testcases/kernel/fs/fs_perms/Makefile
Added Files:
ltp/testcases/kernel/fs/fs_perms/fs_perms_simpletest.sh
Removed Files:
ltp/testcases/kernel/fs/fs_perms/simpletest.sh

66) Log Message:
Increase the No. of Soft & Hard Links Created by linktest.pl. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs

67) Log Message:
Integrate PROC File Systems tests into default LTP run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs

68) Log Message:
Integrate File Systems Race Condition Check tests to  default LTP run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/fs ltp/testcases/kernel/fs/Makefile
Added Files:
ltp/testcases/kernel/fs/racer/fs_racer.sh
ltp/testcases/kernel/fs/racer/fs_racer_dir_create.sh
ltp/testcases/kernel/fs/racer/fs_racer_dir_test.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_concat.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_create.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_link.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_list.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_rename.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_rm.sh
ltp/testcases/kernel/fs/racer/fs_racer_file_symlink.sh
Removed Files:
ltp/testcases/kernel/fs/racer/dir_create.sh
ltp/testcases/kernel/fs/racer/dir_test.sh
ltp/testcases/kernel/fs/racer/file_concat.sh
ltp/testcases/kernel/fs/racer/file_create.sh
ltp/testcases/kernel/fs/racer/file_link.sh
ltp/testcases/kernel/fs/racer/file_list.sh
ltp/testcases/kernel/fs/racer/file_rename.sh
ltp/testcases/kernel/fs/racer/file_rm.sh
ltp/testcases/kernel/fs/racer/file_symlink.sh
ltp/testcases/kernel/fs/racer/racer.sh

69) Log Message:
Integrate CD and FLOPPY tests to run with runalltests.sh. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh
Added Files:
ltp/runtest/io_cd
ltp/runtest/io_floppy
Removed Files:
ltp/runtest/io

70) Log Message:
Make io/aio tests to build & install with root level  make, and then run with runltp. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp
ltp/testcases/kernel/io/Makefile
ltp/testcases/kernel/io/aio/aio02/Makefile
ltp/testcases/kernel/io/aio/aio02/runfstests.sh
Added Files:
ltp/runtest/io

71) Log Message:
Run the CPU HOTPLUG tests through runalltests.sh. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/README
ltp/runalltests.sh
Added Files:
ltp/runtest/cpuhotplug

72) Log Message:
Fix compilation issues in compiling the MEMORY HOTPLUG tests. Better ways to fix the compilation error(s) are always welcome. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/migrate_pages.c

73) Log Message:
Add options for block devices and turn on related testcases. Signed-Off-By: Andrew Vagin <avagin@gmail.com>.

Modified Files:
ltp/runltp
ltp/runtest/syscalls

74) Log Message:
This testcase checked event IN_UNMOUNT. IN_UNMOUNT File system containing watched object was unmounted and check filesystem that it can't be unmounted if exist opened inotify descriptor. Example of execution:
Running tests.......
inotify03    0  INFO  :  mount /dev/loop0 to mnt_694 fstype=ext3
inotify03    0  INFO  :  umount /dev/loop0
<<<test_start>>>
tag=inotify03 stime=1229332020
cmdline="inotify03 -D /dev/loop0 -T ext3"
contacts=""
analysis=exit
initiation_status="ok"
<<<test_output>>>
incrementing stop
inotify03    1  PASS  :  get event: wd=1 mask=2000 cookie=0 len=0
inotify03    2  PASS  :  get event: wd=1 mask=8000 cookie=0 len=0
inotify03    3  PASS  :  inotify_rm_watch (5, 1) return -1 errno=22 : Invalid argument
<<<execution_status>>>
duration=0 termination_type=exited termination_id=0 corefile=no cutime=0 cstime=0
<<<test_end>>>
kernel: Linux avagin 2.6.25-rc6 #1 SMP Tue Jul 8 13:42:51 MSD 2008 i686 Intel(R) Celeron(R) CPU 2.53GHz GenuineIntel GNU/Linux. 
Signed-Off-By: Andrew Vagin <avagin@gmail.com>. Acked-By: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/inotify/inotify03.c

75) Log Message:
Add TCONF if the tested kernel has version less than 2.6.13. Signed-Of-By: Andrew Vagin <avagin@gmail.com>. Acked-By: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c
ltp/testcases/kernel/syscalls/inotify/inotify03.c

76) Log Message:
Introduce autoconf to inotify test case. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/configure.ac
ltp/testcases/kernel/syscalls/inotify/Makefile
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

77) Log Message:
This patchset creates the basic infrastructure for running the existing network testcases under containers automatically. The patchset creates a command file named nw_under_ns for the purpose. Please review them and provide all your valuable feedback. I have addressed all the comments from lxc-dev list except one. The changelog looks like:
1. Added verbose comments and patch description.
2. Restructured the licensing text.
3. Merged two patches into one touching runallnetworktest_child.sh file.

TODO:
1. Changing the kernel version to proper one
2. unshare not needed as clone only is suffucient. I will do it in a separate patch as need to do extensive testing to ensure other testcases do not break.
Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>. Acked-By: "Serge E. Hallyn" <serue@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/libclone/libnetns.c
ltp/testcases/kernel/containers/netns/parentns.sh
Modified Files:
ltp/testcases/kernel/containers/libclone/libnetns.c
Modified Files:
ltp/testcases/kernel/containers/libclone/libnetns.c
ltp/testcases/kernel/containers/netns/childns.sh
ltp/testcases/kernel/containers/netns/parentns.sh
Modified Files:
ltp/testcases/kernel/containers/netns/childns.sh
ltp/testcases/kernel/containers/netns/parentns.sh
Added Files:
ltp/testcases/kernel/containers/netns/create_container.c
Added Files:
ltp/testcases/kernel/containers/netns/runallnetworktests_parent.sh
Added Files:
ltp/testcases/kernel/containers/netns/runallnetworktests_child.sh
Added Files:
ltp/testcases/kernel/containers/netns/nw_under_ns.sh
Modified Files:
ltp/testcases/kernel/containers/netns/Makefile
Added Files:
ltp/runtest/nw_under_ns
Modified Files:
ltp/testcases/kernel/containers/netns/runallnetworktests_child.sh
Added Files:
ltp/testcases/kernel/containers/netns/readme

78) Log Message:
Linux drivers based on Video for Linux Two (V4L2) API, test addition:
Németh Márton <nm127@freemail.hu> wrote:
I started a project to test the Linux drivers based on Video for Linux Two (V4L2) API, release 0.24. This project is using the CUnit framework and is available at http://v4l-test.sourceforge.net/. I found your project at http://ltp.sourceforge.net/ . As far as I know the LTP currently do not have any tests for V4L2. Maybe test cases created for v4l-test project can be used for LTP also. What do you think? 
Subrata Modak <subrata@linux.vnet.ibm.com> wrote back: 
es, it can be. We have a rather old code base for Device Drivers testing. And time and again i was trying to revive the device drivers tests inside LTP, but, did not get sufficient volunteers to do the same. Your test code can be a starting point for us. I downloaded your testsuite and was able to compile the stuff, with some modification(s). However, i did not test it. Can you also share the logs of the run on your machine ?? More info is required in the documentation. I have prepared a patch(attached & embedded), which will integrate these tests inside LTP with minor modifications in documentation and some #defines in some source files (to be able to compile on machines not having respective header files containing the definition). Now, we have 2 choices:
1) You can voluntarily allow us to maintain this code inside LTP. Send your patches/modifications to us, whenever you want to add/modify/remove any tests out of: ltp/testcases/kernel/device-drivers/v4l-test/, We will then do the needful. You benefit by showcasing your test code to a bigger LTP community, and hence can attract more contribution from them. We gain by re-introducing/re-starting device drivers testing, which can then move to other device drivers as well. If you agree, please reply to this mail with a DCO Sign-off:  Signed-Off-By: Németh Márton <nm127@freemail.hu>, I can then go ahead and include this patch.
2) You can keep your project running at: http://v4l-test.sourceforge.net/, as well as agree to apply this patch to include in LTP. In such a case, send us updates whenever you update your project. In any case, i  would require a DCO Sign-off: Signed-Off-By: Németh Márton <nm127@freemail.hu>,  from you. I would like to thank you for deciding to contribute this to LTP, and would also request you to help us fix the  existing device drivers tests in LTP, so that we can start using them. If necessary we can delete the obsolete ones and add new ones: http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/testcases/kernel/device-drivers/. Do you think, you will also be able to help us here ?? 
Németh Márton <nm127@freemail.hu> wrote back:
Yes, sorry about that. I have had no access to my emails during the last days. I also wanted to think about this a little. I would like to choose the 2nd solution: I try to run my project forward and send you patches to include them  in LTP. The source code and the test design was created by me. However, the V4L2 API specification which is also included in the tarball is only downloaded and saved under the 'doc' directory so I always have a local copy of the V4L2 API revision 0.24. This you might not want to include in the LTP source code. I had some difficulties with the inline patch you sent me, it was not usable at my side because my email client was not able to handle it correctly. Could you please send it as an attachment? What I could recognised that the v4l-test project was placed in LTP source directory under ltp-intermediate-20081223.orig/testcases/kernel/device-drivers/v4l-test . However, if I look around in the "device-drivers" subdirectory I would use the subdirectory: ltp/testcases/kernel/device-drivers/v4l/user_space . What do you think? Signed-Off-By: Márton Németh <nm127@freemail.hu>.

Modified Files:
ltp/README
Added Files:
ltp/testcases/kernel/device-drivers/v4l/user_space/Makefile
ltp/testcases/kernel/device-drivers/v4l/user_space/README
ltp/testcases/kernel/device-drivers/v4l/user_space/dev_video.c
ltp/testcases/kernel/device-drivers/v4l/user_space/dev_video.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_CROPCAP.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMAUDIO.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMINPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUMSTD.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_ENUM_FMT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_INPUT.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_INPUT.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_QUERYCAP.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_VIDIOC_STD.h
ltp/testcases/kernel/device-drivers/v4l/user_space/test_invalid_ioctl.c
ltp/testcases/kernel/device-drivers/v4l/user_space/test_invalid_ioctl.h
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.c
ltp/testcases/kernel/device-drivers/v4l/user_space/v4l2_test.h
ltp/testcases/kernel/device-drivers/v4l/user_space/video_limits.h
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/a16506.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/a16706.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/a16721.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/b17127.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/book1.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c14592.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c14595.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c174.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c2030.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c5742.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/c6488.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/capture-example.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/f163.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/i16960.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/index.html
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r10104.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r10211.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r10386.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r10595.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r10944.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11094.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11217.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11285.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11430.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11612.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11680.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r11946.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12051.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12265.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12342.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12784.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12816.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r12878.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13022.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13105.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13317.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13641.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13696.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13817.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r13889.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14037.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14090.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14169.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14264.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14390.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r14496.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r2492.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r3735.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r3796.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r3896.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4185.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4246.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4339.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4484.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4629.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r4850.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r5016.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r5154.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r5319.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r5470.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r7624.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r7626.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r7667.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r7771.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r7900.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8087.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8242.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8304.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8367.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8494.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8724.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r8936.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9149.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9288.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9539.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9688.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9804.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/r9994.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x15446.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16430.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16453.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16497.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16743.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16769.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16775.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16788.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16896.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16910.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16915.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16923.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16929.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16933.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x16941.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x1859.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x1904.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x2009.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x2123.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x2428.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x2490.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x282.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x294.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x309.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x341.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x3891.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x394.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x448.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x542.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5634.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5665.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5791.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5884.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5950.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x5953.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x6386.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x6570.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x6831.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x6909.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x6991.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7002.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7013.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7236.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7561.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7578.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x7607.htm
ltp/testcases/kernel/device-drivers/v4l/user_space/doc/spec/x802.htm

79) Log Message:
Manas Kumar Nayak <maknayak@in.ibm.com> shared this wonderfull README to run LTP Network tests.

Added File(s):
ltp/testcases/network/LTP-Network-test_README.pdf

80) Log Message:
Use more descriptive diff format for reporting errors in ln_tests: the error output in some tests is not as useful as it could be. This patch amend that. Do not compare actual and expected output with the "quiet" switch, to get some info more useful than "The files xxx and yyy differ" in case of failure. Use the correct error output file in unzip_tests. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/fileutils/ln/ln_tests.sh
ltp/testcases/commands/gzip/gzip_tests.sh
ltp/testcases/commands/unzip/unzip_tests.sh

81) Log Message:
This patch fixes the logic of #ifdefs in the signalfd testcase. The problem was, that if our own syscall was used, no test would actually be compiled (because of #else between those two pieces of code). This patch also fixes this compile error:
make[5]: Leaving directory `/tmp/buildd/ltp-20081130+dfsg/testcases/kernel/syscalls/signal'
make[5]: Entering directory `/tmp/buildd/ltp-20081130+dfsg/testcases/kernel/syscalls/signalfd'
cc -g -O2 -g -Wall -O2 -Wall -g -O2 -g -Wall -O2 -I../../include -g -Wall -I../../../../include -Wall    signalfd01.c-L../../../../lib -lltp -o signalfd01
signalfd01.c:88:18: error: #if with no expression
signalfd01.c: In function 'do_test1':
signalfd01.c:117: warning: implicit declaration of function 'signalfd' by checking for "defined USE_OWNIMPL", not "USE_OWNIMPL".
Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

82) Log Message:
Delete an a.out file in eventfd Makefile: the clean targets in ltp don't always clean all intermediate binary files. This patch fixes that. The a.out file is potentially created by the check for aio_eventfd (or other compile checks) in the makefile. The object files in getgroups Makefile are xxx_16.o. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/eventfd/Makefile
ltp/testcases/kernel/syscalls/getgroups/Makefile
ltp/testcases/kernel/syscalls/move_pages/Makefile

83) Log Message:
Integrate ltp network tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

84) Log Message:
Integrate ltp network stress tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

85) Log Message:
Integrate ltp adp tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

86) Log Message:
Integrate ltp autofs tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

87) Log Message:
Fix Diskio test. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/testscripts/diskio.sh

88) Log Message:
Integrate ltp exportfs tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

89) Log Message:
Integrate ltp ro only fs tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

90) Log Message:
Integrate ltp isofs tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

91) Log Message:
Integrate ltp dmmapper tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

92) Log Message:
Integrate ltp fslvm tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

93) Log Message:
Integrate ltp fsnolvm tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

94) Log Message:
Integrate ltp scsi_debug tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

95) Log Message:
Integrate ltp sysfs tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

96) Log Message:
Remove rpc tests from tirpc. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/rpctirpc

97) Log Message:
Integrate ltp tirpc tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

98) Log Message:
Integrate ltp selinux tests to runalltests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

99) Log Message:
Check for existing commands after LTPTMP has been defined in unzip_tests.sh: The chk_ifexist function in unzip_tests needs the variable LTPTMP, but it is called before this variable is initialized. This patch fixes that by moving the call after LTPTMP is initialized. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/unzip/unzip_tests.sh

100) Log Message:
Always create a new expected output file, not append to the previous in gzip_tests: The expected output file in gzip_tests is made always by appending data to the file. Because there are two tests in gzip_tests (each making its own exp file), the second test ends up with concatenation of the two exp files, which doesn't work well. This patch fixes that by truncating the file at the first write. Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/gzip/gzip_tests.sh

101) Log Message:
Renumber testcases in the symlink01 file, reflecting some added tests: The indexes of tests in th symlink01 test are incorrect, which causes broken test results due to eg. unlink test invoked as part of the chmod tests. This patch fixes that. Signed-Off-By: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/testcases/kernel/syscalls/symlink/symlink01.c

102) Log Message:
Amend cleanup procedure in mknod07: the cleanup in mknod07 didn't work for me, because the test yields root, removes search permission on its current directory and then tries to chdir("..") which fails due to the missing permission. This patch fixes that by re-gaining root before the cleanup.
 - restore root privileges before tmp directory cleanup. This is needed, because as nonprivileged user, we don't have search permission on the current directory,
 - because of that, do not drop root completely by setuid(), change effective uid instead,
 - call cleanup in one case when setup fails,
Signed-Off-By: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/mknod/mknod07.c

LTP-20081130

1) Log Message:
librttest.c: enhancement and fixes for options handling. 
- simplified check for duplicate options,
- better handling of unknown options and missing args: report missing args and   exit,
- exit if any option is wrong,
- indent fix,
Verified on all rt tests. Signed-off-by: Gilles Carry <gilles.carry@bull.net>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/lib/librttest.c

2) Log Message:
matrix_mult.c: set_affinity to work when there are offline cpus:
Syscall sched_setaffinity fails if choosen cpu is not online. In set_affinity, thread_id value is used as cpuid when calling sched_setaffinity. This fails when disabling cpus because threads ids and online cpu ids don't necessarly match. This patch simply increments cpuid (max. 8192) until it finds an online cpu. This guaranties that no more than one thread is assigned to one cpu. If set_affinity is called more times than there are online cpus then matrix_mult.c fails. Signed-off-by: Gilles Carry <gilles.carry@bull.net>, Acked-by: Darren Hart <dvhltc@us.ibm.com>,

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

3) Log Message:
matrix_mult.c: dynamic iterations configuration.
Dimension (128) of statistics arrays must be a multiple of number of cpu. This is a hassle as you have to recompile every time your arch changes or if you want to disable cpus. Failing to do so causes segfault when requiring statistics if 128 modulo nr_cpus != 0. This patch adds option -i to specify how many iterations are wanted (still defaulting to 128). It rounds up iterations to the nearest multiple of online cpus. Signed-off-by: Gilles Carry <gilles.carry@bull.net>, Acked-by: Darren Hart <dvhltc@us.ibm.com.

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

4) Log Message:
matrix_mult.c: thread synchronisation simplification:
In concurrent calculations:
- use a single pthread_barrier to start all threads together instead of a combination of barrier/mutex/condvar.
- main thread no longer participates to concurrent calculations and simply performs rt_gettime(s) for global time spent evaluation.
Signed-off-by: Gilles Carry <gilles.carry@bull.net>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

5) Log Message:
matrix_mult.c: concurrent calculation stats fix:
Array size for stats was iterations/numcpus. Concurrent threads used to write their stats in the same rows, overwriting each other's results. This patch makes array size = iterations and threads not overlapping their results by shifting their index. Signed-off-by: Gilles Carry <gilles.carry@bull.net>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

6) Log Message:
use feedback from Jan Kratochvil so we wait for the child to be stopped before we attempt to ptrace it.

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.h

7) Log Message:
base {PEEK,POKE}USER on sizeof(user) rather than sizeof(pt_regs) and add a few more corner cases.

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c

8) Log Message:
drop backup file configure~

Modified File(s):
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure~

9) Log Message:
start a .gitignore

Added File(s):
ltp/.gitignore

10) Log Message:
This patch fixes what I believe is a wrong logic in test 3 of this script right after the last "crontab -l ..." command. In my system the cron table is empty; this command will return false and the else clause will never be executed. If the command returns true (0) then the cron table is not empty as it was supposed to be and the script must indicate an error. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/commands/cron/cron_tests.sh

11) Log Message:
Stop building numa test in cross environment: None of the tests for the existence of numa prereqs work in a cross build environment. This is a patch to skip erroneously checking for these prereqs on a host system if the $CROSS_COMPILER variable is set per the runltp script. Without this patch, the existing script checks for the existence of aheader file on the /usr/include, but our compiler only looks within the include directories of the target system, and stops cross building of the entire ltp suite, if the target does not have numa.h/no numa support. Signed-Off-By: Henry Yei <hyei@mvista.com>.

Modified File(s):
ltp/testcases/kernel/numa/test.sh

12) Log Message:
The following are errors while compiling ltp-full-20081031 with ARM architecture:
make[4]: Entering directory `/home/naresh/DIFF/11_2008/ltp-full-20081031/testcases/kernel/syscalls/eventfd' /usr/local/arm-sony-linux-gnueabi/devel/bin/arm-sony-linux-gnueabi-dev-gcc
-Wall  -I../../include -g -Wall -I../../../../include -Wall    eventfd01.c -L../../../../lib -lltp -o eventfd01
In file included from eventfd01.c:60:
../../include/linux_syscall_numbers.h:113:10: error: no macro name given in #ifndef directive
make[4]: *** [eventfd01] Error 1
make[4]: Leaving directory
`/home/naresh/DIFF/11_2008/ltp-full-20081031/testcases/kernel/syscalls/eventfd' 
make[3]: *** [all] Error 2
make[3]: Leaving directory
`/home/naresh/DIFF/11_2008/ltp-full-20081031/testcases/kernel/syscalls'
Here I am attaching the patch to resolve above error. Signed-Off-By: naresh kamboju <naresh.kernel@gmail.com>.

Modified File(s):
ltp/testcases/kernel/include/arm.in

13) Log Message:
Alan Cox [alan@lxorguk.ukuu.org.uk] wrote:
The test changes the window size using the slave-fd and expects that it won't affect the window-size on master-fd. With this change, we return the slave's window size and test fails. I've no idea why anyone would have thought the existing behaviour was correct. The pty/tty pair code tries to share the size and other information at all times and the old test was I think verifying a bug existed.
Sukadev <sukadev@linux.vnet.ibm.com> wrote:
We are referring to the last window size check in test2() of testcases/kernel/pty/ptem01.c. This check will cause the test to fail when some of the planned ttydev changes are merged. Would you happen to know if the check is really required or if it should be dropped ? 
Subrata Modak <subrata@linux.vnet.ibm.com> wrote: I would want the test to remain there, but introduce some checkings before running the test. As test2() is valid under present circumstances, we should retain it as people will keep using LTP on lower kernels. Having said that, i would like to come with a solution where test2() of testcases/kernel/pty/ptem01.c is not run after the planned ttydev changes are merged. Something compile/run time checking to either not to build that part of code and run it. Can we do something like that by checking some glibc/kernel exported definitions ?
Sukadev <sukadev@linux.vnet.ibm.com> wrote:
Just to be clear, the entire test2() is not broken. Only the last part (see patch below) Other parts of test2() should be fine even with new changes. Other than the kernel version when the changes are merged, I am not sure there is a way. Besides, it is not clear which assertion that part of test2() is testing and if it is even needed for older kernels. Here is the part of test2() I am referring to: Signed-Off-By: Sukadev <sukadev@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/pty/ptem01.c

14) Log Message:
Enable Kernel with the Option during build to test filecaps support. Subrata.

Modified File(s):
ltp/README
ltp/testcases/kernel/security/filecaps/README

15) Log Message:
check input files and abort if broken line is found

Modified File(s):
ltp/testcases/kernel/include/regen.sh

16) Log Message:
remove bogus line

Modified File(s):
ltp/testcases/kernel/include/sh.in

17) Log Message:
The attached Patch defines more about the keywords:
i) TPASS - Indicates that the test case had the expected result and passed.
ii) TFAIL - Indicates that the test case had an unexpected result and failed.
iii) TBROK - Indicates that the remaining test cases are broken and will not execute correctly, because some precondition not met, such as a resource not being available.
iv) TCONF - Indicates that the test case was not written to run on the current harware or software configuration such as machine type, or, kernel version. 
v) TRETR - Indicates that the test cases has been retired and should not be executed any longer.
vi) TWARN - Indicates that the test case experienced an unexpected or undesirable event that should not affect the test itself such as being unable to cleanup resources after the test finished.
vii) TINFO - Specifies useful information about the status of the test that does not affect the result and does not indicate a problem.

in the HTML file generated after test run. I believe it will be very useful for deciphering results better: Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/tools/html_report_header.txt

18) Log Message:
Added test case for checking cpuidle sysfs files. Signed-Off-By: Nageswara R Sastry <rnsastry@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/power_management/Makefile
ltp/testcases/kernel/power_management/runpwtests.sh

Added Files:
ltp/testcases/kernel/power_management/check_cpuidle_sysfs_files.sh

19) Log Message:
gcov-kernel: change comment to recommend CONFIG_GCOV_HAMMER=n. Background: CONFIG_GCOV_HAMMER indicates a modified gcc version which is not the majority of cases: Some Linux distributions ship a modified version of GCC 3.3.x that produces GCOV data incompatible with the format of the standard GCC 3.3.x. If you are using such a distribution, you need to enable this option for the GCOV kernel support to work correctly. Signed-Off-By: Peter Oberparleiter <oberpapr@users.sourceforge.net>.


Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.27-gcov.patch

20) Log Message:
Following the footsteps of Masatake Yamato, i have decided to enable building, installing & running of some _16 & _64 bit syscalls tests in LTP. I have taken this trivial ones, and, would leave other porting to you. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>. 

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/chown/Makefile
ltp/testcases/kernel/syscalls/fchown/Makefile
ltp/testcases/kernel/syscalls/fcntl/Makefile
ltp/testcases/kernel/syscalls/fstat/Makefile
ltp/testcases/kernel/syscalls/fstatat/Makefile
ltp/testcases/kernel/syscalls/fstatfs/Makefile
ltp/testcases/kernel/syscalls/getdents/Makefile
ltp/testcases/kernel/syscalls/geteuid/Makefile
ltp/testcases/kernel/syscalls/getgroups/Makefile
ltp/testcases/kernel/syscalls/getuid/Makefile
ltp/testcases/kernel/syscalls/lchown/Makefile
ltp/testcases/kernel/syscalls/lstat/Makefile
ltp/testcases/kernel/syscalls/pread/Makefile
ltp/testcases/kernel/syscalls/pselect/Makefile
ltp/testcases/kernel/syscalls/setfsgid/Makefile
ltp/testcases/kernel/syscalls/setfsuid/Makefile
ltp/testcases/kernel/syscalls/setregid/Makefile
ltp/testcases/kernel/syscalls/setresgid/Makefile
ltp/testcases/kernel/syscalls/setresuid/Makefile
ltp/testcases/kernel/syscalls/setreuid/Makefile
ltp/testcases/kernel/syscalls/setuid/Makefile
ltp/testcases/kernel/syscalls/stat/Makefile
ltp/testcases/kernel/syscalls/statfs/Makefile

21) Log Message:
The following Patch adds the option to run filecaps tests from runalltests.sh and also provisions for installation of required libraries not present in the system. Also systematic execution of all tests run through runalltests.sh is added. Signed-Of-By: Subrata Modak <subrata@linux.vnet.ibm.com>. 

Modified File(s):
ltp/runalltests.sh

22) Log Message:
Submitting the testcase, which would try to kill the parent namespace pid from the container init. Also this tests a scenario of killing non existent pid from the container. Signed-off-by: Veerendra C <vechandr@in.ibm.com>. Acked-by: Sukadev Bhattiprolu <sukadev@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/containers/pidns/pidns06.c

23) Log Message:
Added Kernel .config options for building LTP SECURITY TESTS. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>. Reviewd-By: Stephen Smalley <sds@tycho.nsa.gov>.

Modified File(s):
ltp/README
ltp/testcases/kernel/security/selinux-testsuite/README

24) Log Message:
This patch fixes an issue with the sort command in netns testcases. Because of this all network namespace testcases were failing. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/netns/initialize.sh

25) Log Message:
(previous mail got accidentally line-wrapped, sorry.). Attachted patch changes the location of thest test-binaries of aio-stress and aiodio runtest-files. Instead of the relative-build location just the binary get called,which is in the PATH of testcases/bin/ anyway when called by "pan". This patch should have no impact on testing inside ltp-build-tree. The idea of this patch is to allow easier packaging of LTP. (No runtest-file modification required when installting into the system environment) Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/runtest/ltp-aio-stress.part1
ltp/runtest/ltp-aio-stress.part2
ltp/runtest/ltp-aiodio.part1
ltp/runtest/ltp-aiodio.part2

26) Log Message:
Subrata and Daniel,
moving from ia64 to x86_64 arch I have got this at linking time: 
cc -o aio-stress aio-stress.o -Wall -O -g -DAIO -L /usr/lib -laio -lpthread
/usr/bin/ld: skipping incompatible /usr/lib/libpthread.so when searching for -lpthread
/usr/bin/ld: skipping incompatible /usr/lib/libpthread.a when searching for -lpthread
/usr/bin/ld: skipping incompatible /usr/lib/libc.so when searching for -lc
/usr/bin/ld: skipping incompatible /usr/lib/libc.a when searching for -lc
so , if you could  have a look to the suggested following  patch. Signed-Off-By: Jacky Malcles <Jacky.Malcles@bull.net>.

Modified File(s):
ltp/testcases/kernel/io/ltp-aiodio/Makefile

27) Log Message:
on SLES10 SP2 __NR_get_robust_list is not defined and cause following compiler warning:
---->8---------
make[4]: Entering directory
`/usr/src/packages/BUILD/ltp-full-20081031/testcases/kernel/syscalls/get_robust_list'
cc -fmessage-length=0 -D_FORTIFY_SOURCE=2 -O2 -g -Wall -fmessage-length=0 -D_FORTIFY_SOURCE=2 -O2 -g -I../../include -g -Wall -I../../../../include -Wall    get_robust_list01.c -L../../../../lib -lltp -o get_robust_list01
get_robust_list01.c: In function 'main':
get_robust_list01.c:252: warning: control reaches end of non-void function
make[4]: Leaving directory
`/usr/src/packages/BUILD/ltp-full-20081031/testcases/kernel/syscalls/get_robust_list'
----8<---------
And cause "unexpected" return value:
----8<---------
x86_64:~/:[1]# /usr/lib64/ltp/testcases/bin/get_robust_list01 get_robust_list: system call not available
x86_64:~/:[43]# echo $?
43
x86_64:~/:[0]# /usr/lib64/ltp/testcases/bin/get_robust_list01 | wc -c
43
---->8---------
Attached patch avoids "random"/43 return value. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/get_robust_list/get_robust_list01.c

28) Log Message:
This patch fixes a compilation warning:
timerfd01.c: In function `main':
timerfd01.c:128: warning: unused variable `tfd2'
Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c

29) Log Message:
Hello, these are some little fixes I've created for ltp. They are typos, fixes for compiler warning, bashisms in the makefiles etc. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/pan/pan.c
ltp/pan/zoolib.c
ltp/testcases/kernel/power_management/runpwtests.sh
ltp/testcases/kernel/syscalls/eventfd/Makefile
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/kill/kill03.c
ltp/testcases/kernel/syscalls/kill/kill04.c
ltp/testcases/kernel/syscalls/mount/mount03.c
ltp/testcases/kernel/syscalls/move_pages/Makefile

30) Log Message:
when building Debian ltp package on alpha, the package failed to build, because alpha lacks some of the syscalls (the xxx_16 ones). See:
http://experimental.debian.net/fetch.php?&pkg=ltp&ver=20081031%2Bdfsg-1&arch=alpha&stamp=1225968365&file=log&as=raw
I have created some patches, which fix this behaviour (ie. the build  doesn't fail then). They work like this:
1. Syscalls which are potentially missing on some architectures are listed in the stub-list,
2. If a syscall(x) is called and x is 0 (a value of undefined stub syscalls), the test is aborted by tst_brk(). This is accomplished by a macro wrapper over the syscall() function (this almost eliminates the need of changing the tests in question, and allows the compiler to eliminate parts of tests of nonexistent syscalls as dead code). The attached patches implement this. Some remarks:
- the syscalls added to the stub list are the ones which appear in the kernel sources as __IGNORE_name-of-syscall,
- the macro is for gcc only. The test using this mechanism (ie. #including linux_syscall_numbers.h and calling syscall()) must define static function void cleanup(void) to be called when the syscall is missing (the patch also handles this for tests that lack it).
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/include/regen.sh
ltp/testcases/kernel/include/stub-list
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c

31) Log Message:
Fix success detection in execve04 test:
The execve04 test works like this: It sets up the environment, calls execve() and expects failure. However, this has two bad consequences if the call actually succeeds 
1. The failure (ie. success of the call) is unnoticed,
2. The test leaves loads of files in the temporary directory.
all of them being caused by the fact that the test no longer runs after a succesful exec(). This patch fixes the situation by calling exec in a child only. The failure (or success) is gathered from the child's exit value. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve04.c

32) Log Message:
This patch fixes the error, that code exhausting the file descriptor table in execve04 test actually doesn't exhaust the fd table at all. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve04.c

33) Log Message:
Don't break chown tests on non-catastrophic failures. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/fchown/fchown02.c
ltp/testcases/kernel/syscalls/fchown/fchown03.c

34) Log Message:
Do not call tst_brkm from the cleanup function in some tests: It is bad for the cleanup function to abort by calling tst_brkm, because in that case, further cleanup will not be performed. This patch fixes it in some chmod*, chown*, fchmod* and fchown* tests by substituting tst_resm for tst_brkm. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/chmod/chmod06.c
ltp/testcases/kernel/syscalls/chown/chown04.c
ltp/testcases/kernel/syscalls/fchown/fchown02.c
ltp/testcases/kernel/syscalls/fchown/fchown03.c
ltp/testcases/kernel/syscalls/fchown/fchown04.c
ltp/testcases/kernel/syscalls/fchown/fchown05.c

35) Log Message:
Prevent leaving files in the temporary directory by calling tst_rmdir, or cleanup, where appropriate. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/fs/stream/stream04.c
ltp/testcases/kernel/syscalls/chown/chown03.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fchown/fchown04.c
ltp/testcases/kernel/syscalls/fdatasync/fdatasync01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate03.c
ltp/testcases/kernel/syscalls/pwrite/pwrite04.c
ltp/testcases/network/lib6/runcc.c

36) Log Message:
Call cleanup() at the right places to prevent fallocate tests leaving files in the temporary directory. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c

37) Log Message:
I've clean my signalfd test case up with autoconf. After applying the patch, do at ltp/
    autoconf
    autoheader
    ./configure
    make (or cd testcases/kernel/syscalls/signalfd; make)
Benefits are:
- signalfd01.c doesn't depends on kernel version (it used KERNEL_VERSION macro.)
- Makefile becomes simple.
- #ifdef/#endif of signalfd01.c becomes readable.
- signalfd.m4 can use other program than ltp.
I revisied my patch.
- signalfd.m4 is renamed to ltp-signalfd.m4.
- configure is run by make if config.h is older than config.h.in.
- autoconf is run by make if configure is older than configure.ac.
- autoheader is run by make if config.h.in is older than configure.ac.
- dist-clean, a new make target, removes autom4te.cache, config.log and config.status.
- maintainer-clean, a new make target, removes configure and config.h.in.
Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/Makefile
ltp/include/Makefile
ltp/testcases/kernel/syscalls/signalfd/Makefile
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c
Added Files:
ltp/configure.ac
ltp/m4/Makefile
ltp/m4/ltp-signalfd.m4

38) Log Message:
Use the SO_REUSEADDR option in sctp tests to prevent bind error shortly after another test ended: I've noticed a bunch of errors in the SCTP tests, all of them being for the same reason, "bind: address already in use". I tried using the SO_REUSEADDR option on the socket, as if it was TCP, and it helped. However, I know almost nothing about SCTP, and don't know whether the same situation (applications binding to the same port quickly one after another) has the same problems and solution, or if it is just a kernel bug/misconfiguration/whatever else. Signed-off-by: Jiri Palecek<jpalecek@web.de>.

Modified File(s):
ltp/testcases/network/sctp/testlib/sctputil.h

39) Log Message:
Quick and dirty fix to overflow in pipeio when computing the number of writes: the computation of the number of writes in pipeio can overflow, eg. if you want to run more than 4 GB through the pipe. The attached patch fixes that. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/ipc/pipeio/pipeio.c

40) Log Message:
regen linux_syscall_numbers.h whenever regen.sh changes. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/include/Makefile

41) Log Message:
make syscall() wrapper a bit more readable. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/include/regen.sh

42) Log Message:
only create symlink if it doesnt exist already. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/include/Makefile

43) Log Message:
generate stub list on the fly based on *.in files

Modified File(s):
ltp/testcases/kernel/include/regen.sh

Removed File(s):
ltp/testcases/kernel/include/stub-list

44) Log Message:
cleanup style with Lindent

Modified File(s):
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

45) Log Message:
use a macroname that isnt crazy long.

Modified File(s):
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

46) Log Message:
fill out AC_INIT().

Modified File(s):
ltp/configure.ac

47) Log Message:
use AC_CHECK_HEADERS_ONCE().

Modified File(s):
ltp/ltp/m4/ltp-signalfd.m4

48) Log Message:
make autotools optional and start a sane config.h by default.

Modified File(s):
ltp/include/Makefile 
ltp/Makefile
Added File(s):
ltp/include/config.h.default 

49) Log Message:
add some compiled objects to the ignore list.

Modified File(s):
ltp/.gitignore

50) Log Message:
Integrate unzip tests to runtest/commands file. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/commands ltp/testcases/commands/Makefile
ltp/testcases/commands/unzip/unzip_tests.sh

51) Log Message:
Integrate tpm_tools into runalltests.sh. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runalltests.sh

53) Log Message:
Integrate gzip tests to runtest/commands file. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/commands

54) Log Message:
Integrate fileutils tests to runtest/commands file. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/commands

55) Log Message:
Integrate size01 tests to runtest/commands file. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/commands

56) Log Message:
Add ltp/runtest/commands file to ltp/runltp. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp

57) Log Message:
hugemmap02 "Segmentation fault" fix:
-----------------------------------------------------------
Iranna D. Ankad <iranna.ankad@in.ibm.com> Reported:
-----------------------------------------------------------
hugemmap02 "Segmentation fault" on a 32-bit system:
Linux 2.6.18-120.el5PAE #1 SMP Fri Oct 17 18:17:11 EDT 2008 i686 i686 i386 GNU/Linux
Allocate some huge pages:
# echo 50 > /proc/sys/vm/nr_hugepages
2. Create & mount hugetlbfs
#mkdir -p /hugetlbfs
#mount -t hugetlbfs none /hugetlbfs
3. Go to following directory in LTP i.e cd /root/ltp-full-20080930/testcases/kernel/mem/hugetlb/hugemmap
4. Run "hugemmap02" test
# ./hugemmap02 -H /hugetlbfs/
Segmentation fault
-----------------------------------------------------------
Cijurajan Kollanoor <cijurajan@in.ibm.com> Replied:
-----------------------------------------------------------
The program receives a segmentation fault here:
154                 /* Attempt to mmap a huge page into a low memory address
*/
155                 errno = 0;
156                 addr2 = mmap(LOW_ADDR2, MAP_SIZE, PROT_READ | PROT_WRITE,
==> Segfault
157                             MAP_SHARED | MAP_FIXED, fildes, 0);
158
-----------------------------------------------------------
Adam Litke <agl@us.ibm.com>Replied:
-----------------------------------------------------------
Unfortunately, when you mmap using the MAP_FIXED flag, you can overwrite an existing mmap in the address space.  Please do the following to check if this has happened:
1. Insert a 'getchar();' call above line 155 in the test source code above and recompile the test.
2. Run the test.  When it pauses (waiting for input at the getchar() call), hit <ctrl>-z to background the test.
3. Determine the pid of the test case using ps
4. Collect the /proc/<pid>/maps for the appropriate pid
5. Paste that output here in this bug.
-----------------------------------------------------------
Cijurajan Kollanoor Replied:
-----------------------------------------------------------
# cat maps
00000000-00001000 r-xs 00000000 00:11 1781       /dev/zero
00110000-0024e000 r-xp 00000000 08:02 19183585   /lib/libc-2.5.so
0024e000-00250000 r-xp 0013e000 08:02 19183585   /lib/libc-2.5.so
00250000-00251000 rwxp 00140000 08:02 19183585   /lib/libc-2.5.so
00251000-00254000 rwxp 00251000 00:00 0
005f1000-0060b000 r-xp 00000000 08:02 19183582   /lib/ld-2.5.so
0060b000-0060c000 r-xp 00019000 08:02 19183582   /lib/ld-2.5.so
0060c000-0060d000 rwxp 0001a000 08:02 19183582   /lib/ld-2.5.so
0073a000-0073b000 r-xp 0073a000 00:00 0          [vdso]
08048000-0804d000 r-xp 00000000 08:02 2586373
/root/ltp-full-20080930/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02
0804d000-0804e000 rw-p 00004000 08:02 2586373
/root/ltp-full-20080930/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02
0804e000-08052000 rw-p 0804e000 00:00 0
08248000-08269000 rw-p 08248000 00:00 0          [heap]
67ef8000-77ef8000 r--s 00000000 00:11 1781       /dev/zero
77ef8000-87ef8000 r--s 00000000 00:11 1781       /dev/zero
87ef8000-97ef8000 r--s 00000000 00:11 1781       /dev/zero
97ef8000-a7ef8000 r--s 00000000 00:11 1781       /dev/zero
a7ef8000-b7ef8000 r--s 00000000 00:11 1781       /dev/zero
b7ef8000-b7efa000 rw-p b7ef8000 00:00 0
b7f0a000-b7f0b000 rw-p b7f0a000 00:00 0
bf918000-bf92d000 rw-p bffea000 00:00 0          [stack]
-----------------------------------------------------------
ADAM G. LITKE Replied:
-----------------------------------------------------------
My suspicion is confirmed.  This is a LTP test case bug.  All of the above mappings will have been overwritten by the mmap call on the hugetlbfs file at address 0.  This will most certainly cause your program to crash and burn. To fix the test case, I would recommend removing the MAP_FIXED flag from that mmap call and checking the address you get from mmap.  If it's zero, you'll know a mapping could be created at the bottom of the address space.  If it's -1, the mmaping failed. But if it's >0, you'll have to decide how to handle the case where the mapping could not be placed in the spot you requested. This case would not be a failure, just a failure to test the scenario you wanted to test.  I assume the LTP test harness has a way to represent an insignificant test result.  You might just treat this case in the same way you handle mmap() == 0.
Signed-Off-By:  Cijurajan Kollanoor <cijurajan@in.ibm.com>,

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02.c

58) Log Message:
This test case requires write permission for the dummy program. It would fail for those who put LTP on an read-only environment. So this patch copies the dummy test program to and performs the test in a private directory. p.s. this patch copy the one Renaud Lottiaux sent for execve02.c. Signed-Off-By: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/creat/creat07.c

59) Log Message:
Only define signalfd() when it actually gets used -- i.e. when !USE_STUB. Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

60) Log Message:
require autoconf-2.61+. Mike Frysinger <vapier@users.sourceforge.net>.

Modified File(s):
ltp/configure.ac

61) Log Message:
lcov: preparations for release 1.7. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/Makefile

62) Log Message:
lcov: update error and warning messages. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov


63) Log Message:
lcov: fix spec file bug. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/rpm/lcov.spec

64) Log Message:
lcov: version + date updates. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/README
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/gendesc.1
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/genpng.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/rpm/lcov.spec

65) Log Message:
lcov: updated CVS version to 1.8. Peter Oberparleiter <oberpapr@users.sourceforge.net>.

Modified File(s):
ltp/utils/analysis/lcov/man/gendesc.1
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/genpng.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/rpm/lcov.spec
ltp/utils/analysis/lcov/Makefile

66) Log Message:
I've introduced autoconf to modify_ldt test cases. The modification is very similar to the modification to signalfd. Signed-off-by: Masatake YAMATO<yamato@redhat.com>.

Modified Files:
ltp/configure.ac
ltp/m4/ltp-signalfd.m4
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/modify_ldt/Makefile
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt01.c
ltp/testcases/kernel/syscalls/modify_ldt/modify_ldt02.c

Added Files:
ltp/m4/ltp-modify_ldt.m4

67) Log Message:
Please accept the patch for running the pidns tests for the containers. Also modified, to run all the testcases even when other testcase's fails. This patch contains the patches to run new tests pidns05 and pidns06. Also this patch will run all the pidns tests. And return back the exit code of the test, which failed first. Signed-off-by: Veerendra C <vechandr@in.ibm.com>. Acked-by: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/runpidnstest.sh

68) Log Message:
[Bug # 2305878] fcntl17: fix short pid problem. Process ids (pids) are not necessary in "short" range, they might be larger (and are in SLES 10 e.g.). Signed_off-By: Marcus Meissner <marcusmeissner@users.sourceforge.net>.

Modified File(s):
ltp/testcases/kernel/syscalls/fcntl/fcntl17.c

69) Log Message:
Change "Buffer size is not positive" testcase readlink03 to use 0 as non-positive buffer size, instead of -1. To avoid a fortify-check-fail when using glibc and _FORTIFY_SOURCE=2. See discussion: http://lkml.org/lkml/2008/10/23/229. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/readlink/readlink03.c

70) Log Message:
Risrajak <risrajak@linux.vnet.ibm.com> reported:
mallocstress testcase is failing on: Linux 2.6.27-rc6-7-default #1 SMP 2008-09-15 10:58:05 +0200 x86_64
# ./testcases/kernel/mem/mtest07/mallocstress
Aborted
---Kernel Component Data---
Stack trace output: i am attaching full strace.
<snip>
clone(child_stack=0x7fe381a96250,
flags=CLONE_VM|CLONE_FS|CLONE_FILES|CLONE_SIGHAND|CLONE_THREAD|CLONE_SYSVSEM|CLONE_SETTLS|CLONE_PARENT_SETTID|CLONE_CHILD_CLEARTID,
parent_tidptr=0x7fe381a969e0, tls=0x7fe381a96950, child_tidptr=0x7fe381a969e0) = 27334
nanosleep({0, 0}, NULL)                 = 0
semop(34439172, 0x7fffa7cbef00, 1)      = 0
futex(0x7fe39f2d19e0, FUTEX_WAIT, 27275, NULL <unfinished ...>
+++ killed by SIGABRT +++
---------------------------------------
Nagesh Sharyathi Replied:
---------------------------------------
I was able to recreate the problem by spawning only 2 threads: This is what I found:
------------------------------------------------------------------------------------
[pid  8006] tgkill(8004, 8006, SIGABRT <unfinished ...>
[pid  8005] <... mmap resumed> )        = 0x7f8ba781b000
[pid  8006] <... tgkill resumed> )      = 0
[pid  8005] nanosleep({0, 0},  <unfinished ...>
[pid  8006] --- SIGABRT (Aborted) @ 0 (0) ---
Process 8006 detached
[pid  8005] <... nanosleep resumed> NULL) = 0
[pid  8005] +++ killed by SIGABRT +++
+++ killed by SIGABRT +++
------------------------------------------------------------------------------------
So one of the thread is sending tgkill to whole group. Need to look into glibc code to understand the problem. Test case is failing strangely while calling free()
=================================
         for (i = 0; i < num_alloc; i++)
         {
             dprt(("pid[%d]: freeing ptrs[i] %p\n", getpid(), ptrs[i]));
         if (ptrs[i][0] != i) {
         fprintf(stderr, "pid[%d]: fail: bad sentinel value\n", getpid());
         return 1;
         }
         free(ptrs[i]);  <== Problem area
             my_yield();
        }
=================================
Andrew Vagin Replied <avagin@gmail.com>:
Thanks. I found error for help valgrind.
==13393== Thread 56:
==13393== Invalid write of size 8
==13393==    at 0x400C27: allocate_free (mallocstress.c:198)
==13393==    by 0x400E4D: alloc_mem (mallocstress.c:281)
==13393==    by 0x3B5F007299: start_thread (in /lib64/libpthread-2.8.so)
==13393==    by 0x3B5E4E439C: clone (in /lib64/libc-2.8.so)
==13393==  Address 0x4c36a60 is 0 bytes inside a block of size 1 alloc'd
==13393==    at 0x4A0739E: malloc (vg_replace_malloc.c:207)
==13393==    by 0x400BF0: allocate_free (mallocstress.c:192)
==13393==    by 0x400E4D: alloc_mem (mallocstress.c:281)
==13393==    by 0x3B5F007299: start_thread (in /lib64/libpthread-2.8.so)
==13393==    by 0x3B5E4E439C: clone (in /lib64/libc-2.8.so)
(gdb) print i
$1 = 0
(gdb) print alloc_num
No symbol "alloc_num" in current context.
(gdb) print num_alloc
$2 = 0
(gdb) print size
$3 = 1
strick the eye, we have pointer with type long, but allocate one byte only.
size_t  size       = 1;
long    *ptrs[MAXPTRS];
......
ptrs[num_alloc] = (long *)malloc(size);
I use valgrind first time. Thanks for this possibility:). see the attached patch. test passed and valgrind don't report errors after my patch. 
Thread [34]: allocate_free() returned 0, succeeded.  Thread exiting.
main(): test passed.
==13299==
==13299== ERROR SUMMARY: 0 errors from 0 contexts (suppressed: 4 from 1)
==13299== malloc/free: in use at exit: 0 bytes in 0 blocks.
==13299== malloc/free: 233,080 allocs, 227,080 frees, 5,454,975,665,283 bytes allocated.
ps: I use oldsize = 5, because long will be equal 8 in more case. oldsize is previous value of fibannoci series. 
Signed-Off-By: "avagin@gmail.com" <avagin@gmail.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/Makefile
ltp/testcases/kernel/mem/mtest07/mallocstress.c

71) Log Message:
Initial Porting of accept4() syscall test to LTP by Subrata Modak <subrata@linux.vnet.ibm.com>. Originally written by Michael Kerrisk <mtk.manpages@gmail.com>. Later modified to suite compilation on different systems by Jiri Palecek <jpalecek@web.de>, who wrote the following:
I have some nitpicks, in decreasing severity: First, the syscall, I believe, is not targeted at i386 and x86-64 only. Therefore, it is not wise to have these explicitly mentioned in the code. Also, it would be better not to "#error" if the arch isn't one of those fortunate, because ltp should build on others too. This should be fixed by patch 1. Disclaimer: This patch should make it compile (and fail at runtime with TCONF) on all kernels that don't have the syscall, and actually run the test on all kernels that do, depending on kernel headers version. However, I didn't test this (especially the selection of the syscall), so it needs to be checked. Second, if any of the syscalls vital for the test fails, it's preferable to output the error message too, and call tst_brk() for cleanup (patch 2). Third, there it would probably be better to use TFAIL/TPASS for recording success and failure instead of manual boolean flags (patch 3). Last, I think a successful test should print as little as possible and multiline messages like "calling syscall..." are really not that useful. Patch 4 disables them.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/include/x86_64.in
Added Files:
ltp/testcases/kernel/syscalls/accept4/Makefile
ltp/testcases/kernel/syscalls/accept4/accept4_01.c

72) Log Message:
I guess you want ">/dev/null 2>&1" to eliminate both STDERR and STDOUT. Attaching a small patch with the above change. Please accept. Signed-Off-By: Nageswara R Sastry <rnsastry@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/power_management/check_cpuidle_sysfs_files.sh

73) Log Message:
A small Fix. Signed-off-by: Masatake YAMATO<yamato@redhat.com>.

Modified File(s):
ltp/m4/ltp-signalfd.m4

74) Log Message:
- Type definitions defined in header files included from sys/signalfd.h and type definitions defined in sys/signalfd.h are conflicted.
- s/SIGNALFD_REFIX/SIGNALFD_PREFIX/
- if HAVE_SIGNALFD is not defined, use stub.
- if HAVE_LINUX_TYPES_H is defined, use our own implemention to call signalfd
  syscall.
Signed-of-by: Masatake YAMATO<yamato@redhat.com>.

Modified File(s):
ltp/m4/ltp-signalfd.m4
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

75) Log Message:
Update to OpenHPI 2.13.1. See http://openhpi.org/ for more details.

Modified File(s):

76) Log Message:
Add Kernel Config Info for compiling KDUMP/KEXEC kernel. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/README

77) Log Message:
This patch ensures that prio-preempt uses the librt debug mechanism. Tested: Running the test:
./prio_preempt
./prio_preempt -v3
./run_auto
Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>. Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c

78) Log Message:
This patch adds librt debug support for prio-wake. The log level selected is 0, as it necessary to print all the buffered information. Tested:
./prio-wake
./run_auto.
Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>. Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/prio-wake/prio-wake.c

79) Log Message:
OK. I have implemented such a patch which does not overflow anymore. However, I could not test it, because:
pipeio -s 5000 -i 2000000000 -c 5
just runs too long. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/ipc/pipeio/pipeio.c

80) Log Message:
The test case gtod_latency in realtime causes soft lockups on some machines. This is because the test hogs the cpus for a long time, because it's main loop runs at SCHED_FIFO, 99. We have seen soft lockups mainly on LS20 machines (x86_64, Opterons). The following patch introduces a sleep after some iterations of the test. This ensures that the test doesn't hog the cpu completely and hence avoids soft lockups. 
Testing done:
Compiled with the patch and observed that the soft lockups are gone. Also observed that the latencies are not affected. In fact latencies improve with this patch on most hardware.
Changelog:
* Introduce periodic sleeps in the busy loop of gtod_latency to avoid soft lockups.
Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>. Acked-by: John Stultz <johnstul@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c

81) Log Message:
Here is a patch to fix the error below.
/root/ltp-full-20081031/testcases/kernel/containers/netns/parentns.sh: 42: source: not found
Some shells are not having the cmd 'source' which inturn are failing the tests for netns in containers. I found few other ltp scripts are using the source cmd. Have others reported the same issue ? Just curious to know this. The below patch would replace the 'source with .' for containers in netns. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/netns/child_1.sh
ltp/testcases/kernel/containers/netns/child_2.sh
ltp/testcases/kernel/containers/netns/childipv6.sh
ltp/testcases/kernel/containers/netns/childns.sh
ltp/testcases/kernel/containers/netns/parent_1.sh
ltp/testcases/kernel/containers/netns/parent_2.sh
ltp/testcases/kernel/containers/netns/parent_share.sh
ltp/testcases/kernel/containers/netns/parentns.sh
ltp/testcases/kernel/containers/netns/paripv6.sh

82) Log Message:
The file testcases/kernel/include/stub-list was recently removed. It contained the list of syscall numbers which, if not present in the kernel headers or in one of the architecture-specific lists, should be defined as 0 (a stub value). Now, this list is automatically generated as union of the architecture-specific lists. However, some syscalls only appeared in stub-list, which means they are not stubbed now, so architectures lacking them will probably fail to build (alpha...). To overcome this, I have added these syscalls to the i386 list, which means they will be defined whenever they are defined in the kernel sources, on i386, and stubbed otherwise. See the attached patch. BTW, the list of syscalls is not exhaustive. In the attachment filtered-syscalls, there is a list of syscalls which appear as __IGNORE_syscall-nr in the kernel sources (which means they are missing on some architecture), but are not used in ltp or their use is guarded by an #ifdef. They would have to be added too, if some test explicitely mentions them (eg. getresgid16). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/include/i386.in

83) Log Message:
umount can return error if /etc/mtab link to /proc/mounts
$ mount --rbind /tmp/1 /tmp/2
$ mount
...
/tmp/1 on /tmp/2 type none (rw,bind)
$ mv /etc/mtab{,.orig}
$ mount
...
/dev/root on /tmp/2 type ext3 (rw,data=ordered)
$ umount /tmp/1
umount: /tmp/1: not mounted
if umount return error, test_fs_bind.sh will hang up in the infinite loop:
( while grep_proc_mounts ; do
        grep_proc_mounts | awk '{print $2}' | xargs -r --max-args=1 umount -l
done ) >& /dev/null
but /proc/mounts contain next info:
/dev/root /tmp/2\040(deleted) ext3 rw,data=ordered 0 0
because source directory has been deleted. previous script try execute umount -l /tmp/2\040(deleted), umount fail correctly but all message from stdout and stderr redirecte to /dev/null. my patch fixed testcase fs_bind/regression/test02, that execute all umount commands with target directories. Signed-Off-By: Andrew Vagin <avagin@parallels.com>.

Modified File(s):
ltp/testcases/kernel/fs/fs_bind/regression/test02

84) Log Message:
Fix busy loop in realtime:
The routine busy_work_us(), which is the busy work loop function in realtime test suite is supposed run for as many microseconds as requested for. However, I have observed that it runs too fast on some hardware. I looked at the code and saw that we are statically setting the loop counters, which means the duration of the busy loop varies with the cpu speed. Further, the busy loop is affected by compiler optimizations. On some hardware it provides only 50% of requested delay, whereas with -O3, it finishes even faster. What we need is a method to dynamically tune the delay loop based on the machine where the test is being run. It should not be affected by compiler optimizations as well. The following patch does that. It applies on the latest cvs. Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>, Acked-by: Chirag <chirag at linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/lib/librttest.c

85) Log Message:
I've added new Makefile target to run both autoconf and autoheader. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/Makefile

86) Log Message:
CONTROLLERS: replace numbers by FILENAME_MAX: 32 bytes are really unsufficient for hoding dir names, changing it to FILENAME_MAX. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c

87)  Log Message:
CONTROLLERS: do not redirect errors to /dev/null: Its no good to redirect the error messages from the binaries to /dev/null. One might not know what is the failure or what went wrong. This patch omits that redirection. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh

88) Log Message:
CONTROLLERS: rename the setup function: In case the file defining functions fails to load, the function setup() will run the setup utility, so changing it to do_setup(). Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/parameters.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh

89) Log Message:
CONTROLLERS: set up for default group creation: This patch adds the code to do the setup for a default group which will be spinning  a task to create an ideal scenario for group fairness. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/parameters.sh

90) Log Message:
CONTROLLERS: binary to be run as a default task for test 1-2: This patch adds a binary which will be running as a default task for testcases 1 to create an ideal scenario. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task01.c

91) Log Message:
CONTROLLERS: modify script to run default task for test 1-2: This patch adds the code to trigger the default task for the tests 1-3. Also the code is added to clean this default task setup. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/parameters.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh

92) Log Message:
CONTROLLERS: Modify test to reflect kernel MAX_SHARES limit: The tests takes too long if we keep the time interval 60 seconds. Hence changing to 30 seconds. Also the kernel has now the max linit on shares values (1UL <<18). So taking readings upto 7th set will reach the max limit very soon(specialy on high end machines). Therefore we keep the multiplier to multiply at max 4 times. Hence we will reach till GROUP_NUM * 10^4. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c

93) Log Message:
CONTROLLERS: pass the argument to the function: The function scan_shares_files() modifies a global variable, which in the current way was confusing, so passing the variable as argument. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c
ltp/testcases/kernel/controllers/libcontrollers/libcontrollers.c
ltp/testcases/kernel/controllers/libcontrollers/libcontrollers.h

94) Log Message:
CONTROLLERS: modify def task binary for test 3: The patch modifies the default task binary to be run for test num 3 also. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task01.c

95) Log Message:
CONTROLLERS:  binary for def task for test 4 & 5: This patch adds a binary which will be running as a default task for testcases 4 and 5 to create an ideal scenario. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task02.c

96) Log Message:
CONTROLLERS: modify the script to run def task for test 4: This patch modifies the script to run the default task for test 4. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/parameters.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh

97) Log Message:
CONTROLLERS: modify the script to run def task for test 5: This patch modifies the script to run the default task for test 5. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh

98) Log Message:
CONTROLLERS: add binary to run def task for test 6,7,8: This patch adds a binary which will be running as a default task for testcases 6, 7 and 8 to create an ideal scenario. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task03.c

99) Log Message:
CONTROLLERS: modify the script to run def task for test 6,7,8: This patch modifiesadds a binary which will be running as a default task for testcases 6, 7 and 8 to create an ideal scenario. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh

100) Log Message:
CONTROLLERS: change share values for the group: This patch changes the shares values for the groups in test num 9 to some practical values. (instead of 2,3,4,5...100,200,300,400.... ). Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c

101) Log Message:
CONTROLLERS: add binary to run def task for test 9,10: This patch adds a binary which will be running as a default task for testcases 9 and 10 to create an ideal scenario. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/controllers/cpuctl/cpuctl_def_task04.c

102) Log Message:
CONTROLLERS: modify script to run def task for test 9: This patch modifies the script to run the default task for test 9. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh

103) Log Message:
CONTROLLERS: modify script to run def task for test 10: This patch modifies the script to run the default task for test 10. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh

104) Log Message:
Re-enablement of TI-RPC tests to build/install/run in LTP:
Le Rouzic <aime.le-rouzic@bull.net> wrote: I get a first patch to deliver which improves the Sun-RPC and TIRPC Test Suite. The Sun-RPC tests part works quite well. About the TIRPC I still have some FAILED I am working on that I will fix in a second patch. There is no much time now for the November delivery so let me know if you want me to deliver right now the first patch.
Subrata Modak <subrata@linux.vnet.ibm.com> replied: I am not worried if the test case(s) of TI-RPC fails. The point is they should be able to build, install and run - irrespective of whether many of the tests fail. The issue(s) like linking to proper libraries while building and finding those libraries to run should be properly resolved. If they require specific libraries to to build/run, that should be properly documented. Users should be able to find those libraries and install them (if it does not come with the system in first place), so that they can start using those tests. If people can start using those tests, then there will be more people who can help fix issues related to tests themselves. It would be nice if you can send a patch (against latest CVS) which would re-enable the TI-RPC tests to build/install/run in LTP properly. We can see the test fails later.
Le Rouzic <aime.le-rouzic@bull.net> replied: OK. Here is the patch I tested against ltp-full-20081031.tgz. Signed-Off-By: Le Rouzic <aime.le-rouzic@bull.net>.

Modified Files:
ltp/runtest/rpc
ltp/runtest/stress.part3
ltp/testcases/network/rpc/Makefile
ltp/testcases/network/rpc/README
ltp/testcases/network/rpc/basic_tests/rpcinfo/rpcinfo01
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/README
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.auto
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.interactive
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_tirpc_ts_run.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_ts_run.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_ts_wizard.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_tirpc_tests.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/install.ftr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/rpc_ts_run.ftr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getport/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_set/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_unset/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_bufcreate/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_bufcreate/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_unregister/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/svc.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/client.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getcaller/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/client.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_seccreate/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perror/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_set/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_unset/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_svc_1/rpc_svc_1.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_3/tirpc_svc_3.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_4/tirpc_svc_4.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_5/tirpc_svc_5.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_6/tirpc_svc_6.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_8/tirpc_svc_8.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_9/tirpc_svc_9.c
ltp/testscripts/ltpstress.sh

Added Files:
ltp/runtest/rpctirpc ltp/runtest/tirpc
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_test_auto.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_tests.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_tirpc_test_auto.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_tirpc_test_interactive.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_tirpc_test_auto.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_tirpc_tests.sh

Removed Files:
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile.clnt
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile.svc
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/install
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/install.sh

105) Log Message:
Please find the testcase for the below assertion. Assertions 1: Steps:
a) Create a  container .
b) Create many levels of child containers inside this container.
c) Now do kill -9 init , outside of the contaier.
d) This should kill all the child containers . (containers created at the level below ).
Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Added Files:
ltp/testcases/kernel/containers/pidns/pidns05.c

106) Log Message:
Fix typo in pselect01_64 testcase: pselect0_64->pselect01_64. Signed-Off-By: Dmitry Guryanov <dguryanov@parallels.com>.

Modified File(s):
ltp/runtest/syscalls

107) Log Message:
Remove references of jvmsim from the tests: Most of the testcases, have an option (-j) which runs the jvmsim as a background load so as to simulate the behavior of the JVM.This patch removes the references of jvmsim from all the testcases. Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_jk.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/func/pi-tests/test-skeleton.c
ltp/testcases/realtime/func/pi-tests/testpi-0.c
ltp/testcases/realtime/func/pi-tests/testpi-1.c
ltp/testcases/realtime/func/pi-tests/testpi-2.c
ltp/testcases/realtime/func/pi-tests/testpi-4.c
ltp/testcases/realtime/func/pi-tests/testpi-5.c
ltp/testcases/realtime/func/pi-tests/testpi-6.c
ltp/testcases/realtime/func/pi-tests/testpi-7.c
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c
ltp/testcases/realtime/func/prio-wake/prio-wake.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_football/sched_football.c
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/func/thread_clock/tc-2.c
ltp/testcases/realtime/perf/latency/pthread_cond_latency.c
ltp/testcases/realtime/stress/pi-tests/lookup_pi_state.c
ltp/testcases/realtime/stress/pi-tests/testpi-3.c

108) Log Message:
Remove libjvmsim: This patch removes the libjvmsim itself. Hence no testcase can use it anymore. Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>, Acked-By: Sripathi Kodi <sripathik@in.ibm.com>.

Modified Files:
ltp/testcases/realtime/config.mk

Removed Files:
ltp/testcases/realtime/include/libjvmsim.h
ltp/testcases/realtime/lib/libjvmsim.c

109) Log Message:
ltp iptables testcase failed: Manas Kumar Nayak <maknayak@in.ibm.com> reported: While executing iptables testcases from ltp ,it failed to list iptables chain rules. iptables test case  gets failed  with following errors: 
# ./iptables_tests.sh
iptables    0  INFO  :  INIT: Inititalizing tests.
iptables    0  INFO  :  INIT: Flushing all rules.
iptables01    0  INFO  :  iptables01: iptables -L -t filter will list all rules in table filter.
iptables01    1  FAIL  :  iptables01: iptables -L -t filter failed to list rules. Reason:
Chain INPUT (policy ACCEPT) target prot opt source destination                  
Chain FORWARD (policy ACCEPT) target prot opt source destination                  
Chain OUTPUT (policy ACCEPT) target prot opt source destination                  
Chain RH-Firewall-1-INPUT (0 references) target prot opt source destination                  
Vinay Sridhar <vinay@linux.vnet.ibm.com> replied:
I looked through the iptables test. It fails because of mismatch in the number of chains after firewall is enabled. Under RH, enabling firewall adds a new chain to the "filter" table and under SLES, 3 new chains are added.  This patch can change this test accordingly. Signed-Off-By: Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/iptables/iptables_tests.sh

LTP-20081031

1) Log Message:
Here is one fix for io-controller testcase. It might not have run when kernel supports io-controller. Description: Instead of block io testcases, memory controller testcase will run. Signed-off By: Rishikesh K Rajak <risrajak@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/test_controllers.sh

2) Log Message:
test_ioctl produces a 'Syntax error: Bad substitution: 28' under Ubuntu (and much probably Debian). The following patch solves this issue. I tested it with sh (aka dash) and bash. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/test_ioctl

3) Log Message:
Add support of kernel syscall test to Renesas. Signed-off-by: Nobuhiro Iwamatsu <iwamatsu.nobuhiro@renesas.com>.

Modified Files:
ltp/testcases/kernel/include/order
Added Files:
ltp/testcases/kernel/include/sh.in

4) Log Message:
Reverting the Following Patch.
test_ioctl produces a 'Syntax error: Bad substitution: 28' under Ubuntu (and much probably Debian). The following patch solves this issue. I tested it with sh (aka dash) and bash. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/test_ioctl

5) Log Message:
The clock source used in the gtod_infinite test should be CLOCK_MONOTONIC instead of CLOCK_REALTIME. This is to avoid plausible inconsistencies caused by NTP time adjustments. Tested: running gtod_infinite and then killing it. Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>, Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c

6) Log Message:
Hi Andrea, As you are using myfunctions.sh in your script, it will simply replace the installed myfunctions.sh in $LTP_ROOT/testcase/bin which is written by Sudhir. And if you will run this testcase from `./runltp` sudhir's memory controller tetscase will refer your myfuncitons.sh script. So i am just renaming this script to some other name and correspondingly changing the Makefile & run_io_throttle_test.sh . Attached is the patch. I might require your acknowledgement for this. Signed-Off-By: "Rishikesh K. Rajak" <risrajak@linux.vnet.ibm.com>, Acked-by: Andrea Righi <righi.andrea@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/io-throttle/Makefile
ltp/testcases/kernel/controllers/io-throttle/run_io_throttle_test.sh
Added Files:
ltp/testcases/kernel/controllers/io-throttle/myfunctions-io.sh
Removed Files:
ltp/testcases/kernel/controllers/io-throttle/myfunctions.sh

7) Log Message:
dont use == or [[, and fix -z test

Modified File(s):
ltp/testcases/network/tcp_cmds/tcpdump/tcpdump01

8) Log Message:
convert all "source" commands in scripts to "." ... hopefully my sed-foo doesnt break anything ...

Modified File(s):
ltp/testcases/network/stress/broken_ip/broken_ip4-checksum
ltp/testcases/network/stress/broken_ip/broken_ip4-dstaddr
ltp/testcases/network/stress/broken_ip/broken_ip4-fragment
ltp/testcases/network/stress/broken_ip/broken_ip4-ihl
ltp/testcases/network/stress/broken_ip/broken_ip4-protcol
ltp/testcases/network/stress/broken_ip/broken_ip4-totlen
ltp/testcases/network/stress/broken_ip/broken_ip4-version
ltp/testcases/network/stress/broken_ip/broken_ip6-dstaddr
ltp/testcases/network/stress/broken_ip/broken_ip6-nexthdr
ltp/testcases/network/stress/broken_ip/broken_ip6-plen
ltp/testcases/network/stress/broken_ip/broken_ip6-version
ltp/testcases/network/stress/ftp/ftp4-download-stress
ltp/testcases/network/stress/ftp/ftp4-upload-stress
ltp/testcases/network/stress/ftp/ftp6-download-stress
ltp/testcases/network/stress/ftp/ftp6-upload-stress
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic01
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic02
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic03
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic04
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic05
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic06
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic07
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic01
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic02
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic03
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic04
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic05
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic06
ltp/testcases/network/stress/icmp/uni-basic/icmp6-uni-basic07
ltp/testcases/network/stress/interface/if4-addr-change
ltp/testcases/network/stress/interface/if4-alias-adddel
ltp/testcases/network/stress/interface/if4-alias-addlarge
ltp/testcases/network/stress/interface/if4-mtu-change
ltp/testcases/network/stress/interface/if4-route-adddel
ltp/testcases/network/stress/interface/if4-route-addlarge
ltp/testcases/network/stress/interface/if4-updown
ltp/testcases/network/stress/interface/if6-addr-adddel
ltp/testcases/network/stress/interface/if6-addr-addlarge
ltp/testcases/network/stress/interface/if6-mtu-change
ltp/testcases/network/stress/interface/if6-route-adddel
ltp/testcases/network/stress/interface/if6-route-addlarge
ltp/testcases/network/stress/interface/if6-updown
ltp/testcases/network/stress/http/http4-stress
ltp/testcases/network/stress/http/http6-stress
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope01
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope02
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope03
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope04
ltp/testcases/network/stress/multicast/grp-operation/mcast6-grpope01
ltp/testcases/network/stress/multicast/grp-operation/mcast6-grpope02
ltp/testcases/network/stress/multicast/grp-operation/mcast6-grpope03
ltp/testcases/network/stress/multicast/grp-operation/mcast6-grpope04
ltp/testcases/network/stress/multicast/packet-flood/mcast4-pktfld01
ltp/testcases/network/stress/multicast/packet-flood/mcast4-pktfld02
ltp/testcases/network/stress/multicast/packet-flood/mcast6-pktfld01
ltp/testcases/network/stress/multicast/packet-flood/mcast6-pktfld02
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip01
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip02
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip03
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip04
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip05
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip06
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip07
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip01
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip02
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip03
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip04
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip05
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip06
ltp/testcases/network/stress/icmp/multi-diffip/icmp6-multi-diffip07
ltp/testcases/network/stress/dns/dns4-stress
ltp/testcases/network/stress/dns/dns6-stress
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic01
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic02
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic03
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic04
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic05
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic06
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic07
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic01
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic02
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic03
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic04
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic05
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic06
ltp/testcases/network/stress/icmp/multi-diffnic/icmp6-multi-diffnic07
ltp/testcases/network/stress/ssh/ssh4-stress
ltp/testcases/network/stress/ssh/ssh6-stress
ltp/testcases/network/stress/ns-tools/add_ipv6addr
ltp/testcases/network/stress/ns-tools/bg_tcp_traffic
ltp/testcases/network/stress/ns-tools/check_netem
ltp/testcases/network/stress/ns-tools/check_setkey
ltp/testcases/network/stress/ns-tools/get_ifname
ltp/testcases/network/stress/ns-tools/initialize_if
ltp/testcases/network/stress/ns-tools/killall_icmp_traffic
ltp/testcases/network/stress/ns-tools/killall_tcp_traffic
ltp/testcases/network/stress/ns-tools/killall_udp_traffic
ltp/testcases/network/stress/ns-tools/set_ipv4addr
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld01
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld02
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld03
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld04
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld05
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld06
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld01
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld02
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld03
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld04
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld05
ltp/testcases/network/stress/multicast/query-flood/mcast6-queryfld06
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip01
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip02
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip03
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip04
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip05
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip06
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip07
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip08
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip09
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip10
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip11
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip12
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip13
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip14
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip01
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip02
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip03
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip04
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip05
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip06
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip07
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip08
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip09
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip10
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip11
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip12
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip13
ltp/testcases/network/stress/tcp/multi-diffip/tcp6-multi-diffip14
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic01
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic02
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic03
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic04
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic05
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic06
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic07
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic08
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic09
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic10
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic11
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic12
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic13
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic14
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic01
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic02
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic03
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic04
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic05
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic06
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic07
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic08
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic09
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic10
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic11
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic12
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic13
ltp/testcases/network/stress/tcp/multi-diffnic/tcp6-multi-diffnic14
ltp/testcases/network/stress/route/route4-change-dst
ltp/testcases/network/stress/route/route4-change-gw
ltp/testcases/network/stress/route/route4-change-if
ltp/testcases/network/stress/route/route4-ifdown
ltp/testcases/network/stress/route/route4-redirect
ltp/testcases/network/stress/route/route4-rmmod
ltp/testcases/network/stress/route/route6-change-dst
ltp/testcases/network/stress/route/route6-change-gw
ltp/testcases/network/stress/route/route6-change-if
ltp/testcases/network/stress/route/route6-ifdown
ltp/testcases/network/stress/route/route6-redirect
ltp/testcases/network/stress/route/route6-rmmod
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport01
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport02
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport03
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport04
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport05
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport06
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport07
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport08
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport09
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport10
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport11
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport12
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport13
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport14
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport01
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport02
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport03
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport04
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport05
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport06
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport07
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport08
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport09
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport10
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport11
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport12
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport13
ltp/testcases/network/stress/tcp/multi-diffport/tcp6-multi-diffport14
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport01
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport02
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport03
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport04
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport05
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport06
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport07
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport08
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport09
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport10
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport11
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport12
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport13
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport14
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport01
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport02
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport03
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport04
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport05
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport06
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport07
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport08
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport09
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport10
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport11
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport12
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport13
ltp/testcases/network/stress/tcp/multi-sameport/tcp6-multi-sameport14
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff01
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff02
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff03
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff04
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff05
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff06
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff07
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff08
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff09
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff10
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff11
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff12
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff13
ltp/testcases/network/stress/tcp/uni-sackoff/tcp4-uni-sackoff14
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff01
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff02
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff03
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff04
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff05
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff06
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff07
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff08
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff09
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff10
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff11
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff12
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff13
ltp/testcases/network/stress/tcp/uni-sackoff/tcp6-uni-sackoff14
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend01
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend02
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend03
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend04
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend05
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend06
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend07
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend08
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend09
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend10
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend11
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend12
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend13
ltp/testcases/network/stress/tcp/uni-smallsend/tcp4-uni-smallsend14
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend01
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend02
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend03
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend04
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend05
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend06
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend07
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend08
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend09
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend10
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend11
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend12
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend13
ltp/testcases/network/stress/tcp/uni-smallsend/tcp6-uni-smallsend14
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip01
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip02
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip03
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip04
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip05
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip06
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip07
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip01
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip02
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip03
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip04
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip05
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip06
ltp/testcases/network/stress/udp/multi-diffip/udp6-multi-diffip07
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale01
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale02
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale03
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale04
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale05
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale06
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale07
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale08
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale09
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale10
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale11
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale12
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale13
ltp/testcases/network/stress/tcp/uni-winscale/tcp4-uni-winscale14
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale01
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale02
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale03
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale04
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale05
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale06
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale07
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale08
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale09
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale10
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale11
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale12
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale13
ltp/testcases/network/stress/tcp/uni-winscale/tcp6-uni-winscale14
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso01
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso02
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso03
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso04
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso05
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso06
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso07
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso08
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso09
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso10
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso11
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso12
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso13
ltp/testcases/network/stress/tcp/uni-tso/tcp4-uni-tso14
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso01
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso02
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso03
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso04
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso05
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso06
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso07
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso08
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso09
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso10
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso11
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso12
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso13
ltp/testcases/network/stress/tcp/uni-tso/tcp6-uni-tso14
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup01
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup02
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup03
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup04
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup05
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup06
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup07
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup08
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup09
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup10
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup11
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup12
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup13
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp4-uni-pktlossdup14
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup01
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup02
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup03
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup04
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup05
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup06
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup07
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup08
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup09
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup10
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup11
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup12
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup13
ltp/testcases/network/stress/tcp/uni-pktlossdup/tcp6-uni-pktlossdup14
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff01
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff02
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff03
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff04
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff05
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff06
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff07
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff08
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff09
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff10
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff11
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff12
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff13
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp4-uni-dsackoff14
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff01
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff02
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff03
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff04
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff05
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff06
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff07
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff08
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff09
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff10
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff11
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff12
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff13
ltp/testcases/network/stress/tcp/uni-dsackoff/tcp6-uni-dsackoff14
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport01
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport02
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport03
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport04
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport05
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport06
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport07
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport01
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport02
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport03
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport04
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport05
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport06
ltp/testcases/network/stress/udp/multi-diffport/udp6-multi-diffport07
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic01
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic02
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic03
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic04
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic05
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic06
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic07
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic01
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic02
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic03
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic04
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic05
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic06
ltp/testcases/network/stress/udp/multi-diffnic/udp6-multi-diffnic07
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic01
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic02
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic03
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic04
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic05
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic06
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic07
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic01
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic02
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic03
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic04
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic05
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic06
ltp/testcases/network/stress/udp/uni-basic/udp6-uni-basic07

9) Log Message:
fix typo pointed out by Elder Costa: dulation -> duration

Modified File(s):
ltp/testcases/network/stress/icmp/multi-diffnic/icmp4-multi-diffnic01
ltp/testcases/network/stress/broken_ip/broken_ip4-checksum
ltp/testcases/network/stress/broken_ip/broken_ip4-dstaddr
ltp/testcases/network/stress/broken_ip/broken_ip4-fragment
ltp/testcases/network/stress/broken_ip/broken_ip4-ihl
ltp/testcases/network/stress/broken_ip/broken_ip4-protcol
ltp/testcases/network/stress/broken_ip/broken_ip4-totlen
ltp/testcases/network/stress/broken_ip/broken_ip4-version
ltp/testcases/network/stress/broken_ip/broken_ip6-dstaddr
ltp/testcases/network/stress/broken_ip/broken_ip6-nexthdr
ltp/testcases/network/stress/broken_ip/broken_ip6-plen
ltp/testcases/network/stress/broken_ip/broken_ip6-version
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip01
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic01
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip01
ltp/testcases/network/stress/tcp/multi-diffnic/tcp4-multi-diffnic01
ltp/testcases/network/stress/udp/multi-diffnic/udp4-multi-diffnic01
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic01
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport01
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport01
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip01
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport01
ltp/testcases/network/stress/tcp/uni-basic/tcp4-uni-basic01

10) Log Message:
lcov: geninfo chokes on spaces in the directory name

From: Jeff Connelly <jeffconnelly@users.sourceforge.net>

In lcov 1.6, geninfo fails to find gcno/gcda files if the source directory has spaces in the name, because it uses backticks to shell out to "find", passing $directory on the command-line. Attached is a patch that double-quotes the variable, allowing geninfo to operate on directories with spaces in their name. The fix isn't perfect; it won't work on directories with a " character, but it works fine for my purposes (I don't have any directories with quotes). A better fix would be to use IPC::System::Simple's capturex from http://search.cpan.org/~pjf/IPC-System-Simple-0.15/lib/IPC/System/Simple.pm #runx(),_systemx()_and_capturex(). capturex() is a multiple-argument form of the backticks, so it avoids any interpolation errors.

Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/CHANGES

11) Log Message:
gcov-kernel: added patches for linux-2.6.27

Added File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.27-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.27-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.27-gcov.patch

12) Log Message:
If we unshare pidns without unsharing mounts namespace, and then do a mount -t proc none /proc, then the new proc sits over the original proc for the whole system. Since pidns03 wasn't using CLONE_NEWNS, when it exited /proc showed zero tasks.  This can be fixed by doing 'umount -l /proc', but 'umount /proc' is insufficient.  More to the point, pidns03 wasn't trying to clean up /proc at all.  So make it use CLONE_NEWNS so its private procfs will be automatically cleaned up. Signed-off-by: Serge E. Hallyn <serue@us.ibm.com>. 

Modified File(s):
ltp/testcases/kernel/containers/pidns/pidns03.c

13) Log Message:
netns: fix restoration of original /proc values (ip_forward...). This small patches make the restoration of /proc/sys/net/ipv4/ip_forward /proc/sys/net/ipv4/conf/$netdev/proxy_arp works as expected in netns/initialize.sh. Also removed some unneeded /dev/null redirections. Signed-off-by: Benjamin Thery <benjamin.thery@bull.net>.

Modified File(s):
ltp/testcases/kernel/containers/netns/initialize.sh

14) Log Message:
The script run_semaphore_test_01 fails the first time it is run as the semaphore id is zero (subsequent runs are successful as the ids are nonzero.) The attached patch fixes this behavior. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh

15) Log Message:
On ppc/ppc64, PTRACE_GETREGS and PTRACE_SETREGS don't be defined in /usr/include/sys/ptrace.h. So add checks before use them. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.c

16) Log Message:
Simple bug in logic that defines when to run the test makes it run exclusively when support is NOT implemented. Tested on mips64 system running Cavium Networks Octeon chip, Linux 2.6.27. Signed-Off-By: "Malov, Vlad" <Vlad.Malov@caviumnetworks.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

17) Log Message:
The new ltp-full-20080930.tgz seems to include some new ptrace tests (ptrace04 and ptrace06) that do a #include for spawn_ptrace_child.c. Now I find that if I do a "make clean" it removes this spawn_ptrace_child.c ... is this expected and desired? Also is there supposed to be a way to generate the spawn_ptrace_child.c and any other files removed after "make clean" ? Thanks, - Mark Ver.
Yes, I believe it's an error. The spawn_ptrace_child.c file is necessary to ptrace04 and ptrace06. To do a #include *.c file is not a good coding style. The simplest solution is to rename the spawn_ptrace_child.c to spawn_ptrace_child.h. Also you can add __inline__ as the prefix of functions, then the spawn_ptrace_child.h file looks more like a header file. Thanks, - Jin Bing Guo.

Modified Files:
ltp/testcases/kernel/syscalls/ptrace/ptrace04.c
ltp/testcases/kernel/syscalls/ptrace/ptrace06.c
Added Files:
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.h
Removed Files:
ltp/testcases/kernel/syscalls/ptrace/spawn_ptrace_child.c

18) Log Message:
With Exec-Shield in place, the Kernel automatically adjusts the stack downward by a random amount of bytes. This will cause the test failed occasionally on IA-32, because the 11th requested chunk of address space (bfe00000-bff00000) has already been used by the stack. For example, stack could be at bfe0b000-bfe20000, and then, shmat(2) failed, mykey to uniquely identify the shared memory segment 0x451005ae. Get shared memory segment (1048576 bytes). Attach shared memory segment to process: ERROR [line: 205] shmat failed - return: 0xffffffff: Invalid argument. It looks like the stack adjustment has a range that it could be chosen, so I changed the start of 11th address space to a lower address. Tests showed that the stack will not go downward that much. In addition, there are a few minor fixes, - keep the width of comments within 72 characters. - remove unnecessary 0x prefix. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_06.c

19) Log Message:
Adding support for mips64. Use 64 bit variable to store the 64 bit address. Tested on mips64 system running Cavium Networks Octeon chip, Linux 2.6.27. Signed-Off-By: "Malov, Vlad" <Vlad.Malov@caviumnetworks.com>. 

Modified File(s):
ltp/testcases/kernel/syscalls/profil/profil01.c

20) Log Message:
Remap_file_pages01 and remap_file_pages02 tests always failed on IA-64 with Kernel 2.6.9 as below. So, I added a check to the existing Kernel version checking (< 2.6.12). If anybody happens to know the exactly version it has started to be implemented, I'll be happy to re-send the revised patch. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

21) Log Message:
I'm using an embedded arm processor (Xscale) and I get the following compile error: timerfd01.c:90: error: '__NR_timerfd_settime' undeclared (first use in this function). I have dug through past patches for this exact problem and have seen it come up with other processors and I have put together a patch that *should* address the issue.  I tested it on my system and everything seems to work.  I based the macro info off of: http://kerneltrap.org/mailarchive/git-commits-head/2008/4/22/1543584/thread. Here is the patch. Signed-Off-By: Shane Volpe <shanevolpe@gmail.com>.

Modified File(s):
ltp/testcases/kernel/include/arm.in

22) Log Message:
This patch adds some debug messages when shmat(2) failed, so we could tell if the failure was because the requested address space has been used. In addition, it fixes the output of failed error code to a more meaningful form. This patch should be applied on the top of another patch I sent earlier with title "shmem_test_06 Failed with Stack Randomization". Tested successfully on a x86_64 machine. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_06.c

23) Log Message:
When I tested the inotify02 on ppc64, it passed all tests and returned 1 with an unnecessary event. After looking into the code, there were 9 tests in sum in inotify02. So I think the unnecessary event should not be regarded as a failure when the 9 tests all passed. Same problem was in inotify01. The patches fixed them. Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

24) Log Message:
Attaching the patch for the testcase on PIDNS. Assertion: 1. kill -9 1 from inside a container does not kill container, Steps: a) create container, b) kill -9 1, c) Should not kill the containers. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Added Files:
ltp/testcases/kernel/containers/pidns/pidns04.c

25) Log Message:
This patch fixes build failures seen on RHEL 4 (2.6.9 based Kernel), and several warnings. The build failures are caused by pec_listener.c and then ptrace06.c, It because the Kernel version checking code is incorrect from it, as you can see from the error message above, "/bin/sh: ../../bin/tst_kvercmp: No such file or directory". I solve it by querying an entry in proc file system instead. For ptrace06.c case, PTRACE_GETSIGINFO and PTRACE_SETSIGINFO are unavailable in this version of Kernel, Given that this test also fails to compile for IA-64 entirely (please see more details on one of my previous emails sent not long ago), I disable this test temperately until those problems have been fixed. In addition, it fixed the following unnecessary compiling warnings. Finally, check_for_unshare.c:21: warning: implicit declaration of function `tst_kvercmp'. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/pan/Makefile
ltp/testcases/kernel/connectors/Makefile
ltp/testcases/kernel/containers/check_for_unshare.c
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/syscalls/ptrace/Makefile

26) Log Message:
The gethostid01 test fails when the host id is not set on a system. The gethostid() call retrieves "00000000" as the host id. Added a check to compare the return value with "000000" (omitted 1st two 0's as they could also be 0x on some systems; needs confirmation). Signed-off by : Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c

27) Log Message:
This patch cleans code a little bit by removing leftovers. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/lib/libipc.c
ltp/testcases/kernel/syscalls/nanosleep/nanosleep01.c

28) Log Message:
Hello. I had two errors when compiling the CVS version with Ubuntu. The one in regen.sh might have to do with some dash limitation (it complains about not supporting more than 32 shifts.) The one with the Makefile  has to do with the version of lex I have here (lex 2.5.33) complaining about -l not accepting an extra argument (I believe it interprets the w as such). I did a quick check after applying the changes and they seem not to break anything. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/pan/Makefile
ltp/testcases/kernel/include/regen.sh

29) Log Message:
Fixing the runpidnstest.sh in containers/pidns, to handle the return code properly. Also removed the obsolete file runtests_noltp.sh, which is no longer required. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
Removed Files:
ltp/testcases/kernel/containers/pidns/runtests_noltp.sh

30) Log Message:
After tested the latest LTP cases, the connector cases failed on RHEL5.2. Test fails with following error:
<<<test_output>>>
incrementing stop
/home/ltp/cvs_ltp.orig/testcases/bin/connector_test.sh: line 9:
/home/ltp/cvs_ltp.orig/testcases/bin/run_pec_test: No such file or directory
<<<execution_status>>>
Post Patching:
<<<test_output>>>
incrementing stop Connectors 0 CONF : system doesn't support execution of the test
<<<execution_status>>>
Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/connectors/connector_test.sh

31) Log Message:
Disabling this till TIRPC is built, installed and run properly. Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/stress.part3

32) Log Message:
Avoid buffer overflow when PID exceeds to 4-digit limit. char array root has to contain at least 'A' +  pid + '\0', which only works pid of testprcess is a 4-digit PID. PID_MAX_DEFAULT in kernel (when CONFIG_BASE_SMALL is NOT set) is set up to 4 million, which requires at least 7-digit pid. Author: Frank Seidel <fseidel@suse.de>. Signed-off-by: Frank Seidel <fseidel@suse.de>. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/fs/inode/inode01.c

33) Log Message:
Array size of path_list_string gets exceeded and cause an buffer overflow, when building with -D_FORTIFY_SOURCE=2
======= Backtrace: =========
/lib64/libc.so.6(__chk_fail+0x2f)[0x2b3f94ec831f]
/lib64/libc.so.6[0x2b3f94ec73c3]
/root/ltp/ltp-full-20080916/testcases/kernel/fs/inode/inode01[0x4020e3]
/lib64/libc.so.6(__libc_start_main+0xf4)[0x2b3f94e13184]
/root/ltp/ltp-full-20080916/testcases/kernel/fs/inode/inode01[0x401609]
======= Memory map: ========
[...]
Program received signal SIGABRT, Aborted. 0x00002b3f94e25bb5 in raise () from /lib64/libc.so.6 (gdb) bt
#0  0x00002b3f94e25bb5 in raise () from /lib64/libc.so.6
#1  0x00002b3f94e26fb0 in abort () from /lib64/libc.so.6
#2  0x00002b3f94e5c32b in __libc_message () from /lib64/libc.so.6
#3  0x00002b3f94ec831f in __chk_fail () from /lib64/libc.so.6
#4  0x00002b3f94ec73c3 in __strcat_chk () from /lib64/libc.so.6
#5  0x00000000004020e3 in main () at inode01.c:169
(gdb) up
[...]
#5  0x00000000004020e3 in main () at inode01.c:169
169             strcat(path_list_string, "path_list");
Array size of path_list_string needs to be increased to handle PIDs which exceed 4-digits. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/fs/inode/inode01.c

34) Log Message:
When compiling with -D_FORTIFY_SOURCE=2 following buffer-overflow gets detected: 
Starting program:
/root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01
symlink01    1  PASS  :  Creation of symbolic link file to no object file is ok
symlink01    2  PASS  :  Creation of symbolic link file to no object file is ok
symlink01    3  PASS  :  Creation of symbolic link file and object file via symbolic link is ok
symlink01    4  PASS  :  Creating an existing symbolic link file error is caught
  *** buffer overflow detected ***:
/root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01 terminated
  ======= Backtrace: =========
  /lib64/libc.so.6(__chk_fail+0x2f)[0x2b5ae730f31f]
  /lib64/libc.so.6[0x2b5ae730e3c3]
  /root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01[0x4048fe]
  /root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01[0x403e7b]
  /root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01[0x4047b7]
  /lib64/libc.so.6(__libc_start_main+0xf4)[0x2b5ae725a184]
  /root/ltp/ltp-full-20080916/testcases/kernel/syscalls/symlink/symlink01[0x401c39]
  (gdb) bt
  #0  0x00002b5ae726cbb5 in raise () from /lib64/libc.so.6
  #1  0x00002b5ae726dfb0 in abort () from /lib64/libc.so.6
  #2  0x00002b5ae72a332b in __libc_message () from /lib64/libc.so.6
  #3  0x00002b5ae730f31f in __chk_fail () from /lib64/libc.so.6
  #4  0x00002b5ae730e3c3 in __strcat_chk () from /lib64/libc.so.6
  #5  0x00000000004048fe in creat_path_max (path1=0x409d88 "object", path2=<value optimized out>, path3=<value optimized out>) Read from remote host
  #6  0x0000000000403e7b in do_syscalltests (tcs=0x50cec0) at symlink01.c:958
  #7  0x00000000004047b7 in main (argc=<value optimized out>, argv=<value optimized out>) at symlink01.c:569 (gdb) up
  #1  0x00002b5ae726dfb0 in abort () from /lib64/libc.so.6 (gdb)  
  #2  0x00002b5ae72a332b in __libc_message () from /lib64/libc.so.6 (gdb)  
  #3  0x00002b5ae730f31f in __chk_fail () from /lib64/libc.so.6 (gdb)  
  #4  0x00002b5ae730e3c3 in __strcat_chk () from /lib64/libc.so.6 (gdb)  
  #5  0x00000000004048fe in creat_path_max (path1=0x409d88 "object", path2=<value optimized out>,path3=<value optimized out>) at symlink01.c:844 844 strcat(full_path, "Z");
Variable full_path exceeds PATH_MAX limit in creat_path_max(), to avoid a buffer overflow the size of full_path needs to be incremented by one. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/symlink/symlink01.c

35) Log Message:
Now that fsx-linux is the same for fs, nfs and ios (I'm working with ltp-full-20080831.tgz) we have to adapt the runtest/ltp-aiodio.part3 file: (-A and -Z options are no more supported by fsx-linux). Signed-Off-By: Jacky Malcles <Jacky.Malcles@bull.net>.

Modified File(s):
ltp/runtest/ltp-aiodio.part3

36) Log Message:
Introduced PREFIX and LIBSUFFIX variables. DESTDIR is often used within packaging scripts/spec files. Use PREFIX variable instead to manipulate the installation destination directory. Introduced LIBSUFFIX to allow to manipulate library directory to lib64 e.g. for distribution packaging for x86_64 or others architectures. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified Files:
ltp/doc/man1/Makefile ltp/doc/man3/Makefile
ltp/include/Makefile ltp/lib/Makefile ltp/pan/Makefile

37) Log Message:
Dont install ltp.pc and libltp.a with excutable flags. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified Files:
ltp/lib/Makefile

38) Log Message:
Apply CFLAGS to compiler to ballista, kernel/syscalls/utimestat. Compile everything with (user-defined) CFLAGS. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified Files:
ltp/testcases/ballista/ballista/Makefile
ltp/testcases/kernel/syscalls/utimensat/Makefile

39) Log Message:
Avoid overwriting of compiler specific flags in open posix testsuite. Instead of overwriting CFLAGS, append custom flags. Don't append debugging info, optimizing or warning related compiler flags. This would "overwrite" the user definied CFLAGS again. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

ltp/testcases/open_posix_testsuite/Makefile

40) Log Message:
Logfiles of the ltp testdriver "runltp" can get corrupted due to "unsafe" temporary directories and not failing when temporary already exist. The temp directory is /tmp/ltp-$$ which can cause logfile corruption once the PID overflows, since "mkdir -p" will NOT fail, and runltp starts writing into an already existing log directory. This patch creates a temporary directory by using "mktemp", which replaces the "mkdir -p" call. runltp will fail once "mktemp" runs out of combinations (instead of corrupting logfiles silently). Patch is based on the idea from Erik Hamera to create more "safe" temp directories. Various patch improvements/fixes got contributed by Klaus Wagner as well. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified Files:
ltp/runltp

41) Log Message:
This patch fixes most of warnings and badness including the following. Compiled successfully on Fedora 10 Beta x86_64. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
include/databin.h
lib/databin.c
testcases/kernel/containers/libclone/libnetns.c
testcases/kernel/containers/libclone/Makefile
testcases/kernel/containers/pidns/pidns03.c
testcases/kernel/containers/sysvipc/shmnstest.c
testcases/kernel/controllers/cpuctl/cpuctl_test01.c
testcases/kernel/controllers/cpuctl/cpuctl_test02.c
testcases/kernel/controllers/cpuctl/cpuctl_test03.c
testcases/kernel/controllers/cpuctl/cpuctl_test04.c
testcases/kernel/controllers/memctl/memctl_test01.c
testcases/kernel/io/disktest/childmain.c
testcases/kernel/io/disktest/dump.c
testcases/kernel/io/disktest/dump.h
testcases/kernel/io/disktest/main.c
testcases/kernel/io/disktest/timer.c
testcases/kernel/ipc/ipc_stress/signal_test_01.c
testcases/kernel/ipc/ipc_stress/signal_test_03.c
testcases/kernel/mem/hugetlb/lib/libipc.c
testcases/kernel/mem/mtest07/mallocstress.c
testcases/kernel/mem/mtest07/shm_test.c
testcases/kernel/sched/clisrv/pthserv.c
testcases/kernel/sched/tool/trace_sched.c
testcases/kernel/security/filecaps/checkforlibcap.sh
testcases/kernel/syscalls/clone/clone03.c
testcases/kernel/syscalls/clone/clone04.c
testcases/kernel/syscalls/clone/clone06.c
testcases/kernel/syscalls/fmtmsg/fmtmsg01.c
testcases/kernel/syscalls/ipc/lib/libipc.c
testcases/kernel/syscalls/ipc/msgget/msgget01.c
testcases/kernel/syscalls/nftw/lib64.c
testcases/kernel/syscalls/nftw/lib.c
testcases/misc/crash/crash01.c
testcases/network/nfsv4/locks/netsync.c
testcases/network/sctp/func_tests/test_1_to_1_threads.c
testcases/network/sctp/func_tests/test_sctp_sendrecvmsg.c
testcases/network/sctp/func_tests/test_timetolive.c
testcases/network/sockets/ltpClient.c
testcases/network/sockets/ltpServer.c
testcases/kernel/syscalls/switch/endian_switch01.c
testcases/kernel/fs/doio/doio.c

42) Log Message:
ltin___memset_chk overflow warning for kernel/connectors/pec/pec_listener.c. with GCC 4.3 and with LTP CVS snapshot from today i got following warning when using the GCC Object Checking Builtins: Signed-off-by: Daniel Gollub <dgollub@suse.de>. 
It's not a correct fix, the patch initializes the message header only. Below is a correct one: Allocate a buffer large enough to hold NLMSG_SPACE(MAX_MSG_SIZE). Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>. 

Modified File(s):
ltp/testcases/kernel/connectors/pec/pec_listener.c

43) Log Message:
Compiled the latest CVS tree on a x86_64 machine yelling a warning, 
"acl1.c: In function ‘do_file_op’:
 acl1.c:62: warning: not enough variable arguments to fit a sentinel"
Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/network/nfsv4/acl/acl1.c

44) Log Message:
CAI Qian <caiqian@cclom.cn> reported that Setgroups01_16 test always fails for x86_64:
setgroups01_16    1  FAIL  :  setgroups(65536, list) Failed, errno=14 : Bad address,
Seen it on both of those Kernels, 2.6.27-0.392.rc8.git7.fc10.x86_64, 2.6.18-92.el5. Any idea on if it is a test code issue or OS bug?
Daniel Gollub <dgollub@suse.de> replied that I just sent some patches for setgroups02_16 - looks like it's a similar problem for setgroups01_16 (for some reason setgroups01_16 didn't failed for me, only setgroups02_16). Anyway, i guess the reason is the use of the uninitialized groups list and passing the _full_ length to the syscalls. Could you try attached patch? Signed-Off-By: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/setgroups/compat_16.h
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c

45) Log Message:
Change argument list of GETGROUPS/SETGROUPS to represent the argument list of the syscalls. getgroups() first argument is a signed int!. Signed-off-by: Daniel Gollub <dgollub@suse.de>. Also, setgroups02(_16) is working with an uninitialized list, expect the first GID field. setgroups() and getgroups() additionally get called with the full length  of the uninitialized list. The uninitialized values cause setgroups02_16 to fail:
===
setgroups02_16    1  BROK  :  gid returned from getgroups is too large for testing setgroups32
===
Since the uninitialized values could be greater then 0xffff. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/setgroups/compat_16.h
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c

46) Log Message:
Hi. Here I am getting the following error (with Ubuntu 7.04):
elder@Yosemite:/tmp/ltp/testcases/ballista$ LANG= make -f Makefile
WARNING: No perl detected; skipping ballista tests
This is caused by a bashism in the makefile (see patch 1). I've compiled & ran ballista on Debian lenny, and found out some patches are needed to make it work. Patches 1 and 2 are fix bashisms causing failures when using Debian's dash. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/ballista/Makefile
ltp/testcases/ballista/ballista/ostest_new.pl

47) Log Message:
This fixes a problem when generated the test executable source, which causes the last argument of the tested syscall to be repeated (eg. call chdir(char*) would end up as chdir(char*, char*)). Signed-off-by: Jiri Palecek <jpalecek@web.de>. 

Modified Files:
ltp/testcases/ballista/ballista/callGen.cpp
ltp/testcases/ballista/ballista/callGen_standAlone.cpp

48) Log Message:
Adds using declarations to generated sources, where needed. Added using namespace std; directives to files that use unqualified names from std:: Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/ballista/ballista/compile/bparser.cpp
ltp/testcases/ballista/ballista/templates/bTypes.cpp

49) Log Message:
Fixed some bashisms. Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh

50)  Log Message:
Typo in file_test.sh. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/ade/file/file_test.sh

51) Log Message:
Fix bashisms in inintialize.sh. This includes two atypical cases: a lexicographical comparison of two strings, which has been emulated by "sort", and some strange bash-array-ism, which has been emulated through "eval". Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/containers/netns/initialize.sh

52) Log Message:
Fix some bashisms. Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/commands/ade/ar/ar01
ltp/testcases/commands/ade/file/file_test.sh
ltp/testcases/commands/cpio/cpio_tests.sh
ltp/testcases/commands/eject/eject-tests.sh
ltp/testcases/commands/fileutils/cp/cp_tests.sh
ltp/testcases/commands/fileutils/ln/ln_tests.sh
ltp/testcases/commands/fileutils/mkdir/mkdir_tests.sh
ltp/testcases/commands/fileutils/mv/mv_tests.sh
ltp/testcases/commands/gzip/gzip_tests.sh
ltp/testcases/commands/logrotate/logrotate_tests.sh
ltp/testcases/commands/mail/mail_tests.sh
ltp/testcases/commands/tar/tar_tests.sh
ltp/testcases/kernel/fs/acls/acl_test01
ltp/testcases/network/dhcpd/dhcpd_tests.sh
ltp/testcases/network/iptables/iptables_tests.sh
ltp/testcases/network/traceroute/traceroute_tests.sh
ltp/testcases/network/xinetd/xinetd_tests.sh

53) Log Message:
Fix bashisms (function keyword in utimensat_tests.sh). Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

54) Log Message:
When building ltp on 2.6.24 kernel, the timerfd test failed to build. This is caused by NR_timerfd being defined without NR_timerfd_create, because the test checks for NR_timerfd, but uses NR_timerfd_create. The attached patch should fix that. Correct the condition of compiling the timerfd test; should fix FTBFS with some kernel versions. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified Files:
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c

55) Log Message:
The file_test detects MSB architectures by grepping for "power" or "ppc" in /proc/cpuinfo. This is unfortunate if, on a LSB architecture, /proc/cpuinfo contains the word "power_management". The attached patch should fix it. Implement a (hopefully) proper way of getting machine endiannes in file_test.sh. The old way tested if cpuinfo contained the word "power" for big endian machine; this was easily confused by "power_management". Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/commands/ade/file/file_test.sh

56) Log Message:
Running hugemmap02 test case on IA-32 generated SIGSEGV. It also gives warnings when compiling:      
cc -I../../../../../include -g -Wall    hugemmap02.c -L../../../../../lib -lltp   -o hugemmap02
hugemmap02.c: In function ‘main’:
hugemmap02.c:149: warning: integer constant is too large for ‘long’ type
hugemmap02.c:156: warning: integer constant is too large for ‘long’ type
The following patch fixes it by making low memory addresses falling in a 2G - 3G range. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02.c

57) Log Message:
The mc_cmds script under ltp network test returns "fail" when /proc/sys/net/ipv4/icmp_echo_ignore_broadcasts is set to 1. This just means that this feature is disabled. Added a check to report this message and exit. Vinay Sridhar <vinay@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/multicast/mc_cmds/mc_cmds

58) Log Message:
This patch fixes file_test failure on s390(x). Signed-off-by: Jeff Burke <jburke@redhat.com>. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/commands/ade/file/file_test.sh

59) Log Message:
The runltp has the parameter "-d" to identify the temporary directory by user. But in the latest runltp, there're two problem:
1> Always use "/tmp" as the temporary directory and never use the one that user defined.
2> It will be in error if the parameter "TMPDIR" is a relative path. 
This patch fixes those issues. Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp

60) Log Message:
This patch fixes the ld01 test failure on x86_64. Signed-off-by: Jeff Burke <jburke@redhat.com>. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/commands/ade/ld/Makefile

61) Log Message:
I found no reason why they should not be run: Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/mm
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/mount/Makefile
ltp/testcases/kernel/syscalls/umount/Makefile

Added Files:
ltp/testcases/kernel/syscalls/mount/test_mount
ltp/testcases/kernel/syscalls/umount/test_umount

62) Log Message:
Re-introduce locals. The issue I was solving when making this patch was checkbashisms (http://packages.debian.org/sid/devscripts) complaining about it, so I had to patch it to get rid of lintian warnings. I've checked that:
- the variables are always initialised before use in the testXX functions,
- the testXX functions don't recurse nor call each other,
- the variables are not used outside testXX functions,

so IIUC, the transformation should be safe. However, if you're seriously worried about it, you can reintroduce the locals by applying the attached patch, it wouldn't matter to me. Signed-Off-By: Jiri Palecek <jpalecek@web.de>. Mike Frysinger <vapier@gentoo.org> wanted them back.

Modified File(s):
ltp/testcases/network/iptables/iptables_tests.sh

63) Log Message:
The current fork09 test case breaks if there is an FD (with a higher number) opened for the testcase. This would fail as the test is not able to detect the fact that it has already opened 1024 files ! This situation is quite possible in an automated environment where people could run the LTP tests from. The patch attached fixes the issue. Please apply ! This will make the test more robust and free from assumptions ! ;). Signed-off-by: Suzuki K P <suzuki@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/fork/fork09.c

64) Log Message:
This patch fixes the following compilation warning seen on PPC64. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/getsid/getsid02.c

65) Log Message:
I tested the connectors case on SLES11 beta2 for ppc. Some tests fail. It's the getopt() error in connectors/pec/event_generator.c file. The type of return value in getopt() is "int", not "char". This Patch solves the problem. Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>. 

Modified File(s):
ltp/testcases/kernel/connectors/pec/event_generator.c

66) Log Message:
I've understood the explanation and I've confirmed the correctness. But I think the behavior of io_submit(ctx, 0, (void*)-1 ) on ppc64 is interesting. So I don't like to throw io_submit(ctx, 0, (void*)-1 ) test case away <A>. Also I'd like to dig the kernel more <B>. For <B> I'd like to submit following patch to lkml in the future: For <A> I've revised the patch. Signed-off-by: Sridhar Vinay <vinaysridhar@in.ibm.com>, Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>, Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c

67) Log Message:
Addition of gcov-kdump tool to LTP. The files attached is gcovdump tool. Could you please upload the code into LTP CVS repository? Signed-Off-By: Huang Ying <ying.huang@intel.com>.

Added Files:
utils/analysis/gcov-kdump/Makefile
utils/analysis/gcov-kdump/README
utils/analysis/gcov-kdump/gcov.h
utils/analysis/gcov-kdump/gcovdump.c
utils/analysis/gcov-kdump/mem_image.c
utils/analysis/gcov-kdump/mem_image.h
utils/analysis/gcov-kdump/util.c
utils/analysis/gcov-kdump/util.h

68) Log Message:
I found no reason why they should not be run: Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/syscalls

69) Log Message:
Addition of additional epoll() test cases run to LTP. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/libevent/run_libevent.sh

70) Log Message:
Thanks. Attached page is based on your advise. Signed-off-by: Masatake YAMATO <yamato@redhat.com>. However, the page tells *older* version of 2.6.23 uses signo instead of ssi_signo as a field name. Subrata, could you try the patch on your 2.6.27 first. 

Modified File(s):
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c

71) Log Message:
Subrata <subrata@linux.vnet.ibm.com> wrote: I found some compilation errors for the connectors at today´s CVS snapshot on the following machine. Can you please look into this: 1) uname -a, Linux 2.6.27-autokern1 #1 SMP Mon Oct 20 00:45:37 PDT 2008 i686 GNU/Linux.  How about: check if NETLINK_CONNECTOR is defined (in netlink.h). If not, we can't include connector.h, so we break the test. If yes, we check if CN_IDX_PROC is defined. Subrata, can you try the following patch? Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified Files:
ltp/testcases/kernel/connectors/pec/pec_listener.c
ltp/testcases/kernel/connectors/pec/run_pec_test

72) Log Message:
The getcpu() test-function returns the current scheduled CPU id of the test-process for archiectures expect i386, which is not the intended return value of a syscall test. Attached patch returns instead 0, for non-i386 ARCH and __GLIBC_PREREQ(2,6). Tested on x86_64. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

73) Log Message:
openposix testsuite is skipping PPC64 builds due to different location of the "main" function symbol on PPC64. Author: Erik Hamera <ehamera@suse.cz>, Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/open_posix_testsuite/Makefile

74) Log Message:
please find attached a fix for potential overflows in sched_tc4 and sched_driver. sched_tc4: RAWDEV could be much large then 16 chars - e.g. /dev/cciss/c0d0p6 (18) (only use of RAWDEV in entire sched_stress module). sched_driver: pathname could be much large then 50 - increased to PATH_MAX. Problem observed and original fixed by Yi Xu. Patch got slightly cleaned-up/modified. Reviewed-by: Daniel Gollub <dgollub@suse.de>, Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/sched/sched_stress/sched_driver.c
ltp/testcases/kernel/sched/sched_stress/sched_tc4.c


75) Log Message:
Again, the patch deals with _NR_fstatat64 and __NR_newfstatat stubs when builds the test. We do not really want to test stubs when a good definition is available. See attached patch file, copy here. Tested with _fstatat64 or __NR_newfstatat defined, not tested  when both stubbed. Signed-off by : Vlad Malov <vlad.malov@caviumnetworks.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/fstatat/fstatat01.c

76) Log Message:
Replacement of deprecated interfaces: The update_refpolicy.sh fixes some of deprecated interfaces and inject an interface to kick test script from unconfined domain. So, I can run the testsuite which includs bounds test without any problems on Rawhide. However, I got some warnings for deprecated interfaces/macros like r_dir_perms, userdom_sysadm_bin_spec_domtrans_to or userdom_use_sysadm_ptys. The attached patch is a new test case of the boundary feature, which contains six tests, as follows: 
test01: It tries to invoke setcon() with bounded domain in a multi-threaded process. The expected result is success.
test02: It tries to invoke setcon() with unrelated domain in a multi-threaded process. The expected result is fail.
test03: It makes a bounded domain try to read a file, when its bounds domain can read the file. The expected result is success. test04: It makes a bounded domain try to write a file, when its bounds domain cannot write the file. The expected result is fail, because write permission is boundary violated.
test05: It tries to write a bounded type, even if the domain cannot write to its bounds type. The expected result is fail. 
test06: It makes a bounded domain try to set an attribute of bounded type.Thanks,
Signed-Off-By: KaiGai Kohei <kaigai@ak.jp.nec.com>.

Modified Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile

Added Files:
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_bounds.te
ltp/testcases/kernel/security/selinux-testsuite/tests/bounds/Makefile
ltp/testcases/kernel/security/selinux-testsuite/tests/bounds/selinux_bounds.sh
ltp/testcases/kernel/security/selinux-testsuite/tests/bounds/selinux_bounds_thread.c

77) Log Message:
Integrate execution of epoll() syscall testcase. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/Makefile

78) Log Message:
Integrated TIMERS tests
(http://ltp.cvs.sourceforge.net/viewvc/ltp/ltp/testcases/kernel/timers/) to default LTP run: runltp. Signed-Off-By: Subrata Modak
<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp

79) Log Message:
Integrated SCHEDULER Client Server Tests to default LTP run ./runltp. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/sched
ltp/testcases/kernel/sched/clisrv/Makefile

Added Files:
ltp/testcases/kernel/sched/clisrv/run_sched_cliserv.sh

80) Log Message:
Integrated the sched_stress to default LTP run for 2 minutes. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/sched
ltp/testcases/kernel/sched/sched_stress/sched_stress.sh

81) Log Message:
Addition of Initial Set of POWER MANAGEMENT Testcases to LTP. Signed-Off-By: Nageswara R Sastry <rnsastry@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp
ltp/testcases/kernel/Makefile

Added Files:
ltp/runtest/power_management_tests
ltp/testcases/kernel/power_management/Makefile
ltp/testcases/kernel/power_management/README
ltp/testcases/kernel/power_management/change_freq.sh
ltp/testcases/kernel/power_management/change_govr.sh
ltp/testcases/kernel/power_management/check_config.sh
ltp/testcases/kernel/power_management/check_cpufreq_sysfs_files.sh
ltp/testcases/kernel/power_management/check_kv_arch.c
ltp/testcases/kernel/power_management/config_cpu_freq
ltp/testcases/kernel/power_management/config_cpu_idle
ltp/testcases/kernel/power_management/config_sched_mc
ltp/testcases/kernel/power_management/pm_include.sh
ltp/testcases/kernel/power_management/pwkm_load_unload.sh
ltp/testcases/kernel/power_management/runpwtests.sh
ltp/testcases/kernel/power_management/test_sched_mc.sh

82) Log Message:
Fixed Build errors on s390x. Signed-Off-By: Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/get_robust_list/get_robust_list01.c
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c

83) Log Message:
Added the Kernel Options that need to be set after applying the Patch and for successfull loading of the GCOV kernel during usage of lcov. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
utils/analysis/gcov-kernel/linux-2.6.27-gcov.patch

84) Log Message:
I wanted to have all the special configuration parameters needed in the kernel .config file for enabling some features, for which test cases are there in LTP, but those tests will not run until the running kernel was enabled. I wanted the consolidated list in the ltp/README itself. I have generated a small patch for this. I would request others also to add to this when they find out such scenarios in LTP. Please feel free to add. We do not want situations where test cases are available in LTP, but they cannot be tested just because that the kernel was not built with configuration(s) set. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/README

85) Log Message:
The result of alloc_mem thread could be either NULL, ptr to some allocated memory or (void*)-1. The code reading this result actually handled cases 1 & 2 only, and even case "NULL" was mishandled, causing a segfault. This patch fixes it, by:
- removing the case when alloc_mem would return -1, change it to the "allocated memory" case,
- not checking for *th_status, if th_status might be null,
Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/mallocstress.c

86) Log Message:
In the i2ntest1 testcase, the call if_nametoindex(TEST_RETURN) was segfaulting, because TEST_RETURN was actually result of comparison (ifname==if_indextoname(...)). The fix is to call it with real ifname. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/network/lib6/in6_02.c

87) Log Message:
Fix segfaults on getaddrinfo failures in pingpong6.c. pingpong6.c would segfault if getaddrinfo fails, because it would go on after the failure and read invalid data (ie. the hp pointer). The fix is to exit immediately on getaddrinfo errors. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/testcases/network/ipv6/perf_lan6/pingpong6.c

88) Log Message:
Fix double unescaping error in tst_resm. when calling tst_resm (and several other tst_* functions) with a string containinig "%%", tst_resm would not output a percent sign, but formats some data instead (eg. "%%fs" in fork05 test ends up as "0.00000s". This is because once the escapes have been processed by tst_resm, they are processed again by tst_res called by tst_resm. The attached patch fixes this behaviour.. Signed-off-by: Jiri Palecek <jpalecek@web.de>.

Modified File(s):
ltp/lib/tst_res.c

89) Log Message:
clean up nested #ifdef mess

Modified File(s):
ltp/testcases/kernel/syscalls/get_robust_list

90) Log Message:
The following hack fixes the "endian_switch01.c:115: warning: ‘main’ takes only zero or two arguments" warning. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/syscalls/switch/endian_switch01.c

91) Log Message:
Compilation problem with latest cvs: epoll test. Hello. I had a problem when compiling today's version with Ubuntu. The following patch fixed the issue (I guess it is a bashism). Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/syscalls/epoll/Makefile

92) Log Message:
Add mips64 support to resvmsg01 and sendmsg01 tests. Two rivial patches to add yet another 64-bit architecture. Tested on mips64 Octeon, Linux 2.6.27. Signed-off by : Vlad Malov vlad.malov@caviumnetworks.com.

Modified File(s):
ltp/testcases/kernel/syscalls/recvmsg/recvmsg01.c
ltp/testcases/kernel/syscalls/sendmsg/sendmsg01.c

93) Log Message:
Shmem_test_06: Let System Choose Suitable Addresses at Which to Attach the Segments. Shmem_test_06 still fail occasionally because it tries to attach segments to fixed addresses. It is still possible that one of those addresses has been used due to address space randomization or whatever reason. This is because the chosen address starting from 80000000 has already been used. This patch fixes the problem by letting system choose suitable addresses at which to attach the segments, and still satisfy the purpose of the test - simultaneous attachment of more than ten shared memory regions to a process. Using segment registers 0x3 to 0xC and 0xE. Now, the test works fine. Tested successfully on i386 and s390x machines. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_06.c

94) Log Message:
This patch fixes a bash specific comparison in checkforlibcap.sh script. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh

95) Log Message:
Fix segfault of "pan" on signal action. pan segfaults when receiving various signal registered by sigaction. Valgrind reports various uninitalied bytes of the sigaction struct: Initializing the sigaction struct as empty avoids a segfault of "pan". Signed-off-by: Daniel Gollub <dgollub@suse.de>. Acked-by: Nate Straz <nstraz@redhat.com>.

Modified File(s):
ltp/pan/pan.c

96) Log Message:
Fix the shared memory getting and removing in madvise03. <Bug 1>: In madvise03 case, it would apply a large size shared memory. But in some system, it was greater than the shmmax. So it would be failed. <Bug 2>: It would not remove the shared memory when it exited. Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/madvise/madvise03.c

97) Log Message: Fix the exit value in inotify cases on RHEL4.7. The RHEL4.7 (kernel-2.6.9-78.EL) does not support inotify system calls. So it should send out an information and return 0. In addition, tha patch also fixed a compile warning: Signed-off-by: Jin Bing Guo <guojb@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

98) Log Message:
The attached patch fixes some errors when running with Ubuntu due to some bash specific syntax. It also has some minor cosmetic and indentation changes. CAVEATS:
1- The comparisons failed because the script was generating empty files and the comparisons in line 181 failed. However the test proceeded as if the comparisons were successful. There is still room for improvement.
2- I had to change Ubuntu default configuration (enable cron log file and rename it from cron.log to cron) for the test to succeed.
Signed-Off-By: Elder Costa <elder.costa@terra.com.br>

Modified File(s):
ltp/testcases/commands/cron/cron_tests.sh

99) Log Message:
Fix Cron Test Fails to Compare. This patch fixes a comparison failure spotted by Elder Costa because the script was generating empty files. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/commands/cron/cron_tests.sh

100) Log Message:
At_allow01 and at_deny01 test cases always fail, because the result code handing is incorrect. This patch fixes it, and also tidy up code a little bit. In addition, looks like there is a bug for at utility with a non-login shell, so I suppose it does not hurt to work around this particular bug by using a login shell. Tested successfully on a x86-64 and s390x machines. Signed-off-by: CAI Qian <caiqian@cclom.cn>.

Modified File(s):
ltp/testcases/commands/at/at_allow01
ltp/testcases/commands/at/at_deny01

101) Log Message:
I hope the numa infrastructure will handle stuff non-numa systems. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp

102) Log Message:
Integrate hugetlb tests into runltp. Also modify the way hugemmap02 is run. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp
ltp/runtest/hugetlb

103) Log Message:
The following patch Integrates the remaining MTEST06 into runltp. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/mm
ltp/testcases/kernel/mem/mtest06/mmap2.c
ltp/testcases/kernel/mem/mtest06/mmap3.c

104) Log Message:
The following patch Integrates the remaining MMAPSTRESS into runltp. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/mm
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c
ltp/testcases/kernel/mem/mmapstress/mmapstress09.c
ltp/testcases/kernel/mem/mmapstress/mmapstress10.c

105) Log Message:
Following warnings are generated when compiling mm_core_apis.c. Attached patch fixes them. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/mem/libmm/mm_core_apis.c

106) Log Message:
The following patch integrates build/install/run of mm_core_apis to runalltests.sh. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runalltests.sh

107) Log Message:
The following patch integrates running of aio tests to runalltests.sh. Signed-Off-By: Subrata Modak<subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runalltests.sh

108) Log Message:
This patch drops the redudant copies (in total three copies of fsx-linux.c from:
- testcases/kernel/io/ltp-aiodio/
- testcases/network/nfs/fsx-linux

The only copy of fsx-linux.c will stay in:
- testcases/kernel/fs/fsx-linux/fsx-linux.c

Attached patch adapt the TCbin= variable of the runtests file to the install target "$LTPROOT/testcases/bin" to find the (shared) build of fsx-linux. Signed-off-by: Daniel Gollub <dgollub@suse.de>. Acked-by: CAI Qian <caiqian@cclom.cn>.

Modified Files:
ltp/runtest/fsx
ltp/runtest/ltp-aiodio.part3
ltp/runtest/ltplite
ltp/runtest/nfs
ltp/runtest/stress.part1
ltp/testcases/kernel/io/ltp-aiodio/Makefile

Removed Files:
ltp/testcases/kernel/io/ltp-aiodio/fsx-linux.c
ltp/testcases/network/nfs/fsx-linux/fsx-linux.c

109) Log Message:
The following patch complements previous ones to fix/improve the behaviour of cron_tests.sh script. Some fixes inspired in CAI Qian's previous posts. 
Changes:
1- Added LANG= in the script executed by cron to avoid issues with internationalization.
2- Reordered some tests so that one checks if one of the variables TS_MIN is empty (in case there was some problem to create the file tst1_cron.out) 
3- Eliminated the \t\n from the output strings that caused the problem reported by Subrata
4- Fixed the order the expected x received values are printed out to the output log

This version fixes an error in the previous patch that prevented it from applying correctly and added minor cosmetic changes. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/commands/cron/cron_tests.sh

LTP-20080930

1) Log Message:
Fix build error for libclone.c. Signed-off-by: Veerendra Chandrappa <vechandr@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/libclone/libclone.h

2) Log Message:
Set executable flag for netpipe.sh without chmod.sh which just performs an santiy check if the user is root to run chmod 755, which doesn't require root priviliges. Signed-off-by: Daniel Gollub <dgollub@suse.de>. 

Modified File(s):
ltp/tools/netpipe-2.4/Makefile

3) Log Messsage:
sync_pipe_close() returns an uninitialized value when it is passed an already closed pipe. Signed-off-by: Roy Lee <roylee17@gmail.com>. 

Modified File(s):
ltp/lib/libtestsuite.c

4) Log Message:
I extended getegid testcase to test getegid16, too. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/getegid/Makefile
ltp/testcases/kernel/syscalls/getegid/getegid01.c

5) Log Message:
This can only be tested on a POWER6 machine.  A program to test it is attached. --Paul Mackerras.
Thanks for sharing the test case with LTP. I have ported it to bare minimum LTP requirement and ran it on various architectures and kernel versions to test out the behaviour of the test on these machines. Yamato, When you find time, kindly add more specific stuff that we have specially for the LTP syscall tests, things like running in a loop, running concurrently, etc. And here goes the Patch. Paul, you can propose more modification to this if you wish to:
Signed-off-by: Paul Mackerras <paulus@samba.org>,
Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/switch/Makefile
ltp/testcases/kernel/syscalls/switch/switch01.c

6) Log Message:
I have seen that in some of my systems, utimensat fails to build because of some definitions missing in system headers. Do, you think we can apply the following patch: Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>. 

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c

7) Log Message:
Looks OK as far as I can see, except that I wonder why you check for being root: since there is no restriction by the kernel on which processes can use this system call.  A process can't do anything to any other process using this system call, so there's no reason to restrict it. Also you might like to call it "endian_switch()" rather than just "switch()". Paul Mackerras <paulus@samba.org>.

Modified File(s):
ltp/testcases/kernel/syscalls/switch/switch01.c

8) Log Message:
The following two scripts cannot execute correctly on my box, which doesn’t equip gawk but awk (busybox). This patch makes them, as well as other scripts( see the patch), to not explicitly using gawk but awk. roylee@andestech.com. 

Modified File(s):
ltp/testcases/commands/cron/cron_allow01
ltp/testcases/commands/cron/cron_deny01
ltp/testcases/commands/cron/cron_neg_tests.sh
ltp/testcases/kernel/ipc/ipc_stress/cleanup
ltp/testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh
ltp/testcases/open_hpi_testsuite/clients/hpionIBMblade.c

9) Log Message:
This patch does the following:
1. These test cases failed with "open returned unexpected errno 2" because the child process falls through to execute redundant cleanup(),
2. Added code to use the tst_tmpdir()/tst_rmdir() APIs.
Signed-Off-By: <roylee@andestech.com>

Modified File(s):
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c

10) Log Message:
Remove redundant bits from the container test script. Keep the nicer/self-consistent info. Add proper dependencies on check_for_unshare rather than shoehorning it in as a MAKE command in *only* the 'all' target. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-by: Serge Hallyn <serue@us.ibm.com>,

Modified File(s):
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/container_test.sh

11) Log Message:
Make these rules a tiny bit more generic using the automatic $@ variable. This means anyone copying this line is less likely to make copy/paste errors. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-By: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/Makefile

12) Log Message:
When it comes to this program, why should we care what the arch is? Shouldn't the SYS_ and __NR numbers alone tell us if unshare() is relevant here? Also, suppose both SYS_unshare and __NR_unshare aren't defined and we're running on an i386 box. This means we'll trigger the block: 
        #elif __i386__
                int do_check(void) { return kernel_is_too_old(); }
Which is totally wrong. Fix these up by ignoring the arch and boiling it all down to a corrected check for the proper define(s). See sys/syscall.h for details on SYS_ vs. __NR_. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-by: Serge Hallyn <serue@us.ibm.com>,

Modified File(s):
ltp/testcases/kernel/containers/check_for_unshare.c

13) Log Message:
Now that we have proper dependencies on check_for_unshare we take explicit tests for unshare out of the top-level make file and distribute to each subdir Makefile as ifeq...endif sections which control which targets to build. While it doesn't avoid descending into subdirs it's easier to read and check the make code when most of the build rules don't have shell flow control. Even better if we could change the contents of SUBDIRS based on the results of running check_for_unshare. Also note the use of := and not =. info Make is our friend. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-by: Serge Hallyn <serue@us.ibm.com>, 

Modified File(s):
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/utsname/Makefile

14) Log Message:
Now that they are in it's best to drop the noltp junk leftover from the LTP port of the container tests. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-by: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/pidns/pidns01.c
ltp/testcases/kernel/containers/pidns/pidns02.c
ltp/testcases/kernel/containers/pidns/pidns03.c
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/sysvipc/shmnstest.c
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/utsname/utstest.c

15) Log Message:
Use non-recursive assignment. This means, for example, that:
SRCS := $(wildcard *.c)
will call the wildcard function, substitute the output, and assign it to SRCS. Recursive assignment (plain =) would use the output and continue performing substitutions until no further substitutions could be made. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>, Acked-by: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/utsname/Makefile

16) Log Message:
The operator for string unequivalent check is not '-ne' but '!='. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/ipv6/finger6/finger601

17) Log Message:
The state of finger service is not got correctly as an option for netstat is lacked. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/ipv6/finger6/finger601

18) Log Message:
Although ping6 doesn't have -R option, it is specified. It should be removed. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/ipv6/ping6/ping601

19) Log Message:
Fix the build error for some systax error. Also fix some warnings. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/switch/switch01.c

20) Log Message:
Part of these tests are pretty much enough to invoke an oom-killer. Let the test do the functional testing part, and, we can do stress testing with hackbench seperately. Si
gned-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/sched

21) Log Message:
Fix memory leak in time-schedule.

Modified File(s):
ltp/testcases/kernel/sched/tool/time-schedule.c

22) Log Message:
Fix memory leak in trace_sched.

Modified File(s):
ltp/testcases/kernel/sched/tool/trace_sched.c

23) Log Message:
Fix memory leak in message_queue_test_01.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_01.c

24) Log Message:
Fix memory leak in semaphore_test_02.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_02.c

25) Log Message:
I worked on 2 test cases for foogid16 system calls; and I will do 5 more. All these test cases have the same macro. So I'd like to introduce compat_gid.h; and put the macro to the file. Could you add compat_gid.h to testcases/kernel/syscalls/utils/ and apply patches for existing test cases? Here after I'd like to use the compat_gid.h in newly ported test cases. Signed-off-by: Masatake YAMATO <yamato@redhat.com>,

Modified Files:
ltp/testcases/kernel/syscalls/setgid/Makefile
ltp/testcases/kernel/syscalls/setgid/compat_16.h
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/setgroups/Makefile
ltp/testcases/kernel/syscalls/setgroups/compat_16.h
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c

Added Files:
ltp/testcases/kernel/syscalls/utils/compat_gid.h

26) Log Message:
Add $(CFLAGS). From: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/containers/Makefile

27) Log Message:
Paul <paulus@samba.org> wanted the name to be endian_switch. Michael Kerrisk <mtk.manpages@googlemail.com> seconded his suggestion. 

Modified File(s):
ltp/testcases/kernel/syscalls/switch/switch01.c

28) Log Message:
Don't warn that TCID, TST_TOTAL and TST_COUNT is not set when using tst_kvercmp. And. Check /proc/net/connector to see if process event connector is supported or not. Also merged some cleanups done by Matt Helsley. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/runltp
ltp/testcases/kernel/Makefile
ltp/testcases/kernel/connectors/Makefile
ltp/testcases/kernel/connectors/connector_test.sh
ltp/testcases/kernel/connectors/pec/run_pec_test
ltp/tools/apicmds/ltpapicmd.c

29) Log Message:
Fix memory leak in semaphore_test_03.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_03.c

30) Log Message:
I think TST_NEWER_64_SYSCALL is better than TST_NEWER_64 because newer_64.mk is local to testcases/kernel/syscalls. This rule is applicable to compat_16.mk. Signed-off-by: Roy Lee <roylee17@gmail.com>. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utils/compat_16.mk
ltp/testcases/kernel/syscalls/utils/newer_64.mk

31) Log Message:
Addition of signalfd() syscall test case(s) to LTP. Signed-Off-By: Masatake YAMATO <yamato@redhat.com>.

Added Files:
ltp/testcases/kernel/syscalls/signalfd/Makefile
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c
ltp/testcases/kernel/syscalls/utils/cond.mk

32) Log Message:
This patch removes outdated (or irrelevant) parts of the  existing documentation and updates its. Also incorporated are suggestions made by Darren.  Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/realtime/README
ltp/testcases/realtime/doc/HOWTO_ADD_TESTS

33) Log Message:
This patch fixes a few minor issues in run.sh
1. Adds list option to the usage() command.
2. Remove java from "all" tests to be run.
3. It fix the output of usage (./run.sh or ./run.sh -h)

Tested: Running "./run.sh -t func", "./run.sh -t all" , "./run.sh",  "./run.sh -h". Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/config.mk
ltp/testcases/realtime/run.sh

34) Log Message:
This patch ensures that the python scripts support utf encoding. Prior to the patch, the python scripts would exit with this error:
File "parse-testpi1.py", line 3
SyntaxError: Non-ASCII character '\xc2' in file parse-testpi1.py on line 3, but no encoding declared; see http://www.python.org/peps/pep-0263.html for details
This patch fixes it. Tested: Running all the python scripts. Signed-Off-By:Chirag <chirag@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/pi-tests/parse-testpi1.py
ltp/testcases/realtime/func/pi-tests/parse-testpi2.py
ltp/testcases/realtime/func/sched_football/parse-football.py
ltp/testcases/realtime/scripts/parser.py

35) Log Message:
This patch fixes the getcpu patch for parisc (and probably other platforms as well). The check for "__GLIBC__ >= 2 && __GLIBC_MINOR__ >= 6" is wrong. It breaks as soon as a glibc 3.0 would be published. Replace it with __GLIBC_PREREQ(2,6). Tested on parisc and i386. Signed-off-by: Helge Deller <deller@gmx.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

36) Log Message:
Garrett, thank you for input. I think my patch works as you wrote. My patch tries sys/signalfd.h then linux/signalfd.h. So I can say my patch tries "whatever's the newest standard"(glibc header file) then "deprecated version"(no glibc header but kernel header file). It is important point. Thank you. CROSS_CFLAGS should be considered when checking the existance of header file. I update the last patch. It does
  1. If sys/signalfd.h is not available, use syscall to invoke signalfd.
  2. CFLAGS is considered when checking the existance of signalfd.h.
  3. Checking the existance of signalfd.h in addition to checking sys/signalfd.h and linux/signalfd.h.     
Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/signalfd/Makefile
ltp/testcases/kernel/syscalls/signalfd/signalfd01.c
ltp/testcases/kernel/syscalls/utils/cond.mk

37) Log Message:
When I built and installed the latest LTP cases, some errors broke the install process. And the system didn't support "unshare". The patches modified these files. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>. Based on a cursory glance and memory of Matt's patches, this looks good. "Serge E. Hallyn" <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/utsname/Makefile

38) Log Message:
I got this failure because of the typo in the testcase.
# ./hugemmap01 -H/huge
hugemmap01    1  FAIL  :  open() on /huge/1602mmapfile Failed, errno=2 : No such file or directory

This failure needs to be /huge directory present inside the / directory. I don't think mkdir /huge is a good idea so i modified as : Signed-off By: Rishikesh K Rajak <risrajak@in.ibm.com>.

Modified File(s):
ltp/runtest/hugetlb

39) Log Message:
Here is some small correction in memory map stress testcases. Result before
applying patch:

# ./mmapstress01 -h
./mmapstress01: invalid option -- h
usage: ./mmapstress01 -p nprocs [-t minutes -f filesize -S sparseoffset -r -o -m -l -d]
mmapstress01    1  FAIL  :  Test failed

Result after applying patch:

# ./mmapstress01 -h
./mmapstress01: invalid option -- h
usage: ./mmapstress01 -p nprocs [-t minutes -f filesize -S sparseoffset -r -o -m -l -d]

Signed-off By: Rishikesh K Rajak <risrajak@in.ibm.com>

Modified File(s):
ltp/testcases/kernel/mem/mmapstress/mmapstress01.c

40) Log Message:
The Makefile in the mqueues- and semaphores directory of the open_posix_testsuite try incorrectly to overwrite the compiler and have no clue about the fact that there could be a cross compilation scenario, so it tries to search libs in /usr/lib. This results in the following command line:

make[2]: Entering directory `<somewhere>/ltp-full-20080831/testcases/open_posix_testsuite/stress/mqueues' 
gcc -Wall -O2 -g -I -L/usr/lib -lpthread -I../../include multi_send_rev_1.c -o multi_send_rev_1.test -lmqueue

which is obviously wrong for cross compilation. With this change the right compiler and the right libs from the toolchain are being used. Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>.

Modified File(s):
ltp/testcases/open_posix_testsuite/stress/mqueues/Makefile
ltp/testcases/open_posix_testsuite/stress/semaphores/Makefile


41) Log Message:
The Makefile in the mqueues directory of the open_posix_testsuite wants to link the mq_open testcase against libmqueue. POSIX.1-2001 states: 
"Link with -lrt".
So this is definitely wrong, and we do what the standard recommends. Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>.

Modified File(s):
ltp/testcases/open_posix_testsuite/stress/mqueues/Makefile

42) Log Message:
The semaphores tests of the open_posix_testsuite want to link again libposix1b, but I don't have any idea why it tries to do so. However, it results in:

gcc -Wall -O2 -g -I -L/usr/lib -I../../include multi_con_pro.c -o multi_con_pro.test -lposix1b -lpthread
/usr/bin/ld: cannot find -lposix1b

This patch removes the bogus library. Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>.

Modified File(s):
ltp/testcases/open_posix_testsuite/stress/semaphores/Makefile

43) Log Message:
To make POSIX namespace clear, glibc-2.8 requires people to define _GNU_SOURCE when they use Advanced Socket APIs. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/Makefile

44) Log Message:
The definitions, ICMP6_RR_PCOUSE_DECRVLTIME and ICMP6_RR_PCOUSE_DECRPLTIME are wrong. According to RFC3542, they should be ICMP6_RR_PCOUSE_FLAGS_DECRVLTIME, ICMP6_RR_PCOUSE_FLAGS_DECRPLTIME. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/asapi_03.c

45) Log Message:
"man 3 cmsg" says "Ancillary data should only be accessed using the CMSG macros and never directly." Indeed, when we handles cmsghdr mamber directly, this test falls into the infinite loop on a x86_64 environment. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/asapi_06.c

46) Log Message:
When we compile the test codes with -Wall option, lots of warning appear. It is better to remove them for the future debbuging. Signed-off-by: Mitsuru Chinen <mitch@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/lib6/asapi_04.c
ltp/testcases/network/lib6/asapi_05.c
ltp/testcases/network/lib6/asapi_06.c
ltp/testcases/network/lib6/asapi_07.c
ltp/testcases/network/lib6/getaddrinfo_01.c
ltp/testcases/network/lib6/in6_01.c
ltp/testcases/network/lib6/in6_02.c
ltp/testcases/network/lib6/runcc.c

47) Log Message:
Sorry, I took a mistake. Could you apply following patch? Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utils/cond.mk

48) Log Message:
Addition of getgid16() test cases. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/testcases/kernel/syscalls/getgid/Makefile
ltp/testcases/kernel/syscalls/getgid/getgid01.c
ltp/testcases/kernel/syscalls/getgid/getgid02.c
ltp/testcases/kernel/syscalls/getgid/getgid03.c

Added Files:
ltp/testcases/kernel/syscalls/getgid/compat_16.h

49) Log Message:
In testcases/kernel/ipc/ipc_stress/cleanup file,  it uses the command "ipcrm " to delete the ipc resources. But usage is deprecated and noneffective in some cases. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/cleanup

50) Log Message:
Segmentation fault error: When I ran runtest/math with runltp, the float cases worked well. But they would drop into segmentation fault when they were called directly in command line. The reason is to input "NULL" to strlen() which caused Segmentation fault. The patch also fixed a large number of  memory leaks in math/float cases.Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/misc/math/float/main.c
ltp/testcases/misc/math/float/thread_code.c

51) Log Message:
Fix memory leaks in mem02. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.  

Modified File(s):
ltp/testcases/kernel/mem/mem/mem02.c

52) Log Message:
Fix memory leaks in pipeio. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/ipc/pipeio/pipeio.c

53) Log Message:
Fix memory leaks in mallocstress. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/mallocstress.c

54) Log Message:
Fix the error in freeing memory on confstr01. In confstr01.c,  it's wrong that it reset the buffer contents to NULL before freeing the memory allocated. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/confstr/confstr01.c

55) Log Message:
Addition of Initial Set of Network Name Space test cases. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/README
ltp/testcases/kernel/containers/check_for_unshare.c
ltp/testcases/kernel/containers/container_test.sh
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/libclone/libclone.h

Added Files:
ltp/testcases/kernel/containers/libclone/libnetns.c
ltp/testcases/kernel/containers/netns/Makefile
ltp/testcases/kernel/containers/netns/ch_ftp.sh
ltp/testcases/kernel/containers/netns/check_netns_enabled.c
ltp/testcases/kernel/containers/netns/child.sh
ltp/testcases/kernel/containers/netns/child_1.sh
ltp/testcases/kernel/containers/netns/child_2.sh
ltp/testcases/kernel/containers/netns/child_propagate.sh
ltp/testcases/kernel/containers/netns/childipv6.sh
ltp/testcases/kernel/containers/netns/childns.sh
ltp/testcases/kernel/containers/netns/container_ftp.pl
ltp/testcases/kernel/containers/netns/crtchild.c
ltp/testcases/kernel/containers/netns/crtchild_delchild.c
ltp/testcases/kernel/containers/netns/delchild.sh
ltp/testcases/kernel/containers/netns/initialize.sh
ltp/testcases/kernel/containers/netns/par_chld_ftp.c
ltp/testcases/kernel/containers/netns/par_chld_ipv6.c
ltp/testcases/kernel/containers/netns/par_ftp.sh
ltp/testcases/kernel/containers/netns/parent.sh
ltp/testcases/kernel/containers/netns/parent_1.sh
ltp/testcases/kernel/containers/netns/parent_2.sh
ltp/testcases/kernel/containers/netns/parent_share.sh
ltp/testcases/kernel/containers/netns/parent_view.sh
ltp/testcases/kernel/containers/netns/parentns.sh
ltp/testcases/kernel/containers/netns/paripv6.sh
ltp/testcases/kernel/containers/netns/rename_net.sh
ltp/testcases/kernel/containers/netns/runnetnstest.sh
ltp/testcases/kernel/containers/netns/sysfsview.c
ltp/testcases/kernel/containers/netns/two_children_ns.c

56) Log Message:
The attached patch moves getgid02.c to getegid02.c. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/getegid/Makefile
ltp/testcases/kernel/syscalls/getegid/getegid01.c

Added Files:
ltp/testcases/kernel/syscalls/getegid/compat_16.h
ltp/testcases/kernel/syscalls/getegid/getegid02.c

Removed Files:
ltp/testcases/kernel/syscalls/getgid/getgid02.c

57) Log Message:
Added Default LTP run, Ballista & Open Posix Suite run to runalltests.sh. More such tests are to follow. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runalltests.sh

58) Log Message:
I am not sure why runtest/admin_tools was kept outside the perview of LTP default run. I found no issues in running it as normally as other LTP tests. Please let me know if some of you have some problem running it as default. Also included are some changes for running fs_acls tests. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runltp
ltp/testcases/kernel/fs/acls/Makefile
ltp/testcases/kernel/fs/acls/acl_test01

59) Log Message:
-t test-arguments       Where test-argument can be a space separated sequence of:
                        func            all functional tests will be run
                        stress          all stress tests will be run
                        perf            all perf tests will be run
                        all             all tests will be run
                        list            all available tests will be listed
                        clean           all logs deleted, make clean performed
                        test_name       only test_name subdir will be run (e.g: func/pi-tests)
-p profile              Use profile instead of default (see doc/AUTOMATED_RUN)
-h                      help
Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/run.sh

60) Log Message:
Daniel Gollub <dgollub@suse.de> wrote: With 2.6.27-rc* linux/dirent.h got removed Kbuild headers_install targe and dirent struct got removed. Instead use #include <dirent.h> instead of #include <linux/dirent.h>. Garrett Cooper <yanegomi@gmail.com> wrote: It appears that asm/page.h isn't packaged with kernel.org sources anymore as of 2.6.25, according to some folks on #fedora-devel. I was just wondering a) if that's the case, b) whether or not those affected test compiles have been identified and removed / modified? If both questions are true and no one has pointed out this issue before now, I've found all of the items which don't follow this behavior: According to the folks in #fedora-devel (airlied, jwb), we shouldn't be using asm/page.h directly, but instead should be accessing everything in page.h via sysconf(2), like so:
                PAGE_SIZE => sysconf(_SC_PAGE_SIZE)
This method is POSIX compatible as per: http://www.opengroup.org/onlinepubs/009695399/functions/sysconf.html.
Yes, it is. There are numerous test cases in LTP which use:
       struct dirent, 
by including /usr/include/dirent.h. The interesting part is, this guy (/usr/include/dirent.h) in turn includes /usr/include/bits/dirent.h, where the definition of struct resides. Following is the patch which solves this issue along with page.h header file removal from 2.6.25 onwards, reported by Garret earlier. Signed-of-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/io-throttle/iobw.c
ltp/testcases/kernel/module/create_module/create_module02.c
ltp/testcases/kernel/module/delete_module/delete_module02.c
ltp/testcases/kernel/module/query_module/query_module01.c
ltp/testcases/kernel/module/query_module/query_module02.c
ltp/testcases/kernel/module/query_module/query_module03.c
ltp/testcases/kernel/syscalls/getdents/getdents01.c
ltp/testcases/kernel/syscalls/getdents/getdents02.c
ltp/testcases/kernel/syscalls/getdents/getdents03.c
ltp/testcases/kernel/syscalls/getdents/getdents04.c
ltp/tools/top-LTP/proc/devname.c

61) Log Message:

Modified Files:
ltp/runtest/ltplite
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/ioctl/Makefile
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c
ltp/testcases/kernel/syscalls/ioctl/ioctl02.c

Added Files:
ltp/testcases/kernel/syscalls/ioctl/test_ioctl

62) Log Message:
This patch introduces new check_header defined in utils/cond.mk to Makefile for eventfd test cases. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/eventfd/Makefile

63) Log Message:
This patch introduces new check_header defined in utils/cond.mk to Makefile for inotify test cases. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/Makefile

64) Log Message:
Added runtest/syscalls entry for signalfd. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/runtest/syscalls

65) Log Message:
This patch introduces new check_header defined in utils/cond.mk to Makefile for modify_ldt test cases. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/modify_ldt/Makefile

66) Log Message:
Simplify genload Makefile. It turns out most of these options aren't needed to build stress. Signed-off-by: Nate Straz <nstraz@redhat.com>.

Modified File(s):
ltp/tools/genload/Makefile

67) Log Message:
In io_cancel01 , io_destroy01, io_getevents01, io_setup01, io_submit01, if the libaio-devel package didn't been installed on the system, some errors would be occured. To fix it, the each Makefile would be modified. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/io_cancel/Makefile
ltp/testcases/kernel/syscalls/io_destroy/Makefile
ltp/testcases/kernel/syscalls/io_getevents/Makefile
ltp/testcases/kernel/syscalls/io_setup/Makefile
ltp/testcases/kernel/syscalls/io_submit/Makefile

68) Log Message:
When the libcap-2.11 or newer didn't been installed on the sysytem, the filecaps testcase would return a message instead of an error. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/filecapstest.sh

69) Log Message:
On ppc64, the modify_ldt cases would not been compiled. So it should be return the message:"System doesn't support execution of the test" instead of an error message. In addition, the Fix_runtest_syscalls.patch also resolved the switch01 running error. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/modify_ldt/Makefile

Added Files:
ltp/testcases/kernel/syscalls/modify_ldt/run-modify_ldt01.sh
ltp/testcases/kernel/syscalls/modify_ldt/run-modify_ldt02.sh

70) Log Message:
IDCheck.sh fails to detect the group nobody does not exist and exits with 0 status. This patch fixes this behavior. I have added a small cosmetic change to indicate No is the default response to the question asked by the script. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/IDcheck.sh

71) Log Message:
The following patch is for script testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh. It fixes a test error (line 72) and a bash specific test extension. (lines 72 and 102) that fail to run under Ubuntu (and probably Debian) as /bin/sh points to dash instead of bash (as in Redhat/Fedora). This script would also benefit of a reformatting as it lacks indentation but I wanted to keep the patch simple and I am not familiar with script format style of LTP. Signed-Off-by: Elder Costa <evcosta@dixtal.com.br>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh

72) Log Message:
The following patch fixes testcases/kernel/syscalls/creat/creat08.c just like the previous one for open10.c. Signed-Off-By: Elder Costa <elder.costa@terra.com.br>.

Modified File(s):
ltp/testcases/kernel/syscalls/creat/creat08.c

73) Log Message:
The following patch is for testcases/kernel/syscalls/open/open10.c. Ubuntu (and I believe, Debian) does not have a nobody group and the program fails to run. I added some lines instead to test for "nogroup" instead which I believe is Debian's equivalent and must do what the program is intended to. Signed-Off-By: Elder Costa <evcosta@dixtal.com.br>.

Modified File(s):
ltp/testcases/kernel/syscalls/open/open10.c

74) Log Message:
Trivial patch to remove an unused local var. Signed-off-by: Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/verify_caps_exec.c

75) Log Message:
I needed the following patch in order for file capabilities to correctly install.  If there is a better way to do this, that's fine with me, but CC was undefined and this was the easiest way to get past this. Signed-off-by:  Serge Hallyn <serue@us.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh

LTP-20080831

1) Log Message:
Compile error message occured on ia64 box. You should get a gcc warning on x86: "PAGE_SIZE" redefined. We can avoid the warning:
#ifndef PAGE_SIZE
#define PAGE_SIZE getpagesize()
#endif
But normally upper-case macros means constants, but the above macro is not a constant. Shi Weihua <shiwh@cn.fujitsu.com> & Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/controllers/io-throttle/iobw.c

2) Log Message:
This  patch fixes the fs_inod script. On error-condition it was not setting up proper error values and used to throw up error. Also, it was referring to a non-existent function 'error()'. Now it returns 0 on Success or non-zero value on Failure. I have verified this script  on ReadWrite dir and ReadOnly-dir where the tests fail. Signed-Off-By
: Veerendra Chandrappa <vechandr@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/fs/fs_inod/fs_inod

3) Log Message:
Addition of setgid16 syscall tests. I've tried this task. Please put compat_16.h to testcases/kernel/syscalls/setgid. And apply following patch before rebuilding tests. In addition I removed one getgid() invocation in testcases/kernel/syscalls/setgid/setgid02.c because the returned value is not used anywhere in the program. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/setgid/Makefile
ltp/testcases/kernel/syscalls/setgid/setgid01.c
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c

Added Files:
ltp/testcases/kernel/syscalls/setgid/compat_16.h

4) Log Message:
As reported by Li Zefan, normally upper-case macros means constants, but the above macros are not constants: Use lower-case names instead. Signed-off-by: Andrea Righi <righi.andrea@gmail.com>. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/controllers/io-throttle/iobw.c

5) Log Message:
It is surely better to support the old blockio.bandwidth and the new blockio.bandwidth-max interface for now. So, just ignore the previous patch. Support both blockio.bandwidth and the new interface blockio.bandwidth-max, to set i/o limiting rules according to the new userspace->kernel interface (io-throttle v8). In perspective we would like to have also blockio.bandwidth-min and implement a mechanism to guarantee minimum performance levels as well. Signed-off-by: Andrea Righi <righi.andrea@gmail.com>.

Modified File(s):
ltp/testcases/kernel/controllers/io-throttle/run_io_throttle_test.sh

6) Log Message:
utimensat01 give a build error when __NR_utimensat is not set because test.h is not included. It also gives a link error because TCID is not defined. This patch fixes these issues. Signed-off-by: Martin Habets <errandir_news@mph.eclipse.co.uk>.

Modified File(s):
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c

7) Log Message:
Addition of ftruncate64 syscall test support. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s)
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/ftruncate/Makefile

8) Log Message:
Addition of truncate64 syscall test support. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/truncate/Makefile

9) Log Message:
Here is the RO Bind mount updated testcase. This script consists of 3 files.
test_robind.sh -  This is the basis testcase which setups the infrastructure for the ROBind mount
fs_ro_test     -  Which has the different tests to be executed.
Readme_ROBind  -  Explains the different testcases executed.

This testcase addresses the earlier comments and has been made more generic. Also will be adding few ioctl syscalls testcases to the fs_ro_test flatfile. As we can append more tests to the flat file fs_ro_test. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>. 

Added Files:
ltp/runtest/fs_readonly
ltp/testscripts/Readme_ROBind
ltp/testscripts/fs_ro_tests
ltp/testscripts/test_robind.sh

10) Log Message:
Added basic testcases for eventfd() syscall. Signed-off-by: Vijay Kumar <vijaykumar@bravegnu.org>.

Modified Files:
ltp/runtest/syscalls ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/s390x.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/stub-list
ltp/testcases/kernel/include/x86_64.in

Added Files:
ltp/testcases/kernel/syscalls/eventfd/Makefile
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c

11) Log Message:
Addition of get_robust_list() & set_robust_list() syscalls. Signed-Off-By: Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/get_robust_list/Makefile
ltp/testcases/kernel/syscalls/get_robust_list/get_robust_list01.c
ltp/testcases/kernel/syscalls/set_robust_list/Makefile
ltp/testcases/kernel/syscalls/set_robust_list/set_robust_list01.c

12) Log Message:
In hugemmap01, huge page size was defined as a macro-definition.
#define page_sz ((1UL) << 24) /* Huge page size */
However different architecture may has different huge page size in kernel. Such as :
    1. http://lxr.linux.no/linux/include/asm-i386/page.h#L122
   #define HPAGE_SHIFT     22
   #define HPAGE_SIZE      ((1UL) << HPAGE_SHIFT)       // the size is 4M

    2. http://lxr.linux.no/linux/include/asm-parisc/page.h#L160
   #define HPAGE_SHIFT             22      /* 4MB (is this fixed?) */
   #define HPAGE_SIZE              ((1UL) << HPAGE_SHIFT)

    3. PPC: 16M

So read the huge page size for the kernel parameters is reasonable. The solution is to get the huge page size from the /proc/meminfo. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap01.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c

13) Log Message:
Now this script returns proper exit code , in the event of failure/success. I have verified this. Signed-Off-By: Veerendra <veeren@linux.vnet.ibm.com>.

Modified File(s):
ltp/testscripts/test_robind.sh

14) Log Message:
In message_queue_test_05, it planned to allocate 100 message queues for stress testing. But if the system resource of message queue couldn't meet it, it would exit without deleting the allocated message queues. In addition, other test cases couldn't allocate a new message queue any more. This patch addresses this by:
1> Add a cleanup() to remove the created message queues at premature exit.
2> Change the default number of message queues from 100 to 10. Because the maxmum on RHEL/SLES/Ubuntu is 16.
Signed-Off-By: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/message_queue_test_05.c

15) Log Message:
gcov-kernel: updated patch for 2.6.16 to include CONSTRUCTORS for ppc

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.16-gcov.patch

16) Log Message:
When compiling hackbench.c , I got the warning message:
---------------
$ ./testcases/kernel/sched/cfs-scheduler$ make
cc -I../../../../include -Wall hackbench.c -L../../../../lib -lltp -lpthread -o hackbench
hackbench.c: In function ‘main’:
hackbench.c:350: warning: control reaches end of non-void function
--------------
That means the hackbench would return a random number. I tested it on some different versions of GCC and got the non-zero return value. This simple patch can avoid this problem. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/sched/cfs-scheduler/hackbench.c

17) Log Message:
gcov-kernel: updated 2.6.26 patch to exclude arch/x86/kernel from profiling

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.26-gcov.patch

18) Log Message:
gcov-kernel: updated 2.6.25 and 2.6.24 patch to exclude arch/x86/kernel from profiling

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.25-gcov.patch

19) Log Message:
gcov-kernel: forgot to update comment

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov.patch

20) Log Message:
lcov: integrated function coverage patch by Tom Zoernen + sorting function

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/Makefile
ltp/utils/analysis/lcov/lcovrc

21) Log Message:
lcov: updated rpm description + summary and version strings

Modified File(s):
ltp/utils/analysis/lcov/rpm/lcov.spec
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/Makefile

22) Log Message:
lcov: updated versioning mechanism + fixed some man page bugs

Modified File(s):
ltp/utils/analysis/lcov/man/gendesc.1
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/genpng.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/bin/updateversion.pl
ltp/utils/analysis/lcov/Makefile

23) Log Message:
lcov: fix function view page creation when --no-func is specified

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml

24) Log Message:
In semaphore_test_01 case, it wanted to create a semaphore and printed out the semaphore ID for comparison with the output of the 'ipcs -s' command. So it didn't remove the semaphore when exited. Since the resource of semaphore is limited. It's better to write a shell script to perform the comparison and remove the semaphore. I wrote the bash script "testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh", and patched the "Makefile" and "runtest/ipc" to run the script. Please clean the semaphore up post patching and before executing tests. Signed-Off-By: Jin Bing Guo <guojb@cn.ibm.com>.

Modified Files:
ltp/runtest/ipc
ltp/testcases/kernel/ipc/ipc_stress/Makefile
ltp/testcases/kernel/ipc/ipc_stress/semaphore_test_01.c

Added Files:
ltp/testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh

25) Log Message:
lcov: several changes
- update download link
- unify webpage links
- provide --sort and --function-coverage switch + documentation

Modified File(s):
ltp/utils/analysis/lcov/bin/gendesc
ltp/utils/analysis/lcov/bin/genhtml
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/genpng
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/rpm/lcov.spec
ltp/utils/analysis/lcov/man/genhtml.1

26) Log Message:
lcov: change sorting order to low-to-high coverage

Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml

27) Log Message:
Intial Addition of sync_file_range() syscall test to LTP. I have developed test cases for sync_file_range() system call which will do the basic sanity (error) checking for the system call.  These tests have to be run on 2.6.17 kernel and above. The test cases have been currently tested only on x86 and x86_64 architecture. Also,  I have hard coded the system call number in the test case for  review purposes and will be later on moving it to linux_syscall_numbers.h file in the LTP framework. The support for PowerPC was provided from 2.6.22 kernel onwards. I had not taken care of it in my previous patch. Now this is addressed. Signed-Off-By: "B. N. Poornima" <poornima@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/include/linux_syscall_numbers.h
ltp/testcases/kernel/syscalls/sync_file_range/Makefile
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c

28) Log Message:
Changed the way by which message_queue_test_02 should be run properly. Signed-Off-By: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/runtest/ipc

29) Log Message:
This is a patch from John, written a few months back.  I have fixed up a few cosmetic whitespace bits, and have refreshed it so it should apply cleanly to LTP today. Will Schmidt <will_schmidt@vnet.ibm.com>. 

Comments originally by John Stultz:

So I've been trying to go through and review our test cases to make sure we're getting sane data and the tests are really testing what we want. Looking at gtod_latency and gtod_infinite, I was always struck that gtod_infinite always came up with much larger latencies while gtod_latency usually seemed to miss them. Main issues:
1) gtod_latency was not running for long enough, I've upped the iterations by 10x to make sure we get more solid results.
2) gtod_latency was doing too much computation between gtod calls. This means it could miss latencies that occur while it was running. I reworked the data collection loop so the un-measured window is smaller.
3) gtod_infinite was accidentally measuring its own computation in its delay, inflating its values. I cut that logic out.
4) both gtod_latency and gtod_infinite were not running mlocked. this caused background SCHED_OTHER disk access to inject delays, making the results less reliable.
 
Those four issues have been fixed, and I also converted gtod_latency to use clock_gettime() just to be consistent and to give slightly better resolution.
Signed-off-by: John Stultz <johnstul@us.ibm.com>
Acked-by: Darren Hart <dvhltc@us.ibm.com>
Acked-by: Will Schmidt <will_schmidt@vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c

30) Log Message:
How about introducing TCID_DEFINE? I'm not sure puttint TCID_DEFINE macro to test.h. I'm not sure using a symbol as an argument for TCID_DEFINE macro is better than using a string. (I had strong lisp backgroud:-). If this acceptable, I'll update related documents and test cases I worked. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/include/test.h
ltp/testcases/kernel/syscalls/setgid/Makefile
ltp/testcases/kernel/syscalls/setgid/compat_16.h
ltp/testcases/kernel/syscalls/setgid/setgid01.c

31) Log Message:
I propose this new test setuid04 for the setuid syscall. The goal if this test is to check the fsuid is correctly handled by the setuid syscall. To do so, the test create a testfile as root with permission 0644, then do a setuid and try to open the file RDWR. This last open must fail since the process with new UID is not allowed to open the file on write. In a second step, the test does a fork to check the fsuid is correctly passed to a son and the son behaves correctly regarding files, i.e. it cannot open on write the test file. 
I propose this new test setfsuid04 for the setfsuid syscall. The goal if this test is to check the fsuid is correctly handled by the setfsuid syscall. To do so, the test creates a testfile as root with permission 0644, then do a setuid and try to open the file RDWR. This last open must fail since the process with new UID is not allowed to open the file on write. In a second step, the test does a fork to check the fsuid is correctly passed to a son and the son behaves correctly regarding files, i.e. it cannot open on write the test file. Finally, the test falls back to the initial UID and try to open the file on write. This open must succeed.
I propose this new test setreuid07 for the setreuid syscall. The goal if this test is to check the fsuid is correctly handled by the setreuid syscall. To do so, the test creates a testfile as root with permission 0644, then do a setreuid and try to open the file RDWR. This last open must fail since the process with new UID is not allowed to open the file on write. In a second step, the test does a fork to check the fsuid is correctly passed to a son and the son behaves correctly regarding files, i.e. it cannot open on write the test file. Finally, the test falls back to the initial UID and try to open the file on write. This open must succeed. 
I also propose this new test setresuid04 for the setresuid syscall. The goal if this test is to check the fsuid is correctly handled by the setresuid syscall. To do so, the test creates a testfile as root with permission 0644, then do a setresuid and try to open the file RDWR. This last open must fail since the process with new UID is not allowed to open the file on write. In a second step, the test does a fork to check the fsuid is correctly passed to a son and the son behaves correctly regarding files, i.e. it cannot open on write the test file. Finally, the test falls back to the initial UID and try to open the file on write. This open must succeed.
Signed-Off-By: Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>,
Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runtest/ltplite
ltp/runtest/stress.part3
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/setfsuid/setfsuid04.c
ltp/testcases/kernel/syscalls/setresuid/setresuid04.c
ltp/testcases/kernel/syscalls/setreuid/setreuid07.c
ltp/testcases/kernel/syscalls/setuid/setuid04.c

32) Log Message:
I was experimenting with using runltp along with disk stress (-D option).  It does not parse the arguments properly.  It only uses the last parameter in the comma separated list.  With this patch it properly parses the arguments to the -D option. Signed-off-by: Doug Chapman <doug.chapman@hp.com>.

Modified File(s):
ltp/runltp

33) Log Message:
I've done on the other test cases. In addition, I've cleaned up Makefiles related to _64 and _16 testcases as suggested by Garrett Cooper <yanegomi@gmail.com>. Signed-off-by: Masatake YAMATO <yamato@redhat.com>. 
Garret suggested:
You can avoid situations like the above by doing something like this in your Makefiles:
SRC                     := $(patsubst %.c,%,$(wildcard *.c))
MAKE_TARGETS := $(SRCS) $(addsuffix _16,$(SRCS))
all: $(MAKE_TARGETS)
%_16: %.c
%_16: CFLAGS += -DUSE_COMPAT16_SYSCALL=1 -DTST_USE_COMPAT16_SYSCALL=1

Modified File(s):
ltp/testcases/kernel/syscalls/fadvise/Makefile
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/testcases/kernel/syscalls/ftruncate/ftruncate01.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate02.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate03.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/sendfile/Makefile
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile03.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c
ltp/testcases/kernel/syscalls/setgid/Makefile
ltp/testcases/kernel/syscalls/setgid/setgid02.c
ltp/testcases/kernel/syscalls/setgid/setgid03.c
ltp/testcases/kernel/syscalls/truncate/Makefile
ltp/testcases/kernel/syscalls/truncate/truncate01.c
ltp/testcases/kernel/syscalls/truncate/truncate02.c
ltp/testcases/kernel/syscalls/truncate/truncate03.c
ltp/testcases/kernel/syscalls/truncate/truncate04.c

34) Log Message:
This patch adds eventfd counter overflow test cases. I have cleaned up this patch - separated the test cases into its own functions and fixed a few typos. Please ignore the previous patch, and use this cleaned up patch. After the patch is applied, a "make clean" and a "make" should result in a clean build. It works perfectly for me. Anyways I am providing an updated patch with the other linux_syscall_numbers.h removed. As noted in my previous mail, there are two instances of the generated file in the CVS repo now, "include/linux_syscall_numbers.h" and "testcases/kernel/include/linux_syscall_numbers.h". The first is supposed to be a link to the second, and both are generated during the build process, and should be removed. The new patch removes both the files. Signed-off-by: Vijay Kumar <vijaykumar@bravegnu.org>.

Modified Files:
ltp/testcases/kernel/include/Makefile
ltp/testcases/kernel/syscalls/eventfd/Makefile
ltp/testcases/kernel/syscalls/eventfd/eventfd01.c

Removed Files:
ltp/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/linux_syscall_numbers.h

35) Log Message:
Integrating build/install of ...security/seclvl (BSD Secure Levels LSM) to default LTP build environment. Was just browsing through and found that this piece of code is not built/installed by default. I did not find any issue to do so. So, just added up to the Makefile(s). I am however investigating the best possible way to run them. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/Makefile
ltp/testcases/kernel/security/seclvl/Makefile

36) Log Message:
I am attaching a patch fs.patch for fixing some testcases failing on arm. fs.patch:- For arm architecture some system calls has been removed like time, utime etc. Since fs testcases include time system call, it should be replaced with gettimeofday system call. It wouldn't effect other architectures and thus works for arm also. Also testcases like utime should be made architecture specific. sasa sasa <sasak.1983@gmail.com>.

Modified File(s):
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/fs/doio/growfiles.c
ltp/testcases/kernel/fs/doio/iogen.c
ltp/testcases/kernel/fs/doio/rwtest.sh

37) Log Message:
The LTP numa testcases were initially designed for libnuma API in version 1. Building latest LTP (intermediate 20080820) against latest version of libnuma (2.0.2) requires -DNUMA_VERSION1_COMPATIBILITY in the CFLAGS - to switch to to the compatibility interface of libnuma API version 1. There are no libnuma testcases for API version 2 in ltp yet. Currently -DNUMA_VERSION1_COMPATIBILITY will not help for the LTP numa testcase, since the compability interface is missing some interface from version 1: Fix for the VERSION1 compatibility interface got already send to linux-numa list. I hope the libnuma fix got accepted and attached can be applied to LTP soon to fix the build of the LTP numa testcases, when building against libnuma 2.0.2 or greater. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/numa/Makefile

38) Log Message:
Was just browsing through and found that this piece of code is not built/installed by default. I did not find any issue to do so. So, just added up to the Makefile(s). I am however investigating the best possible way to run them. Signed-Off-By: Subrata Modak <subrata@linux.vnet.ibm.com>. Heh, seclvl hasn't been in the kernel in quite some time.  Should it be dropped? BTW, Mike, I'd expect you to consider re-implementing some of seclvl using capability bounding sets. "Serge E. Hallyn" <serue@us.ibm.com>. I do not anticipate that anyone will ever try to get seclvl back into the kernel, so I vote that the test be dropped from LTP. Michael Halcrow <mhalcrow@us.ibm.com>.

Modified Files:
ltp/testcases/kernel/security/Makefile

Removed Files:
ltp/testcases/kernel/security/seclvl/Makefile
ltp/testcases/kernel/security/seclvl/README
ltp/testcases/kernel/security/seclvl/create_guid_file.c
ltp/testcases/kernel/security/seclvl/create_guid_node.c
ltp/testcases/kernel/security/seclvl/create_suid_file.c
ltp/testcases/kernel/security/seclvl/create_suid_node.c
ltp/testcases/kernel/security/seclvl/ioperm.c
ltp/testcases/kernel/security/seclvl/iopl.c
ltp/testcases/kernel/security/seclvl/verify_seclvl.sh

39) Log Message:
Addition of getcpu() syscall to LTP. I have fixed the problem noticed earlier. Hope it will be fine this time. More over I wanted to mention that I have dropped getcpu2.c as it was found to be less relevant for getcpu() testing. Andi had made some suggestions to improve the test, I am submitting this before making all those changes. If possible I will sit and work on Andi's suggestion. Signed-Off-By: Sharyathi Nagesh <sharyath@in.ibm.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/getcpu/Makefile
ltp/testcases/kernel/syscalls/getcpu/getcpu01.c

40) Log Message:
Build Error fix. I too had prepared the same patch, but there were some more issues on a different kernel. Hence, have put more checks in the newly attached patch. Subrata, I have tested it on ppc64 and x86_64 and is working fine. Please test and let me know. Signed-Off-By: "B. N. Poornima" <poornima@in.ibm.com>, Signed-Off-By: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/sync_file_range/sync_file_range01.c

41) Log Message:
inotify01 build error fix for x86_64. Signed-Off-By: Andrew Vagin <avagin@parallels.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

42) Log Message:
move_pages() failed to compile on the following machine. Subrata Modak <subrata@linux.vnet.ibm.com>. Jin Bing Guo <guojb@cn.ibm.com> wrote: I also met this problem on ppc machine with SLES 10.2. I checked the numactl package and found the problem was due to the unmatch of the version of numa. The numa_move_pages was supported from numactl-2.0.0. See the change log of it. Vijay Kumar <vijaykumar@bravegnu.org> wrote: Hi Subrata, as pointed out by Jin Bing Guo, only recent versions of libnuma have support for move_pages(). It is necessary to check if move_pages() support is available before compiling the test cases. Check if move_pages() support is available in libnuma. Signed-off-by: Vijay Kumar <vijaykumar@bravegnu.org>.

Modified File(s):
ltp/testcases/kernel/syscalls/move_pages/Makefile

43) Log Message:
I've rearranged Makefile for setgid test case. I've put _16 related macros to compat_16.mk file. The original Makefile includes it. So when I work on more _16 test cases, I just have to do the same. I'll do the same on _64. I choose utils as its directory name. Please put attached files compat_16.mk and newer_64.mk to ltp/testcases/kernel/syscalls/utils. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/testcases/kernel/syscalls/fadvise/Makefile
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/testcases/kernel/syscalls/sendfile/Makefile
ltp/testcases/kernel/syscalls/setgid/Makefile
ltp/testcases/kernel/syscalls/truncate/Makefile

Added Files:
ltp/testcases/kernel/syscalls/utils/compat_16.mk
ltp/testcases/kernel/syscalls/utils/newer_64.mk

44) Log Message:
The following patch adds two known issues seen on some versions of Kernels, and also modifies the copyright information. Signed-off-by: CAI Qian <caiqian@redhat.com>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

45) Log Message:
Conformance/interfaces/timer_getoverrun/2-2 has failed on tests with some distros running on ppc64 machines. As far as I could realize, it happens due to these machines are running kernel with timer frequency configured to 100 Hz, which represents a clock precision smaller than the defined INTERVALNSEC. This patch sets the interval equals to the clock precision (retrieved via function clock_getres()), in order to avoid to use a interval smaller than the resolution of the clock. However, with these changes, this testcase becomes very similar to the test 2-3. Is this a valid modification? If not, any thought what should be done in this case?. Signed-off-by: Edjunior Barbosa Machado <emachado@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/open_posix_testsuite/conformance/interfaces/timer_getoverrun/2-2.c

46) Log Message:
Find attached patchset which address some serious compiler warning fixes spotted by GCC4.1 (SLES10 SP2) and GCC4.3 (openSUSE Factory). Fix potential overflow in umount01.c, spotted by _FORTIFY_SOURCE=2. Unintended truncating of string length could cause potential overflow, which got spotted by GCC with _FORTIFY_SOURCE=2. Note the difference: malloc(strlen(fstype + 1)) != malloc(strlen(fstype) + 1). I guess this was not intended? Also valgrind detected this issue. Replaced wrong use of malloc/strncpy with simplestrdup(). Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/umount/umount01.c

47) Log Message:
Find attached patchset which address some serious compiler warning fixes spotted by GCC4.1 (SLES10 SP2) and GCC4.3 (openSUSE Factory). Fix warning about _is_ unused variable (note the difference between "may" and "is" unused!). Unintended mixup with *pwd and *path. *path never gets set.  
execve02.c: In function 'setup':
execve02.c:217: warning: 'path' is used uninitialized in this function
Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve02.c

48) Log Message:
Find attached patchset which address some serious compiler warning fixes spotted by GCC4.1 (SLES10 SP2) and GCC4.3 (openSUSE Factory). ftest08.c calls close() with uninitialized file descriptor variable. Fix warning about _is_ unused variable (note the difference between "may" and "is" unused!). Only child opens the file descriptor, once forked.
ftest08.c: In function 'runtest':
ftest08.c:192: warning: 'fd' is used uninitialized in this function
Valgrind spot this issue aswell:
==21058== Syscall param close(fd) contains uninitialised byte(s)
==21058==    at 0x4BD70A0: __close_nocancel (in /lib64/libc-2.4.so)
==21058==    by 0x401D0E: runtest (ftest08.c:192)
==21058==    by 0x401B10: main (ftest08.c:119)
Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/fs/ftest/ftest08.c

49) Log Message:
Find attached patchset which address some serious compiler warning fixes spotted by GCC4.1 (SLES10 SP2) and GCC4.3 (openSUSE Factory). ftest04.c calls close() with uninitialized file descriptor variable. Fix warning about _is_ unused variable (note the difference between "may" and "is" unused!). Only child opens the file descriptor, once forked.
ftest04.c: In function 'runtest':
ftest04.c:188: warning: 'fd' is used uninitialized in this function

Valgrind spot this issue as well:
==15263== Syscall param close(fd) contains uninitialised byte(s)
==15263==    at 0x4BD70A0: __close_nocancel (in /lib64/libc-2.4.so)
==15263==    by 0x401CD6: runtest (ftest04.c:188)
==15263==    by 0x401AD0: main (ftest04.c:111)
Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/testcases/kernel/fs/ftest/ftest04.c

50) Log Message:
When packaging LTP with rpmlinit, rpmlinit complains about several scripts which don't have Shebang on the head of the file. Some files didn't have a Shebang at all. Signed-off-by: Daniel Gollub <dgollub@suse.de>.

Modified File(s):
ltp/ltpmenu
ltp/testcases/commands/ade/file/file_test.sh
ltp/testcases/commands/cpio/cpio_tests.sh
ltp/testcases/commands/eject/eject-tests.sh
ltp/testcases/commands/fileutils/cp/cp_tests.sh
ltp/testcases/commands/fileutils/ln/ln_tests.sh
ltp/testcases/commands/fileutils/mkdir/mkdir_tests.sh
ltp/testcases/commands/fileutils/mv/mv_tests.sh
ltp/testcases/commands/gzip/gzip_tests.sh
ltp/testcases/commands/logrotate/logrotate_tests.sh
ltp/testcases/commands/mail/mail_tests.sh
ltp/testcases/commands/tar/tar_tests.sh
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
ltp/testcases/kernel/ipc/ipc_stress/run_semaphore_test_01.sh
ltp/testcases/kernel/numa/numa01.sh
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/network/dhcpd/dhcpd_tests.sh
ltp/testcases/network/iptables/iptables_tests.sh
ltp/testcases/network/traceroute/traceroute_tests.sh
ltp/testcases/network/xinetd/xinetd_tests.sh


51) Log Message:
I've extended setgroup test cases can test setgroups16 old system calls. To test, please put attached compat_16.h to ltp/testcases/kernel/syscalls/setgroups; and apply the patch. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/setgroups/Makefile
ltp/testcases/kernel/syscalls/setgroups/setgroups01.c
ltp/testcases/kernel/syscalls/setgroups/setgroups02.c
ltp/testcases/kernel/syscalls/setgroups/setgroups03.c
ltp/testcases/kernel/syscalls/setgroups/setgroups04.c

Added Files:
ltp/testcases/kernel/syscalls/setgroups/compat_16.h

52) Log Message:
In testcases/kernel/sched/tool/time-schedule, it used kill(0, SIGTERM) to terminate the all the processes in the group. However, the progress group leader might be different regarding the different call methods. In interactive call such as pan, it called time-schedule by exec() and setpgrp() as a child process. The time-schedule process would be the process group leader and all the child processes created by it had the same PGID. So the SIGTERM was sent to process group and the exit code got by pan was 0. In non-inactive call such as STAF/STAX, one shell script called the time-schedule directly. The shell script would be the process group leader. So the SIGTERM was also sent to the shell script and the exit code got by STAF/STAX was 143 (128+15). This patch can resolve this problem.
Signed-off-by: Lin Feng Shen <shenlinf@cn.ibm.com>,
Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/testcases/kernel/sched/tool/time-schedule.c

53) Log Message:
Sorry, I found one typo in my code. Please apply following patch. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/utils/newer_64.mk

54) Log Message:
I tried to run runltp with the arguments suggested in the script's help and I get the error:
./runltp: 783: arith: syntax error: "2,4,10240,1"
I have checked out the latest intermediate (August 20th) and noticed there was a change that fixed one of the sources of this error but still one remained. I am attaching the patch (to July stable version) which fixed the issue in my case. I am running Ubuntu 7.04 (Feisty) on a Core 2 Duo based machine. Also may I suggest you update the maintainers info in the script too? :) I hope this can be helpful. Signed-Off-By: "elder.costa" <elder.costa@terra.com.br>.

Modified File(s):
ltp/runltp

55) Log Message:
I didn't see the oom-killer in my test machines. But I found large memory leak of the Hackbench with valgrind tool. From that we can get that it will lose 73,800 bytes with running "hackbench 150 process 1000" once. This patch fixed the memory leak problem. 

Modified File(s):
ltp/testcases/kernel/sched/cfs-scheduler/hackbench.c

56) Log Message:
While the synchronization in the sched_football testcase under the realtime test suite is not erroneous, it can be enahnced and made more reliable by making use of pthread_barriers, like in other testcases. This patch adds the same. Testing done: Infinite iterations of the testcase run with this patch.
Signed-off-by: Ankita Garg <ankita@in.ibm.com>,
Acked-by: Vernon Mauery <vernux@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/sched_football/sched_football.c

57) Log Message:
We can add a check for the header in the Makefile, so that we don't break builds. I think test should report fail in this case if a version of kernel more then 2.6.13. The Patch is for the reason that we don't break builds. Signed-Off-By: Andrew Vagin <avagin@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/Makefile
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

58) Log Message:
On centos-5 2.6.18 kernel, I get a failure with shmat01. In the setup() function at the end:
/* some architectures (e.g. parisc) are strange, so better always align to *  * next SHMLBA address. */
       base_addr = (void *)( ((unsigned long)(base_addr) & ~(SHMLBA-1)) + SHMLBA );
This bumps up the address if it's already aligned. Signed-off-by: Bob Hepple <bhepple@promptu.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c

59) Log Message:
Reverting back CAI Qian´s patch applied on Wed Aug 27 10:24:19 2008 UTC, with following log: The following patch adds two known issues seen on some versions of Kernels, and also modifies the copyright information. Signed-off-by: CAI Qian <caiqian@redhat.com>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

60) Log Message:
Under Ubuntu (tested with both 7.04 and 8.04) IDCheck shows the message [: 100: 0: unexpected operator]. That happens because the variable EUID is not defined. I guess dash (Ubuntu's sh) is not as tolerant as Fedora's (which shows no message). Bellow a small patch for it. Signed-Off-By: Elder <elder.costa@terra.com.br>.

Modified File(s):
ltp/IDcheck.sh

LTP-20080731

1) Log Message:
I've tried LTP and found some wrong mode at creating file/dir in LTP source files. Here is a patch. Junjiro Okajima<hooanon05@yahoo.co.jp>.

Modified File(s):
ltp/lib/write_log.c
ltp/testcases/kernel/fs/dmapi/attr.c
ltp/testcases/kernel/fs/dmapi/config.c
ltp/testcases/kernel/fs/dmapi/disp.c
ltp/testcases/kernel/fs/dmapi/event_am.c
ltp/testcases/kernel/fs/dmapi/event_an.c
ltp/testcases/kernel/fs/dmapi/event_sd.c
ltp/testcases/kernel/fs/dmapi/event_sn.c
ltp/testcases/kernel/fs/dmapi/handle.c
ltp/testcases/kernel/fs/dmapi/hole.c
ltp/testcases/kernel/fs/dmapi/invis.c
ltp/testcases/kernel/fs/dmapi/mmap.c
ltp/testcases/kernel/fs/dmapi/mmapfile.c
ltp/testcases/kernel/fs/dmapi/mount.c
ltp/testcases/kernel/fs/dmapi/objref.c
ltp/testcases/kernel/fs/dmapi/pmr_post.c
ltp/testcases/kernel/fs/dmapi/pmr_pre.c
ltp/testcases/kernel/fs/dmapi/right.c
ltp/testcases/kernel/fs/dmapi/token.c
ltp/testcases/kernel/fs/fsstress/fsstress.c
ltp/testcases/kernel/fs/scsi/ltpfs/main.c
ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.c
ltp/testcases/kernel/io/aio/aio02/cases/aio_tio.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_03.c
ltp/testcases/kernel/syscalls/open/open08.c

2) Log Message:
Every once in a while, pselect01 fails with the following output:
FAIL  :  Sleep time was incorrect:5 != 6
This is because we expect our sleeps of slightly more than 5 seconds to last at most 5 seconds (if we're uninterrupted, integer truncation will mean this only comes up about 1% of the time).  To fix this, we should instead expect our sleeps to last between 5 and 6 seconds, as in the patch inlined below. Signed-off-by: Craig Meier <crmeier@ghs.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/pselect/pselect01.c

3) Log Message:
Fix a bug in the selinux testsuite makefile, pointed out by David Howells. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile

4) Log Message:
TEST_RETURN should not be inverted when logging. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c

5) Log Message:
gcov-kernel: refreshed 2.6.16 patch, adding CONFIG_MODVER compatbility

Modified File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.16-gcov.patch

6) Log Message:
Fixes the following issues:
The LTP selinux-testsuite does not work out of the box on Red Hat Enterprise Linux 4. The testscripts/test_selinux.sh script does not detect if refpolicy should be used or not. The LTP selinux-testsuite test policy uses the can_setcon macro which is not defined in global macros of Red Hat Enterprise Linux 4 selinux policy targeted sources. Some Makefile needs minor fixes and enhancements. Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/policy/Makefile
ltp/testcases/kernel/security/selinux-testsuite/policy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/tests/Makefile
ltp/testscripts/test_selinux.sh

7) Log Message:
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation. Allow the amount of memory to be used to be passed as a command-line argument. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/mem/mem/mem02.c

8) Log Message:
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation. It can be unsafe to call exit(3) from a signal handler. Call _exit(2) instead. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/mem/mtest06/mmap1.c

9) Log Message:
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation. Allow the number of pages to use for the test to be specified on the command-line. Fix a memory leak. Also, call _exit(2) from child processes which avoids the child calling the atexit functions that the pthread library setup. This fixes an issue where the pthread manager thread would begin exiting at the same time as a child thread. The child thread would run the atexit functions which cause it to wait for a signal to be sent from the thread manager. As the thread manager was trying to exit that signal would never be sent. Calling _exit(2) from the child avoids this whole mess. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/mem/mtest05/mmstress.c

10) Log Messsage:

Modified File(s):
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation.Don't place an upper limit on the amount of time a nanosleep(2) call should take. The nanosleep(2) call will suspend execution for _at least_ the specified time, no upper limit is guaranteed. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/syscalls/nanosleep/nanosleep01.c

11) Log Message:
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation.Allow the number of iterations to be specified on the command line. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/sched/nptl/nptl01.c

12) Log Message:
I've attached some patches that I created for LTP at work. Most of them simply add command-line options to specify the amount of memory/pages to use for tests. However, there's one fix that works around a bug in uClibc's pthread implementation. Check for SYS_getuid32 and SYS_getgid32, these are the versions provided by some architectures. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/syscalls/syscall/syscall01.c

13) Log Message:
There were some mistakes in my previous patch.
- wrong mode 0644 for mkdir().
- unnecessary to add 0644 for open() since the flag doesn't include O_CREAT (while it does no harm).
By this new patch, they are fixed. Junjiro Okajima <hooanon05@yahoo.co.jp>.

Modified File(s):
ltp/lib/write_log.c
ltp/testcases/ballista/ballista/templates/b_mq_attr.tpl
ltp/testcases/ballista/ballista/templates/b_mqd.tpl
ltp/testcases/ballista/ballista/templates/b_mqdSUN.tpl
ltp/testcases/ballista/ballista/templates/b_ptr_sem_t.tpl
ltp/testcases/kernel/fs/dmapi/attr.c
ltp/testcases/kernel/fs/dmapi/config.c
ltp/testcases/kernel/fs/dmapi/disp.c
ltp/testcases/kernel/fs/dmapi/dm_test.h
ltp/testcases/kernel/fs/dmapi/event_am.c
ltp/testcases/kernel/fs/dmapi/event_an.c
ltp/testcases/kernel/fs/dmapi/event_sd.c
ltp/testcases/kernel/fs/dmapi/event_sn.c
ltp/testcases/kernel/fs/dmapi/handle.c
ltp/testcases/kernel/fs/dmapi/hole.c
ltp/testcases/kernel/fs/dmapi/invis.c
ltp/testcases/kernel/fs/dmapi/mmap.c
ltp/testcases/kernel/fs/dmapi/mmapfile.c
ltp/testcases/kernel/fs/dmapi/mount.c
ltp/testcases/kernel/fs/dmapi/objref.c
ltp/testcases/kernel/fs/dmapi/pmr_post.c
ltp/testcases/kernel/fs/dmapi/pmr_pre.c
ltp/testcases/kernel/fs/dmapi/right.c
ltp/testcases/kernel/fs/dmapi/token.c
ltp/testcases/kernel/fs/fsstress/fsstress.c
ltp/testcases/kernel/fs/scsi/ltpfs/main.c
ltp/testcases/kernel/fs/scsi/ltpscsi/scsimain.c
ltp/testcases/kernel/io/aio/aio02/cases/aio_tio.c
ltp/testcases/kernel/syscalls/open/open08.c
ltp/testcases/open_hpi_testsuite/utils/uid_utils.c

14)Log Message:
This patch uses strcpy() instead of strcat(). strcat() should only be used when the 'dest' argument is NULL terminated. In this case, path_buffer is not initialised and so may not contain a NULL character. strcpy() will do the right thing and copy the string to the beginning of path_buffer. Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/testcases/kernel/syscalls/readlink/readlink04.c

15) Log Message:
It eliminates the potential for many false negatives.
1.  Use cap_compare to compare capability sets instead of comparing the far less reliable text representations.
2.  pI' tests were failing bc I started with empty pI. Fill pI before those tests.
3.  Check for libcap-2.11 or later (by checking for cap_compare()).
Signed-off-by: Serge Hallyn <serue@us.ibm.com>

Modified File(s):
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/kernel/security/filecaps/check_simple_capset.c
ltp/testcases/kernel/security/filecaps/filecapstest.sh
ltp/testcases/kernel/security/filecaps/verify_caps_exec.c

16) Log Messsage:
Porting of io_destroy(), io_getevents(), io_setup() & io_submit() syscall tests from Crackerjack to LTP, by Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/io_destroy/Makefile
ltp/testcases/kernel/syscalls/io_destroy/io_destroy01.c
ltp/testcases/kernel/syscalls/io_destroy/run-io_destroy.sh
ltp/testcases/kernel/syscalls/io_getevents/Makefile
ltp/testcases/kernel/syscalls/io_getevents/io_getevents01.c
ltp/testcases/kernel/syscalls/io_getevents/run-io_getevents.sh
ltp/testcases/kernel/syscalls/io_setup/Makefile
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_setup/run-io_setup.sh
ltp/testcases/kernel/syscalls/io_submit/Makefile
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c
ltp/testcases/kernel/syscalls/io_submit/run-io_submit.sh

17) Log Message:
According to the manpages io_submit() can return the value: EAGAIN Insufficient resources are available to queue any iocbs. We should handle this opportunely trying to re-submit the AIO request again. Maybe an even better approach could be to just sleep a bit before trying to re-submit the request. In any case this would resolve a never-ending loop in aio01.c, where io_getevents() can be continuously called without having issued any actual request if io_submit() failed with -EAGAIN. Signed-off-by: Andrea Righi <righi.andrea@gmail.com>.

Modified File(s):
ltp/testcases/kernel/io/aio/aio01/aio01.c
ltp/testcases/kernel/io/aio/aio02/cases/aio_tio.c

18) Log Message:
Error occured, when i tried to compile ltp on ia64 box. There is a patch to fix it. similar patch on i386/x86_64 has been applied. (http://marc.info/?l=ltp-list&m=121257587007213&w=2). Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/linux_syscall_numbers.h

19) Log Message:
Add the block device I/O bandwidth controller (io-throttle) testcase. See testcase documentation for design and implementation details. See also: http://lkml.org/lkml/2008/7/4/143. Signed-off-by: Andrea Righi <righi.andrea@gmail.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/test_controllers.sh

Added Files:
ltp/testcases/kernel/controllers/io-throttle/Makefile
ltp/testcases/kernel/controllers/io-throttle/README
ltp/testcases/kernel/controllers/io-throttle/io_throttle_testplan.txt
ltp/testcases/kernel/controllers/io-throttle/iobw.c
ltp/testcases/kernel/controllers/io-throttle/myfunctions.sh
ltp/testcases/kernel/controllers/io-throttle/run_io_throttle_test.sh

20) Log Message:
The attached patch fixes the following issue: The selinux-testsuite file sigiotask testcase (run as test_fileop_t) needs rw permission to terminals to proceed its execution, which is not allowed by the non refpolicies provided in the testsuite. Ramon de Carvalho Valle <rcvalle@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/policy/test_file.te

21) Log Message:
gcov-kernel: patches for 2.6.26

Added Files:
linux-2.6.26-gcov-arm-eabi.patch 
linux-2.6.26-gcov-arm-hack.patch
linux-2.6.26-gcov.patch

22) Log Message:
The following problem i found:
1, utimensat01.c still has not been compiled when check_for_utimensat_support return success.
2, utimensat01 works on only i386 arch.
Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>

Modified File(s):
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/x86_64.in
ltp/testcases/kernel/syscalls/utimensat/Makefile
ltp/testcases/kernel/syscalls/utimensat/check_for_utimensat_support.c
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c

23) Log Message:
Sorry, I took mistake in giving value to TST_* in io_setup01.c and io_submit01.c. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/io_setup/io_setup01.c
ltp/testcases/kernel/syscalls/io_submit/io_submit01.c

24) Log Message:
I found some typos. I cannot remember but maybe I introduced. Signed-off-by: Masatake YAMATO<yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c

25) Log Message:
I get compile error in hackbench. With the following patch, the compiler error is gone. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/sched/cfs-scheduler/hackbench.c

26) Log Message:
In fact, the case "hackbench02 hackbench 150 thread 1000" failed when i tested the latest ltp. the following error message occured: 
--------------------
Creating fdpair (error: Too many open files)
--------------------
The default open files is 1024 (ulimit -n), but hackbench does not close these all opened files in group() when thread mode (process_mode=0). I think we should to limit the num_groups's value. 20 is a suitable value, it works well on my ia64 and i386 machine. what do you think? Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified File(s):
ltp/runtest/sched

27) Log Message:
It replaces nested arithmetic operations following example from Open Group specifications, in order to avoid issues with different shells, like dash from Ubuntu Gutsy. Signed-off-by: Edjunior Barbosa Machado <emachado@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/generate.sh

28) Log Message:
When compiling powerpc binaries, gcc defaults to 32 bit. To do some tests I needed to have a 64 bit binary. Since I'm using realtime, I modified config.mk as below. My questions: is there any official way to turn LTP in 64bit? If not, what shall we do then? Should LTP default to 32 or native-arch bit? Shall we use something like: "if (uname -m) ..." or use a command line option? Any comment?
Gilles.

According to man gcc:
 -m64
     Generate code for a 32-bit or 64-bit environment.  The 32-bit environment sets int, long and pointer to 32 bits and generates code that runs on any i386 system.  The 64-bit environment sets int to 32 bits and long and pointer to 64 bits and generates code for AMD's x86-64 architecture. For darwin only the -m64 option turns off the -fno-pic and -mdynamic-no-pic options. This seems like the right thing to do to me.  Gilles, have you confirmed that this doesn't break things on the x86_64 platforms? No objection from me. 
--Darren

I've also run the involved tests on an x86_64 machine and it was OK. Gilles Carry <Gilles.Carry@bull.net>.

Modified File(s):
ltp/testcases/realtime/config.mk

29) Log Message:
First patch regroups TSC functions and macros definition into librttest. Second patch is to have an atomic reading of the 64-bit timebase register of powerpc64. This new function is only valid if -m64 is used when compiling the whole testcase suite with a powerpc64. Thirs patch is a fix to avoid spurious tsc_minus warning. These patches been tested on a ppc64 machine either with 32 or 64 bit binaries. (-m64).  The same TSC read (rdtscll) macros and tsc_minus where implemented in three different tests. This patch put all this into librttest.*. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Cc: Tim Chavez <tinytim@us.ibm.com>. Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/measurement/rdtsc-latency.c
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/lib/librttest.c

30) Log Messsage:
This macro reads atomically the 64-bit TSC register. Reading the 64-bit register using two 32-bit instructions sometimes causes wrapping when a clock update appears in between. A single 64-bit read fixes this. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Cc: Tim Chavez <tinytim@us.ibm.com>.  
I suppose the right thing to do in the long run would be to rename this function to something more generic: read_hw_clock() or something like that. But I think this patch performs the first step in getting it working on ppc64. Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/include/librttest.h

31) Log Message:
In tsc_minus, changed test (tsc_begin < tsc_end) by (tsc_begin <= tsc_end) since values can be equal as read operations are sometimes very close. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Cc: Tim Chavez <tinytim@us.ibm.com>. Acked-by: Darren Hart <dvhltc@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/lib/librttest.c

32) Log Message:
Update to OpenHPI 2.12.0 (see www.openhpi.org for more info)

Modified File(s):
ltp/testcases/open_hpi_testsuite/*

33) Log Message:
Addition of move_pages() syscall tests. The updated patch fixes the warning messages and removes the print_bitmask function (it's not used) which causes build errors on powerpc. Signed-off-by: Vijay Kumar B. <vijaykumar@bravegnu.org>.

Modified Files:
ltp/Makefile
ltp/runtest/numa
ltp/runtest/syscalls
ltp/testcases/kernel/numa/Makefile

Added Files:
ltp/testcases/kernel/syscalls/move_pages/Makefile
ltp/testcases/kernel/syscalls/move_pages/move_pages.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages01.c
ltp/testcases/kernel/syscalls/move_pages/move_pages02.c
ltp/testcases/kernel/syscalls/move_pages/move_pages03.c
ltp/testcases/kernel/syscalls/move_pages/move_pages03.mode.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages04.c
ltp/testcases/kernel/syscalls/move_pages/move_pages05.c
ltp/testcases/kernel/syscalls/move_pages/move_pages06.c
ltp/testcases/kernel/syscalls/move_pages/move_pages07.c
ltp/testcases/kernel/syscalls/move_pages/move_pages08.c
ltp/testcases/kernel/syscalls/move_pages/move_pages09.c
ltp/testcases/kernel/syscalls/move_pages/move_pages10.c
ltp/testcases/kernel/syscalls/move_pages/move_pages11.c
ltp/testcases/kernel/syscalls/move_pages/move_pages11.mode.sh
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.c
ltp/testcases/kernel/syscalls/move_pages/move_pages_support.h
ltp/tools/scripts/numa_test.sh

34) Log Message:
The new patch addresses the other error conditions. Like if its not able to create any dir/files in a ReadOnly dir. Also this patch returns the proper return code on success/failure . I have tested this script on ReadWrite dir and ReadOnly dir. Veerendra Chandrappa <vechandr@in.ibm.com>.

LTP-20080630

1) Log Message:
These tests were contributed by the timerfd() syscall developer Davide Libenzi <davidel@xmailserver.org>.

Modified Files:
ltp/runtest/syscalls
Added Files:
ltp/testcases/kernel/syscalls/timerfd/Makefile
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c

2) Log Message:
CPU and MEMORY HOTPLUG test cases picked up from http://devresources.linux-foundation.org/dev/hotplug/

Added Files:
ltp/testcases/kernel/hotplug/cpu_hotplug/COPYING
ltp/testcases/kernel/hotplug/cpu_hotplug/ChangeLog
ltp/testcases/kernel/hotplug/cpu_hotplug/README
ltp/testcases/kernel/hotplug/cpu_hotplug/runtests.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug01.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug02.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug03.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug04.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug05.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/hotplug06.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/doc/todo.txt
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug01.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug02.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug03.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug04.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.sar.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug06.top.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/functional/hotplug07.sh
ltp/testcases/kernel/hotplug/cpu_hotplug/include/hotplug.fns
ltp/testcases/kernel/hotplug/cpu_hotplug/include/testsuite.fns
ltp/testcases/kernel/hotplug/cpu_hotplug/tools/do_disk_write_loop
ltp/testcases/kernel/hotplug/cpu_hotplug/tools/do_kcompile_loop
ltp/testcases/kernel/hotplug/cpu_hotplug/tools/do_spin_loop
ltp/testcases/kernel/hotplug/cpu_hotplug/tools/report_proc_interrupts
ltp/testcases/kernel/hotplug/memory_hotplug/COPYING
ltp/testcases/kernel/hotplug/memory_hotplug/Makefile
ltp/testcases/kernel/hotplug/memory_hotplug/README
ltp/testcases/kernel/hotplug/memory_hotplug/TODO
ltp/testcases/kernel/hotplug/memory_hotplug/commands.c
ltp/testcases/kernel/hotplug/memory_hotplug/debug.h
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.c
ltp/testcases/kernel/hotplug/memory_hotplug/memtoy.h
ltp/testcases/kernel/hotplug/memory_hotplug/migrate_pages.c
ltp/testcases/kernel/hotplug/memory_hotplug/migrate_pages.h
ltp/testcases/kernel/hotplug/memory_hotplug/segment.c
ltp/testcases/kernel/hotplug/memory_hotplug/segment.h
ltp/testcases/kernel/hotplug/memory_hotplug/version.h
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1c
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1c8
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1f
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1l
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1la
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test1shm
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test2
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test2l
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test3
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test3-1m
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test3l
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test4
ltp/testcases/kernel/hotplug/memory_hotplug/Scripts/test4f
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-2shm-1m
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-1g
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-1g-interleaved
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-1g-touch
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-1p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-8p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-8p-nomig
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-anon-8p-touch
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-file-16m
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-file-16m-touch
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-file-1m
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-file-1m-touch
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-file-8p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-lazy-shm-8p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-2shm-1m
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-anon-1g
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-anon-1g-interleaved
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-anon-1p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-anon-8p
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-file-16m
ltp/testcases/kernel/hotplug/memory_hotplug/Xpm-tests/test-mpm-file-1m

3) Log Message:
This patch fix a concurrency issue in mremap04. The tmp directory the IPC key was build with was destroyed before we destroy the IPC ressource attached to the key. In case of concurency, the same inode id can be reused for another process tmp dir, leading to the generation of the same key. Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/mremap/mremap04.c

4) Log Message:
I spent some time looking at the sched_latency test trying to see why it took so long to start the thread.  The java version of the test takes a comparable amount of time to start the thread as it does for each period. The rt-test version was taking an order of magnitude longer.  After digging through the java documentation, I found that the RealtimeThread does not actually start executing until the RealtimeThread.waitForNextPeriod() fulfills the time specified in the PeriodicParameters parameter included in its constructor.  So all the tests are scheduled to run about 1 second after the threads are created.  This gives the system plenty of time to create the thread (a non-realtime code path), set the scheduling parameters and then sleep until the specified run time.  The start latency as measured by the test goes something like this: 

start_time = nanoTime() + 1000000000;
rt = new realtimeThread(sched_param, new \
        PeriodicParameters(start_time, ...), ..., run);

/* by the rtsj specification, this method will not run until start_time */
run() {
        now = nanoTime();
        start_latency = now - start_time;
        ...
}

The rt-tests version went something like this:

start_time = rt_gettime();
create_fifo_thread(periodic_thread, (void*)0, PRIO);

periodic_thread() {
        now = rt_gettime();
        start_latency = now - start;
        ...
}

As you can see, the start_latency is a very different measurement in these two cases.  In the first, it is basically the initial starting latency as measured by the remainder of the loops.  In the second, the execution path of creating the pthread is also counted in the latency.  While this might be an important number for us to keep low in our testing, this is not what the java test is measuring. This patch puts the rt-test version in line with the java version. I also think this is reasonable since the rt-wiki says that we should _NEVER_ create threads on the real-time stage. Signed-off-by: Vernon Mauery <vernux@us.ibm.com>. 

Modified File(s):
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/lib/librttest.c

5) Log Message:
The following patches fix execve05 for error reporting when execve() succeeds, and exit synchronization in loaded systems. The last two patches are minor cleanups. execve05 checks that execve() fails if a process has opened the file with write access. However, in case the test fails and execve() succeeds, the default binary (test3) has return code 0, which is interpreted as test success. We get output like that:

<output>
Hello World
</output>
with return code 0 (success)

instead of:

<output>
execve05    1  FAIL  :  Failures reported above
</output>
with return code matching FAIL.

This patch simply changes the success return code from 0 to 3, so that execve() success, and thus test failure, can be properly reported. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>.

Modified Files:
ltp/testcases/kernel/syscalls/execve/execve05.c

6) Log Message:
The following patches fix execve05 for error reporting when execve() succeeds, and exit synchronization in loaded systems. The last two patches are minor cleanups. In execve05, the first child must keep a file open at least until the second child tries to execve() this file. However the test achieves this with a sleep of 10s, which may fail on loaded systems. This patch replaces this (arbitrary) sleep with a pipe-based synchronization, where the parent notifies the first child once the second child has terminated. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>.

Modified Files:
ltp/testcases/kernel/syscalls/execve/execve05.c

7) Log Message:
The following patches fix execve05 for error reporting when execve() succeeds, and exit synchronization in loaded systems. The last two patches are minor cleanups. In a child, calling waitpid() to wait for the death of sibling child is simply non-sense. Moreover in execve05, the second child does not need such synchronization. Remove it. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>.

Modified Files:
ltp/testcases/kernel/syscalls/execve/execve05.c

8) Log Message:
The following patches fix execve05 for error reporting when execve() succeeds, and exit synchronization in loaded systems. The last two patches are minor cleanups. cleanup() is reserved for the main test process. In children, call exit() instead. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>. 

Modified Files:
ltp/testcases/kernel/syscalls/execve/execve05.c

9) Log Message:
This patch fix an issue in the sync_pipe implementation. The problem is the following : after the creation of a pipe we do not close any file descriptor until the end of a test. Let's imagine the following execution : 
- Process A calls sync_pipe_create
- Process A do a fork (creation of process B)
- Process A calls sync_pipe_wait
---> Process A blocks on sync_pipe_wait
- Process B starts
- Process B exits because of an early error.
In this case, process A never exits. Since it has not closed its write descriptor to the pipe, the pipe is not considered as broken, thus process A is not notified its son is dead. Thus it will wait forever. Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>.

Modified File(s):
ltp/lib/libtestsuite.c

10) Log Message:
This patch fixes a compilation warning due to the function "sync_pipe_close" which was not exported. Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>.

Modified File(s):
ltp/include/libtestsuite.h

11) Log Message:
After the patch from Roy moveing the libtestsuite code from /testcases/kernel/syscalls/lib to /lib, the code in the old directory has not been removed. Moreover, include PATH in some makefile was still pointing to this old directory. This patch remove libtestsuite code from the old directory and remove deprecated references to this old dir in some Makefiles. Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>.

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgrcv/Makefile
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/Makefile
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c
ltp/testcases/kernel/syscalls/ipc/semctl/Makefile
ltp/testcases/kernel/syscalls/ipc/semop/Makefile
ltp/testcases/kernel/syscalls/ipc/shmctl/Makefile

Removed Files:
ltp/testcases/kernel/syscalls/lib/Makefile
ltp/testcases/kernel/syscalls/lib/libtestsuite.c
ltp/testcases/kernel/syscalls/lib/libtestsuite.h

12) Log Message:
time-schedule01 failed, because it sent SIGTERM to itself before program exited, so the return value is not 0. This patch makes the main process ignore SIGTERM. Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/sched/tool/time-schedule.c

13) Log Message:
This patch fix the make file of fs_bin test case so that it can be cross-built. Roy Lee <roylee@andestech.com>.

Modified File(s):
ltp/testcases/kernel/fs/fs_bind/bin/Makefile

14) Log Message:
Add syscall numbers for timerfd syscalls under i386 and x86_64. Roy Lee <roylee@andestech.com>.

Modified File(s):
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/x86_64.in

15) Log Message:
Currently, timerfd01 test case blocks building process for architectures that haven’t prepared for it. This patch modify it to be more generic for all architectures. Roy Leee <roylee@andestech.com>.

Modified  File(s):
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c

16) Log Message:
It looks like the only thing that didn't apply was the function declaration. It builds (with a warning) and runs just fine. But here is a patch to fix the warning. Signed-off-by: Vernon Mauery <vernux@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/include/librttest.h

17) Log Message:
utimensat() syscall was introduced from linux-2.6.22 onwards. Michael wrote the initial testcases, and, the same is being contributed to LTP under GPLv2. I worked out a patch for this. Though this is not using LTP specific libraries at the moment. But the tests run well and tests 99 separate variations. Michael has written it through itś length and breadth. I generated the code coverage (9.2%) over 2.6.25-gcov kernel, which however was not built with <make allmodconfig> option. Please see it attached along with a draft man page of utimensat(), created by Michael. Let us know how do you feel about this test. We can then go ahead and add this to LTP. Signed-off-by Michael Kerrisk <mtk.manpages@googlemail.com>. Signed-off-by: Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/utimensat/Makefile
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

18) Log Message:
On ia64, __clone2() is used instead of clone(). Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/fs/fs_bind/bin/nsclone.c

19) Log Message:
I execute fork12 test and OMM killer begin send SIGKILL to its children and fork return success always. fork12 hang up in this case, so I create the patch (see attach), which check whether someone child killed and if it occur, return number of forked processes. Andrew Vagin <avagin@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/fork/fork12.c

20) Log Message:
This patch fixes the writetest.c  to return proper status on Failure/Success. At present the return code of the writest.c is 'zero' for both Success and Failure. As per norms non-zero value should be returned for error , so fixing this testcase. Signed off : Veerendra C <vechandr@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/io/writetest/writetest.c

21) Log Message:
mallocstress stresses the VMM and C library  by spawning N threads which malloc blocks of increasing size until malloc returns NULL. It occur because test doesn't wait for all thread started. already started threads begin allocate memory, so pthread_create can return ENOMEM. my patch added this synchronizing. I use semaphore, because it can wait-for-zero unlike pthread_mutex. sorry, forgot set permission in semget, new patch attached. Andrew Vagin <avagin@gmail.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/mallocstress.c

22) Log Message:
Reverting back the changes done to fcntl-lock tests in May 2008 release, as this would have canceled the operation Revision *1.1  *done on the /Mon Sep 11 20:40:52 2006 UTC/ by /mreed10 /which added "A patch that added new functionality into the NFSvf lock tests. 
-fixes bugs 
-adds the capability to stress a server with multiple clients"
So it is possible to get back to what 's in ltp-full-20080430 and add my fix: You can fix it by replacing in the locktests.c file
     buf=(char *)malloc(clnt*maxClients);
by
     buf=(char *)malloc(clnt*(maxClients+1));
Signed-off-by: Le Rouzic <aime.le-rouzic@bull.net>.

Modified File(s):
ltp/testcases/network/nfsv4/locks/Makefile
ltp/testcases/network/nfsv4/locks/locktests.c

Added Files:
ltp/testcases/network/nfsv4/locks/locktests.h

Removed Files:
ltp/testcases/network/nfsv4/locks/test


23) Log Message:
In the manpage for tst_res(3) in the April snapshot it says...
       tst_brk - Print result message and break remaining test cases
       tst_brkm  -  Print  result  message, including file contents, and break remaining test cases
... at the top of the page. The prototypes and the logic is backwards for the summaries. A patched manpage is provided. Garrett Cooper <yanegomi@gmail.com>.

Modified File(s):
ltp/doc/man3/tst_res.3

24) Log Message:
Force the catch_sighup to be volatile in order to overcome an issue due to the compiler optimization. In fact, compiling the test with -Os the catch_sighup variable is not set to 1 into the signal handler. At runtime, the  test remain in a loop. No problem compiling without Os or O2.
Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>,
Signed-off-by: Carmelo Amoroso <carmelo.amoroso@st.com>.

Modified File(s):
ltp/testcases/network/stress/ns-tools/ns-mcast_join.c

25) Log Message:
Fix a bug in the sigiotask test and enable the test_fdreceive policy to build against the latest refpolicy headers. Signed-off-by:  Stephen Smalley <sds@tycho.nsa.gov>.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_fdreceive.te
ltp/testcases/kernel/security/selinux-testsuite/tests/file/selinux_sigiotask.c

26) Log Message:
Included the statement:
	These tests are OSDL/LF and imported into LTP under GPLv2.

Modified File(s):
ltp/testcases/kernel/hotplug/cpu_hotplug/COPYING
ltp/testcases/kernel/hotplug/memory_hotplug/COPYING

27) Log Message:
This patch ensures that async_handler and async_handler_jk runs by default. Also the profile/default is updated to reflect the same. Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/profiles/default

Added Files:
ltp/testcases/realtime/func/async_handler/run_auto.sh

28) Log Message:
Looks like the else is missing since in both the cases where flag is set to one or not we get the test broken print. Signed-off-by: Max Stirling <vickyirobot@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c

29) Log Message:
we have some truble with mapping api functions (such as tst_exit) in bash (./tools/apicmds/ltpapicmd.c). Now this problem may be fixed if added "exit" after tst_exit, but it's temporary. We should redesign this system and describe it in documentation. Andrew Vaggin <avagin@parallels.com>.

Modified File(s):
ltp/testscripts/test_fs_bind.sh

30) Log Message:
signal_test_01 failed on ia64, the following message outputed:
---------------------------
ERROR [line: 146] sigaltstack failed: Cannot allocate memory
: Cannot allocate memory
signal_test_01: IPC Signals TestSuite program
---------------------------
And, i found the defined macro STACKSIZE is short on ia64. This patch fix it. Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/signal_test_01.c

31) Log Message:
signal_test_05 failed on ia64 and x86_64, the following message outputed:
---------------------------
ERROR [line: 145] child process exited abnormally
---------------------------
Some signals which are ignored in ignore_signals() are not ignored in child(). e.g., 32, 33. (SIGRTMIN is 34). So we should reuse ignore_signals()'s signal ignoring code in child(). Signed-off-by: Shi Weihua <shiwh@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/signal_test_05.c

32) Log Message:
Updating to include info about all other LTP man pages. Subrata Modak <subrata@linux.vnet.ibm.com>

Modified File(s):
ltp/README.ltp-devel

33) Log Message:
I've ported a testcase for gettid() from crackerjack to ltp. I've added a directory ltp/testcases/kernel/syscalls/gettid. Signed-off-by: Masatake YAMATO <yamato@redhat.com>

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/gettid/Makefile
ltp/testcases/kernel/syscalls/gettid/gettid01.c

34) Log Message:
I found wrong format string usage in ltp/testcases/kernel/syscalls/exit/exit02.c: returned value from strerror is not used. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/exit/exit02.c

35) Log Message:
This patch fix a concurrency issue in semctl06. The IPC keys used for this test could conflict with keys from another task. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>.

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/semctl/semctl06.c

36) Log Message:
The attached patch was necessary in order to get LTP to build for our embedded system at work. Without this patch testcases that use the my_getpwnam() library function suffer from redeclaration errors. Signed-off-by: Matt Fleming <mjf@gentoo.org>.

Modified File(s):
ltp/lib/Makefile

37) Log Message:
Addition of enhanced test plan by Cai Qian <qcai@redhat.com>.

Modified File(s):
ltp/testcases/kdump/doc/TEST_PLAN.txt

38) Log Message:
Fixed the way how to run the "tc" command on the remote machine. Otherwise, we always get the following message on the local side: The remote host does not have netem functionality. Signed-off-by: Giuseppe Cavallaro@st.com.

Modified File(s):
ltp/testcases/network/stress/ns-tools/check_netem

39) Log Message:
Running the UDP network stress tests on my SH4 target I have had to modify the following scripts: killall_udp_traffic and udp4-multi-diffip01. It deletes the address before setting it to avoid the following error: RTNETLINK answers: File exists; it implies that the test fails. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified File(s):
ltp/testcases/network/stress/udp/multi-diffip/udp4-multi-diffip01

40) Log Message:
This modifies the command sent to the remote host just to kill the ns-udpclient script. Indeed, it seems that the previous string always returns 1. Moreover, it adds a new check to verify if the return value is not empty. It could happen, for example, if the RSH returns sometime the following error: poll: protocol failure in circuit setup. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified File(s):
ltp/testcases/network/stress/ns-tools/killall_udp_traffic

41) Log Message:
Attached a new patch just to add the same fixes I provided you for icpm and tcp network stress as well. On SH4 STB with STLinux distribution we are able to run all the network stress tests without any failures. Due to configuration issues we do not run the multi-diffnic tests (because they require plural Network cards for host). It modifies the command sent to the remote host to kill tcp/icmp clients. It also deletes the address before setting it to avoid the following error:  "RTNETLINK answers: File exists". This implies that the test fails. Signed-off-by: Giuseppe Cavallaro <peppe.cavallaro@st.com>.

Modified File(s):
ltp/testcases/network/stress/icmp/multi-diffip/icmp4-multi-diffip01
ltp/testcases/network/stress/ns-tools/killall_icmp_traffic
ltp/testcases/network/stress/ns-tools/killall_tcp_traffic
ltp/testcases/network/stress/tcp/multi-diffip/tcp4-multi-diffip01

42) Log Message:
Addition of Initial set of Process Event Connectors by Li Zefan. Process event connector is a netlink connector that reports process events to userspace, and currently we have 5 kinds of process events, i.e. fork, exit, exec, uid, gid. There are total 5 test cases to test its functionality. But the test is not run by default, because I don't find a way to decide whether the underlying kernel supports this feather or not. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Added File(s):
ltp/runtest/connectors
ltp/testcases/kernel/connectors/Makefile
ltp/testcases/kernel/connectors/pec/Makefile
ltp/testcases/kernel/connectors/pec/README
ltp/testcases/kernel/connectors/pec/event_generator.c
ltp/testcases/kernel/connectors/pec/pec_listener.c
ltp/testcases/kernel/connectors/pec/run_pec_test

43) Log Message:
Here it is. Based on my last patch.
- building failure on 2.6.16 should be fixed
- fix "make install" if kernel version < 2.6.15
- abort tests if kernel version < 2.6.15
Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/runtest/connectors
ltp/testcases/kernel/connectors/Makefile
ltp/testcases/kernel/connectors/pec/Makefile
ltp/testcases/kernel/connectors/pec/pec_listener.c

Added File(s):
ltp/testcases/kernel/connectors/connector_test.sh

44) Log Message:
This was ported from the Crackerjack Project by Masatake YAMATO <yamato@redhat.com>.

Modified Files:
ltp/runtest/syscalls

Added Files:
ltp/testcases/kernel/syscalls/io_cancel/Makefile
ltp/testcases/kernel/syscalls/io_cancel/io_cancel01.c
ltp/testcases/kernel/syscalls/io_cancel/run-io_cancel.sh

45) Log Message:
I'd like to use the mechanism you introduced in io_* testcases. So I've made 'io_cancel' string in the script and Makefile a variable to avoid mistake. I made the patch from testcases/kernel/syscalls/io_cancel/Makefile, not from ltp/testcases/kernel/syscalls/io_cancel/Makefile. Is this acceptable. CVS reports like testcases/kernel/syscalls/io_cancel/Makefile. Signed-off-by: Masatake YAMATO <yamato@redhat.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/io_cancel/Makefile
ltp/testcases/kernel/syscalls/io_cancel/run-io_cancel.sh

46) Log Message:
hackbench tests the Linux scheduler. Initial test was written by Rusty Russell <rusty@rustcorp.com.au>. Later modified by Pierre Peiffer <pierre.peiffer@bull.net>, Ingo Molnar <mingo@elte.hu>, Arjan van de Ven <arjan@infradead.org>, "Zhang, Yanmin" <yanmin_zhang@linux.intel.com>, Nathan Lynch <ntl@pobox.com> and others. Included in LTP by Subrata Modak<subrata@linux.vnet.ibm.com>, after Signed-off-by: Rusty Russell <rusty@rustcorp.com.au>.

Modified Files:
ltp/runtest/sched
ltp/testcases/kernel/sched/Makefile

Added Files:
ltp/testcases/kernel/sched/cfs-scheduler/Makefile
ltp/testcases/kernel/sched/cfs-scheduler/hackbench.c

47) Log Message:
I am proposing with the joined patch to allow the suite to be able the run the previous rpc tests (called now basic_tests). It needs to resolve some issues in the new "tirpc part" before allowing  the suite to launch it again. Le Rouzic <aime.le-rouzic@bull.net>.

Modified File(s):
ltp/doc/testcases/network.txt
ltp/runtest/rpc
ltp/runtest/stress.part3

48) Log Message:
Few Changes to ttype value.

Modified File(s):
ltp/testcases/kernel/syscalls/timerfd/timerfd01.c

49) Log Message:
Changes to fix Build, Install and run on non-supported architectures.

Added Files:
ltp/testcases/kernel/syscalls/utimensat/check_for_utimensat_support.c
Modified Files:
ltp/testcases/kernel/syscalls/utimensat/Makefile
ltp/testcases/kernel/syscalls/utimensat/utimensat01.c
ltp/testcases/kernel/syscalls/utimensat/utimensat_tests.sh

50) Log Message:
Fixing the run on supported kernels.

Modified File(s):
ltp/testscripts/test_fs_bind.sh

LTP-20080531

1) Log Message:
Following patch makes ballista test suite compile with gcc-4.3, without this it completely fails because of C++ cleanups introduced with gcc-4.3. By Caglar Onur <caglar@pardus.org.tr>

Modified File(s):
ltp/testcases/ballista/ballista/ballista.cpp
ltp/testcases/ballista/ballista/ballistaUtil.cpp
ltp/testcases/ballista/ballista/callGen.cpp
ltp/testcases/ballista/ballista/callGen_standAlone.cpp
ltp/testcases/ballista/ballista/create_code.pl
ltp/testcases/ballista/ballista/create_code_standAlone.pl
ltp/testcases/ballista/ballista/executeTestCase.cpp
ltp/testcases/ballista/ballista/executeTestCase.fresh
ltp/testcases/ballista/ballista/genCode.cpp
ltp/testcases/ballista/ballista/genCodeCreator.cpp
ltp/testcases/ballista/ballista/line.cpp
ltp/testcases/ballista/ballista/line.h
ltp/testcases/ballista/ballista/match.cpp
ltp/testcases/ballista/ballista/parseArguments.cpp
ltp/testcases/ballista/ballista/replacer.cpp
ltp/testcases/ballista/ballista/selfHost.cpp
ltp/testcases/ballista/ballista/serverCommunication.cpp
ltp/testcases/ballista/ballista/testCaseIterator.cpp
ltp/testcases/ballista/ballista/testCaseIterator.h
ltp/testcases/ballista/ballista/compile/bparser.cpp
ltp/testcases/ballista/ballista/templates/bTypes.cpp

2) Log Message:
The fixed address passed to mmap() should be aligned to the value of SHMLBA as defined in sys/shm.h. See Documentation/cachetlb.txt in the kernel for the explanation behind this. On most architectures this value is the page size, but not on all. Signed-off-by: Martin Habets <errandir_news@mph.eclipse.co.uk>

Modified File(s):
ltp/testcases/kernel/mem/shmt/shmt09.c
ltp/testcases/kernel/syscalls/mmap/mmap01.c

3) Log Message:
These test cases fail on the NFS environment due to NFS relates issue(s). Hence abondon these tests when NFS is detected. By, Sridhar Vinay <vinaysridhar@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/tee/tee01.c
ltp/testcases/kernel/syscalls/utime/utime01.c
ltp/testcases/kernel/syscalls/utime/utime02.c
ltp/testcases/kernel/syscalls/utime/utime03.c
ltp/testcases/network/nfs/nfs01/nfs01

4) Log Message:
Update to OpenHPI 2.10.1 (see www.openhpi.org for more info)

Modified Files:
ltp/testcases/open_hpi_testsuite/Makefile.am
ltp/testcases/open_hpi_testsuite/Makefile.in
ltp/testcases/open_hpi_testsuite/configure
ltp/testcases/open_hpi_testsuite/configure.ac
ltp/testcases/open_hpi_testsuite/openhpi.conf.example
ltp/testcases/open_hpi_testsuite/openhpi.spec.in
ltp/testcases/open_hpi_testsuite/clients/Makefile.in
ltp/testcases/open_hpi_testsuite/clients/hpiel.c
ltp/testcases/open_hpi_testsuite/clients/hpievents.c
ltp/testcases/open_hpi_testsuite/clients/hpipower.c
ltp/testcases/open_hpi_testsuite/cpp/Makefile.in
ltp/testcases/open_hpi_testsuite/cpp/t/Makefile.in
ltp/testcases/open_hpi_testsuite/docs/Makefile.am
ltp/testcases/open_hpi_testsuite/docs/Makefile.in
ltp/testcases/open_hpi_testsuite/docs/hld/Makefile.am
ltp/testcases/open_hpi_testsuite/docs/hld/Makefile.in
ltp/testcases/open_hpi_testsuite/docs/hld/appendix.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/authors.dtd
ltp/testcases/open_hpi_testsuite/docs/hld/bookinfo.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/introduction.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/legal.dtd
ltp/testcases/open_hpi_testsuite/docs/hld/obtaining.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/openhpi-manual.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/openhpi_highlevel.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/openhpi_structure.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/plugin_guide.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/plugin_usage.sgml
ltp/testcases/open_hpi_testsuite/docs/hld/revisions.dtd
ltp/testcases/open_hpi_testsuite/docs/hld/sahpi_breakdown.sgml
ltp/testcases/open_hpi_testsuite/docs/man/Makefile.in
ltp/testcases/open_hpi_testsuite/hpi_shell/Makefile.am
ltp/testcases/open_hpi_testsuite/hpi_shell/Makefile.in
ltp/testcases/open_hpi_testsuite/hpi_shell/commands.c
ltp/testcases/open_hpi_testsuite/hpi_shell/ctrl_inv.c
ltp/testcases/open_hpi_testsuite/hpi_shell/hpi_cmd.h
ltp/testcases/open_hpi_testsuite/hpi_shell/sensor.c
ltp/testcases/open_hpi_testsuite/hpi_shell/session.c
ltp/testcases/open_hpi_testsuite/hpi_ui_lib/Makefile.in
ltp/testcases/open_hpi_testsuite/hpi_ui_lib/service.c
ltp/testcases/open_hpi_testsuite/hpi_ui_lib/show.c
ltp/testcases/open_hpi_testsuite/marshal/Makefile.in
ltp/testcases/open_hpi_testsuite/marshal/connection.c
ltp/testcases/open_hpi_testsuite/marshal/marshal.c
ltp/testcases/open_hpi_testsuite/marshal/marshal_hpi_types.c
ltp/testcases/open_hpi_testsuite/marshal/marshal_hpi_types.h
ltp/testcases/open_hpi_testsuite/marshal/strmsock.cpp
ltp/testcases/open_hpi_testsuite/marshal/t/Makefile.am
ltp/testcases/open_hpi_testsuite/marshal/t/Makefile.in
ltp/testcases/open_hpi_testsuite/marshal/t/float_format.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_012.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_013.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_014.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_015.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_016.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_017.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_018.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_028.c
ltp/testcases/open_hpi_testsuite/openhpid/Makefile.am
ltp/testcases/open_hpi_testsuite/openhpid/Makefile.in
ltp/testcases/open_hpi_testsuite/openhpid/openhpiclient.cpp
ltp/testcases/open_hpi_testsuite/openhpid/openhpid.cpp
ltp/testcases/open_hpi_testsuite/plugins/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/ipmi/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/ipmi/t/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_discover.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_domain.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_log.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_mc_vendor.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_resource.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_sdr.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/ipmi_sensor_hotswap.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/thread.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/rtas/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/simulator/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/simulator/t/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/sysfs/Makefile.in
ltp/testcases/open_hpi_testsuite/plugins/watchdog/Makefile.in
ltp/testcases/open_hpi_testsuite/scripts/Makefile.in
ltp/testcases/open_hpi_testsuite/scripts/test/Makefile.in
ltp/testcases/open_hpi_testsuite/scripts/test/conformance_report.pl
ltp/testcases/open_hpi_testsuite/scripts/test/coverage_report.pl
ltp/testcases/open_hpi_testsuite/scripts/test/gcov2html.pl
ltp/testcases/open_hpi_testsuite/scripts/test/generate_index.pl
ltp/testcases/open_hpi_testsuite/scripts/test/gsum2html.pl
ltp/testcases/open_hpi_testsuite/scripts/test/testconformance.pl
ltp/testcases/open_hpi_testsuite/scripts/test/testcoverage.pl
ltp/testcases/open_hpi_testsuite/snmp/Makefile.in
ltp/testcases/open_hpi_testsuite/src/Makefile.in
ltp/testcases/open_hpi_testsuite/src/config.c
ltp/testcases/open_hpi_testsuite/src/event.c
ltp/testcases/open_hpi_testsuite/src/safhpi.c
ltp/testcases/open_hpi_testsuite/src/t/Makefile.in
ltp/testcases/open_hpi_testsuite/src/t/ohpi/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/sahpi_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/sahpi_enum_utils.h
ltp/testcases/open_hpi_testsuite/utils/sahpi_struct_utils.c
ltp/testcases/open_hpi_testsuite/utils/sahpi_struct_utils.h
ltp/testcases/open_hpi_testsuite/utils/uid_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/ann/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/el/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/epath/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/rpt/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/Makefile.in
ltp/testcases/open_hpi_testsuite/utils/t/uid/Makefile.in

Added Files:
ltp/testcases/open_hpi_testsuite/hpi_shell/dimi.c
ltp/testcases/open_hpi_testsuite/hpi_shell/fumi.c

Removed Files:
ltp/testcases/open_hpi_testsuite/openhpi.spec
ltp/testcases/open_hpi_testsuite/hpi_shell/hpi_cmd
ltp/testcases/open_hpi_testsuite/hpi_shell/openhpiclient.cpp
ltp/testcases/open_hpi_testsuite/hpi_shell/openhpiclient.h
ltp/testcases/open_hpi_testsuite/marshal/t/connection.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal.c
ltp/testcases/open_hpi_testsuite/marshal/t/marshal_hpi_types.c
ltp/testcases/open_hpi_testsuite/openhpid/alarm.c
ltp/testcases/open_hpi_testsuite/openhpid/config.c
ltp/testcases/open_hpi_testsuite/openhpid/domain.c
ltp/testcases/open_hpi_testsuite/openhpid/event.c
ltp/testcases/open_hpi_testsuite/openhpid/hotswap.c
ltp/testcases/open_hpi_testsuite/openhpid/init.c
ltp/testcases/open_hpi_testsuite/openhpid/lock.c
ltp/testcases/open_hpi_testsuite/openhpid/ohpi.c
ltp/testcases/open_hpi_testsuite/openhpid/openhpiclient.h
ltp/testcases/open_hpi_testsuite/openhpid/plugin.c
ltp/testcases/open_hpi_testsuite/openhpid/plugin_static.c
ltp/testcases/open_hpi_testsuite/openhpid/safhpi.c
ltp/testcases/open_hpi_testsuite/openhpid/session.c
ltp/testcases/open_hpi_testsuite/openhpid/threaded.c
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_addr.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_auth.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_cmd.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_con.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_con_lan.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_con_smi.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_log.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_msg.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_sensor_factors.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/ipmi_utils.cpp
ltp/testcases/open_hpi_testsuite/plugins/ipmidirect/t/thread.cpp
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/el2event.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/el2event.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_annunciator.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_control.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_discover.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_discover_bc.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_discover_rsa.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_event.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_hotswap.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_inventory.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_power.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_reset.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_resources.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_resources_rsa.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_sel.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_sensor.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_session.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_time.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_utils.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_watchdog.c
ltp/testcases/open_hpi_testsuite/plugins/snmp_bc/t/snmp_bc_xml2event.c
ltp/testcases/open_hpi_testsuite/src/plugin_static.c
ltp/testcases/open_hpi_testsuite/utils/t/ann/announcement_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/el/el_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/epath_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpi_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpi_event_encode.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpi_event_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpi_struct_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpi_time_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/sahpiatca_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/epath/uid_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/epath_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/rpt_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpi_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpi_event_encode.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpi_event_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpi_struct_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpi_time_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/sahpiatca_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/rpt/uid_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/epath_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpi_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpi_event_encode.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpi_event_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpi_struct_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpi_time_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/sahpiatca_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/sahpi/uid_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/epath_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpi_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpi_event_encode.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpi_event_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpi_struct_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpi_time_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/sahpiatca_enum_utils.c
ltp/testcases/open_hpi_testsuite/utils/t/uid/uid_utils.c

5) Log Message:
Added missing break in parse args switch/case. (-s arg). Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>

Modified Files:
ltp/testcases/realtime/lib/librttest.c

6) Log Message:
Modified periodic_cpu_load_single.c. Changed arg -c to -l (calculation per loop). In next patch, -c arg is to be used as pass/fail criteria globally for all tests. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>

Modified Files:
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c

7) Log Message:
Added -c arg into rt_init of librttest.c so all tests can use it. This arg sets the global variable (double) pass_criteria. librttest.h declares pass_criteria as external. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/lib/librttest.c

8) Log Message:
Modified prio-preempt.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c

9) Log Message:
Modified pthread_kill_latency.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c

10) Log Message:
Modified matrix_mult.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

11) Log Message:
Modified async_handler.c and async_handler_jk.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_jk.c

12) Log Message:
Modified pi_perf.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/pi_perf/pi_perf.c

13) Log Message:
Modified hrtimer-prio.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c

14) Log Message:
Modified tc-2.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/thread_clock/tc-2.c

15) Log Message:
Modified sched_latency.c to consider pass criteria (-c) arg. Signed-off-by: Gilles Carry <gilles.carry@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/sched_latency/sched_latency.c

16) Log Message:
It seems that hugeshmctl01 doesn't free some hugetlb pages when it fails. ps shows that there is still an instance of hugeshmctl01 left even if hugeshmctl01 is not running which may attach some hugetlb pages. The problem is due to the arbitrary usleep time in hugeshmctl01 which results in incorrect execution order. The intention of the sleep time is to ensure the children call shmat() and pause() before the parent checks shm status and calls stat_cleanup(). But there is no absolute assurance that this sleep always works. In the failure above, the last child process forked by the parent may not run and call shmat() immediately after it's created. When the parent checks shm status, it finds only 3 child attaching the shm instead of 4, so it reports the failure. And then it calls stat_cleanup() to send SIGUSR1 to all children, but since the last child hasn't called pause() yet, SIGUSR1 is handled before pause(). When the last child calls pause(), since there is no further signal to wake it up, it sleeps forever. patch to ensure children can receive and handle SIGUSR1 from parent in pause(). The patch is not to change the arbitrary usleep time since any time is arbitrary though a large time is more acceptable. The patch is to use sigprocmask() to block SIGUSR1 before children sleep for SIGUSR1 from parent, and then call sigsuspend() to unblock SIGUSR1 and sleep for SIGUSR1. By doing so, we may avoid the infinite sleep and keeping attached shm forever so that affect other hugetlb test. In parent process, aonther sigprocmask() is called before usleep(). This has the same effect of sleep more time. By, shenlinf <shenlinf@cn.ibm.com> 

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugeshmctl/hugeshmctl01.c

17) Log Message:
I am testing ltp-full-20080430. When I execute hugemmap04, hugemmap01 is shown in the output which makes the output confusing. patch to fix the bad name. By, shenlinf <shenlinf@cn.ibm.com>

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c

18) Log Message:
punt useless local prototype for fdopen() -- stdio.h already provides this, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/lib/tst_res.c

19) Log Message:
cleanup CFLAGS handling, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/lib/Makefile

20) Log Message:
tst_require_root(): unify root checking with this function, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/include/test.h

21) Log Message:
tst_require_root(): unify root checking with this function

Modified File(s):
ltp/lib/tst_res.c

22) Log Message:
convert to standard ltp functions, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/Makefile
ltp/testcases/kernel/fs/fs_perms/fs_perms.c

23) Log Message:
fix error in previous commit: compare result to expected result, not 0

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/fs_perms.c

24) Log Message:
normalize exit values as expected: 0 means PASS and non-0 means FAIL

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/fs_perms.c
ltp/testcases/kernel/fs/fs_perms/simpletest.sh
ltp/testcases/kernel/fs/fs_perms/testx.c

25) Log Message:
lcov: --norecursion becomes --no-recursion + added docs, by, Peter Oberparleiter <oberpapr@users.sourceforge.net>

Modified File(s):
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/lcov.1
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

26) Log Message:
Attached is a fixed patch to be applied over 1.8 in cvs. Previous patch mistook the return of mknod() for a file descriptor and after the first iteration, test was using the wrong (closed) file descriptor. This patch uses the correct file descriptor. Thanks Rishikesh for catching my error. By, Henry Yei <hyei@mvista.com>

Modified File(s):
ltp/testcases/kernel/syscalls/sockioctl/sockioctl01.c

27) Log Message:
The problem is because some of the realtime tests can't be compiled on older distros. We will have to fix this 'properly', taking into account the kernel and glibc versions, as well as the architecture. Until we do that, can we disable compiling realtime tests by default? Below is a patch that can do it. Signed-off-by: Sripathi Kodi <sripathik@in.ibm.com>

Modified File(s):
ltp/testcases/Makefile

28) Log Message:
Fix for some failures by Anoop V Chakkalakkal <anoop.vijayan@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/mem/mtest07/mallocstress.c

29) Log Message:
This patch adds a few tests for a variety of bind mounts. More than just shared subtrees are involved as plain --bind and plain --move are used. Read-only bind mounts are not covered by these tests however. Avantika Mathur originally wrote the tests. I've ported them to use LTP APIs and conventions. I've also modified Avantika's scripts to try and robustly cleanup after broken tests so that leftover mounts and failures at any point in a test are cleaned up thoroughly. I've made what efforts I can to follow the conventions I found in LTP FAQs and the source however there's alot here so I may have missed something. Shared bind mounts were introduced in 2.6.15. Because of this we need a tst_kvercmp command which can be invoked from a script. I've added this to ltpapicmd.c. This patch applies to the April release of LTP. I'll also be posting results for x86, x86_64, and ppc64 on a variety of kernels. In order to highlight the results contributed by this patch I've only run this portion of the patched LTP. Comments welcome. Signed-off-by: Matt Helsley <matthltc@us.ibm.com>.

Modified Files:
ltp/runltp
ltp/testcases/kernel/fs/Makefile
ltp/tools/apicmds/Makefile
ltp/tools/apicmds/ltpapicmd.c

Added Files:
ltp/runtest/fs_bind
ltp/testcases/kernel/fs/fs_bind/BUGS
ltp/testcases/kernel/fs/fs_bind/CHANGELOG
ltp/testcases/kernel/fs/fs_bind/Makefile
ltp/testcases/kernel/fs/fs_bind/README
ltp/testcases/kernel/fs/fs_bind/TODO
ltp/testcases/kernel/fs/fs_bind/bin/Makefile
ltp/testcases/kernel/fs/fs_bind/bin/check_prop
ltp/testcases/kernel/fs/fs_bind/bin/lockfile
ltp/testcases/kernel/fs/fs_bind/bin/makedir
ltp/testcases/kernel/fs/fs_bind/bin/nsclone.c
ltp/testcases/kernel/fs/fs_bind/bin/setup
ltp/testcases/kernel/fs/fs_bind/bin/setupnslock
ltp/testcases/kernel/fs/fs_bind/bin/smount.c
ltp/testcases/kernel/fs/fs_bind/bind/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/bind/test01
ltp/testcases/kernel/fs/fs_bind/bind/test02
ltp/testcases/kernel/fs/fs_bind/bind/test03
ltp/testcases/kernel/fs/fs_bind/bind/test04
ltp/testcases/kernel/fs/fs_bind/bind/test05
ltp/testcases/kernel/fs/fs_bind/bind/test06
ltp/testcases/kernel/fs/fs_bind/bind/test07
ltp/testcases/kernel/fs/fs_bind/bind/test07-2
ltp/testcases/kernel/fs/fs_bind/bind/test08
ltp/testcases/kernel/fs/fs_bind/bind/test09
ltp/testcases/kernel/fs/fs_bind/bind/test10
ltp/testcases/kernel/fs/fs_bind/bind/test11
ltp/testcases/kernel/fs/fs_bind/bind/test12
ltp/testcases/kernel/fs/fs_bind/bind/test13
ltp/testcases/kernel/fs/fs_bind/bind/test14
ltp/testcases/kernel/fs/fs_bind/bind/test15
ltp/testcases/kernel/fs/fs_bind/bind/test16
ltp/testcases/kernel/fs/fs_bind/bind/test17
ltp/testcases/kernel/fs/fs_bind/bind/test18
ltp/testcases/kernel/fs/fs_bind/bind/test19
ltp/testcases/kernel/fs/fs_bind/bind/test20
ltp/testcases/kernel/fs/fs_bind/bind/test21
ltp/testcases/kernel/fs/fs_bind/bind/test22
ltp/testcases/kernel/fs/fs_bind/bind/test23
ltp/testcases/kernel/fs/fs_bind/bind/test24
ltp/testcases/kernel/fs/fs_bind/cloneNS/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/cloneNS/child01
ltp/testcases/kernel/fs/fs_bind/cloneNS/child02
ltp/testcases/kernel/fs/fs_bind/cloneNS/child03
ltp/testcases/kernel/fs/fs_bind/cloneNS/child04
ltp/testcases/kernel/fs/fs_bind/cloneNS/child05
ltp/testcases/kernel/fs/fs_bind/cloneNS/child06
ltp/testcases/kernel/fs/fs_bind/cloneNS/child07
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent01
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent02
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent03
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent04
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent05
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent06
ltp/testcases/kernel/fs/fs_bind/cloneNS/parent07
ltp/testcases/kernel/fs/fs_bind/cloneNS/test01
ltp/testcases/kernel/fs/fs_bind/cloneNS/test02
ltp/testcases/kernel/fs/fs_bind/cloneNS/test03
ltp/testcases/kernel/fs/fs_bind/cloneNS/test04
ltp/testcases/kernel/fs/fs_bind/cloneNS/test05
ltp/testcases/kernel/fs/fs_bind/cloneNS/test06
ltp/testcases/kernel/fs/fs_bind/cloneNS/test07
ltp/testcases/kernel/fs/fs_bind/move/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/move/test01
ltp/testcases/kernel/fs/fs_bind/move/test02
ltp/testcases/kernel/fs/fs_bind/move/test03
ltp/testcases/kernel/fs/fs_bind/move/test04
ltp/testcases/kernel/fs/fs_bind/move/test05
ltp/testcases/kernel/fs/fs_bind/move/test06
ltp/testcases/kernel/fs/fs_bind/move/test07
ltp/testcases/kernel/fs/fs_bind/move/test08
ltp/testcases/kernel/fs/fs_bind/move/test09
ltp/testcases/kernel/fs/fs_bind/move/test10
ltp/testcases/kernel/fs/fs_bind/move/test11
ltp/testcases/kernel/fs/fs_bind/move/test12
ltp/testcases/kernel/fs/fs_bind/move/test13
ltp/testcases/kernel/fs/fs_bind/move/test14
ltp/testcases/kernel/fs/fs_bind/move/test15
ltp/testcases/kernel/fs/fs_bind/move/test16
ltp/testcases/kernel/fs/fs_bind/move/test17
ltp/testcases/kernel/fs/fs_bind/move/test18
ltp/testcases/kernel/fs/fs_bind/move/test19
ltp/testcases/kernel/fs/fs_bind/move/test20
ltp/testcases/kernel/fs/fs_bind/move/test21
ltp/testcases/kernel/fs/fs_bind/move/test22
ltp/testcases/kernel/fs/fs_bind/rbind/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/rbind/test01
ltp/testcases/kernel/fs/fs_bind/rbind/test02
ltp/testcases/kernel/fs/fs_bind/rbind/test03
ltp/testcases/kernel/fs/fs_bind/rbind/test04
ltp/testcases/kernel/fs/fs_bind/rbind/test05
ltp/testcases/kernel/fs/fs_bind/rbind/test06
ltp/testcases/kernel/fs/fs_bind/rbind/test07
ltp/testcases/kernel/fs/fs_bind/rbind/test07-2
ltp/testcases/kernel/fs/fs_bind/rbind/test08
ltp/testcases/kernel/fs/fs_bind/rbind/test09
ltp/testcases/kernel/fs/fs_bind/rbind/test10
ltp/testcases/kernel/fs/fs_bind/rbind/test11
ltp/testcases/kernel/fs/fs_bind/rbind/test12
ltp/testcases/kernel/fs/fs_bind/rbind/test13
ltp/testcases/kernel/fs/fs_bind/rbind/test14
ltp/testcases/kernel/fs/fs_bind/rbind/test15
ltp/testcases/kernel/fs/fs_bind/rbind/test16
ltp/testcases/kernel/fs/fs_bind/rbind/test17
ltp/testcases/kernel/fs/fs_bind/rbind/test18
ltp/testcases/kernel/fs/fs_bind/rbind/test19
ltp/testcases/kernel/fs/fs_bind/rbind/test20
ltp/testcases/kernel/fs/fs_bind/rbind/test21
ltp/testcases/kernel/fs/fs_bind/rbind/test22
ltp/testcases/kernel/fs/fs_bind/rbind/test23
ltp/testcases/kernel/fs/fs_bind/rbind/test24
ltp/testcases/kernel/fs/fs_bind/rbind/test25
ltp/testcases/kernel/fs/fs_bind/rbind/test26
ltp/testcases/kernel/fs/fs_bind/rbind/test27
ltp/testcases/kernel/fs/fs_bind/rbind/test28
ltp/testcases/kernel/fs/fs_bind/rbind/test29
ltp/testcases/kernel/fs/fs_bind/rbind/test30
ltp/testcases/kernel/fs/fs_bind/rbind/test31
ltp/testcases/kernel/fs/fs_bind/rbind/test32
ltp/testcases/kernel/fs/fs_bind/rbind/test33
ltp/testcases/kernel/fs/fs_bind/rbind/test34
ltp/testcases/kernel/fs/fs_bind/rbind/test35
ltp/testcases/kernel/fs/fs_bind/rbind/test36
ltp/testcases/kernel/fs/fs_bind/rbind/test37
ltp/testcases/kernel/fs/fs_bind/rbind/test38
ltp/testcases/kernel/fs/fs_bind/rbind/test39
ltp/testcases/kernel/fs/fs_bind/regression/OO_descriptions.txt
ltp/testcases/kernel/fs/fs_bind/regression/test01
ltp/testcases/kernel/fs/fs_bind/regression/test02
ltp/testcases/kernel/fs/fs_bind/regression/test03
ltp/testscripts/test_fs_bind.sh

30) Log Message:
The fixed address passed to mmap() should be aligned to the value of SHMLBA as defined in sys/shm.h (The same fix can be found in the mmap01 case earlier sent from Martin Habets ). By, Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/io/direct_io/diotest4.c

31) Log Message:
This patch modifies testcases to attach their shm segment to addresses chosen by ststem instead of arch-dependent ones. I looked into the history of these testcases, but couldn't find the reason why they specified arch-dependent addresses in the first place. If it has something to do with the page coloring issue, SHMLBA should be in some manners instead of defining arch-dependent addresses. Tested successfully on ia64, ppc64, x86_64, s390x & i386 by Subrata Modak <subrata@linux.vnet.ibm.com>, and by Martin Habets <errandir_news@mph.eclipse.co.uk> on sparc32. Signed-off-by: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/mem/shmt/shmt02.c
ltp/testcases/kernel/mem/shmt/shmt04.c
ltp/testcases/kernel/mem/shmt/shmt05.c
ltp/testcases/kernel/mem/shmt/shmt06.c
ltp/testcases/kernel/mem/shmt/shmt07.c
ltp/testcases/kernel/mem/shmt/shmt09.c

32) Log Message:
These patches will allow for the plotting of the max over time in discrete segments, rather than as a monotonically increasing value, while maintaining the original behavior by default. Cleanup some whitespace issues here. Signed-off-by: Darren Hart <dvhltc@us.ibm.com>. Acked-by: John Stultz <johnstul@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c

33) Log Message:
These patches will allow for the plotting of the max over time in discrete segments, rather than as a monotonically increasing value, while maintaining the original behavior by default. The existing test has an infinite window and report the new max each time it is increased.  The patch maintains the default behavior and adds a -w option, allowing the user to specify a window (iteration count) for which the max of that window is reported ever w iterations. Signed-off-by: Darren Hart <dvhltc@us.ibm.com>. Acked-by: John Stultz <johnstul@us.ibm.com>.

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c

34) Log Message:
I see Roy's patch was already checked in. In principle I agree with the patch, but a few things are wrong now and IMHO does not fulfill what it should test any longer. shm05.c -> see my (untested!!!) patch below. Some architectures can only map at specific offsets. Current version "sucessfully" fails, because e.g. hppa can't map at cp+4096. So, it's not failing because the memory regions overlap, although that was intended to be tested...shm06.c now does basically the same test as shm04.c ?!? Doesn't make sense... I would revert the patch for shm06, but maybe others think different???? Other patches seem ok, although I haven't looked too deep into them yet... Helge Deller <deller@gmx.de>.

Modified File(s):
ltp/testcases/kernel/mem/shmt/shmt05.c

35) Log Message:
Roy Lee <roylee17@gmail.com> wrote:
Your patch looks good to me. It does what I'm intended but failed to do; eliminating explicit arch-dependent code without breaking logics. How about merge the scenario of shm06 into shm04, and then eliminate shm06? Modify shm04 to attach the same segment _twice_ to the child's address space. In this case, the first returned address should be the same as where the parent attaches its segment to while the second returned address should be different.
Helge Deller <deller@gmx.de> wrote:
Yes, this is probably the best idea. Alternatively, just leave shm04 as-is, and do the twice-mapping you mentioned above in shm06. This way we'd keep two simple tests.
Roy Lee <roylee17@gmail.com> wrote back:
Here's the patch for the shmt06 according to Helge's recommandation, please help review it.

Modified File(s):
ltp/testcases/kernel/mem/shmt/shmt06.c

36) Log Message:
Adding default Log File generation support for LTP. By, Subrata Modak<subrata@linux.vnet.ibm.com>

Modified File(s):
ltp/runltp

37) Log Message:
Both of the above test cases has similar issue to shmt/mmap series. This patch removes the non-aligned addresses explicitly coded for different architectures by: 
1) probing an available address by a pair of shmat/shmdt calls, and, 
2) replaceing the addr with offset in the struct test_case_t.
By, Roy Lee <roylee17@gmail.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c

38) Log Message:
The "pan/pan" would failed in segmentation fault with a wrong option "-f command-file". Among the options, the "/tmp/test" does not exist. The solution is to add condition judgements before use the pointer. To execute pan/pan with option "-p" will occurs Segmentation fault. The reason is that it not appends the "-l" option to pan to open the "logfile" for writing log. Just add a condition judgement to fix it. Signed-off-by: Jin Bing Guo <guojb@cn.ibm.com>.

Modified File(s):
ltp/pan/pan.c

39) Log Message:
Make-sync_pipe-API-more-generic-and-update-related.patch.
Roy Lee <roylee17@gmail.com> noted:
Referring to the sync_pipes API, create_sync_pipes(), wait_son_startup(), notify_startup(), which is defined in the: testcases/kernel/syscalls/lib/libtestsuite.[ch], I found the new sync_pipes API very convenient to synchronize processes. However the naming might pose some semantic restrictions on their usages. Since it can be used for makingparent to wait child, and vice versa, perhaps a better naming should be used. For example: sync_pipes_create (), sync_pipes_wait (), sync_pipes_notify(), other names will be good as long as they don't assume the caller is child or parent. Furthermore, since it is also suitable for being used in common test cases, moving  it outside the syscalls's directory to a more common place might be a good idea.
Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com> noted:
I fully agree with your remarks. But if you want to make these functions more generic, it should be possible to call sync_pipe_wait / notify several times, which is not possible in the current code since I close file descriptors in these functions. A quite simple solution is to keep these file descriptors opened, and to add a function to close them or simply let these file descriptors being closed by libC or kernel at process end. Signed-off-by: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve05.c
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.c
ltp/testcases/kernel/syscalls/lib/libtestsuite.c
ltp/testcases/kernel/syscalls/lib/libtestsuite.h

40) Log Message:
Put-libtestsuite-to-a-more-common-place.patch
Roy Lee <roylee17@gmail.com> noted:
Referring to the sync_pipes API, create_sync_pipes(), wait_son_startup(), notify_startup(), which is defined in the: testcases/kernel/syscalls/lib/libtestsuite.[ch], I found the new sync_pipes API very convenient to synchronize processes. However the naming might pose some semantic restrictions on their usages. Since it can be used for makingparent to wait child, and vice versa, perhaps a better naming should be used. For example: sync_pipes_create (), sync_pipes_wait (), sync_pipes_notify(), other names will be good as long as they don't assume the caller is child or parent. Furthermore, since it is also suitable for being used in common test cases, moving  it outside the syscalls's directory to a more common place might be a good idea.
Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com> noted:
I fully agree with your remarks. But if you want to make these functions more generic, it should be possible to call sync_pipe_wait / notify several times, which is not possible in the current code since I close file descriptors in these functions. A quite simple solution is to keep these file descriptors opened, and to add a function to close them or simply let these file descriptors being closed by libC or kernel at process end. Signed-off-by: Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/Makefile
ltp/testcases/kernel/syscalls/chdir/Makefile
ltp/testcases/kernel/syscalls/creat/Makefile
ltp/testcases/kernel/syscalls/execve/Makefile
ltp/testcases/kernel/syscalls/fchdir/Makefile
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/testcases/kernel/syscalls/ipc/msgrcv/Makefile
ltp/testcases/kernel/syscalls/ipc/msgsnd/Makefile
ltp/testcases/kernel/syscalls/ipc/semctl/Makefile
ltp/testcases/kernel/syscalls/ipc/semop/Makefile
ltp/testcases/kernel/syscalls/ipc/shmctl/Makefile
ltp/testcases/kernel/syscalls/kill/Makefile
ltp/testcases/kernel/syscalls/mkdir/Makefile
ltp/testcases/kernel/syscalls/mremap/Makefile
ltp/testcases/kernel/syscalls/open/Makefile
ltp/testcases/kernel/syscalls/rename/Makefile
ltp/testcases/kernel/syscalls/rmdir/Makefile
ltp/testcases/kernel/syscalls/sched_setscheduler/Makefile
ltp/testcases/kernel/syscalls/vhangup/Makefile

Added File(s):
ltp/include/libtestsuite.h
ltp/lib/libtestsuite.c

41) Log Message:
The earlier patch broke parisc (which has really some strange requirements). Attached patch fixes it. If it's OK for you, please apply. By, Helge Deller <deller@gmx.de>.

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/shmat/shmat01.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c

42) Log Message:
Currently ltp-devel install man pages in /opt/ltp/share/man/; however, they should be installed in /usr/share/man/. By, George Kraft <gk4@us.ibm.com>.

Modified File(s):
ltp/ltp-devel.spec
ltp/doc/man1/Makefile
ltp/doc/man3/Makefile

43) Log Message:
Included all of /include and /lib and /doc in the ltp-devel RPMs. By George Kraft <gk4@us.ibm.com>.

Modified File(s):
ltp/README.ltp-devel
ltp/ltp-devel.spec
ltp/include/Makefile

44) Log Message:
Preparing for the next Stable release of ltp-devel Packages, which will have:
1) All files under ltp/include in the package,
2) Install ltp man pages in system man directory.

Modified File(s):
ltp/ltp-devel.spec

45) Log Message:
Profiled Tests:
Basically this was done to enhance the pass/fail criteria usage and allow the user to setup tests configurations according to specific needs. Imagine a test series that may validate a hardware for some latencies (case #1) while another series would validate other criteria (case #2). The same test used in situation #1 will not have the same configuration (arguments) in situation #2. Scripting has to be done for this to achieve. The profile system does this for you. You just have to configure. Not only pass/fail criteria can be set since the profile system simply runs command lines defined in profiles. So any argument can be choosen. ie: a profile can define criteria for tests with or without saving statistics (-s) or simulate jvm (-j). A profile comes as a single file so it is easy to copy from a test machine to another. With this patch, profiles can be used either for test global run (./run.sh) or for an individual directory (./run_auto.sh). For more information, read doc/AUTOMATED_RUN.
This patch is intentionnally global as splitting changes would not make sense.
This includes:
- changes of scripts for automated tests to feature profiles
- individual changes for tests using automation
- a default profile (to be used as an example)
- documentation writing/modifying.
Signed-off-by: Gilles Carry <gilles.carry@bull.net>,
Reviewed-by: Ankita Garg <ankita@in.ibm.com>.

Modified Files:
ltp/testcases/realtime/run.sh
ltp/testcases/realtime/doc/HOWTO_ADD_TESTS
ltp/testcases/realtime/func/gtod_latency/run_auto.sh
ltp/testcases/realtime/func/matrix_mult/run_auto.sh
ltp/testcases/realtime/func/periodic_cpu_load/run_auto.sh
ltp/testcases/realtime/func/pi-tests/run_auto.sh
ltp/testcases/realtime/func/pi_perf/run_auto.sh
ltp/testcases/realtime/func/prio-preempt/run_auto.sh
ltp/testcases/realtime/func/prio-wake/run_auto.sh
ltp/testcases/realtime/func/pthread_kill_latency/run_auto.sh
ltp/testcases/realtime/func/sched_football/run_auto.sh
ltp/testcases/realtime/func/sched_jitter/run_auto.sh
ltp/testcases/realtime/func/sched_latency/run_auto.sh
ltp/testcases/realtime/func/thread_clock/run_auto.sh
ltp/testcases/realtime/scripts/run_c_files.sh
ltp/testcases/realtime/scripts/setenv.sh
Added Files:
ltp/testcases/realtime/doc/AUTOMATED_RUN
ltp/testcases/realtime/doc/run_auto.sh.tpl
ltp/testcases/realtime/profiles/default
ltp/testcases/realtime/testcases/realtime/doc/AUTOMATED_RUN


46) Log Message:
This patch fix a concurrency issue in msgctl06. The tmp directory the IPC key was build with was destroyed before we destroy the IPC ressource attached to the key. In case of concurency, the same inode id can be reused for another process tmp dir, leading to the generation of the same key. Regards Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl06.c

47) Log Message:
I got failures on ptrace03 because the latest kernel allows init process to be traced. The commit is:
http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=00cd5c37afd5f431ac186dd131705048c0a11fdb,
See the discussion in LKML: http://marc.info/?t=120628018600001.
So we should not execute this test case if the kernel version is above 2.6.25.
Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ptrace/ptrace03.c

48) Log Message:
execve02 checks that execve() fails if the caller does not have executable permission on the file. However, in case the test fails and execve() succeeds, the default binary (test3) has return code 0, which is interpreted as test success. We get output like that: 
<output>
Hello World
</output>
with return code 0 (success)

instead of:

<output>
execve02    1  FAIL  :  Failures reported above
</output>
with return code matching FAIL.

This patch simply changes the success return code from 0 to 3, so that execve() success, and thus test failure, can be properly reported. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve02.c

49) Log Message:
Profiled tests - cleanup. I forgot some useless code in the scripts. These patches do the cleanup. Signed-off-by: Gilles Carry <gilles.carry@bull.net>.

Modified File(s):
ltp/testcases/realtime/scripts/run_c_files.sh
ltp/testcases/realtime/func/sched_latency/run_auto.sh

50) Log message:
I got the following failure:
adjtimex02    4  FAIL  :  Test Failed, adjtimex()returned 5, errno = 0 : Success
adjtimex02    5  FAIL  :  Test Failed, adjtimex()returned 5, errno = 0 : Success
This is because the latest kernel normalizes buf.offset value if it is outside the acceptable range. The commit is: http://git.kernel.org/?p=linux/kernel/git/torvalds/linux-2.6.git;a=commitdiff;h=eea83d896e318bda54be2d2770d2c5d6668d11db. So we should not execute this test case if the kernel version is above 2.6.25. Here is the test result after patching (linux 2.6.26-rc2):
adjtimex02    4  CONF  :  this kernel normalizes buf.offset value if it is outside the acceptable range.
adjtimex02    5  CONF  :  this kernel normalizes buf.offset value if it is outside the acceptable range.
Signed-off-by: Miao Xie <miaox@cn.fujitsu.com>

Modified File(s):
ltp/testcases/kernel/syscalls/adjtimex/adjtimex02.c

51) Log Message:
Manas K Nayak <maknayak@in.ibm.com> updated the fnctl lock tests from http://nfsv4.bullopensource.org/tools/tests/locktest.php. I have retained some info like the deploy_info, etc from the older release as well. The old tests were failing. After updates, the test passes.

Modified Files:
ltp/testcases/network/nfsv4/locks/Makefile
ltp/testcases/network/nfsv4/locks/locktests.c
Added Files:
ltp/testcases/network/nfsv4/locks/test
ltp/testcases/network/nfsv4/locks/deploy/locktests.tar.gz
Removed Files:
ltp/testcases/network/nfsv4/locks/locktests.h
ltp/testcases/network/nfsv4/locks/deploy/locktests-2.tar.gz

52) Log Message:
Restored back the Makefile content. Else, there will be build/clean/install failures. Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/network/nfsv4/locks/Makefile

53) Log Message:
Adding this part of default LTP run. Subrata Modak <subrata@linux.vnet.ibm.com>.

Modified Files:
ltp/runltp

Added Files:
ltp/runtest/fcntl-locktests

54) Log Message:
This patch adds a list for all known issues which are probably subtle to be fixed in kernel to the test, so the test could continue. Also, it will print out those expected failures as INFO or WARN to the test result. Signed-off-by: Cai Qian <qcai@redhat.com>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

55) Log Message:
This patch fixes the output of the test, so all fatal errors to cause the final failure of the test will be printed out as FAIL instead of INFO, and all verbose and debug output will be moved to STDERR instead of STDOUT for easy output processing. Signed-off-by: Cai Qian <qcai@redhat.com>.

Modified File(s):
ltp/testcases/kernel/fs/proc/proc01.c

56) Log Message:
This patch adds the failcnt check test for memory controller. In this test a task runs in a group with some memory limit and does total memory allocation greater than the limit of the group. The script checks the failcnt from memory.failcnt file under the controller. It reports pass if failcnt increases otherwise reports fail. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>. Acked-by: Dhaval Giani <dhaval@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/memctl/memctl_test01.c
ltp/testcases/kernel/controllers/memctl/run_memctl_test.sh

57) Log Message:
This patch adds the stat check test case for memory controller. In this test a task runs in a group with some memory limit and does some memory allocation. The script checks the memory usage field from two files under the controller, the memory.usage_in_bytes and memory.stat. It reports pass if the two values are same and fail if the two values differ. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>. Acked-by: Dhaval Giani <dhaval@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/memctl/memctl_test01.c
ltp/testcases/kernel/controllers/memctl/run_memctl_test.sh

58) Log Message:
This patch adds the documentation for memory controller. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/README
ltp/testcases/kernel/controllers/testplan.txt
Added Files:
ltp/testcases/kernel/controllers/memctl/README
ltp/testcases/kernel/controllers/memctl/memctl_testplan.txt

59) Log Message:
According to man sigpause :
 int sigpause(int sigmask);  /* BSD */
 int sigpause(int sig);      /* System V / Unix95 */
[...]
Linux Notes
       On Linux, this routine is a system call only on the Sparc (sparc64) architecture. Libc4 and libc5 only know about the BSD version. Glibc uses the BSD version if the _BSD_SOURCE feature test macro is defined and none of _POSIX_SOURCE, _POSIX_C_SOURCE, _XOPEN_SOURCE, _GNU_SOURCE,  or _SVID_SOURCE is defined.  The System V version is used if _XOPEN_SOURCE is defined. Since the _BSD_SOURCE_ is not defined for LTP testcases, rather they define _XOPEN_SOURCE_, the behaviour is System V, where they expect a signal number instead of signal mask. Signed-off-by: Suzuki KP <suzuki@in.ibm.com>.

Modified File(s):
ltp/testcases/kernel/ipc/ipc_stress/signal_test_01.c

60) Log Message:
Ankita Proposed that:
We have been seeing failures in the prio-wake testcase for a while now. Digged closer into the testcase to find if there was an error lurking in the testcase itself. Did hit a few, which this patch aims to fix. But the failures persist, indicating that something is amiss in the kernel. This patch does the following:
o Make the output of the test more readable. It is now time ordered.
o Bases the pass/fail not only on the order in which the waking up threads update the 'wakeup.arr' but also on the time they woke up. This reduced chances of error.
o Remove an extra lock and unlock on mutex when updating wakeup.arr.

Chirag Jog <chirag@linux.vnet.ibm.com> commented:
I am not convinced that adding a check for wake up time is going to reduce the chances for error. Whichever thread wakes up first, takes the lock,updates priority and time fields. Hence the time field will always be updated in wakeup order. So this is not really adding another useful check. I am ready to be conviced otherwise :)

Ankita Replied:
Yep I agree that now it would not make any difference. But before this patch, we were unlocking the mutex after only updating the running_threads and noting down the wakeup time and try and acquire the lock again to update the wakeup order in wakeup.arr So, there were chances the wakeup time did not match the order in which the wakeup.arr was updated. But yes, with the lock changes, this change would not be required. Shall send the patch again. Thanks for the review :-). So here is the updated patch which takes Chirag's comments into account.
Signed-off-by: Ankita Garg <ankita@in.ibm.com>
Signed-off-by: Chandan Kumar B V <cbhuvana@in.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/prio-wake/prio-wake.c

61) Log Message:
This patch addresses the review comments for recently accepted memory controller testcases (failcnt test and stat_check test). Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/memctl/README

LTP-20080430

1) Log Message:
Addition of SPEC File for creation of LTP-DEVEL RPMs on various Architectures for Standalone development of LTP Unit Testcase. Contributed by George Kraft <gk4@us.ibm.com>

Modified File(s):
ltp/Makefile
ltp/lib/Makefile
ltp/pan/Makefile

Added File(s):
ltp/README.ltp-devel
ltp/ltp-devel.spec
ltp/doc/man1/Makefile
ltp/doc/man3/Makefile
ltp/include/Makefile
ltp/lib/ltp.pc

2) Log Message:
This patch should solve the problem of RT Linux Compilation Failure on various Architectures. It just avoids the compilation of realtime tests on a non (x86,ppc) arch. Assumption: uname -m doesn't contain 86/ppc on any arch except the x86 and ppc. Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/Makefile

3) Log Message:
Previously I was under the impression that selinux test was not cleaning up properly. I don't believe that to be the case. I must have been mistaken. Here is a patch for the allow_domain_fd_use boolean issue in 5.2, by, Jeff Burke <jburke@redhat.com>

Modified File(s):
ltp/testscripts/test_selinux.sh

4) Log Message:
This patch, which is independent of Jeff's patch, updates the selinux testsuite to run under Fedora 9, and does no harm on Fedora 8. While creating this, I noticed two other things that ultimately need fixing: 
1) The sbin_deprecated.patch adds domain_dyntrans_type() to all the test domains.  If that was truly desired, we should just put it into unconfined_runs_test().  But it shouldn't be necessary - only the test_dyntrans.te and test_dyntrace.te domains should require permissions for dynamic transitions.  I'll let Serge confirm that. 
2) The test scripts are presently relabeling /tmp to test_file_t for the duration of the test.  That's insane - it could break any other running process that tries to access /tmp during the test.  That was not part of our original selinux testsuite and seems to have been introduced when IBM ported it to LTP.  If you are worried about lacking search permission to /tmp in the test domains, then create your own private /test directory or something.  Or just give all test domains permission to search tmp either via unconfined_runs_test() or in test_global.te using the testdomain attribute. Those don't need to be fixed though for this patch to be merged. Also, I noticed some new failures in the tests due to latest Fedora policies giving all domains search permission to all directories.  Not sure if that was intentional - sent a separate note to Dan about that.

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch
ltp/testcases/kernel/security/selinux-testsuite/tests/runtest.sh
ltp/testscripts/test_selinux.sh

5) Log Message:
Ok here is a first small patch to stop relabeling /tmp as Stephen suggested. It should be no more complicated to get rid of the unneeded dyntrans_types, but I messed up somewhere generating the patch and subsequent test bombed.  So I'll just do that next week or whenever this patch hits cvs (for simplicity). Subject: selinux testsuite: don't relabel /tmp. There's no need for the selinux testsuite to relabel /tmp for the duration of the test.  It uses /tmp/selinux anyway.  Just need to be sure to have search perms to tmp_t. Signed-off-by: Serge Hallyn <serue@us.ibm.com>

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/policy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testscripts/test_selinux.sh

6) Log Message:
dont build things statically, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/Makefile

7) Log Message:
anal fix: add whitespace between arguments, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c

8) Log Message:
This patch remove the useless random function used in getipckey. This random value has been replaced by a static int incremented at each call. This allow to remove the ugly whiles around the getipckey calls when we need several keys, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

File(s) Updated:
ltp/testcases/kernel/syscalls/ipc/lib/libipc.c
ltp/testcases/kernel/syscalls/ipc/semop/semop02.c
ltp/testcases/kernel/syscalls/ipc/shmat/shmat02.c
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl02.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget02.c

9) Log Message:
This patch fixes a concurrency issue in msgget02. The second key used for this test was sometime conflicting with the key from another task due to a bad way of creating keys. This patch generate a valid second key through getipckey to avoid conflicts. Signed-off-by: Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/msgget/msgget02.c

10) Log Message:
These patch removes a IPC leak in case of test failure. When the msgget function succeed instead of returning  ENOSPC, the returned IPC was not released, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/msgget/msgget03.c

11) Log Message:
This patch fixes a concurrency issue un shmctl01. Synchronization between processes was done using sleeps, which is not enough when multiple instances of the test are running or when we are running on loaded CPUs, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/shmctl/Makefile
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl01.

12) Log Message:
Fix concurrency issue in msgctl04. The second key used for this test could conflict with the key from another task. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl04.c

13 Log Message:
Fix concurrency issue in msgctl06. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl06.c

14) Log Message:
This patch fix a concurrency issue in msgctl07, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl07.c

15) Log Message:
Fix concurrency issue. The second key used for this test could conflict with the key from another task. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr> 

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv02.c

16) Log Message:
Fix concurrency issue in msgrcv05. Due to the use of usleep function to synchronize processes, synchronization issues can occur on a loaded system. Fix this by using pipes to synchronize processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv05.c

17) Log Message:
Fix concurrency issue in msgrcv06. Due to the use of usleep function to synchronize processes, synchronization issues can occur on a loaded system. Fix this by using pipes to synchronize processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgrcv/Makefile
ltp/testcases/kernel/syscalls/ipc/msgrcv/msgrcv06.c

18) Log Message:
Fix concurrency issue in msgsnd05. Due to the use of usleep function to synchronize processes, synchronization issues can occur on a loaded system. Fix this by using pipes to synchronize processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgsnd/Makefile
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd05.c

19) Log Message:
Fix concurrency issue in msgsnd06. Due to the use of usleep function to synchronize processes, synchronization issues can occur on a loaded system. Fix this by using pipes to synchronize processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgsnd/msgsnd06.c

20) Log Message:
Fix concurrency issue in semget05. Create private semaphores to avoid conflict with concurrent processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/semget/semget05.c

21) Log Message:
Fix concurrency issue in semop05. Due to the use of usleep function to synchronize processes, synchronization issues can occur on a loaded system. Fix this by using pipes to synchronize processes. Signed-off-by: Matthieu Fertré <mfertre@irisa.fr>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/semop/Makefile
ltp/testcases/kernel/syscalls/ipc/semop/semop05.c

22) Log Message:
This patch reviews the networkstress.sh script and adds a menu to select the network stress tests. Hoping that could be useful, by, Giuseppe Cavallaro <peppe.cavallaro@gmail.com>

Modified File(s):
ltp/testscripts/networkstress.sh

23) Log Message:
Updated the test case as per the man page
***********
RETURN VALUE
       If  name  is  invalid, -1 is returned, and errno is set to EINVAL. Otherwise, the value returned is the value of the system resource and errno is not changed.  In the case of  options, a positive value is  returned  if  a queried option is available, and -1 if it is not.  In the case of limits, -1 means that  there is no definite limit
***********
Return value of sysconf needs to be checked as well and not only depend on errno value. Have made the changes by looking at the code from http://www.comptechdoc.org/os/linux/programming/c/linux_pgcpostest.html. Max Stirling <vicky.irobot@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c

24) Log Message:
A patch to include all the headers for the ltp-devel package, by, George Kraft <gk4@austin.ibm.com>

Modified File(s):
ltp/ltp-devel.spec
ltp/include/Makefile

25) Log Message:
Fix from Vivi Li for stack overflows on no-mmu systems: declare large buffers in .bss rather than on the stack

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

26) Log Message:
Here is the patch to remove the unneeded dyntrans lines.  Causes no new failures on my f8 test image.
Subject: selinux testsuite: don't give away dyntrans
domain_dyntrans_type() only needs to be used for domains actually needing to do dynamic transitions.  Don't grant it to most domains. Signed-off-by: Serge Hallyn <serue@us.ibm.com>

Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch

27) Log Message:
Making these tests run as default with LTP run, by, Subrata Modak <subrata@linux.vnet.ibm.com>

Modified File(s):
ltp/runtest/fs
ltp/runtest/ipc
ltp/runtest/mm
ltp/runtest/sched

28) Log Message:
split CFLAGS/CPPFLAGS properly and remove inappropriate flags, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/realtime/config.mk

29) Log Message:
dont stick ar flags into AR, and dont set AR/RANLIB by default, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/realtime/lib/Makefile

30) Log Message:
setup default RANLIB, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/Makefile

31) Log Message:
checks return values of asprintf calls else gcc-4.3.0 fails like following;
...
libstats.c:308: error: ignoring return value of 'asprintf', declared with attribute warn_unused_result
libstats.c:312: error: ignoring return value of 'asprintf', declared with attribute warn_unused_result
...
Signed-off-by: S.Çağlar Onur <caglar@pardus.org.tr>
Acked-by: Chirag <chirag@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/lib/libstats.c

32) Log Message:
faccessat01 and fchmodat01 did not test the AT_FDCWD, following patch makes them test AT_FDCWD and pass. Signed-off-by: S.Çağlar Onur <caglar@pardus.org.tr>

Modified File(s):
ltp/testcases/kernel/syscalls/faccessat/faccessat01.c
ltp/testcases/kernel/syscalls/fchmodat/fchmodat01.c

33) Log Message:
According to Ulrich Drepper, times02 test is bogus (at least for archs which report return value and error in the same value) and times has no reserved error code. So following patch removes times02 from testsuite and moves times03 test to times02. For more information please see
http://sources.redhat.com/ml/libc-alpha/2008-04/msg00054.html and
http://sources.redhat.com/ml/libc-alpha/2008-04/msg00055.html.
Signed-off-by:
S.Çağlar Onur <caglar@pardus.org.tr>

Modified File(s):
ltp/doc/testcases/kernel.txt
ltp/runtest/ltplite
ltp/runtest/stress.part3
ltp/runtest/syscalls
Removed File(s):
ltp/testcases/kernel/syscalls/times/times02.c

34) Log Message:
This turned out to be a test case problem, where it fails to identify the correct backbone network interface to use for the test. But there is an option already provided for the interface to be specified while invoking the test. Here, eth1 is the backbone interface and hence if the test is invoked like 'IFNAME=eth1 ./tcpdump01' it will pass. But it relies on DNS lookup and requires the IP to be configured accordingly. Signed-off-by: Anoop Vijayan
<anoop.vijayan@in.ibm.com>

Modified File(s):
ltp/testcases/network/tcp_cmds/tcpdump/tcpdump01

35) Log Message:
Now that the realtime tests are part of the LTP, there is no need to have any longer specific compilation directives comments in the source files. And in most cases they are incorrect. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>. Cc: Darren Hart <dvhltc@us.ibm.com>

Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_jk.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/measurement/rdtsc-latency.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/func/pi-tests/test-skeleton.c
ltp/testcases/realtime/func/pi-tests/testpi-0.c
ltp/testcases/realtime/func/pi-tests/testpi-1.c
ltp/testcases/realtime/func/pi-tests/testpi-2.c
ltp/testcases/realtime/func/pi-tests/testpi-4.c
ltp/testcases/realtime/func/pi-tests/testpi-5.c
ltp/testcases/realtime/func/pi-tests/testpi-6.c
ltp/testcases/realtime/func/pi-tests/testpi-7.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c
ltp/testcases/realtime/func/prio-wake/prio-wake.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/thread_clock/tc-2.c
ltp/testcases/realtime/include/libjvmsim.h
ltp/testcases/realtime/include/libstats.h
ltp/testcases/realtime/include/list.h
ltp/testcases/realtime/lib/libjvmsim.c
ltp/testcases/realtime/lib/libstats.c
ltp/testcases/realtime/perf/latency/pthread_cond_latency.c
ltp/testcases/realtime/perf/latency/pthread_cond_many.c
ltp/testcases/realtime/stress/pi-tests/lookup_pi_state.c
ltp/testcases/realtime/stress/pi-tests/testpi-3.c

36) Log Message:
pi_perf is not built by default, so add it to SUBDIRS in testcases/realtime/Makefile. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>

Modified Files:
ltp/testcases/realtime/func/Makefile

37) Log Message:
The rttest, stats and jvmsim library archives used by the realtime tests only contain a single object file each. Therefore we can skip the "ar" and "ranlib" steps and directly link with the objects. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/config.mk
ltp/testcases/realtime/lib/Makefile

38) Log Message:
periodic_cpu_load has a '-i iterations' command line argument without it being listed in the help. Add its description to the usage() function. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c

39) Log Message:
Some tests have a configurable number of iterations. However those same tests which do calculate quantiles need a number of iterations higher than 100. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>. Acked-by: Chirag <chirag@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c

40) Log Message:
Remove the last 2 files missed in the migration, namely:
testcases/realtime/stress/pi-tests/GNUmakefile.am
testcases/realtime/stress/pi-tests/GNUmakefile.in
Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Removed Files:
ltp/testcases/realtime/stress/pi-tests/GNUmakefile.am
ltp/testcases/realtime/stress/pi-tests/GNUmakefile.in

41) Log Message:
In the expected scenario, it attempts to execve(2) a file which is being opened by another process for writing fails with ETXTBS. On a loaded system, however, the child which does execve might get access to the file before the other child which opens it and result in a unexpected opening fail. By Roy Lee <roylee17@gmail.com>

Modified Files:
ltp/testcases/kernel/syscalls/execve/Makefile
ltp/testcases/kernel/syscalls/execve/execve05.c

42) Log Message:
I think there is a problem with the previous patch. Since you call the wait_son_startup() function after the fork() and before the test on the PID variable, the father AND the son will wait on the pipe, leading to a dead-lock. I suggest to move the wait_son_startup() calls after the pid test. Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>. Cha
nges by Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve05.c

43) Log Message:
This patch fix a concurrency issue in execve02. In case of concurrent executions, all tasks was using the same file, changing its mode and leading to invalid mode for some of them. This patch creates a private tmp directory for each task, copies the test file in it and performs all the tests using this private file. Regards Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/execve/execve02.c

44) Log Message:
This patch fixes a concurrency issue in ftruncate04. In the expected scenario, child should hold the lock of the file before parent access it. On a loaded system, however, the parent might access the file before the child, hence resulting in a unexpected 'open fail'. By, Roy Lee <roylee17@gmail.com>.

Modified File(s):
ltp/testcases/kernel/syscalls/ftruncate/Makefile
ltp/testcases/kernel/syscalls/ftruncate/ftruncate04.c

45) Log Message:
The following patch and all others that were submitted in Feb, 2008 pertaining to "__NR_fadvise64" seem to break ARM builds of ltp as the arm does not have __NR_fadvise64 defined.  I suspect there should be
#ifndef __NR_fadvise64
#define __NR_fadvise64 0
in each of the files that the patches were added. By, Shane Volpe <shanevolpe@gmail.com>

Modified File(s):
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c

46) Log Message:
The Linux port I run on LTP has a minimal set of system calls. It currently does not implement the sysfs system call so I'd like to disable the tests for this system call - at the moment they will fail to compile because __NR_sysfs is undefined. Is there an idiomatic way of doing this? I can either prevent the test compiling completely somehow in the Makefile (e.g. as modify_ldt does) or make the test compile but return BROK perhaps. Attached is a patch to implement a strategy like this one. By Will Newton <will.newton@gmail.com>

Modified File(s):
ltp/testcases/kernel/syscalls/sysfs/sysfs01.c
ltp/testcases/kernel/syscalls/sysfs/sysfs02.c
ltp/testcases/kernel/syscalls/sysfs/sysfs03.c
ltp/testcases/kernel/syscalls/sysfs/sysfs04.c
ltp/testcases/kernel/syscalls/sysfs/sysfs05.c
ltp/testcases/kernel/syscalls/sysfs/sysfs06.c

47) Log Message:
Executing f00f testcase in x86 Xeon machines, it failed returning SIGSEGV:
# ./f00f
f00f        0  INFO  :  Testing for proper f00f instruction handling.
Segmentation fault

Searching for this issue, I found an old thread in ltp-list discussing broken test-cases (http://sourceforge.net/mailarchive/message.php?msg_id=46E5998B.9070903%40redhat.com), where Jeff Burke raise this problem with f00f failing on systems that have the NX bit. But, according to the flags reported in /proc/cpuinfo, the machines where i'm running this testcase seems not to have this NX bit enabled. On /proc/cpuinfo, we also have this line "f00f_bug: no". Would it be useful to select if this testcase should be executed or not? These machines are running a kernel compiled with processor family "Pentium-Pro" (CONFIG_M686=y), which, in according to the kernel config help, "disables the init-time guard against the f00f bug found in earlier Pentiums". Here i have created a patch that seems to fix the testcase using an inline assembly. By, Edjunior Barbosa Machado <emachado@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/misc/f00f/f00f.c

48) Log Message:
nptl01 looks to have an operator precedence bug in it that prevents the output being done at appropriate times. With this patch you should get 10 lines of output, one every 10000 loops, rather than 10 lines of output, one for each of the first 10 loops. By, Will Newton <will.newton@gmail.com>.

Modified File(s):
ltp/testcases/kernel/sched/nptl/nptl01.c

49) Log Message:
I believe we had written this test to debug the other test with a lower overhead clocksource.  Unfortunately, the tsc is x86 specific, isn't consistent across CPUs on certain systems, and can have it's frequency changed depending on by power states. For all those reasons this test can simply be removed from the LTP. Raied by Daniel Gollub <dgollub@suse.de>, endorsed by Sebastien Dugue <sebastien.dugue@bull.net>, seconded by Darren Hart <dvhltc@us.ibm.com>.

Removed File(s):
ltp/testcases/realtime/func/async_handler/run_auto.sh

50) Log Message:
This patch removes the dependency of existing tty* devices for this test to pass, and also ups the invalid file descriptor value from 400 to 1025 which is used to confirm the EBADF errno. By, Henry Yei <hyei@mvista.com>

Modified File(s):
ltp/testcases/kernel/syscalls/sockioctl/sockioctl01.c

51) Log Message:
Attached is a patch to ltp/lib/Makefile that fixes Solaris cross-building. For some reason the variable CC was overridden with gcc -Wall which caused it to use the system compiler. By Henry Yei <hyei@mvista.com>

Modified File(s):
ltp/lib/Makefile

52) Log Message:
overhaul script to make things much easier to manage by Garrett Cooper <yanegomi@gmail.com>

Modified File(s):
ltp/IDcheck.sh

53) Log Message:
simplify targets, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/Makefile

54) Log Message:
cleanup code and add error checking, by, Mike Frysinger <vapier@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/fs/fs_perms/Makefile
ltp/testcases/kernel/fs/fs_perms/fs_perms.c

55) Log Message:
Attached is a patch to ltp/lib/Makefile that fixes Solaris cross-building. For some reason the variable CC was overridden with gcc -Wall which caused it to use the system compiler. Also fixes cross-building for the filecaps tests. By, Henry Yei <hyei@mvista.com>.

Modified File(s):
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh

56) Log Message:
The float_bessel testcases, as a matter of fact, all float_* testcases seem to fail when multiple instances are run concurrently. The failures occur because file sizes don't match or because the number of bytes read don't match the file size. This can be attributed to the parallel instance reading a file before the write to it (by another instance) has completed. In such situations, either the file size has not been updated in the inode header or the file size has been updated but the file's write operation has not been updated completely. To fix this concurrency problem, my suggestion is to check for an existing instance and wait for it to finish before beginning the current instance. Any other concurrency resolution technique may complicate matters. A message to the console indicating such a decision might be added. By Sridhar Vinay <vinaysridhar@in.ibm.com> & Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>.

Modified File(s):
ltp/testcases/misc/math/float/main.c
ltp/testcases/misc/math/float/bessel/genbessel.c
ltp/testcases/misc/math/float/exp_log/genexp_log.c
ltp/testcases/misc/math/float/iperb/geniperb.c
ltp/testcases/misc/math/float/power/genpower.c
ltp/testcases/misc/math/float/trigo/gentrigo.c

57) Log Message:
Some Cleanups for CPU Controller Test Cases by Sudhir Kumar. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>, Acked-by: Dhaval Giani
<dhaval@linux.vnet.ibm.com>.

Modified File(s):
ltp/testcases/kernel/controllers/test_controllers.sh
ltp/testcases/kernel/controllers/testplan.txt
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test01.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test02.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test03.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_test04.c
ltp/testcases/kernel/controllers/cpuctl/cpuctl_testplan.txt
ltp/testcases/kernel/controllers/cpuctl/parameters.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_stress_test.sh
ltp/testcases/kernel/controllers/cpuctl/run_cpuctl_test.sh
ltp/testcases/kernel/controllers/libcontrollers/libcontrollers.c
ltp/testcases/kernel/controllers/libcontrollers/libcontrollers.h

58) Log Message:
Initial Set of MEMORY CONTROLLER Test Cases Added to LTP by Sudhir Kumar. Signed-off-by: Sudhir Kumar <skumar@linux.vnet.ibm.com>, Acked-by: Balbir Singh <balbir@linux.vnet.ibm.com>.

Modified Files:
ltp/testcases/kernel/controllers/Makefile
ltp/testcases/kernel/controllers/test_controllers.sh
Added Files:
ltp/testcases/kernel/controllers/memctl/Makefile
ltp/testcases/kernel/controllers/memctl/memctl_test01.c
ltp/testcases/kernel/controllers/memctl/myfunctions.sh
ltp/testcases/kernel/controllers/memctl/run_memctl_test.sh

LTP-20080331

1) Log Message:
Fix the following NFS warning:
ioctl01     0  WARN  :  tst_rmdir(): rmobj(/tmp/iocfNl8Bi) failed: remove(/tmp/iocfNl8Bi) failed; errno=39: Directory not empty,
by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/ioctl/ioctl01.c

2) Log Message:
Whitespaces cleanup and added -i argument for iterations, by, Gilles Carry <gilles.carry@bull.net>

Modified File(s):
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c

3) Log Message:
Test does:
..
pid1 = fork();
if (pid1 == 0) {
        /* child */
        kill(-pid1, SIGKILL);
...
which is wrong, since pid1 is zero.
By, Anton Gladkov <agladkov@parallels.com>

Modified File(s):
ltp/testcases/kernel/syscalls/kill/kill06.c

4) Log Message:
Provide it with CHILD_STACK_SIZE, by, Anton Gladkov <agladkov@parallels.com>

Modified File(s):
ltp/testcases/kernel/syscalls/clone/clone06.c

5) Log Message:
Fix 'reading beyond file size' testcase in diotest4. Something goes wrong if we are allowed to read, or, we are not allowed to read, but we've got unexpected errno, by, Anton Gladkov <agladkov@parallels.com>

Modified File(s):
ltp/testcases/kernel/io/direct_io/diotest4.c

6) Log Message:
Initial Set of TI-RPC test Cases addition to LTP, by, Aurélien Charbon <aurelien.charbon@ext.bull.net>

Modified File(s):
ltp/doc/testcases/network.txt ltp/runtest/rpc
ltp/runtest/stress.part3
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/network/rpc/Makefile
ltp/testcases/network/rpc/README

Removed File(s):
ltp/testcases/network/rpc/rpc01/Makefile
ltp/testcases/network/rpc/rpc01/rpc01
ltp/testcases/network/rpc/rpc01/rpc1.c
ltp/testcases/network/rpc/rpc01/rpc_server.c
ltp/testcases/network/rpc/rpc01/datafiles/file.1
ltp/testcases/network/rpc/rpc01/datafiles/file.2
ltp/testcases/network/rpc/rpcinfo/Makefile
ltp/testcases/network/rpc/rpcinfo/rpcinfo01
ltp/testcases/network/rpc/rup/Makefile
ltp/testcases/network/rpc/rup/rup01
ltp/testcases/network/rpc/rusers/Makefile
ltp/testcases/network/rpc/rusers/rusers01

Added File(s):
ltp/testcases/network/rpc/basic_tests/Makefile
ltp/testcases/network/rpc/basic_tests/README
ltp/testcases/network/rpc/basic_tests/rpc01/Makefile
ltp/testcases/network/rpc/basic_tests/rpc01/rpc01
ltp/testcases/network/rpc/basic_tests/rpc01/rpc1.c
ltp/testcases/network/rpc/basic_tests/rpc01/rpc_server.c
ltp/testcases/network/rpc/basic_tests/rpc01/datafiles/file.1
ltp/testcases/network/rpc/basic_tests/rpc01/datafiles/file.2
ltp/testcases/network/rpc/basic_tests/rpcinfo/Makefile
ltp/testcases/network/rpc/basic_tests/rpcinfo/rpcinfo01
ltp/testcases/network/rpc/basic_tests/rup/Makefile
ltp/testcases/network/rpc/basic_tests/rup/rup01
ltp/testcases/network/rpc/basic_tests/rusers/Makefile
ltp/testcases/network/rpc/basic_tests/rusers/rusers01
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile.clnt
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/Makefile.svc
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/README
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.auto
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure.interactive
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/configure~
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/install
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/install.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_addrmanagmt_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_addrmanagmt_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_addrmanagmt_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_auth_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_broadc_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_createdestroy_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_createdestroy_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_createdestroy_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_createdestroy_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_createdestroy_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_err_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_regunreg_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_stdcall_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_tirpc_ts_run.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_ts_run.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/rpc_ts_wizard.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/run_rpc_tirpc_tests.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_addrmanagmt_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_addrmanagmt_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_auth_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_mt_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_bottomlevel_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_err_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_err_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_mt_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_expertlevel_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_mt_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_interlevel_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_mt_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_simple_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_basic_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_complex_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_dataint_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_limits_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_mt_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_performance_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_scalability_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tirpc_toplevel_stress_lib.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/Makefile.hdr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/categories
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/install.ftr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/install.hdr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/rpc_ts_run.ftr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/inc/rpc_ts_run.hdr
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_get_myaddress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_getmaps.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_getport.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_rmtcall.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_rmtcall.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_rmtcall.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_set.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_addrmanagmt_pmap_unset.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_auth_auth_destroy.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_auth_authnone_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_auth_authunix_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_auth_authunix_create_default.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_broadc_clnt_broadcast.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnt_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnt_create.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnt_destroy.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnt_destroy.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntraw_create.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntraw_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntraw_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnttcp_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnttcp_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnttcp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clnttcp_create.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntudp_bufcreate.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntudp_bufcreate.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntudp_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntudp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_clntudp_create.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svc_destroy.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svc_destroy.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcfd_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcfd_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcraw_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcraw_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svctcp_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svctcp_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svctcp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svctcp_create.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcudp_bufcreate.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcudp_bufcreate.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcudp_create.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcudp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_createdestroy_svcudp_create.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_pcreateerror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_perrno.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_perror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_spcreateerror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_sperrno.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_clnt_sperror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_auth.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_noproc.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_noprog.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_progvers.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_systemerr.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_err_svcerr_weakauth.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_regunreg_registerrpc.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_regunreg_svc_register.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_regunreg_svc_unregister.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_regunreg_xprt_register.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_regunreg_xprt_unregister.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_callrpc.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_callrpc.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_callrpc.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_callrpc.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_callrpc.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_control.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_control.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_freeres.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_clnt_geterr.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_svc_freeargs.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_svc_getargs.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_svc_getargs.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_svc_getcaller.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/rpc_stdcall_svc_sendreply.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_addrmanagmt_rpcb_getaddr.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_addrmanagmt_rpcb_getaddr.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_addrmanagmt_rpcb_getmaps.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_auth_authdes_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_auth_authdes_seccreate.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_auth_authnone_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_auth_authsys_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_auth_authsys_create_default.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_dg_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_dg_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_vc_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_clnt_vc_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_svc_dg_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_svc_dg_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_svc_vc_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_bottomlevel_svc_vc_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_clnt_pcreateerror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_clnt_perrno.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_clnt_perrno.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_clnt_perror.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_clnt_perror.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_svcerr_noproc.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_svcerr_noprog.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_svcerr_progvers.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_svcerr_systemerr.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_err_svcerr_weakauth.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_tli_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_clnt_tli_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_rmtcall.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_set.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_rpcb_unset.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_reg.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_reg.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_reg.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_tli_create.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_tli_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_unreg.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_unreg.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_expertlevel_svc_unreg.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_control.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_control.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_tp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_tp_create_timed.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_clnt_tp_create_timed.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_interlevel_svc_tp_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_broadcast_exp.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.basic.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_reg.basic.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_reg.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_simple_rpc_reg.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.complex.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.dataint.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.mt.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.performance.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.scalability.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_call.stress.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_create_timed.limits.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_create_timed.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_clnt_destroy.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_svc_create.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/scripts/tirpc_toplevel_svc_destroy.sh
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/cleaner.c.src
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_get_myaddress/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getmaps/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getport/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_getport/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_rmtcall/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_set/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_set/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_unset/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_addrmanagmt_pmap_unset/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_auth_destroy/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authnone_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_auth_authunix_create_default/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_broadc_clnt_broadcast/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnt_destroy/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntraw_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clnttcp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_bufcreate/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_clntudp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svc_destroy/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcfd_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcraw_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svctcp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_bufcreate/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_bufcreate/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_bufcreate/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_createdestroy_svcudp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_pcreateerror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perrno/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_perror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_spcreateerror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperrno/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_clnt_sperror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_auth/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noproc/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_noprog/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_progvers/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_systemerr/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_err_svcerr_weakauth/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_registerrpc/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_register/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_svc_unregister/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_register/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_unregister/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_regunreg_xprt_unregister/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_callrpc/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_control/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_freeres/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_clnt_geterr/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_freeargs/svc.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getargs/client.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getcaller/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_getcaller/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/rpc/rpc_stdcall_svc_sendreply/client.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getaddr/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_addrmanagmt_rpcb_getmaps/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_seccreate/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authdes_seccreate/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authnone_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_auth_authsys_create_default/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_dg_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_clnt_vc_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_dg_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_bottomlevel_svc_vc_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_pcreateerror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perrno/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perror/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perror/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_clnt_perror/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noproc/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_noprog/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_progvers/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_systemerr/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_err_svcerr_weakauth/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_clnt_tli_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_rmtcall/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_set/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_set/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_unset/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_rpcb_unset/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_reg/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_tli_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_expertlevel_svc_unreg/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_control/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_clnt_tp_create_timed/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_interlevel_svc_tp_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_broadcast_exp/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_simple_rpc_reg/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/2-stress.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/4-mt.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/5-scalability.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/6-dataint.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/7-performance.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/8-complex.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_call/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/3-limits.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_create_timed/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_clnt_destroy/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_create/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_create/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/1-basic.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_suite/tirpc/tirpc_toplevel_svc_destroy/assertions.xml
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_svc_1/rpc_svc_1.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/rpc_svc_2/rpc_svc_2.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_1/tirpc_svc_1.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_11/tirpc_svc_11.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_2/tirpc_svc_2.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_3/tirpc_svc_3.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_4/tirpc_svc_4.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_5/tirpc_svc_5.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_6/tirpc_svc_6.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_7/tirpc_svc_7.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_8/tirpc_svc_8.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tests_pack/tirpc_svc_9/tirpc_svc_9.c
ltp/testcases/network/rpc/rpc-tirpc-full-test-suite/tsLogParser/rpc_ts.mod.php

7) Log Message:
The idea of the patch is "to make things that should be extern, extern". The means to do this are: 
1. Explicitly declaring variables extern in some places.
2. Defining _USC_LIB_ where appropriate.

My understanding of _USC_LIB_ define is that it exists so the usctest.h header can be included in a lib or non-test source file where you want to use extern declarations of TEST_RETURN, TEST_ERRNO etc. to avoid having a copy of the variable in your library and a copy of the variable in your test. I've added -D_USC_LIB_ to the CFLAGS of library code where necessary, by, Will Newton <will.newton@gmail.com>

Modified File(s):
ltp/testcases/kernel/mem/hugetlb/lib/Makefile
ltp/testcases/kernel/syscalls/ipc/lib/Makefile
ltp/testcases/kernel/syscalls/ipc/lib/ipcmsg.h
ltp/testcases/kernel/syscalls/ipc/lib/ipcsem.h
ltp/testcases/kernel/syscalls/kill/kill05.c
ltp/testcases/kernel/syscalls/kill/kill07.c
ltp/testcases/kernel/syscalls/lib/Makefile
ltp/testcases/kernel/syscalls/nftw/lib.c
ltp/testcases/network/sctp/testlib/Makefile

8) Log Message:
Add 2 scripts for detecting features used by some tests, namely:
- support for pthread_mutexattr_setprotocol(..., PTHREAD_PRIO_INHERIT)
- support for pthread_mutexattr_setrobust_np()
Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Added Files:
ltp/testcases/realtime/scripts/check_pi.sh
ltp/testcases/realtime/scripts/check_robust.sh

9) Log Message:
Add Makefiles to all the realtime testcases without any autotools dependencies. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Added Files:
ltp/testcases/realtime/Makefile
ltp/testcases/realtime/config.mk
ltp/testcases/realtime/func/Makefile
ltp/testcases/realtime/func/async_handler/Makefile
ltp/testcases/realtime/func/gtod_latency/Makefile
ltp/testcases/realtime/func/hrtimer-prio/Makefile
ltp/testcases/realtime/func/matrix_mult/Makefile
ltp/testcases/realtime/func/measurement/Makefile
ltp/testcases/realtime/func/periodic_cpu_load/Makefile
ltp/testcases/realtime/func/pi-tests/Makefile
ltp/testcases/realtime/func/pi_perf/Makefile
ltp/testcases/realtime/func/prio-preempt/Makefile
ltp/testcases/realtime/func/prio-wake/Makefile
ltp/testcases/realtime/func/pthread_kill_latency/Makefile
ltp/testcases/realtime/func/sched_football/Makefile
ltp/testcases/realtime/func/sched_jitter/Makefile
ltp/testcases/realtime/func/sched_latency/Makefile
ltp/testcases/realtime/func/thread_clock/Makefile
ltp/testcases/realtime/lib/Makefile
ltp/testcases/realtime/perf/Makefile
ltp/testcases/realtime/perf/latency/Makefile
ltp/testcases/realtime/stress/Makefile
ltp/testcases/realtime/stress/pi-tests/Makefile

10) Log Message:
Remove autotools stuff:
- autogen.sh
- configure.ac
- configure
- aclocal.m4
- config/*
- all the GNUmakefile.am
- all the GNUmakefile.in

Also adapt testscripts/test_realtime.sh to the new build system. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Modified Files:
ltp/testscripts/test_realtime.sh
Removed Files:
ltp/testcases/realtime/GNUmakefile.am
ltp/testcases/realtime/GNUmakefile.in
ltp/testcases/realtime/aclocal.m4
ltp/testcases/realtime/autogen.sh
ltp/testcases/realtime/configure
ltp/testcases/realtime/configure.ac
ltp/testcases/realtime/config/GNUmakefile.am
ltp/testcases/realtime/config/GNUmakefile.in
ltp/testcases/realtime/config/autoconf/compile
ltp/testcases/realtime/config/autoconf/config.guess
ltp/testcases/realtime/config/autoconf/config.sub
ltp/testcases/realtime/config/autoconf/depcomp
ltp/testcases/realtime/config/autoconf/install-sh
ltp/testcases/realtime/config/autoconf/missing
ltp/testcases/realtime/func/GNUmakefile.am
ltp/testcases/realtime/func/GNUmakefile.in
ltp/testcases/realtime/func/async_handler/GNUmakefile.am
ltp/testcases/realtime/func/async_handler/GNUmakefile.in
ltp/testcases/realtime/func/gtod_latency/GNUmakefile.am
ltp/testcases/realtime/func/gtod_latency/GNUmakefile.in
ltp/testcases/realtime/func/hrtimer-prio/GNUmakefile.am
ltp/testcases/realtime/func/hrtimer-prio/GNUmakefile.in
ltp/testcases/realtime/func/matrix_mult/GNUmakefile.am
ltp/testcases/realtime/func/matrix_mult/GNUmakefile.in
ltp/testcases/realtime/func/measurement/GNUmakefile.am
ltp/testcases/realtime/func/measurement/GNUmakefile.in
ltp/testcases/realtime/func/periodic_cpu_load/GNUmakefile.am
ltp/testcases/realtime/func/periodic_cpu_load/GNUmakefile.in
ltp/testcases/realtime/func/pi-tests/GNUmakefile.am
ltp/testcases/realtime/func/pi-tests/GNUmakefile.in
ltp/testcases/realtime/func/pi_perf/GNUmakefile.am
ltp/testcases/realtime/func/pi_perf/GNUmakefile.in
ltp/testcases/realtime/func/prio-preempt/GNUmakefile.am
ltp/testcases/realtime/func/prio-preempt/GNUmakefile.in
ltp/testcases/realtime/func/prio-wake/GNUmakefile.am
ltp/testcases/realtime/func/prio-wake/GNUmakefile.in
ltp/testcases/realtime/func/pthread_kill_latency/GNUmakefile.am
ltp/testcases/realtime/func/pthread_kill_latency/GNUmakefile.in
ltp/testcases/realtime/func/sched_football/GNUmakefile.am
ltp/testcases/realtime/func/sched_football/GNUmakefile.in
ltp/testcases/realtime/func/sched_jitter/GNUmakefile.am
ltp/testcases/realtime/func/sched_jitter/GNUmakefile.in
ltp/testcases/realtime/func/sched_latency/GNUmakefile.am
ltp/testcases/realtime/func/sched_latency/GNUmakefile.in
ltp/testcases/realtime/func/thread_clock/GNUmakefile.am
ltp/testcases/realtime/func/thread_clock/GNUmakefile.in
ltp/testcases/realtime/include/GNUmakefile.am
ltp/testcases/realtime/include/GNUmakefile.in
ltp/testcases/realtime/lib/GNUmakefile.am
ltp/testcases/realtime/lib/GNUmakefile.in
ltp/testcases/realtime/perf/GNUmakefile.am
ltp/testcases/realtime/perf/GNUmakefile.in
ltp/testcases/realtime/perf/latency/GNUmakefile.am
ltp/testcases/realtime/perf/latency/GNUmakefile.in
ltp/testcases/realtime/stress/GNUmakefile.am
ltp/testcases/realtime/stress/GNUmakefile.in

11) Log Message:
Forgot to remove include/rttests_config.h.in in the previous patch. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Removed Files:
ltp/testcases/realtime/include/rttests_config.h.in

12) Log Message:
Fix by Michael Olbrich <m.olbrich@pengutronix.de>, as, Sebastien´s Patch [[PATCH 3/3] [Realtime] Remove autotools specific stuff] applied on 24/03/2008 breaks this script.

Modified File(s):
ltp/testcases/realtime/run.sh

13) Log Message:
Usually the cross compiler is set from the toplevel directory by setting the CROSS_COMPILER variable. This makefile tries to overwrite it, but wrong. It is also possible to push in CFLAGS from the toplevel by using CROSS_CFLAGS. We should use these here as well. Finally, LDFLAGS are set here but not used by the makefiles. Moving the posix libs to LDLIBS makes it build. Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

Modified File(s):
ltp/testcases/realtime/config.mk

14) Log Message:
This patch updates the matrix_mult testcase to closely follow the JVM in the concurrent case. So in the concurrent case we have 'numcpus-1' concurrent threads that are handed out work by the main thread and once we run out of concurrent threads, the main thread does the work itself. Signed-off-by: Dinakar Guniguntala <dino@in.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

15) Log Message:
mmap1.c:524: warning: format '%ld' expects type 'long int', but argument 3 has type 'double'
which actually prints as:
WARNING: bad argument. Using default 1125899906842624

Fix disktest printf format warnings (on Linux; no idea about Windows):
childmain.c:443: warning: format '%d' expects type 'int', but argument 4 has type 'size_t'
childmain.c:443: warning: format '%X' expects type 'unsigned int', but argument 5 has type 'size_t'
childmain.c:445: warning: format '%d' expects type 'int', but argument 6 has type 'size_t'
childmain.c:448: warning: format '%d' expects type 'int', but argument 6 has type 'size_t'
childmain.c:451: warning: format '%d' expects type 'int', but argument 6 has type 'size_t'
Signed-off-by: Randy Dunlap <randy.dunlap@oracle.com>

Modified File(s):
ltp/testcases/kernel/io/disktest/childmain.h
ltp/testcases/kernel/mem/mtest06/mmap1.c

16) Log Message:
All the syslog test cases in ltp-full-20080131 are failing for RHEL4U5 on x3850 M2 architecture. The syslogtst is failing because when only 1 argument is passed to syslogtst the condition in the test case fails to deal with it. I have tested the failed tests cases after applying the patch on the same architecture(x3850M2) and found its passing. Signed-off-by : Vinay Sridhar <vinaysridhar@in.ibm.com>

Modified File(s):
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

17) Log Message:
The filename arguments in some output messages are wrong. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>

Modified File(s):
ltp/testcases/kernel/syscalls/inotify/inotify02.c

18) Log Message:
Fixes a minor issue with pi_perf testcase (testcases/realtime/func/). The wait_dat is intended to measure the amount of time it took for the high priority thread to actually obtain the lock from the time it was released by the low priority thread. The patch fixes this computation to measure it more accurately. The PASS/FAIL computation is unaffected. Signed-off-by: Ankita Garg <ankita@in.ibm.com>, Acked-by: Sripathi Kodi <sripathik@in.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/pi_perf/pi_perf.c

19) Log Message:
The vmsplice01 testcase in LTP failed when run over machines with NFS mount. However after I examined the test case I found that the testcase performs vmsplice() and splice() system calls and it was only splice() that caused the failure. After discussing with Subrata, we had decided that the fact that vmsplice() succeeds must be displayed before checking if the testcase is running over NFS and exiting. Hence I have prepared a patch with the above details taken care of. Signed-off-by : Vinay Sridhar <vinaysridhar@in.ibm.com>

Modified File(s):
ltp/testcases/kernel/syscalls/vmsplice/vmsplice01.c

20) Log Message:
faccessat01 and fchmodat01 did not test the AT_FDCWD tests, but assigned fds[5]. I made them work, patch attached. btw, readlinkat01 is also buggy, but I have not yet come around to fixing it. By, Marcus Meissner <marcusmeissner@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/faccessat/faccessat01.c
ltp/testcases/kernel/syscalls/fchmodat/fchmodat01.c

21) Log Messsage:
Some newer glibcs do not like sprintf() printing a string into itself and loop. By, Marcus Meissner <marcusmeissner@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/nftw/lib.c
ltp/testcases/kernel/syscalls/nftw/lib64.c

22) Log Message:
some more "variable is used uninitialized" warnings fixed with this patch, by, Marcus Meissner <marcusmeissner@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/syscalls/sysctl/sysctl05.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_cond_wait/4-1.c

23) Log Message:
This patch fixes some compiler warnings spit out by newer GCCs and fortify source (mostly some initialisations and return value checking), by, Marcus Meissner <marcusmeissner@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/fs/doio/doio.c
ltp/testcases/kernel/fs/doio/iogen.c

24) Log Message:
Various waitpid tests print the PID of the wrong array. fork_kid_pid[j] is accessed just past the end of the fork_kid_pid array, so it is better to use wait_kid_pid[i] instead, by, Marcus Meissner <marcusmeissner@users.sourceforge.net>

Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid06.c
ltp/testcases/kernel/syscalls/waitpid/waitpid07.c
ltp/testcases/kernel/syscalls/waitpid/waitpid08.c
ltp/testcases/kernel/syscalls/waitpid/waitpid11.c
ltp/testcases/kernel/syscalls/waitpid/waitpid12.c
ltp/testcases/kernel/syscalls/waitpid/waitpid13.c

25) Log Message:
When I was compiling ltp-full-20080229/kernel/module/, error occured. The error like this: ...
scripts/Makefile.build:46: *** CFLAGS was changed in"ltp-full-20080229/testcases/kernel/module/delete_module/Makefile".Fix it to use EXTRA_CFLAGS. Stop.
The reason is: When we build an External module, we should use EXTRA_CFLAGS, not CFLAGS. In detail please refer to Documentation/kbuild/modules.txt. In addition,there are some trashy "include" such as:
"#include <asm/atomic.h>" in delete_module01.c
"#include <linux/config.h>" in dummy_del_mod.c
The following patch solves these problems:
Signed-off-by: Wang Fang <wangf@cn.fujitsu.com>

Modified File(s):
ltp/testcases/kernel/module/delete_module/Makefile
ltp/testcases/kernel/module/delete_module/delete_module01.c
ltp/testcases/kernel/module/delete_module/delete_module02.c
ltp/testcases/kernel/module/delete_module/delete_module03.c
ltp/testcases/kernel/module/delete_module/dummy_del_mod.c
ltp/testcases/kernel/module/delete_module/dummy_del_mod_dep.c

26) Log Message:
The ltp-full-20080229/testcases/kernel/module/delete_module/Makefile will do this:
   @set -e; for i in $(MODULES); do ln -f $$i /tmp/$$i ; done
If the ltp directory and /tmp are not in the same device, an error occurs:
   ln: creating hard link `/tmp/xxx' => `xxx': Invalid cross-device link I suffer from this.
The patch as follows:
Signed-off-by: Wang Fang <wangf@cn.fujitsu.com>

Modified File(s):
ltp/testcases/kernel/module/delete_module/Makefile

27) Log Message:
The memsize is specified by the user in Mb, but it is converted to Kb in the script, so we should convert it to Mb in the output. The following patch solves this problem: igned-off-by: Wang Fang <wangf@cn.fujitsu.com>

Modified File(s):
ltp/testscripts/ltpstress.sh

28) Log Message:
The 9th testcase of inotify02 failed due to event coalescence. We fix this by moving the IN_DELETE test in between of the 2 IN_MOVE_SELF events. Also add the test for event coalescence. Signed-off-by: Li Zefan <lizf@cn.fujitsu.com>

File(s) Modified:
ltp/testcases/kernel/syscalls/inotify/README
ltp/testcases/kernel/syscalls/inotify/inotify02.c

29) Log Message:
I ran the latest LTP(ltp-20080131) on SLES10SP1 and found a failure on the syslog testcases because of getting SIGSEGV at line 79 of testcases/kernel/syscalls/syslog/syslogtst.c.  it is caused by accessing to the second argument when only one argument is provided for syslogtst, by, jburke@redhat.com & a-tsuji@bk.jp.nec.com

Modified File(s):
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

30) Log Message:
A few POSIX fixes from Dustin Kirkland in [1908313]

Modified File(s):
ltp/IDcheck.sh
ltp/runltp
ltp/runltplite.sh

31) Log Message:
cleanup build system a bit

Removed File(s):
gotlibcap.c nolibcap.c

32) Log Message:
When CREATE is not set there is no default, so it is possible to run into the test(1) statement in line 116 with an undefined CREATE, which lets test break. Signed-off-by: Robert Schwebel <r.schwebel@pengutronix.de>

Modified File(s):
ltp/IDcheck.sh 

33) Log Message:
Update file capabilities tests to work on 64-bit kernels.  It switches from manually setting file xattrs to making use of libcap, by,  Serge E. Hallyn <serue@us.ibm.com>

Modified Files:
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/kernel/security/filecaps/verify_caps_exec.c
Added Files:
ltp/testcases/kernel/security/filecaps/makenumcapsh.c

34) Log Message:
1. Minor fixes:
        Added -i to have the number of iterations configurable. However, this number cannot be less than 100 else a calloc fails in init_stat* function, causing sigsegv afterward. The patch also adds the return code checking for these init_stat functions. Added -m args is to have the PASS/FAIL criteria configurable. 
2. Bug fix: disk write access deadlock
        High prio busy thread hogged cpus forbidding kjournald and pdflush daemons to release filesystem locks. This caused timer_thread to hang waiting for the lock.
Signed-off-by: Gilles Carry <gilles.carry@bull.net>

Modified Files:
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/thread_clock/tc-2.c

35) Log Message:
1. Whitespaces cleanup
2. Error checks when initializing stat containers
Signed-off-by: Gilles Carry <gilles.carry@bull.net>

Modified Files:
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c

36) Log Message:
In a lot of cases, we do not really care about the samples and histogram files and their associated gnuplot command files or do not want to save them for example on embedded platforms with limited or no storage. This patch disables generating those files by default and introduce a new parameter to the tests, namely '-s', for when we really want to. Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>

Modified Files:
ltp/testcases/realtime/include/libstats.h
ltp/testcases/realtime/lib/librttest.c
ltp/testcases/realtime/lib/libstats.c

37) Log Message:
1) This patch fixes a concurrency issue in shmctl02. Same issue as in shmat02,
2) Fix return value check from shmat. In case of error, this wrong check was leading to a seg-fault. Same problem as in kill05,
3) Fixes a concurrency issue in shmget02. Same issue as in shmat02 : second key can conflict with the key from another process, 
4) Fix a NFS warning when running rename14 concurrently. In this case, due to the large number of running processes and scheduler decisions, the father task can exit before its sons. Thus, leading to the removal of a file still opened by a son... NFS don't like that, 
Signed-off-by: Renaud Loittiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/shmctl/shmctl02.c
ltp/testcases/kernel/syscalls/ipc/shmdt/shmdt01.c
ltp/testcases/kernel/syscalls/ipc/shmget/shmget02.c
ltp/testcases/kernel/syscalls/rename/rename14.c

38) Log Message:
Fixing a concurrency issue in semctl07.c. This test was using a key hard coded in the source code, leading to conflicts with other instances of the same test. This patch also add a cleanup of the semid in case of failure during the test, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com> 

Modified Files:
ltp/testcases/kernel/syscalls/ipc/semctl/semctl07.c


39) Log Message:
Fixing a concurrency issue in semop02.c. The now, well known issue due to a second key badly created, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/semop/semop02.c

40) Log Message:
Fixes a concurrency issue in semctl01. This test was using usleep to synchronize tasks. On a heavily loaded system, this synchronization is not enough to ensure execution correctness. This patch is a bit more intrusive than my previous ones.
Patch content :
* Define 2 new functions in kernel/syscalls/lib/libtestsuite.c, used to
* synchronize a father and a son using pipes.
    - create_sync_pipes: create a pair of pipes used for the synchronization,
    - wait_son_startup: function used in the father to wait for its son to start ts execution,
    - notify_startup: function used in the son to notify it has started its execution,
* Add a kernel/syscalls/lib/libtestsuite.h file to cleanly export newly
* defines functions,
* Fix the semctl01test. The idea used to synchronize : 
   - For each task created, the father waits for the son to start its execution using the newly define functions,
   - After the last son has been created, the father do a sleep(1) to give time to the sons to execute the semop function,
The final sleep does not guaranty the sons will have time to do the semop. On a REALLY heavily loaded system, this will still fail... The only solution I see to be sure the son is really blocked on the semop before the father continue its execution it to use the wchan info from /proc/<pid>/wchan file..., by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/semctl/Makefile
ltp/testcases/kernel/syscalls/ipc/semctl/semctl01.c
ltp/testcases/kernel/syscalls/lib/libtestsuite.c

41) Log Message:
Fixing some NFS issue(s),  by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/fchownat/fchownat01.c

42) Log Message:
Fix directory remove issue on NFS. On NFS unlinking AND closing all files in a directory is mandaroty before unlinking this directory. This also fix a write in a invalid array entry. fds[5] does not exist since we only defines 5 tests., by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/fchmodat/fchmodat01.c

Added Files:
ltp/testcases/kernel/syscalls/lib/libtestsuite.h

43) Log Message:
Fix directory remove issue on NFS. On NFS unlinking AND closing all files in a directory is mandaroty before unlinking this directory. This also fix a write in a invalid array entry. fds[5] does not exist since we only defines 5 tests., by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified Files:
ltp/testcases/kernel/syscalls/faccessat/faccessat01.c

44) Log Message:
LTP is failing to compile with GCC 3.3.3 due to Makefile's inconsistency. SLES9.X distros are affected by this problem.  This patch fixes how /lib/ipcmsg.h header file is referenced. It works fine with GCC 3.4.X, however, compiling headers doesn't make any sense to me. Signed-off-by: Rafael Folco <rfolco@linux.vnet.ibm.com>

Modified Files:
ltp/testcases/kernel/syscalls/ipc/msgctl/Makefile
ltp/testcases/kernel/syscalls/ipc/msgget/Makefile

45) Log Message:
Fixes the hardcoded file descriptor in the second testcase within dup203.c. Instead of assuming file descriptor 10 is closed, the fix explicitly opens and closes a file descriptor before using it as the second argument of dup2(). We saw issues on some environments where dup2(10,10) was being called, which this fixes, by, Henry Wei <hyei@mvista.com>

Modified Files:
ltp/testcases/kernel/syscalls/dup2/dup203.c

46) Log Message:
We have seen that prio_preempt testcase that is part of realtime tests occasionally hangs. This can be easily recreated on a 8-cpu system, but can be recreated on a 4-cpu system as well when run for a number of iterations. The problem occurs because the first worker thread sometimes fails to call cond_wait on the condvar through which the master thread signals it to start. Since the first thread needs to start the chain of signalling from then on, all other threads just sit in a cond_wait without ever being woken up. The fix is to have a barrier to ensure that the first worker thread doesn't miss the cond_signal. I have tested this patch by running 10s of thousands of iterations of the testcase. Without the patch I can recreate the problem fairly easily, by, Sripathi Kodi <sripathik@in.ibm.com>

Modified Files:
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c

47) Log Message:
Fixing Build Failures on Fedora Machine, by, psuriset@linux.vnet.ibm.com

Modified Files:
ltp/testcases/kernel/numa/test.sh

LTP-20080229

1)  Log Message: lcov: adding support for gzipped html based on patch by dnozay@vmware.com
File(s) Modified:
ltp/utils/analysis/lcov/lcovrc
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/bin/genhtml

2) Log Message: Fix for Don´t call Domain type on test create, by, "Serge E. Hallyn" <serue@us.ibm.com>
File(s) Modified:
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch
ltp/testscripts/test_selinux.sh

3) Log Message: Some code cleanup in PID & SYSVIPC namespace testcases, by, "Rishikesh K. Rajak" <risrajak@linux.vnet.ibm.com>
Modified File(s):
ltp/testcases/kernel/containers/pidns/pidns01.c
ltp/testcases/kernel/containers/pidns/pidns02.c
ltp/testcases/kernel/containers/pidns/pidns03.c
ltp/testcases/kernel/containers/sysvipc/shmnstest.c

4) Log Message: Some Cleanups and running hugetlb independantly
Modified File(s):
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap02.c
ltp/testcases/kernel/mem/hugetlb/hugemmap/hugemmap04.c
Added File(s):
ltp/runtest/hugetlb

5) Log Message: Give Execute Permission to numa01.sh, by, Pradeep K Surisetty <pradeepkumars@in.ibm.com>
Modified File(s):
ltp/testcases/kernel/numa/Makefile

6) Log Message: Let tests send sigchld to unconfined_t.  Without this, the selinux testsuite on Fedora 8 hangs at selinux_task_create.sh, by, "Serge E. Hallyn" <serue@us.ibm.com>
Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch

7) Log Message: str_echo function expects a file descriptor & not an address, by, Craig Meier <crmeier@ghs.com>
Modified File(s):
ltp/testcases/kernel/sched/clisrv/pthserv.c

8) Log Message: Build Error Fix by checking for installation of setcap or xattr headers, by, "Serge E. Hallyn" <serue@us.ibm.com>
Modified File(s):
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh
Added Files:
ltp/testcases/kernel/security/filecaps/check_xattr.c

9) Log Message: mark test_exit as noreturn #1891129 by Marcus Meissner, by, Mike Frysinger <vapier@users.sourceforge.net>
Modified File(s):
ltp/ltp/include/test.h 
Added File(s): 
ltp/ltp/include/compiler.h

10)Log Message: Disktest application update to version 1.4.2, by, Brent Yardley <yardleyb@us.ibm.com>
Modified File(s):
ltp/testcases/kernel/io/disktest/Getopt.c
ltp/testcases/kernel/io/disktest/Getopt.h
ltp/testcases/kernel/io/disktest/Makefile
ltp/testcases/kernel/io/disktest/Makefile.aix
ltp/testcases/kernel/io/disktest/Makefile.linux
ltp/testcases/kernel/io/disktest/Makefile.windows
ltp/testcases/kernel/io/disktest/README
ltp/testcases/kernel/io/disktest/childmain.c
ltp/testcases/kernel/io/disktest/childmain.h
ltp/testcases/kernel/io/disktest/defs.h
ltp/testcases/kernel/io/disktest/dump.c
ltp/testcases/kernel/io/disktest/dump.h
ltp/testcases/kernel/io/disktest/globals.c
ltp/testcases/kernel/io/disktest/globals.h
ltp/testcases/kernel/io/disktest/io.c
ltp/testcases/kernel/io/disktest/io.h
ltp/testcases/kernel/io/disktest/main.c
ltp/testcases/kernel/io/disktest/main.h
ltp/testcases/kernel/io/disktest/parse.c
ltp/testcases/kernel/io/disktest/parse.h
ltp/testcases/kernel/io/disktest/sfunc.c
ltp/testcases/kernel/io/disktest/sfunc.h
ltp/testcases/kernel/io/disktest/stats.c
ltp/testcases/kernel/io/disktest/stats.h
ltp/testcases/kernel/io/disktest/threading.c
ltp/testcases/kernel/io/disktest/threading.h
ltp/testcases/kernel/io/disktest/timer.c
ltp/testcases/kernel/io/disktest/timer.h
ltp/testcases/kernel/io/disktest/usage.c
ltp/testcases/kernel/io/disktest/usage.h
ltp/testcases/kernel/io/disktest/man1/disktest.1
Added File(s):
ltp/testcases/kernel/io/disktest/CHANGELOG
ltp/testcases/kernel/io/disktest/disktest.spec
ltp/testcases/kernel/io/disktest/signals.c
ltp/testcases/kernel/io/disktest/signals.h
ltp/testcases/kernel/io/disktest/man1/disktest_manual.html

11) Log Message: Pid Namespace were getting segmentation fault while running on -mm kernel. After debugging by container development team they found the exact root cause. The Page_Size was reset, by, "Rishikesh K. Rajak" <risrajak@linux.vnet.ibm.com>
Modified File(s):
ltp/testcases/kernel/containers/libclone/libclone.c

12) Log Message: Based on the discussion at LKML (http://lkml.org/lkml/2007/11/29/325), Ricardo Salveti de Araujo <rsalveti@linux.vnet.ibm.com> removed the test case that verifies if the pgoff is "valid"
Modified File(s):
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

13) Log Message: The problem was the position of the parenthesis, which made "fd" receive the result of the < (lower than) operation, instead of the actual return value from open. This implicates a lot of trouble in any subsequent reference to fd, used in write and mmap. Because of this, mmap was returning an error number (ENODEV), instead of a valid memory address, which created the mprotect trouble. Fix by Jose Otavio Rizzatti Ferreira <joseferr@br.ibm.com>
Modified File(s):
ltp/testcases/kernel/syscalls/mprotect/mprotect02.c

14) Log Message: Patrick Kirsch <pkirsch@suse.de> personally thinks, it would be better to print out the "actual" return code from sysconf call instead of the errno, which may lead to confusion, because the actual return code from the failing sysconf is probably not 0 (as errno is defined in previous context).
Modified File(s):
ltp/testcases/kernel/syscalls/sysconf/sysconf01.c

15) Log Message: Do not store cache files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/realtime/autom4te.cache/traces.0
ltp/testcases/realtime/autom4te.cache/traces.1
ltp/testcases/realtime/autom4te.cache/requests
ltp/testcases/realtime/autom4te.cache/output.1
ltp/testcases/realtime/autom4te.cache/output.0

16) Log Message: Remove compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Modified File(s):
ltp/testcases/kernel/syscalls/pcllib/libtool
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/config.h
ltp/testcases/kernel/syscalls/pcllib/config.log
ltp/testcases/kernel/syscalls/pcllib/config.status

17) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/test/.deps/cobench.Po
ltp/testcases/kernel/syscalls/pcllib/test/.deps/cothread.Po

18) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/man/Makefile

19) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/pcl/.deps/pcl_version.Plo
ltp/testcases/kernel/syscalls/pcllib/pcl/.deps/pcl.Plo

20) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/autom4te.cache/traces.0
ltp/testcases/kernel/syscalls/pcllib/autom4te.cache/traces.1
ltp/testcases/kernel/syscalls/pcllib/autom4te.cache/requests
ltp/testcases/kernel/syscalls/pcllib/autom4te.cache/output.1
ltp/testcases/kernel/syscalls/pcllib/autom4te.cache/output.0

21) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/include/Makefile

22) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/test/Makefile

23) Log Message: punt compiled files, by, Mike Frysinger <vapier@users.sourceforge.net>
Deleted File(s):
ltp/testcases/kernel/syscalls/pcllib/pcl/Makefile

24) Log Message: This will address the problem until distros update with latest glibc which has fallocate implementation. This is not extensively tested and built with some assumption like
     o we are testing on x86* and ppc* archs
     o on 64 bit machine we will always see 64 bit kernel running
by, Nagesh Sharyathi <sharyathi@in.ibm.com>
Modified File(s):
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c

25) Log Message:
Since msgmni now scales to the memory size, it may reach big values.
To avoid forking 2*msgmni processes and create msgmni msg queues, do not take
msgmni from procfs anymore.
Just define it as 16 (which is the MSGMNI constant value in linux/msg.h)

Also fixed the Makefiles in ipc/lib and ipc/msgctl: there was no dependency
on the lib/ipc*.h header files.

Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>

Modified File(s):
ltp/testcases/kernel/syscalls/ipc/lib/Makefile
ltp/testcases/kernel/syscalls/ipc/lib/ipcmsg.h
ltp/testcases/kernel/syscalls/ipc/msgctl/Makefile
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c

26) Log Message:
Here is a second round of cleanup and fixes for the realtime testcases.

1) Make sched_jitter use the create_fifo_thread() library function instead of an open coded solution,
2) Prio-wake calls rt_init() twice, remove the second call,
3) Make sbrk_mutex less verbose by default. One can still use the -v option to get the whole output,
4) It's better to calculate the histogram before saving it. This was introduced in an earlier commit of mine fixing the quantile calculation, 5) Fix runtime displaying of the min and max latencies (when used with -v3). While at it, remove an uneeded avg variable,
6) Various tests still have a hardcoded value for the quantile nines. Use a value automatically calculated from the number of iterations,
7) The log10() call used for automatic quantile nines calculation returns a double result. Cast it to an int. The exp10() call used in stats_quantiles_calc() for checking purposes returns a double result which is compared against a long. Cast it to a long. This allows the following comparison: data->size < (long)exp10(quantiles->nines) to really be false when quantiles->nines has been calculated as log10(data->size).
More generally, it seems that (at least with gcc 4.1.1):
        long i = 10000;
        double f = exp10(log10(i))

        yields (i < f) being true due to rounding,
8) Add latency tracing capability to pthread_kill_latency as is already done on a few other latency tests (gtod_latency, sched_latency, ...),
9) The '::' optional argument specifier for getopt used by the '-v' option is a GNU extension, is not portable and does not work. For example it's not even described in the Debian getopt(3) manpage. Make the '-v' option require a non optional argument,
10)The print buffer is only ever flushed when it is full. Add flushing when the test terminates vi atexit(),
11)The 'period missed' check of the thread first loop should not depend on the thread starting time. This is especially visible on 'slow' platforms where one cannot run the test if thread creation takes a long time. Fix it by removing this dependency. All delays are now calculated relative to when the thread starts,

Signed-off-by: Sebastien Dugue <sebastien.dugue@bull.net>
Cc: Darren Hart <dvhltc@us.ibm.com>
Cc: Tim Chavez <tinytim@us.ibm.com>
Cc: Matthieu CASTET <matthieu.castet@parrot.com>
Acked-by: Chirag <chirag@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/prio-wake/prio-wake.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/lib/librttest.c
ltp/testcases/realtime/lib/libstats.c

27) Log Message: lcov: fixed problem with pre gcc-3.3 versions.
read_gcov_headers does not return valid results for pre gcc-3.3 versions. Due to an unnecessary check, parsing of gcov files was aborted. Fix by removing check, by, Peter Oberparleiter <oberpapr@users.sourceforge.net>
Modified File(s):
ltp/utils/analysis/lcov/bin/geninfo

28) Log Message: lcov: fix error when trying to use genhtml -b
genhtml fails when the data file contains an entry which is not found in the base file, by, Peter Oberparleiter <oberpapr@users.sourceforge.net>
Modified File(s):
ltp/utils/analysis/lcov/bin/genhtml

29) Log Messaage: run_auto.sh file for realtime/func/pthread_kill_latency/testcase got missed out in first release of realtime tests. This patch adds run_auto.sh for testcase which is required to run this particular test through top-level run script, by, sudhanshu <sudh@linux.vnet.ibm.com>
Added File(s):
ltp/testcases/realtime/func/pthread_kill_latency/run_auto.sh

30) Log Message: Since msgmni now scales to the memory size, it may reach big values. To avoid forking 2*msgmni processes and create msgmni msg queues, take the min between the procfs value and MSGMNI (as found in linux/msg.h).
Also integrated the following in libipc.a:
  . get_max_msgqueues()
  . get_used_msgqueues()
Signed-off-by: Nadia Derbey <Nadia.Derbey@bull.net>
Modified File(s):
ltp/testcases/kernel/syscalls/ipc/lib/ipcmsg.h
ltp/testcases/kernel/syscalls/ipc/lib/libipc.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl08.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl09.c
ltp/testcases/kernel/syscalls/ipc/msgget/Makefile
ltp/testcases/kernel/syscalls/ipc/msgget/msgget03.c
Added File(s):
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl10.c
ltp/testcases/kernel/syscalls/ipc/msgctl/msgctl11.c

31) Log Message: waitpid06.c uses a flag to detect whether something went wrong during the test. The issue is that this flag is not initialized, and I get random failure reports. Other tests might suffer from the same bug, but I did not observe it yet. The enclosed patch fixes this in a trivial way for waitpid06. Surprisingly, with my debian package I never got the error, but when I compiled myself, by, Louis Rilling <Louis.Rilling@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid06.c

32) Log Message:
There are numerous cleanups, fixes and features went into our locally maintained version of realtime tests, since its intergration in LTP december last year. This patch merges those changes into LTP tree. The patch majorly contains :
- All features, cleanups and fixes done by IBM realtime team over last two
  month or so.
- Change in copyrights( year, symbil and limiting columns to 80 chars)
- Other few cleanups to ltp-realtime tests.
Signed-off-by : Sudhanshu Singh < sudh@linux.vnet.ibm.com>

Modified File(s):
ltp/testcases/realtime/GNUmakefile.am
ltp/testcases/realtime/run.sh
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_jk.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/measurement/rdtsc-latency.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi-tests/parse-testpi1.py
ltp/testcases/realtime/func/pi-tests/parse-testpi2.py
ltp/testcases/realtime/func/pi-tests/run_auto.sh
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/func/pi-tests/test-skeleton.c
ltp/testcases/realtime/func/pi-tests/testpi-0.c
ltp/testcases/realtime/func/pi-tests/testpi-1.c
ltp/testcases/realtime/func/pi-tests/testpi-2.c
ltp/testcases/realtime/func/pi-tests/testpi-4.c
ltp/testcases/realtime/func/pi-tests/testpi-5.c
ltp/testcases/realtime/func/pi-tests/testpi-6.c
ltp/testcases/realtime/func/pi-tests/testpi-7.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c
ltp/testcases/realtime/func/prio-wake/prio-wake.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_football/parse-football.py
ltp/testcases/realtime/func/sched_football/sched_football.c
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/func/thread_clock/tc-2.c
ltp/testcases/realtime/include/libjvmsim.h
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/include/libstats.h
ltp/testcases/realtime/include/list.h
ltp/testcases/realtime/lib/libjvmsim.c
ltp/testcases/realtime/lib/librttest.c
ltp/testcases/realtime/lib/libstats.c
ltp/testcases/realtime/perf/latency/pthread_cond_latency.c
ltp/testcases/realtime/perf/latency/pthread_cond_many.c
ltp/testcases/realtime/scripts/__init__.py
ltp/testcases/realtime/scripts/setenv.sh
ltp/testcases/realtime/stress/pi-tests/lookup_pi_state.c
ltp/testcases/realtime/stress/pi-tests/testpi-3.c
ltp/testscripts/test_realtime.sh

33) Log Message: waitpid07.c uses a flag to detect whether something went wrong during the test. The issue is that this flag is not initialized, and I get random failure reports, by, Louis Rilling <Louis.Rilling@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid07.c

34) Log Message:
waitpid tests: Fix failure detection flag initialization.
On a similar pattern as waitpid06 and waitpid07, waitpid08-13 use a failure detection flag (called 'fail' instead of 'flag'). However except in waitpid09, this flag may be used uninitialized, which causes the test to randomly report failure. This patch ensures that the flag is reset at the beginning of each loop.
Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid08.c
ltp/testcases/kernel/syscalls/waitpid/waitpid10.c
ltp/testcases/kernel/syscalls/waitpid/waitpid11.c
ltp/testcases/kernel/syscalls/waitpid/waitpid12.c
ltp/testcases/kernel/syscalls/waitpid/waitpid13.c

35) Log Message:
waitpid03/04: Fix condition numbers displayed when reporting errors.
The condition numbers displayed while reporting errors in waitpid03 and waitpid04 are used initialized and are not consistently updated, which may lead to useless reports.
Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid03.c
ltp/testcases/kernel/syscalls/waitpid/waitpid04.c

36) Log Message:
waitpid02-05: remove unused defines related to failure handling. Signed-off-by: Louis Rilling <Louis.Rilling@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/waitpid/waitpid02.c
ltp/testcases/kernel/syscalls/waitpid/waitpid03.c
ltp/testcases/kernel/syscalls/waitpid/waitpid04.c
ltp/testcases/kernel/syscalls/waitpid/waitpid05.c

37) Log Message: Adding option to build TIMER test cases as well, by, Subrata Modak <subrata@linux.vnet.ibm.com>
Modified File(s):
ltp/testcases/kernel/Makefile

38) Log Message: Removing these files as they get automatically generated during build, by, Max Stirling <vicky.irobot@gmail.com>
Deleted File(s):
ltp/testcases/ballista/ballista/MakefileHost
ltp/testcases/ballista/ballista/MakefileTarget

39) Log Message: Many tests cannot be executed concurrently. I have a few patches to make it possible to execute some tests in parallel/concurrency, to check SMP safeness, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c

40) Log Message: Fix NFS issues in tst_rmdir (directory non empty) due to an unmapped file, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

41) Log Message: Fix a concurrency issue due to the (false) sharing of file /dev/shm/cache. This patch just create a different file for each process and unlink the file before exiting, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c

42) Log Message: The variable dfOpts (in #324) is seting to NULL even if the df is not a symbolic link.(It has to be "-P" itself to get the output portable).And so the "df $dfOpts $dir" (line #326) command is not giving a result expected by the succeeding statements. I have tested this patch both in lvm and fdisk partitions and found its working fine, by, Sudeesh John <sudeeshjohn@in.ibm.com>
Modified File(s):
ltp/testcases/kernel/fs/doio/rwtest.sh

43) Log Message:
CLOCK_PROCESS_CPUTIME_ID and CLOCK_THREAD_CPUTIME_ID are also supported besides CLOCK_REALTIME and CLOCK_MONOTONIC. That's the cause of the failure of clock_gettime03, timer_create02 and timer_create04. Another cause is that struct sigevent evp is assigned with invalid values when option is 1. That's the cause of the failure of timer_create02 and timer_create03. CLOCK_REALTIME_HR and CLOCK_MONOTONIC_HR have been removed in the later kernel versions, hence the failures in the test. I am still trying to find out if any kernel versions used to support these. CLOCK_PROCESS_CPUTIME_ID and CLOCK_THREAD_CPUTIME_ID are supported from 2.6.12 kernel version onwards and the test case needs to be modified for this change. Also in timer_create02.c, setup_test() case1 needs to be modified so as to make evp NULL instead of its members. Since the testcase behaves differently for different kernel versions, a version check needs to be added for making it pass across versions. I'm removing the HR clocks from the tests along with other changes, by, Anoop V. Chakkalakkal <anoop.vijayan@in.ibm.com>

Modified File(s):
ltp/testcases/kernel/timers/clock_gettime/clock_gettime03.c
ltp/testcases/kernel/timers/clock_settime/clock_settime03.c
ltp/testcases/kernel/timers/include/common_timers.h
ltp/testcases/kernel/timers/timer_create/timer_create02.c
ltp/testcases/kernel/timers/timer_create/timer_create03.c
ltp/testcases/kernel/timers/timer_create/timer_create04.c

44) Mog Message:
This patch -try- to cleanup the mem03 test and fix a concurrency problem. Mainly, the test creates and removes files in the current directory. Since the tst_tmpdir() function was not used, several instances of the test was creating and removing files from each others !, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/memmap/mem03.c

45) Log Message: The problem is that the kernel file is vmlinux* instead of vmlinuz* on SLES, but file_test.sh always try to grep vmlinuz* under /boot/. Here is the patch and the test result with the patch, by, shenlinf <shenlinf@cn.ibm.com>
Modified File(s):
ltp/testcases/commands/ade/file/file_test.sh

46) Log Message: Here is a patch fixing concurrency issue in mremap04. Just use a shm key returned from the getipckey() function instead of a fixed hardcoded value, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>
Modified File(s):
ltp/testcases/kernel/syscalls/mremap/Makefile
ltp/testcases/kernel/syscalls/mremap/mremap04.c

47) Log Message:
LTP-kill05-bad-check-fix.patch:
  - Fix return value check from shmat. In case of error, this wrong check was leading to a seg-fault.
LTP-kill05-shmid_delete-fix.patch:
 - Fix deletion of the memory segment. Due to the change of process UID during the test, the segment was created by ROOT and deleted (or tried to be deleted) by user "bin". This is of course not possible. And it is also impossible to switch back uid to ROOT. Solution adopted : doing a fork in which the test is performed. The initial process staying with ROOT uid.
LTP-kill05-concurrency-fix.patch
 - Paranoia concurrency fix. I have not encounter any real issue, but it is probably safer to be sure each process is using a different segment. -> use tst_tmpdir, to make getipckey generating a different key for each running process, by, Renaud Lottiaux <Renaud.Lottiaux@kerlabs.com>

Modified File(s):
ltp/testcases/kernel/syscalls/kill/kill05.c

48) Log Message:
1) The pi-tests don't use the librttest infrastructure and simply duplicate code. This patch ensures that those tests use librttest.
2) The thread-clock test doesn't use the librttest infrastructure. This patch ensures that it does.
3) Adds missing headers to the following files,
Signed-Off-By: Chirag <chirag@linux.vnet.ibm.com>,
Acked-By: Dinakar Guniguntala <dino@in.ibm.com>,
Acked-By: Sebastien Dugue <sebastien.dugue@bull.net>

Modified File(s):
ltp/testcases/realtime/func/pi-tests/parse-testpi1.py
ltp/testcases/realtime/func/pi-tests/parse-testpi2.py

LTP-20080131

1)  Log Message: Some more updates to Reference Policy Checks by "Serge E. Hallyn" <serue@us.ibm.com> 
File(s) Affected:
ltp/testscripts/test_selinux.sh
File(s) Added:
ltp/testcases/kernel/security/selinux-testsuite/misc/check_sbin_deprecated.pl
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch
ltp/testcases/kernel/security/selinux-testsuite/misc/update_refpolicy.sh

2) Log Message: This solves the configuration issue reported by Santwan <santwana.samantray@in.ibm.com>, and, fixed by Amit Arora <amitarora@in.ibm.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/mlockall/mlockall02.c

3) Log Message: Fix various printf strings to correct formatting and remove spaces, by, Randy Dunlap <rdunlap@xenotime.net>
File(s) Affected:
ltp/tools/apicmds/ltpapicmd.c

4) Log Message: gcov-kernel patch for linux 2.6.23, by Peter Oberparleiter <oberpapr@users.sourceforge.net>
File(s) Added:
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.23-gcov-arm-eabi.patch
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.23-gcov-arm-hack.patch
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.23-gcov.patch

5) Log Message: Filter non-word characters in function name as they would break our file format which uses comma and '=' as field separator, by Peter Oberparleiter <oberpapr@users.sourceforge.net>
File(s) Affected:
/cvsroot/ltp/utils/analysis/lcov/bin/geninfo

6) Log Message: Add dependency information for linux_syscall_numbers.h, by Mike Frysinger <vapier@gentoo.org>
File(s) Affected:
ltp/testcases/kernel/include/Makefile

7) Log Message: Testcases contributed by Sharyathi Nagesh <sharyath@in.ibm.com>
File(s) Affected:
ltp/runtest/syscalls
ltp/testcases/kernel/include/i386.in
ltp/testcases/kernel/include/ia64.in
ltp/testcases/kernel/include/powerpc.in
ltp/testcases/kernel/include/powerpc64.in
ltp/testcases/kernel/include/s390.in
ltp/testcases/kernel/include/s390x.in
ltp/testcases/kernel/include/sparc.in
ltp/testcases/kernel/include/sparc64.in
ltp/testcases/kernel/include/x86_64.in

File(s) Added:
ltp/testcases/kernel/syscalls/fallocate/Makefile
ltp/testcases/kernel/syscalls/fallocate/fallocate01.c
ltp/testcases/kernel/syscalls/fallocate/fallocate02.c
ltp/testcases/kernel/syscalls/fallocate/fallocate03.c
ltp/testcases/kernel/syscalls/fallocate/run.sh

8) Log Message: Fix for situations when it fails even on NUMA node, enabling proper identification of nodes, by psuriset <psuriset@linux.ibm.com>
File(s) Affected:
ltp/testcases/kernel/numa/numa01.sh
ltp/testcases/kernel/numa/numa_node_size.c
ltp/testcases/kernel/numa/test.sh

9) Log Message: Terminates the tests if __NR_fadvise64 is 0, by Masatake YAMATO <yamato@redhat.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c

10) Log Message: Randomly generating a no. to avoid the test case to fail, by Sridhar Vinay <vinaysridhar@in.ibm.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

11) Log Message: Jeff Burke <jburke@redhat.com> wanted this unnecessary file to be removed
FIle(s) Affected:
ltp/testcases/pounder21/test_scripts/statslogging.orig

12) Log Message: Some fixes for log directory and execute permission to the script, by Sudhanshu Singh <sudh@linux.vnet.ibm.com> and Jeff Burke <jburke@redhat.com>
File(s) Affected:
ltp/testcases/realtime/README
File(s) Removed:
ltp/testscripts/realtime.sh
File(s) Added:
ltp/testscripts/test_realtime.sh

13) Log Message: Still more fix for Randomly generating a no. to avoid the test case to fail, by Sridhar Vinay <vinaysridhar@in.ibm.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/syslog/syslogtst.c

14) Log Message: "hp_func" should be protected through pthread_mutex or similar, by, Yi Xu <yxu@suse.de>
File(s) Affected:
ltp/testcases/open_posix_testsuite/conformance/interfaces/pthread_create/1-6.c

15) Log Message:
Huge Changes from Cai Qian <qcai@redhat.com>. Please see the Description
below:

The updated version
has the following improvments,

- simplify maintenance

- fix several bugs

- better automation

- extend support on Debian and Fedora

- merge Poornima Nayak <Poornima.Nayak@in.ibm.com> 's latest patch

- other changes

The new version simplifies code layout, and all tools under lib/
directory are standalone and reusable, all configurable variables are
under the file runkdump.conf. There are also included sample
configuration files for different distros and test components. In
addition, it avoided code duplication by merging RHEL and SLES specified
code in lkdtm module together, and add a checking before hand. The
working flow in main script has also been tidied up. verify and
verify_dump have been unified. unused file "summary" has been deleted.

In previous version,
* The part of comparing kernel version in setup will not work proper
  if the kernel grows to something like 2.7.1 or 2.8.1.
* verify_dump will not able to find previous vmcore if vmcore creation
  and vmcore verfication happen at different hours.
* Other random bugs because of code complexity.

In the new version, once you define everything in a config file, it will
run in an automatically fashion on some of systems, if there is proper
tools installed.

The code has been rewritten in POSIX shell syntax, and made more
portable, and attempted to remove hard-coded stuff as much as
possible. It has been tested fairly on RHEL5.1, SLES10sp1, Debian
unstable, and Fedora 8. If needed I can send you result logs. Sachin
has done a quick test on PPC64 machine running RHEL5.1 and the script
run fine. Poornima has done some code review.
Poornima's patch has been merged,
1. Crashkerenl reservation check is modified to support any craskernel
value.  
2. A message before system reboots
3. Added one more line to 'status' if dump verification passed.
4. Modified 'README' file
5. If kdump start fails for invalid arguments in kdump.conf is fixed
6. Replaced MAKE_OPTS with MAKE_OPTIONS.
7. Removed some unwanted statements.

Other changes included that all tests descriptions have been documented
in doc/ALL_TEST.txt. KNLD (dump over scp with link delay) test case has
been merged into KNSCP (dump over scp). Once LINK_DELAY has been defined
somewhere in configuration file, all test cases (KNSCP and KNNFS)
dumping to a network destination will take advantage of it. If
LINK_DELAY is not defined or equals to 0, KNSCP and KNNFS will just the
same as in previous version.

Cai Qian

Modified Files:
ltp/testcases/kdump/Makefile ltp/testcases/kdump/README
Added Files:
ltp/testcases/kdump/runkdump.conf
ltp/testcases/kdump/runkdump.sh
ltp/testcases/kdump/doc/ALL_TEST.txt
ltp/testcases/kdump/doc/OO_Descriptions.txt
ltp/testcases/kdump/doc/README
ltp/testcases/kdump/doc/TEST_PLAN.txt
ltp/testcases/kdump/lib/Makefile
ltp/testcases/kdump/lib/setup.sh
ltp/testcases/kdump/lib/ssh.tcl
ltp/testcases/kdump/lib/sysinfo.sh
ltp/testcases/kdump/lib/test.sh
ltp/testcases/kdump/lib/verify.sh
ltp/testcases/kdump/lib/crasher/Makefile
ltp/testcases/kdump/lib/crasher/crasher.c
ltp/testcases/kdump/lib/kprobes/Makefile
ltp/testcases/kdump/lib/kprobes/kprobes.c
ltp/testcases/kdump/lib/lkdtm/Makefile
ltp/testcases/kdump/lib/lkdtm/lkdtm.c
ltp/testcases/kdump/lib/lkdtm/lkdtm.c.orig
ltp/testcases/kdump/sample/runkdump.BASIC_LKDTM.RHEL
ltp/testcases/kdump/sample/runkdump.BASIC_LKDTM.SLES
ltp/testcases/kdump/sample/runkdump.CRASHER.RHEL
ltp/testcases/kdump/sample/runkdump.CRASHER.SLES
ltp/testcases/kdump/sample/runkdump.EXTRA_LKDTM.RHEL
ltp/testcases/kdump/sample/runkdump.EXTRA_LKDTM.SLES
Removed Files:
ltp/testcases/kdump/TEST_PLAN.txt
ltp/testcases/kdump/crash_cmds ltp/testcases/kdump/distro
ltp/testcases/kdump/kdump_propagate ltp/testcases/kdump/master
ltp/testcases/kdump/setup ltp/testcases/kdump/summary
ltp/testcases/kdump/sysinfo ltp/testcases/kdump/test
ltp/testcases/kdump/tests ltp/testcases/kdump/verify
ltp/testcases/kdump/verify_dump
ltp/testcases/kdump/rhtools/Makefile
ltp/testcases/kdump/rhtools/OO_Descriptions.txt
ltp/testcases/kdump/rhtools/crasher_mod/Makefile
ltp/testcases/kdump/rhtools/crasher_mod/crasher.c
ltp/testcases/kdump/rhtools/lkdtm_mod/Makefile
ltp/testcases/kdump/rhtools/lkdtm_mod/lkdtm.c
ltp/testcases/kdump/susetools/Makefile
ltp/testcases/kdump/susetools/OO_Descriptions.txt
ltp/testcases/kdump/susetools/crasher_mod/Makefile
ltp/testcases/kdump/susetools/crasher_mod/crasher.c
ltp/testcases/kdump/susetools/lkdtm_mod/Makefile
ltp/testcases/kdump/susetools/lkdtm_mod/lkdtm.c
ltp/testcases/kdump/testlists/crasher
ltp/testcases/kdump/testlists/lkdtm.base
ltp/testcases/kdump/testlists/lkdtm.exha

16) Log Message: A huge Update to the RT Linux Tree by Sebastien Dugu <sebastien.dugue@bull.net>
Modified Files:
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_football/sched_football.c
ltp/testcases/realtime/func/sched_latency/sched_latency.c

17) Log Message: Fix for remap_file_pages(01/02) failing on 31(s390) bit linux guest running RHEL4.6, by, joseferr@linux.vnet.ibm.com
Modifiled File(s):
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

18) Log Message: Fixing missing argument for open() function when O_CREAT is in the flag, by, Yi Xu <yxu@suse.de>
Modified File(s):
testcases/kernel/syscalls/clone/clone02.c
testcases/kernel/syscalls/fcntl/fcntl18.c
testcases/kernel/syscalls/fdatasync/fdatasync01.c
testcases/kernel/syscalls/getdents/getdents04.c
testcases/kernel/syscalls/mprotect/mprotect02.c
testcases/kernel/syscalls/mprotect/mprotect03.c
testcases/kernel/syscalls/open/open04.c
testcases/kernel/syscalls/pselect/pselect01.c
testcases/kernel/syscalls/read/read02.c
testcases/kernel/syscalls/select/select01.c
testcases/kernel/syscalls/sendfile/sendfile03.c
testcases/kernel/syscalls/splice/splice01.c
testcases/kernel/syscalls/symlink/symlink01.c
testcases/kernel/syscalls/tee/tee01.c
testcases/network/ipv6/sendfile6/testsf_c6.c
testcases/network/tcp_cmds/sendfile/testsf_c.c
testcases/kernel/fs/doio/iogen.c

19) Log Message: Fix for generation of HTML output for absolute paths, by, Subrata Modak <subrata@linux.vnet.ibm.com>
Modified File(s):
ltp/runltp
ltp/tools/genhtml.pl

20) Log Message: Initial set of Filecaps testcases from Serge, "Serge E. Hallyn" <serue@us.ibm.com>
Modified Files:
ltp/runltp
ltp/testcases/kernel/security/Makefile
Added Files:
ltp/runtest/filecaps
ltp/testcases/kernel/security/filecaps/Makefile
ltp/testcases/kernel/security/filecaps/README
ltp/testcases/kernel/security/filecaps/check_simple_capset.c
ltp/testcases/kernel/security/filecaps/checkforfilecaps.sh
ltp/testcases/kernel/security/filecaps/checkforlibcap.sh
ltp/testcases/kernel/security/filecaps/filecapstest.sh
ltp/testcases/kernel/security/filecaps/gotlibcap.c
ltp/testcases/kernel/security/filecaps/inh_capped.c
ltp/testcases/kernel/security/filecaps/nolibcap.c
ltp/testcases/kernel/security/filecaps/print_caps.c
ltp/testcases/kernel/security/filecaps/verify_caps_exec.c
ltp/testscripts/test_filecaps.sh

21) Log Message: testcase ballista gcc 4.3 conformance, by, Patrick Kirsch <pkirsch@suse.de>
Modified File(s):
ltp/testcases/ballista/ballista/compile/bparser.cpp

22) Log Message: Enhancing runltp to run testcases in desired sequence, by, Subrata Modak <subrata@linux.vnet.ibm.com>
Modified File(s):
ltp/runltp

23) Log Message: Adding volatile to avoid the compiler optimization to produce an infinite, by, Carmelo AMOROSO <carmelo.amoroso@st.com>, Haavard Skinnemoen <hskinnemoen@atmel.com>
Modified File(s):
ltp/testcases/kernel/syscalls/times/times03.c

24) Log Message: Extend the unconfined_runs_test interface in the selinux testsuite policy to allow the test programs to properly report back to the caller, by, Stephen Smalley <sds@tycho.nsa.gov>
Modified File(s):
ltp/testcases/kernel/security/selinux-testsuite/README
ltp/testcases/kernel/security/selinux-testsuite/misc/sbin_deprecated.patch

25) Log Message: added gcov-kernel patches for linux-2.6.24, by, Peter Oberparleiter <oberpapr@users.sourceforge.net>
Added File(s):
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.24-gcov.patch

26) Log Message: Fix for Build Error issues on NUMA Machine in absence of important RPMs, by, psuriset <psuriset@linux.vnet.ibm.com>
Modified File(s):
ltp/testcases/kernel/numa/Makefile
ltp/testcases/kernel/numa/README
ltp/testcases/kernel/numa/numa01.sh
ltp/testcases/kernel/numa/numa_node_size.c
ltp/testcases/kernel/numa/test.sh

LTP-20071231

1)  Log Message: Update CLONE_NEWPID as value changed in 2.6.23-rc3-mm2, submitted by Sukadev Bhattiprolu <sukadev@us.ibm.com>
File(s) Affected:
ltp/testcases/kernel/containers/libclone/libclone.h

2) Log Message: New Test Cases sendfile05 sendfile06 and sendfile07 for sendfile and sendfile64 syscall, by Masatake YAMATO <yamato@redhat.com>
File(s) Affected:
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/sendfile/sendfile02.c
ltp/testcases/kernel/syscalls/sendfile/sendfile03.c
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c
File(s) Added:
ltp/testcases/kernel/syscalls/sendfile/sendfile05.c
ltp/testcases/kernel/syscalls/sendfile/sendfile06.c
ltp/testcases/kernel/syscalls/sendfile/sendfile07.c

3) Log Message: Fixing the problem of the resolution for ADDRESS_OF_MAIN, by Mark Ver <markver@us.ibm.com>
File(s) Affected:
ltp/testcases/kernel/io/direct_io/diotest4.c

4) Log Message: use caps in "generated warning" since people dont read comments, by Mike Frysinger <vapier@users.sourceforge.net>
File(s) Affected:
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/regen.sh

5) Log Message: Se-linux Reference Policy Updates by Stephen Smalley <sds@tycho.nsa.gov>
File(s) Affected:
ltp/testcases/kernel/security/selinux-testsuite/README
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_readlink.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_rxdir.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_stat.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
ltp/testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te

6) Log Message: New NUMA Testcases by psuriset@linux.vnet.ibm.com
File(s) Affected:
ltp/testcases/kernel/numa/Makefile
ltp/testcases/kernel/numa/README
ltp/testcases/kernel/numa/numa01.sh
File(s) Added:
ltp/testcases/kernel/numa/numa_node_size.c
ltp/testcases/kernel/numa/test.sh

7) Log Message: Fixing mincore the way it generates -EFAULT on s390 by setting a stack limit by "ulimit -s <value>" before its execution, by Anoop <anoop.vijayan@in.ibm.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/mincore/mincore01.c

8) Log Message: add syscall list for arm from Riaz Ur Rahaman
File(s) Affected:
ltp/testcases/kernel/include/linux_syscall_numbers.h
ltp/testcases/kernel/include/order

File(s) Added:
ltp/testcases/kernel/include/arm.in

9) Log Message: Test isn't supported in kernel versions before 2.6.16, by Marco Antonio Fernandes Junior <marcoafj@linux.vnet.ibm.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c

10)Log Message: Reverting Back Stephenś Patch and Applying Jeffś Patch for controlling the tty issue. Also a minor change for the ia64 compile failure.
File(s) Affected:
testcases/kernel/security/selinux-testsuite/README
testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_file.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_capable_net.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_file.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_global.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_ioctl.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_setnice.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_sysctl.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_task_create.te
testcases/kernel/security/selinux-testsuite/refpolicy/test_task_setpgid.te
testcases/kernel/security/selinux-testsuite/tests/execshare/selinux_execshare_parent.c
testcases/kernel/security/selinux-testsuite/tests/file/selinux_file.sh

11) Log Message: A Trivial Fix from Roger Mach <bigmach@us.ibm.com>
File(s) Affected:
ltp/testcases/pounder21/test_scripts/xterm_stress

12) Log Message: tweak config.mk comment to reflect reality, by Mike Frysinger
File(s) Affected:
ltp/Makefile

13) Log Message: Initial Set of Real Time Linux Test Cases, by Nivedita Singhvi <niv@us.ibm.com> & sudhanshu Singh <sudhanshusingh@in.ibm.com>
File(s) Added:
ltp/testcases/realtime/COPYING
ltp/testcases/realtime/GNUmakefile.am
ltp/testcases/realtime/GNUmakefile.in
ltp/testcases/realtime/OO_DESCRIPTION.txt
ltp/testcases/realtime/README
ltp/testcases/realtime/aclocal.m4
ltp/testcases/realtime/autogen.sh
ltp/testcases/realtime/configure
ltp/testcases/realtime/configure.ac
ltp/testcases/realtime/run.sh
ltp/testcases/realtime/autom4te.cache/output.0
ltp/testcases/realtime/autom4te.cache/output.1
ltp/testcases/realtime/autom4te.cache/requests
ltp/testcases/realtime/autom4te.cache/traces.0
ltp/testcases/realtime/autom4te.cache/traces.1
ltp/testcases/realtime/config/GNUmakefile.am
ltp/testcases/realtime/config/GNUmakefile.in
ltp/testcases/realtime/config/autoconf/compile
ltp/testcases/realtime/config/autoconf/config.guess
ltp/testcases/realtime/config/autoconf/config.sub
ltp/testcases/realtime/config/autoconf/depcomp
ltp/testcases/realtime/config/autoconf/install-sh
ltp/testcases/realtime/config/autoconf/missing
ltp/testcases/realtime/doc/HOWTO_ADD_TESTS
ltp/testcases/realtime/doc/TODO
ltp/testcases/realtime/func/GNUmakefile.am
ltp/testcases/realtime/func/GNUmakefile.in
ltp/testcases/realtime/func/async_handler/GNUmakefile.am
ltp/testcases/realtime/func/async_handler/GNUmakefile.in
ltp/testcases/realtime/func/async_handler/async_handler.c
ltp/testcases/realtime/func/async_handler/async_handler_jk.c
ltp/testcases/realtime/func/async_handler/async_handler_tsc.c
ltp/testcases/realtime/func/async_handler/run_auto.sh
ltp/testcases/realtime/func/gtod_latency/GNUmakefile.am
ltp/testcases/realtime/func/gtod_latency/GNUmakefile.in
ltp/testcases/realtime/func/gtod_latency/gtod_infinite.c
ltp/testcases/realtime/func/gtod_latency/gtod_latency.c
ltp/testcases/realtime/func/gtod_latency/run_auto.sh
ltp/testcases/realtime/func/hrtimer-prio/GNUmakefile.am
ltp/testcases/realtime/func/hrtimer-prio/GNUmakefile.in
ltp/testcases/realtime/func/hrtimer-prio/hrtimer-prio.c
ltp/testcases/realtime/func/hrtimer-prio/run.sh
ltp/testcases/realtime/func/matrix_mult/GNUmakefile.am
ltp/testcases/realtime/func/matrix_mult/GNUmakefile.in
ltp/testcases/realtime/func/matrix_mult/matrix_mult.c
ltp/testcases/realtime/func/matrix_mult/run_auto.sh
ltp/testcases/realtime/func/measurement/GNUmakefile.am
ltp/testcases/realtime/func/measurement/GNUmakefile.in
ltp/testcases/realtime/func/measurement/README
ltp/testcases/realtime/func/measurement/preempt_timing.c
ltp/testcases/realtime/func/measurement/rdtsc-latency.c
ltp/testcases/realtime/func/measurement/run.sh
ltp/testcases/realtime/func/periodic_cpu_load/GNUmakefile.am
ltp/testcases/realtime/func/periodic_cpu_load/GNUmakefile.in
ltp/testcases/realtime/func/periodic_cpu_load/mixed_load.sh
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load.c
ltp/testcases/realtime/func/periodic_cpu_load/periodic_cpu_load_single.c
ltp/testcases/realtime/func/periodic_cpu_load/run_auto.sh
ltp/testcases/realtime/func/pi-tests/GNUmakefile.am
ltp/testcases/realtime/func/pi-tests/GNUmakefile.in
ltp/testcases/realtime/func/pi-tests/parse-testpi1.py
ltp/testcases/realtime/func/pi-tests/parse-testpi2.py
ltp/testcases/realtime/func/pi-tests/run_auto.sh
ltp/testcases/realtime/func/pi-tests/sbrk_mutex.c
ltp/testcases/realtime/func/pi-tests/test-skeleton.c
ltp/testcases/realtime/func/pi-tests/testpi-0.c
ltp/testcases/realtime/func/pi-tests/testpi-1.c
ltp/testcases/realtime/func/pi-tests/testpi-2.c
ltp/testcases/realtime/func/pi-tests/testpi-4.c
ltp/testcases/realtime/func/pi-tests/testpi-5.c
ltp/testcases/realtime/func/pi-tests/testpi-6.c
ltp/testcases/realtime/func/pi-tests/testpi-7.c
ltp/testcases/realtime/func/pi_perf/GNUmakefile.am
ltp/testcases/realtime/func/pi_perf/GNUmakefile.in
ltp/testcases/realtime/func/pi_perf/pi_perf.c
ltp/testcases/realtime/func/pi_perf/run_auto.sh
ltp/testcases/realtime/func/prio-preempt/GNUmakefile.am
ltp/testcases/realtime/func/prio-preempt/GNUmakefile.in
ltp/testcases/realtime/func/prio-preempt/prio-preempt.c
ltp/testcases/realtime/func/prio-preempt/run_auto.sh
ltp/testcases/realtime/func/prio-wake/GNUmakefile.am
ltp/testcases/realtime/func/prio-wake/GNUmakefile.in
ltp/testcases/realtime/func/prio-wake/prio-wake.c
ltp/testcases/realtime/func/prio-wake/run_auto.sh
ltp/testcases/realtime/func/pthread_kill_latency/GNUmakefile.am
ltp/testcases/realtime/func/pthread_kill_latency/GNUmakefile.in
ltp/testcases/realtime/func/pthread_kill_latency/pthread_kill_latency.c
ltp/testcases/realtime/func/sched_football/GNUmakefile.am
ltp/testcases/realtime/func/sched_football/GNUmakefile.in
ltp/testcases/realtime/func/sched_football/parse-football.py
ltp/testcases/realtime/func/sched_football/run_auto.sh
ltp/testcases/realtime/func/sched_football/sched_football.c
ltp/testcases/realtime/func/sched_jitter/GNUmakefile.am
ltp/testcases/realtime/func/sched_jitter/GNUmakefile.in
ltp/testcases/realtime/func/sched_jitter/README
ltp/testcases/realtime/func/sched_jitter/run_auto.sh
ltp/testcases/realtime/func/sched_jitter/sched_jitter.c
ltp/testcases/realtime/func/sched_latency/GNUmakefile.am
ltp/testcases/realtime/func/sched_latency/GNUmakefile.in
ltp/testcases/realtime/func/sched_latency/run_auto.sh
ltp/testcases/realtime/func/sched_latency/sched_latency.c
ltp/testcases/realtime/func/thread_clock/GNUmakefile.am
ltp/testcases/realtime/func/thread_clock/GNUmakefile.in
ltp/testcases/realtime/func/thread_clock/run_auto.sh
ltp/testcases/realtime/func/thread_clock/tc-2.c
ltp/testcases/realtime/include/GNUmakefile.am
ltp/testcases/realtime/include/GNUmakefile.in
ltp/testcases/realtime/include/libjvmsim.h
ltp/testcases/realtime/include/librttest.h
ltp/testcases/realtime/include/libstats.h
ltp/testcases/realtime/include/list.h
ltp/testcases/realtime/include/rttests_config.h.in
ltp/testcases/realtime/lib/GNUmakefile.am
ltp/testcases/realtime/lib/GNUmakefile.in
ltp/testcases/realtime/lib/libjvmsim.c
ltp/testcases/realtime/lib/librttest.c
ltp/testcases/realtime/lib/libstats.c
ltp/testcases/realtime/perf/GNUmakefile.am
ltp/testcases/realtime/perf/GNUmakefile.in
ltp/testcases/realtime/perf/latency/GNUmakefile.am
ltp/testcases/realtime/perf/latency/GNUmakefile.in
ltp/testcases/realtime/perf/latency/cpunoise.sh
ltp/testcases/realtime/perf/latency/cpunoise2000.sh
ltp/testcases/realtime/perf/latency/disknoise.sh
ltp/testcases/realtime/perf/latency/pthread_cond_latency.c
ltp/testcases/realtime/perf/latency/pthread_cond_many.c
ltp/testcases/realtime/perf/latency/pthread_cond_many_histogram.sh
ltp/testcases/realtime/perf/latency/run.sh
ltp/testcases/realtime/scripts/__init__.py
ltp/testcases/realtime/scripts/parser.py
ltp/testcases/realtime/scripts/run_c_files.sh
ltp/testcases/realtime/scripts/setenv.sh
ltp/testcases/realtime/stress/GNUmakefile.am
ltp/testcases/realtime/stress/GNUmakefile.in
ltp/testcases/realtime/stress/pi-tests/GNUmakefile.am
ltp/testcases/realtime/stress/pi-tests/GNUmakefile.in
ltp/testcases/realtime/stress/pi-tests/lookup_pi_state.c
ltp/testcases/realtime/stress/pi-tests/testpi-3.c
ltp/testcases/realtime/tools/ftqviz.py
ltp/testscripts/realtime.sh

14) Log Message: Updates for Some Copyright and License Declarations
File(s) Affected:
ltp/testcases/realtime/GNUmakefile.am
ltp/testcases/realtime/OO_DESCRIPTION.txt
ltp/testcases/realtime/README
ltp/testcases/realtime/autogen.sh
ltp/testcases/realtime/configure.ac
ltp/testcases/realtime/run.sh

15) Log Message: Initial set of PID Namespace testcase contributed by "Rishikesh K. Rajak" <risrajak@linux.vnet.ibm.com>
File(s) Added:
ltp/testcases/kernel/containers/pidns/Makefile
ltp/testcases/kernel/containers/pidns/README
ltp/testcases/kernel/containers/pidns/check_pidns_enabled.c
ltp/testcases/kernel/containers/pidns/pidns01.c
ltp/testcases/kernel/containers/pidns/pidns02.c
ltp/testcases/kernel/containers/pidns/pidns03.c
ltp/testcases/kernel/containers/pidns/runpidnstest.sh
ltp/testcases/kernel/containers/pidns/runtests_noltp.sh

File(s) Affected:
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/container_test.sh

16) Log Message: Changed the way Copyrights and License agreements are declared
File(s) Affected:
ltp/testcases/kernel/containers/README
ltp/testcases/kernel/containers/TEST_PLAN.txt
ltp/testcases/kernel/containers/check_for_unshare.c
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/sysvipc/check_ipcns_enabled.c
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
ltp/testcases/kernel/containers/sysvipc/runtests_noltp.sh
ltp/testcases/kernel/containers/sysvipc/shmnstest.c
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/utsname/README
ltp/testcases/kernel/containers/utsname/check_utsns_enabled.c
ltp/testcases/kernel/containers/utsname/runtests_noltp.sh
ltp/testcases/kernel/containers/utsname/runutstest.sh
ltp/testcases/kernel/containers/utsname/utstest.c

LTP-20071130

1)  Log Message: lcov: fix for problem resulting in lcov aborting with "ERROR: reading string"
File(s) Affected:
/cvsroot/ltp/utils/analysis/lcov/bin

2) Log Message: Update to OpenHPI 2.10.1 (see www.openhpi.org for more info)
File(s) Affected:
ltp/testcases/open_hpi_testsuite

3) Log Message: This patch by Jeff Mahoney <jeffm@suse.com> changes the test to use the read-only end of the pipe with PROT_READ permissions, which passes the FMODE_READ check on the file descriptor and returns -ENODEV.
File(s) Affected:
ltp/testcases/open_posix_testsuite/conformance/interfaces/mmap/23-1.c

4) Log Message: Yi Yang <yang.y.yi@gmail.com> fixed some anomalies for ext2/ext3 and creat system call
File(s) Affected:
ltp/testcases/kernel/fs/doio/growfiles.c
ltp/testcases/kernel/syscalls/creat/creat05.c

5) Log Message: Removing Propreitary and Confidential Information to Suit to GPLv2 License
File(s) Affected:
testcases/kernel/ipc/ipc_stress/message_queue_test_01.c
testcases/kernel/ipc/ipc_stress/message_queue_test_02_ctl.c
testcases/kernel/ipc/ipc_stress/message_queue_test_02_get.c
testcases/kernel/ipc/ipc_stress/message_queue_test_02_rcv.c
testcases/kernel/ipc/ipc_stress/message_queue_test_02_snd.c
testcases/kernel/ipc/ipc_stress/message_queue_test_04.c
testcases/kernel/ipc/ipc_stress/message_queue_test_05.c
testcases/kernel/ipc/ipc_stress/pipe_test_01.c
testcases/kernel/ipc/ipc_stress/pipe_test_02.c
testcases/kernel/ipc/ipc_stress/semaphore_test_01.c
testcases/kernel/ipc/ipc_stress/semaphore_test_02.c
testcases/kernel/ipc/ipc_stress/semaphore_test_03.c
testcases/kernel/ipc/ipc_stress/shmem_test_01.c
testcases/kernel/ipc/ipc_stress/shmem_test_02.c
testcases/kernel/ipc/ipc_stress/shmem_test_03.c
testcases/kernel/ipc/ipc_stress/shmem_test_04.c
testcases/kernel/ipc/ipc_stress/shmem_test_05.c
testcases/kernel/ipc/ipc_stress/shmem_test_06.c
testcases/kernel/ipc/ipc_stress/shmem_test_07.c
testcases/kernel/ipc/ipc_stress/signal_test_01.c
testcases/kernel/ipc/ipc_stress/signal_test_02.c
testcases/kernel/ipc/ipc_stress/signal_test_03.c
testcases/kernel/ipc/ipc_stress/signal_test_04.c
testcases/kernel/ipc/ipc_stress/signal_test_05.c
testcases/kernel/ipc/ipc_stress/signal_test_06.c
testcases/kernel/ipc/ipc_stress/signal_test_07.c
testcases/kernel/sched/clisrv/pthserv.c
testcases/kernel/sched/clisrv/readline.c
testcases/kernel/sched/clisrv/writen.c
testcases/kernel/sched/sched_stress/sched_driver.c
testcases/kernel/sched/sched_stress/sched.c
testcases/kernel/sched/sched_stress/sched.h
testcases/kernel/sched/sched_stress/sched_tc0.c
testcases/kernel/sched/sched_stress/sched_tc1.c
testcases/kernel/sched/sched_stress/sched_tc2.c
testcases/kernel/sched/sched_stress/sched_tc3.c
testcases/kernel/sched/sched_stress/sched_tc4.c
testcases/kernel/sched/sched_stress/sched_tc5.c
testcases/kernel/sched/sched_stress/sched_tc6.c

6) Log Message: Make the test working on busybox system, where 'df' command
doesn't support -P option, neither accept a directory as input,
Submitted by Carmelo AMOROSO <carmelo.amoroso@st.com>
File(s) Affected:
ltp/testcases/kernel/fs/doio/rwtest.sh

7) Log Message:
This patch allows network stress tests to be run on different subnet
configuration by using some macros for IP addresses configuration.
It doesn't affect default values.
Submitted by Carmelo AMOROSO <carmelo.amoroso@st.com>
File(s) Affected:
ltp/testcases/network/stress/broken_ip/broken_ip4-checksum
ltp/testcases/network/stress/broken_ip/broken_ip4-dstaddr
ltp/testcases/network/stress/broken_ip/broken_ip4-fragment
ltp/testcases/network/stress/broken_ip/broken_ip4-ihl
ltp/testcases/network/stress/broken_ip/broken_ip4-protcol
ltp/testcases/network/stress/broken_ip/broken_ip4-totlen
ltp/testcases/network/stress/broken_ip/broken_ip4-version
ltp/testcases/network/stress/dns/dns4-stress
ltp/testcases/network/stress/ftp/ftp4-download-stress
ltp/testcases/network/stress/ftp/ftp4-upload-stress
ltp/testcases/network/stress/http/http4-stress
ltp/testcases/network/stress/icmp/uni-basic/icmp4-uni-basic01
ltp/testcases/network/stress/interface/if4-addr-change
ltp/testcases/network/stress/interface/if4-alias-adddel
ltp/testcases/network/stress/interface/if4-alias-addlarge
ltp/testcases/network/stress/interface/if4-mtu-change
ltp/testcases/network/stress/interface/if4-route-adddel
ltp/testcases/network/stress/interface/if4-route-addlarge
ltp/testcases/network/stress/interface/if4-updown
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope01
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope02
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope03
ltp/testcases/network/stress/multicast/grp-operation/mcast4-grpope04
ltp/testcases/network/stress/multicast/packet-flood/mcast4-pktfld01
ltp/testcases/network/stress/multicast/packet-flood/mcast4-pktfld02
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld01
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld02
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld03
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld04
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld05
ltp/testcases/network/stress/multicast/query-flood/mcast4-queryfld06
ltp/testcases/network/stress/route/route4-change-dst
ltp/testcases/network/stress/route/route4-change-gw
ltp/testcases/network/stress/route/route4-change-if
ltp/testcases/network/stress/route/route4-ifdown
ltp/testcases/network/stress/route/route4-redirect
ltp/testcases/network/stress/route/route4-rmmod
ltp/testcases/network/stress/ssh/ssh4-stress
ltp/testcases/network/stress/tcp/multi-diffport/tcp4-multi-diffport01
ltp/testcases/network/stress/tcp/multi-sameport/tcp4-multi-sameport01
ltp/testcases/network/stress/tcp/uni-basic/tcp4-uni-basic01
ltp/testcases/network/stress/udp/multi-diffport/udp4-multi-diffport01
ltp/testcases/network/stress/udp/uni-basic/udp4-uni-basic01
testscripts/networkstress.sh

8) Log Message: Patch to check file permission first, and then skip write-only
files,and report them as INFO. Submitted by Cai Qian <qcai@redhat.com>
File(s) Affected:
ltp/testcases/kernel/fs/proc/proc01.c

9) Log Message:
Patch to skip read of all /proc/<pid> directories except /proc/self.
Therefore, it make sure that at least one /proc/<pid> has been read,
and also the directory will stay as long as the life time of the test.
Submitted by Cai Qian <qcai@redhat.com>
File(s) Affected:
ltp/testcases/kernel/fs/proc/proc01.c

10) Log Message: Create testfile in tmpdir to be consistent with other tests by Kumar Gala <galak@kernel.crashing.org>
File(s) Affected:
ltp/testcases/kernel/syscalls/splice/splice01.c
ltp/testcases/kernel/syscalls/tee/tee01.c

11) Log Message: Close the fd's we open when running on NFS to avoid warnings, submitted by Kumar Gala <galak@kernel.crashing.org>
File(s) Affected:
ltp/testcases/kernel/syscalls/creat/creat01.c
ltp/testcases/kernel/syscalls/open/open04.c
ltp/testcases/kernel/syscalls/writev/writev06.c

12) Log Message:Close fd's to make running on NFS work, submitted by Kumar Gala <galak@kernel.crashing.org>
File(s) Affected:
ltp/testcases/kernel/syscalls/creat/creat05.c

13) Log Message: Add a lib routine to tell us if we are running on NFS Submitted by Kumar Gala <galak@kernel.crashing.org>
File(s) Affected:
ltp/include/test.h
File(s) Added:
ltp/lib/tst_is_cwd_nfs.c

14) Log Message: Adds arm to the architectures where SHMBLA != PAGESIZE, submitted by Khem Raj <kraj@mvista.com>
File(s) Affected:
ltp/testcases/kernel/mem/shmt/shmt09.c

15) Log Message: New posix_fadvise and fadvise64 Testcases contributed by Masatake YAMATO <yamato@redhat.com>
File(s) Affected:
ltp/runtest/syscalls
New File(s) Addes:
ltp/testcases/kernel/syscalls/fadvise/Makefile
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise01.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise02.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise03.c
ltp/testcases/kernel/syscalls/fadvise/posix_fadvise04.c

16) Log Message:
Existing code in LTP Kdump has been enhanced to test dump on network and
different partitions. The attached patch supports following features
-Dump on EXT3 partition, partition referenced by partition name, Label and
UUID
-Dump on raw partition
-Dump on Network dump server
-Test dump filtering feature of Kdump
-Test Link Delay feature of Kdump
-Result analysis has been implemented  for local dumping and network
dumping.
-Result analysis has been implemented for filtering as well as link delay.
But the analysis part can be enahnced further
-'setup' file has been modified
      * To accept inputs from user or file
      * To automate configuration of bootloader file to reserve memory for
crashkernel
      * To test basic or exchausted list of LKDTM test
      * To accept user inputs for dumping on different partitions and for
network dumping
-'master' file has been modified
      *To invoke result analysis code of dumping in different destinations
      *to remove cronjob when execution is done, this is a bug fix
-'test' file has been modifed
      *To set kdump.conf file based on user input and trigger crash
-'Makefile' has been modified not to run 'setup'
-Added new files
      *kdump_propogate ->To add ssh public keys to network dump server
      *verify_dump ->To verify dump in different partitions and network
dumping
      *lkdtm.orig is replaced with lkdtm.base for basic testcases of lkdtm,
lkdtm.exha for exhausted list of lkdtm testcases.

Submitted by: Poornima Nayak <Poornima.Nayak@in.ibm.com>

File(s) Affected:
ltp/testcases/kdump/Makefile ltp/testcases/kdump/README
ltp/testcases/kdump/TEST_PLAN.txt ltp/testcases/kdump/master
ltp/testcases/kdump/setup ltp/testcases/kdump/test
File(s) Added:
ltp/testcases/kdump/kdump_propagate
ltp/testcases/kdump/verify_dump
ltp/testcases/kdump/testlists/lkdtm.base
ltp/testcases/kdump/testlists/lkdtm.exha
File(s) Removed:
ltp/testcases/kdump/testlists/lkdtm.orig

17) Log Message: Fix endless loop hit messages for kdump test case, by Cai Qian <qcai@redhat.com>
File(s) Affected:
ltp/testcases/kdump/rhtools/lkdtm_mod/lkdtm.c

18) Log Message: Fix for vmcore generation and vmcore verification are at different hours, by Cai Qian <qcai@redhat.com>
File(s) Affected:
ltp/testcases/kdump/master

19) Log Message: Changes that allows adp to run top on batch mode instead of interactively, submitted by Rafael Folco <rfolco@linux.vnet.ibm.com>
File(s) Affected:
ltp/testscripts/adp.sh

20) Log Message: Changes to prevent fcntl14 test case to crash on uclinux on blackfin board, submitted by Vivi <violetleigh@gmail.com>
File(s) Affected:
ltp/testcases/kernel/syscalls/fcntl/fcntl14.c

21) Log Message: New HTML format for LTP Output
File(s) Affected:
ltp/runltp
File(s) Added:
ltp/tools/genhtml.pl
ltp/tools/html_report_header.txt

22) Log Message: Add IA64 support to kdump test case, submitted by Cai Qian <qcai@redhat.com>
File(s) Affected:
ltp/testcases/kdump/setup

23) Log Message: Patch to fix summary script of LTP kdump (can't retrieve LOG correctly), submitted by Lin Feng Shen (shenlinf@cn.ibm.com)
File(s) Affected:
ltp/testcases/kdump/summary

24) Log Message: Fix for master script of LTP kdump (Which tries to copy /proc/config.gz though it's not available), submitted by Cijurajan Kollanoor (cijurajan@in.ibm.com)
File(s) Affected:
ltp/testcases/kdump/master

25) Log Message: Report TCONF for swapon/off test when run on tmpfs or nfs, submitted by Kumar Gala <galak@kernel.crashing.org>
File(s) Affected:
testcases/kernel/syscalls/swapoff/swapoff01.c
testcases/kernel/syscalls/swapoff/swapoff02.c
testcases/kernel/syscalls/swapon/swapon01.c
testcases/kernel/syscalls/swapon/swapon02.c
testcases/kernel/syscalls/swapon/swapon03.c

26) Log Message: This does testing for the missing functionalities of MADV_REMOVE, MADV_DONTFORK & MADV_DOFORK, submitted by Pavan, pnaregun@in.ibm.com
File(s) Added:
ltp/testcases/kernel/syscalls/madvise/madvise03.c

27) Log Message: Added an Option to mail-back LTP reports, by Subrata Modak <subrata@linux.vnet.ibm.com>
File(s) Affected:
ltp/runltp

28) Log Message: Added sendfile64 support and new testcase sendfile04.c in this regard, by Masatake YAMATO <yamato@redhat.com>
File(s) Affected:
runtest/syscalls
testcases/kernel/syscalls/sendfile/Makefile
testcases/kernel/syscalls/sendfile/sendfile02.c
testcases/kernel/syscalls/sendfile/sendfile03.c
File(s) Added:
ltp/testcases/kernel/syscalls/sendfile/sendfile04.c

29) Log Message: Proper Inputs for Memory Reservation for Crask Kernel on various architectures, by Poornima Nayak <Poornima.Nayak@in.ibm.com>
File(s) Affected:
ltp/testcases/kdump/setup

LTP-20071031

1)  Log Message:
lcov: workaround for gcc 4.1.0 .gcno file oddness by Peter Oberparleiter (oberpapr@users.sourceforge.net)
scott.heavner@philips.com wrote:
I'm trying to use lcov 1.6 with gcov/gcc 4.1.0. The geninfo parser was
aborting on a small number of .gcno files. I've patched my local copy so
that geninfo prints out the offset of the error and skips the remainder of
the problem file

File(s) Affected:
ltp/utils/analysis/lcov/bin/geninfo

2) Log Message: Carmelo (carmelo.amoroso@st.com) fixed OPEN_MAX macro issue, from kernel 2.6.23 onwards
File(s) Affected:
ltp-full-20070930/testcases/kernel/syscalls/fork/fork09.c
ltp-full-20070930/testcases/kernel/ipc/ipc_stress/pipe_test_02.c

3) Log Message: Ported this to LTP Format
File(s) Affected:
ltp/runtest/syscalls
File(s) Added:
ltp/testcases/kernel/syscalls/remap_file_pages/Makefile
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages01.c

4) Log Message: Open Posix Test suite updation by Patrick Kirsch <pkirsch@suse.de>
File(s) Affected:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_close/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_close/2-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_close/3-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/2-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/4-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/5-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_open/1-4.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/1-2.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/2-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/4-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/5-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/6-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_post/8-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/2-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_unlink/4-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/1-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/1-2.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/11-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/12-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/3-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/5-1.c
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_wait/7-1.c

5) Log Message: Olof Johansson <olof@lixom.net> corrected the message when there are no entries in /etc/group for 'nobody' and 'bin'
File(s) Affected:
ltp/testcases/kernel/syscalls/creat/creat08.c

6) Log Message: Andi Kleen <ak@novell.com> changed the way IN_MOVE_SELF works with old kernel
File(s) Affected:
ltp/testcases/kernel/syscalls/inotify/inotify02.c

7) Log Message: Ricardo (rsalveti@linux.vnet.ibm.com) added another testcase for remap_file_pages() syscall for better error checking
File(s) Affected:
ltp/runtest/syscalls
File(s) Added:
ltp/testcases/kernel/syscalls/remap_file_pages/remap_file_pages02.c

8) Log Message:
Better Ways to Integrate "ltp/tools/genload/stress" with  "ltp/runltp" by
Ricardo and Subrata,
This is the second version of Subrata's patch, this is intended to
fully exploit all the features provided by "ltp/tools/genload/stress".

New option:
 -D Run LTP under additional background Load on Secondary Storage

Options that have a different interface:
 -i Run LTP under additional background Load on IO Bus
 -m Run LTP under additional background Load on Main memory

Remember that this change will break the script interface.
File(s) Affected:
ltp/runltp

9) Log Message: Breno Leitao (leitao@linux.vnet.ibm.com) fixed these for running on NFS mounted systems
File(s) Affected:
ltp/testcases/kernel/syscalls/chdir/chdir01.c
ltp/testcases/kernel/syscalls/creat/creat03.c
ltp/testcases/kernel/syscalls/creat/creat05.c
ltp/testcases/kernel/syscalls/dup2/dup202.c
ltp/testcases/kernel/syscalls/dup2/dup203.c
ltp/testcases/kernel/syscalls/execve/execve04.c
ltp/testcases/kernel/syscalls/flock/flock01.c
ltp/testcases/kernel/syscalls/flock/flock02.c
ltp/testcases/kernel/syscalls/flock/flock03.c
ltp/testcases/kernel/syscalls/flock/flock04.c
ltp/testcases/kernel/syscalls/flock/flock05.c
ltp/testcases/kernel/syscalls/flock/flock06.c
ltp/testcases/kernel/syscalls/fork/fork07.c
ltp/testcases/kernel/syscalls/mprotect/mprotect02.c
ltp/testcases/kernel/syscalls/mprotect/mprotect03.c
ltp/testcases/kernel/syscalls/open/open04.c
ltp/testcases/kernel/syscalls/open/open05.c
ltp/testcases/kernel/syscalls/read/read04.c
ltp/testcases/kernel/syscalls/readv/readv01.c
ltp/testcases/kernel/syscalls/readv/readv02.c
ltp/testcases/kernel/syscalls/recvmsg/Makefile
ltp/testcases/kernel/syscalls/recvmsg/recvmsg01.c
ltp/testcases/kernel/syscalls/rmdir/rmdir02.c
ltp/testcases/kernel/syscalls/write/write03.c
ltp/testcases/kernel/syscalls/write/write05.c
ltp/testcases/kernel/syscalls/writev/writev01.c
ltp/testcases/kernel/syscalls/writev/writev02.c
ltp/testcases/kernel/syscalls/writev/writev03.c
ltp/testcases/kernel/syscalls/writev/writev04.c
ltp/testcases/kernel/syscalls/writev/writev05.c

LTP-20070930

1)  Log Message: "seebs@users.sf.net" wanted to fix some anomalies in "acct01" testcase 
File(s) Affected:
ltp/testcases/kernel/syscalls/acct/acct01.c

2)  Log Message: "risrajak@linux.vnet.ibm.com" made modifications to check whether the Kernel is UTSNAMESPACE or SYSVIPC_NAMSPACE enabled
File(s) Affected:
ltp/testcases/kernel/containers/container_test.sh
ltp/testcases/kernel/containers/sysvipc/Makefile
File(s) Added:
ltp/testcases/kernel/containers/sysvipc/check_ipcns_enabled.c

3)  Log Message: "rsalveti@linux.vnet.ibm.com" fixed exit code for inotify01 and inotify02 when running with kernel < 2.6.13
File(s) Affected:
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

4)  Log Message: Fixing "ioperm02" testcase for kernel comparisns
File(s) Affected:
ltp/testcases/kernel/syscalls/ioperm/ioperm02.c

5)  Log Message: "Sivakumar.C@in.ibm.com" induced time for Statistics collection in RHEL
File(s) Affected:
ltp/testcases/kernel/numa/numa01.sh

6)  Log Message: Removing these Testcases as they do not satisfy GPLv2 License Agreement
File(s) Deleted:
ltp/testcases/network/nfs/cthon04
        Makefile README READWIN.txt Testitems domount.c getopt.c runtests server tests.h tests.init unixdos.h
ltp/testcases/network/nfs/cthon04/basic
        Makefile runtests runtests.mvs subr.c test1.c test2.c test3.c test4.c test4a.c test5.c test5a.c test5b.c test6.c test7.c test7a.c test7b.c test8.c test9.c
ltp/testcases/network/nfs/cthon04/basic/console
        build.bat test1.mak test2.mak test3.mak test4a.mak test4.mak test5a.mak test5b.mak test5.mak test6.mak test7a.mak test7b.mak test7.mak test8.mak test9.mak
ltp/testcases/network/nfs/cthon04/basic/dos
        build.bat test1.mak test2.mak test3.mak test4a.mak test4.mak test5a.mak test5b.mak test5.mak test6.mak test7a.mak test7b.mak test7.mak test8.mak test9.mak
ltp/testcases/network/nfs/cthon04/basic/scripts
        basic2.bat basic3.bat basic.bat cthon00.mst cthon01.mst cthon02.mst cthon03.mst cthon04.mst cthon.bat runcthon.prl
ltp/testcases/network/nfs/cthon04/general
        large4.sh large.c Makefile makefile.tst mkdummy nroff.in rmdummy runtests runtests.wrk stat.c
ltp/testcases/network/nfs/cthon04/lock
        Makefile runtests tlock.c
ltp/testcases/network/nfs/cthon04/special
        bigfile2.c bigfile.c dupreq.c excltest.c freesp.c fstat.c holey.c Makefile negseek.c nfsidem.c nstat.c op_chmod.c op_ren.c op_unlk.c READWIN.txt rename.c
        rewind.c runtests runtests.wrk stat2.c stat.c telldir.c touchn.c truncate.c
ltp/testcases/network/nfs/cthon04/special/console
        build1.bat build.bat dupreq.mak excltest.mak fstat.mak holey.mak negseek.mak nfsidem.mak nstat.mak op_chmod.mak op_ren.mak op_unlk.mak rename.mak
        rewind.mak stat2.mak stat.mak touchn.mak truncate.mak
ltp/testcases/network/nfs/cthon04/special/dos
        build1.bat build.bat dupreq.mak excltest.mak fstat.mak holey.mak negseek.mak nfsidem.mak nstat.mak op_chmod.mak op_ren.mak op_unlk.mak rename.mak
        rewind.mak stat2.mak stat.mak touchn.mak truncate.mak
ltp/testcases/network/nfs/cthon04/special/scripts
        run.bat
ltp/testcases/network/nfs/cthon04/tools
        dirdmp.c dirprt.c Makefile pmapbrd.c pmaptst.c README tcp.c tcpd.c udp.c udpd.c

7)  Log Message: This guides you to the new location of CTHON04, as, these Testcases has been removed from LTP for want of GPLv2 License Agreement
File(s) Added:
ltp/testcases/network/nfs/CTHON04_README

8)  Log Message: ¨ciju@linux.vnet.ibm.com¨ fixed some Script errors while configuring ltp-kdump
File(s) Affected:
ltp/testcases/kdump/master
ltp/testcases/kdump/setup

9)  Log Message: KDUMP Scripts must be made executable before testing (Initial CVS Checkin error)
File(s) Affected:
ltp/testcases/kdump/Makefile

10) Log Message: Dont use the optional POSIX postfix operator as some crappy shells actually omit it, by ¨vapier@gentoo.org¨
File(s) Affected:
ltp/testcases/network/generate.sh

11) Log Message: Included Mandatory Failed file generation and creation of both outout and failed files even if absolute path is not an option to runltp
File(s) Affected:
ltp/runltp

12) Log Message: Ricardo cleaned up duplicate code for enhancements in output and failed files generation
File(s) Affected:
ltp/runltp

13) Log Message: Updating  Credits to include new contributions from members
File(s) Affected:
ltp/CREDITS

14) Log Message: Jeff Burke wanted additional INFO when the test fails in the calloc portion of the test
File(s) Affected:
ltp/testcases/kernel/mem/mem/mem02.c

15) Log Message: Randy temporarily fixed the var_args expander in lib/tst_res.c
File(s) Affected:
ltp/lib/tst_res.c

16) Log Message: Patrick fixed the too chort char array
File(s) Affected:
ltp/testcases/open_posix_testsuite/conformance/interfaces/sem_getvalue/5-1.c

17) Log Message: Ricardo Fixed the way by which tst_resm should be called from Shell Test Script
File(s) Affected:
ltp/runtest/tcp_cmds
ltp/testcases/network/tcp_cmds/ping/ping01

18) Log Message: James Puderer fixed -d option in LTP for better handling of temporary directory
File(s) Affected:
ltp/runltp

19) Log Message: issue a warning if unable to actually test if F_SETLEASE is not defined
File(s) Affected:
ltp/testcases/kernel/syscalls/fcntl/fcntl23.c
ltp/testcases/kernel/syscalls/fcntl/fcntl24.c
ltp/testcases/kernel/syscalls/fcntl/fcntl25.c
ltp/testcases/kernel/syscalls/fcntl/fcntl26.c
ltp/testcases/kernel/syscalls/fcntl/fcntl27.c
ltp/testcases/kernel/syscalls/fcntl/fcntl28.c

20) Log Message: add -D_GNU_SOURCE since we have tests in here that test GNU-specific features (like F_SETLEASE)
File(s) Affected:
ltp/testcases/kernel/syscalls/fcntl/Makefile

21) Log Message: Update to OpenHPI 2.10.0 (see www.openhpi.org for more info)
File(s) Affected:
ltp/testcases/open_hpi_testsuite

LTP-20070831

1)  Log Message: "rsalveti@br.ibm.com" fixed write05 that failed with LTP 20070331 on Fedora 7 GA
File(s) Affected:
ltp/testcases/kernel/syscalls/write/write05.c

2)  Log Message: "dmarlin@redhat.com" corrected fail message in data_space testcase
File(s) Affected:
ltp/testcases/kernel/mem/vmtests/data_space.c

3)  Log Message: "liudeyan@cn.ibm.com" made mmap1 to be terminated by Ctrl-C
File(s) Affected:
ltp/testcases/kernel/mem/mtest06/mmap1.c

4)  Log Message: "suzuki@in.ibm.com" fixed times03, where it failed to generate report on user time on RHEl5.1 early build(2.6.18-32.el5)
File(s) Affected: ltp/testcases/kernel/syscalls/times/times03.c

5)  Log Message: gcov-kernel: added eabi-compatibility patch, renamed .diff to .patch by "oberpapr@users.sourceforge.net"
File(s) Added:
ltp/utils/analysis/gcov-kernel/linux-2.6.21-gcov-arm-eabi.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.22-gcov-arm-eabi.patch
File(s) Deleted:
ltp/utils/analysis/gcov-kernel/linux-2.6.21-gcov-arm-eabi.diff

6)  Log Message: lcov: fixed spec file
File(s) Affected:
ltp/utils/analysis/lcov/rpm/lcov.spec

7)  Log Message: gcov-kernel: removed outdated FAQ entry
File(s) Affected:
ltp/utils/analysis/gcov-kernel/FAQ

8)  Log Message: gcov-kernel: added Makefile
File(s) Added: ltp/utils/analysis/gcov-kernel/Makefile

9)  Log Message: lcov: Makefile for release 1.6
File(s) Affected:
/cvsroot/ltp/utils/analysis/lcov/Makefile

10) Log Message: lcov: Makefile for post-release
File(s) Affected:
/cvsroot/ltp/utils/analysis/lcov/Makefile

11) Log Message: lcov: add experimental option "--norecursion"
File(s) Affected:
/cvsroot/ltp/utils/analysis/lcov/bin/geninfo
/cvsroot/ltp/utils/analysis/lcov/bin/lcov

12) Log Message: Changes to make testcases/kernel/numa/numa01.sh executable
File(s) Affected:
ltp/testcases/kernel/numa/Makefile

13) Log Message: "carmelo.amoroso@st.com" changed the Default values for MAXSIZE and csize
File(s) Affected:
ltp/testcases/kernel/mem/vmtests/stack_space.c

14) Log Message: "brenohl@br.ibm.com" wanted to handle file descriptors properly
File(s) Affected:
ltp/testcases/kernel/syscalls/mkdir/mkdir03.c
ltp/testcases/kernel/syscalls/mmap/mmap09.c
ltp/testcases/kernel/syscalls/open/open07.c
ltp/testcases/kernel/syscalls/sendfile/sendfile03.c

15) Log Message: "rsalvetidev@linux.vnet.ibm.com" says that this version can handle when the distro has MAX_SWAPFILES as 30 or 32
File(s) Modified:
ltp/runtest/ltplite ltp/runtest/stress.part3
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/swapon/swapon02.c
File(s) Added:
ltp/testcases/kernel/syscalls/swapon/swapon03.c

16) Log Message: Containers Testcases Plan
File(s) Added:
ltp/testcases/kernel/containers/TEST_PLAN.txt

17) Log Message: LTP-KDUMP Test-Case Plan
File(s) Added:
ltp/testcases/kdump/TEST_PLAN.txt

18) Log Message: Update to OpenHPI 2.9.3 (www.openhpi.org for more info)
File(s) Affected:
ltp/testcases/open_hpi_testsuite/


LTP-20070731

1)  Log Message: lcov: preparations for new release by "oberpapr@users.sourceforge.net"
- updated CHANGES file
- added compat-libtool + no-compat-libtool option
- changed libtool default to on (due to popular request)
- added checksum option
- changed checksum default to off (to reduce cpu time + file size)
- added geninfo_checksum option to lcovrc, deprecated geninfo_no_checksum
- added geninfo_compat_libtool option to lcovrc
- minor update of README file
File(s) Affected:
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/README
ltp/utils/analysis/lcov/lcovrc
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov

2)  Log Message: update manpage by "oberpapr@users.sourceforge.net"
File(s) Affected:
ltp/utils/analysis/lcov/man/lcov.1

3)  Log Message: "sachinp@in.ibm.com" has fixed a probe point definition from 'll_rw_lock' to 'll_rw_block'
File(s) Affected:
ltp/testcases/kdump/susetools/lkdtm_mod/lkdtm.c

4)  Log Message: man page update by "oberpapr@users.sourceforge.net"
File(s) Affected:
ltp/utils/analysis/lcov/man/genhtml.1
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/lcov.1

5)  Log Message: lcov: another update in preparation for a new release by "oberpapr@users.sourceforge.net"
File(s) Affected:
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/lcovrc.5
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/lcovrc

6)  Log Message: fixed bug that would not delete .gcda files when using -z, by "oberpapr@users.sourceforge.net"
File(s) Affected:
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/bin/lcov

7)  Log Message: lcov: - add new option --initial to get zero coverage data from graph files by "oberpapr@users.sourceforge.net"
File(s) Affected:
ltp/utils/analysis/lcov/CHANGES
ltp/utils/analysis/lcov/bin/geninfo
ltp/utils/analysis/lcov/bin/lcov
ltp/utils/analysis/lcov/man/geninfo.1
ltp/utils/analysis/lcov/man/lcov.1

8)  Log Message: "carmelo.amoroso@st.com" fixed the anomaly when "SHLBA != getpagesize()", like in SH architecture
File(s) Affected:
ltp/testcases/kernel/mem/shmt/shmt09.c

9)  Log Message: "hdeller@users.sf.net" fixed unitialized variable useage in "lseek09" testcase
File(s) Affected:
ltp/testcases/kernel/syscalls/lseek/lseek09.c

10) Log Message: "naveenspen@gmail.com" pointed out that syslog_cmd="/etc/init.d/syslog" should be used irrespective of any Distro
File(s) Affected:
ltp/testcases/kernel/syscalls/syslog/syslog01
ltp/testcases/kernel/syscalls/syslog/syslog02
ltp/testcases/kernel/syscalls/syslog/syslog03
ltp/testcases/kernel/syscalls/syslog/syslog04
ltp/testcases/kernel/syscalls/syslog/syslog05
ltp/testcases/kernel/syscalls/syslog/syslog06
ltp/testcases/kernel/syscalls/syslog/syslog07
ltp/testcases/kernel/syscalls/syslog/syslog08
ltp/testcases/kernel/syscalls/syslog/syslog09
ltp/testcases/kernel/syscalls/syslog/syslog10

11) Log Message: "rsalveti@linux.vnet.ibm.com" pointed out to have same "fsx-linux" testcase for "fs", "ltp-aiodio" and "nfs"
File(s) Affected:
ltp/testcases/kernel/io/ltp-aiodio/fsx-linux.c
ltp/testcases/network/nfs/fsx-linux/fsx-linux.c

12) Log Message: Randy Dunlap writes: Fix printf format warnings
File(s) Affected:
ltp/testcases/network/stress/ns-tools/Makefile
ltp/testcases/network/stress/ns-tools/ns-igmp_querier.c
ltp/testcases/network/stress/ns-tools/ns-mcast_join.c
ltp/testcases/network/stress/ns-tools/ns-mcast_receiver.c
ltp/testcases/network/stress/ns-tools/ns-tcpserver.c

13) Log Message: getsockopt() takes a socklen_t, not an int, as its optlen
File(s) Affected:
ltp/testcases/network/stress/ns-tools/ns-tcpclient.c
ltp/testcases/network/stress/ns-tools/ns-tcpserver.c
ltp/testcases/network/stress/ns-tools/ns-udpserver.c

14) Log Message: cleanup file
File(s) Affected:
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c

15) Log Message: back out uclinux changes to something that doesnt spit warnings as reported by Randy Dunlap
File(s) Affected:
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c

16) Log Message: fixup gcc warnings by removing silly pieces of code
File(s) Affected:
ltp/testcases/kernel/mem/mtest06/mmap1.c
ltp/testcases/kernel/mem/mtest06/mmap2.c
ltp/testcases/kernel/mem/mtest06/mmap3.c
ltp/testcases/kernel/mem/mtest06/shmat1.c

17) Log Message: Randy Dunlap writes: Convert mmap1 to use standard test results output format. Correct several typos.
File(s) Affected:
ltp/testcases/kernel/mem/mtest06/Makefile
ltp/testcases/kernel/mem/mtest06/mmap1.c

18) Log Message: gcov-kernel: adding gcov-kernel patch for 2.6.22
File(s) Addes:
ltp/utils/analysis/gcov-kernel/linux-2.6.22-gcov-arm-hack.patch
ltp/utils/analysis/gcov-kernel/linux-2.6.22-gcov.patch

19) Log Message: [1754301] Helge Deller writes: mark hppa/parisc as expecting a segv as well
File(s) Affected:
ltp/testcases/kernel/syscalls/mmap/mmap03.c

20) Log Message: Randy Dunlap writes: convert output to match the standard LTP output
File(s) Affected:
ltp/testcases/kernel/fs/linktest/linktest.pl

21) Log Message: close stdout to remove noise
File(s) Affected:
ltp/testcases/kernel/mem/mtest05/dummy.c

22) Log Message: Randy Dunlap writes: Convert mmstress to use the standard results format
File(s) Affected:
ltp/testcases/kernel/mem/mtest05/Makefile
ltp/testcases/kernel/mem/mtest05/mmstress.c

23) Log Message: "rsalveti@linux.vnet.ibm.com" updated the contact information at ltp-howto doc
File(s) Affected:
ltp/doc/ltp-howto.lyx
ltp/doc/ltp-howto.txt

24) Log Message: "rsalveti@linux.vnet.ibm.com" wants to update this with kernel/fs/fsstress/fsstress.c
File(s) Affected:
ltp/testcases/network/nfs/nfs_fsstress/fsstress.c

25) Log Message: "suzuki@in.ibm.com" added SIGNAL and Address Fault handling capability for all architectures
File(s) Affected:
ltp/testcases/kernel/mem/mtest06/mmap1.c

26) Log Message: "rsalveti@linux.vnet.ibm.com" added more options to 'runltp'
File(s) Affected:
ltp/runltp
ltp/doc/man1/pan.1
ltp/pan/pan.c

27) Log Message: Upgrade to Posix Testsuite 1.5.2
File(s) Affected/Added:
ltp/testcases/open_posix_testsuite

28) Log Message: Fixing Proper Freeing of Memory Chunks
File(s) Affected:
ltp/tools/genload/stress.c

LTP-20070630

1)Log Message: "carmelo.amoroso@st.com" points out the wrong usage of the option -s
File(s) Affected: ltp/testcases/kernel/mem/mtest06/mmap1.c

2)Log Message: "carmelo.amoroso@st.com" pointed out that id (returned by shmget) has to be used for all shm operations
File(s) Affected: ltp/testcases/kernel/mem/mtest06/shmat1.c

3)Log Message: "rsalveti@linux.vnet.ibm.com" fixed the way "inotify" should compile in kernels below 2.6.13
File(s) Affected: ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

4)Log Message: Removing 'alarm04' testcase call, as alarm04 has been removed to be no-more-valid
File(s) Affected: ltp/runtest/ltplite
ltp/runtest/stress.part3

5)Log Message: "sachinp@in.ibm.com" rectified kdump lkdtm tests for powerpc architecture with RedHat distribution
File(s) Affected: ltp/testcases/kdump/rhtools/lkdtm_mod/lkdtm.c

6)Log Message: "rahaman.riaz@gmail.com" fixed some Thread Handling Anomaly
File(s) Affected: ltp/testcases/open_posix_testsuite/conformance/interfaces/mq_timedsend/12-1.c

7)Log Message: "rahaman.riaz@gmail.com" fixed ways by which OPEN POSIX displays warnings
File(s) Affected: open_posix_testsuite/conformance/interfaces/sem_unlink/2-2.c
open_posix_testsuite/conformance/interfaces/sigaltstack/9-1.c

8)Log Message: "yxu@suse.de" corrected the way by which pthread_exit() handles pointer argument
File(s) Affected: ltp/testcases/kernel/io/disktest/threading.h

9)Log Message: "rsalveti@linux.vnet.ibm.com" fixed the problem reported at bug [1732287] mtest06/mmap1.c missing run_once check in do loop
File(s) Affected: ltp/runtest/ltplite
ltp/runtest/mm
ltp/runtest/stress.part1
ltp/testcases/kernel/mem/mtest06/mmap1.c

10)Log Message: gcov-kernel: add patches to support arm eabi-compliant gcc
File(s) Affected: /ltp/utils/analysis/gcov-kernel/linux-2.6.18-gcov-arm-eabi.patch
/ltp/utils/analysis/gcov-kernel/linux-2.6.19-gcov-arm-eabi.patch
/ltp/utils/analysis/gcov-kernel/linux-2.6.20-gcov-arm-eabi.patch
/ltp/utils/analysis/gcov-kernel/linux-2.6.21-gcov-arm-eabi.diff

11)Log Message: "dmonakhov@openvz.org" added this test case to check for "fault in pages readable" functionality
File(s) Affected: ltp/runtest/stress.part3
ltp/runtest/syscalls
ltp/runtest/ltplite
File(s) Added:    ltp/testcases/kernel/syscalls/writev/writev06.c

12)Log Message: "risrajak@linux.vnet.ibm.com" added sysvipc (conatainers) namespace testcases
File(s) Added:    ltp/testcases/kernel/containers/sysvipc/Makefile
ltp/testcases/kernel/containers/sysvipc/runipcnstest.sh
ltp/testcases/kernel/containers/sysvipc/runtests_noltp.sh
ltp/testcases/kernel/containers/sysvipc/shmnstest.c
File(s) Affected: ltp/README ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/README
ltp/testcases/kernel/containers/container_test.sh

13)Log Message: Randy Dunlap writes: Convert kernel/sched/pthreads/*.c to use the standard message output functions instead of printf().
File(s) Affected: ltp/testcases/kernel/sched/pthreads/pth_str01.c
ltp/testcases/kernel/sched/pthreads/pth_str02.c
ltp/testcases/kernel/sched/pthreads/pth_str03.c

14)Log Message: "rdunlap@xenotime.net" did "mmstress" cleanups to make output unbuffered so that it is not produced repetitively and erroneously
File(s) Affected: ltp/testcases/kernel/mem/mtest05/mmstress.c

15)Log Message: "krisw@us.ibm.com" wants to solve segfault problem with "mount03" on SLES10
File(s) Affected: ltp/testcases/kernel/syscalls/mount/Makefile
ltp/testcases/kernel/syscalls/mount/mount03.c

16)Log Message: as Ricardo Salveti de Araujo points out, dont set CC so it can easily be overridden
File(s) Affected: ltp/testcases/kernel/containers/utsname/Makefile

17)Log Message: "Andreas Dilger" updated "fsx-linux" testcase to include new feature(s) including distributed filesystem coherency
Log Message:    Copyright Statements once added cannot be deleted, however, many Copyright Statements can co-exist
File(s) Affected: ltp/testcases/kernel/fs/fsx-linux/fsx-linux.c

18)Log Message: Fix from "rdunlap@xenotime.net" to use standard test results output
File(s) Affected: ltp/testcases/kernel/mem/mem/mem01.c
ltp/testcases/kernel/mem/mtest01/Makefile
ltp/testcases/kernel/mem/mtest01/mtest01.c
ltp/testcases/misc/math/float/main.c

19)Log Mesage:  "serue@us.ibm.com" fixes conatiner testing with 'unshare' support for lower kernel versions
File(s) Affected: ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/container_test.sh

20)Log Message: Fix for Bug no "1736357",tar file is not multiplatform, pointed out by "Neil Brewitt"
File(s) Added:    ltp/testcases/network/nfsv4/locks/deploy_info
File(s) Deleted:  ltp/testcases/network/nfsv4/locks/DEPLOY

21)Log Message: "serue@us.ibm.com" fixes conatiner testing with 'unshare' support for lower kernel versions
File(s) Added:    ltp/testcases/kernel/containers/check_for_unshare.c

22)Log Message: Update to OpenHPI 2.9.2
File(s) Addedd/Modified/Deleted: ltp/testcases/open_hpi_testsuite/

LTP-20070531

-Removing "alarm04.c" & "sig_rev.c" as they are no more valid, fixes Bug no."1236586", pointed by <Sharyathi Nagesh>
ltp/runtest/syscalls
ltp/testcases/kernel/syscalls/alarm/Attic/alarm04.c
ltp/testcases/kernel/syscalls/alarm/Attic/sig_rev.c

-<krisw@us.ibm.com> fixed problem with "expect" in "su01" testcase
ltp/testcases/commands/su/su01_s1

-<muvarov@gmail.com> modified to run kdump tests on non RH and SUSE machines
ltp/testcases/kdump/distro
ltp/testcases/kdump/master
ltp/testcases/kdump/setup

-<muvarov@gmail.com> added summary file for printing results table, and, added reboot command to test script
ltp/testcases/kdump/setup
ltp/testcases/kdump/summary
ltp/testcases/kdump/test

-Removing unwanted Config Variables from 'setup' script as submitted by <sachinp@in.ibm.com>
ltp/testcases/kdump/setup

-<muvarov@gmail.com> removed unnecessary info from summary script
ltp/testcases/kdump/summary

-<doug.chapman@hp.com> points that “clone2” should be used in case of IA64 for the Utsnamespace testcases
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/utsname/check_utsns_enabled.c

-Patch for libclone.h for fixing compilation error on 32 bit Z-series machines, submitted by <amitarora@in.ibm.com>
ltp/testcases/kernel/containers/libclone/libclone.h

-Restoring Hostname to Original after "UTSTEST", fix by <serue@us.ibm.com>
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/utsname/runtests_noltp.sh
ltp/testcases/kernel/containers/utsname/runutstest.sh

-Applied Patch to fix the wrong usage of pthread_exit, pointed out by <carmelo.amoroso@st.com>
ltp/testcases/kernel/io/disktest/threading.h
ltp/testcases/kernel/mem/mtest05/mmstress.c
ltp/testcases/network/nfs/nfsstress/make_tree.c

-Fix for Bug no. "1537172" => Improper condition decision of mmap(), as reported by <Kongh - bstqc-kh>
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_02.c

-<Nadia Derbey> corrected the checksums for these testcases
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_02.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_03.c
ltp/testcases/kernel/ipc/ipc_stress/shmem_test_07.c

-Fix for Bug No. "1537169" => Doesn't handle the special Signal : 34, reported by <Kongh - bstqc-kh>
ltp/testcases/kernel/ipc/ipc_stress/signal_test_05.c

-Fix for Bug No. "1542453", default value of param x doesn't work in 'mmap1', pointed out by <bstqc-victor>
ltp/testcases/kernel/mem/mtest06/mmap1.c

-<carmelo.amoroso@st.com> fixes -v option, thread handling, usage of OPT_MISSING macro, etc
ltp/testcases/kernel/mem/mtest06/mmap1.c

-<carmelo.amoroso@st.com> fixed wrong use of "pthread_exit" input argument and the related "pthread_join"
ltp/testcases/kernel/mem/mtest06/mmap3.c

-<nadia.derbey@bull.net> fixed the use of shmid, exit(0) and readable output
-<carmelo.amoroso@st.com> fixed wrong use of exit_value, shared memory region and pthread_join
ltp/testcases/kernel/mem/mtest06/shmat1.c

-Fix for some anomalies in 'shm_test" case as pointed out by 'Nadia Derbey <Nadia.Derbey@bull.net>'
ltp/testcases/kernel/mem/mtest07/shm_test.c

-<carmelo.amoroso@st.com> fixed ways by which Threads are handled
ltp/testcases/kernel/mem/mtest07/shm_test.c

-Fixing "gethostid01" to work fine on both 32-bit and 64-bit machines, pointed out by <brenohl@br.ibm.com>
ltp/testcases/kernel/syscalls/gethostid/gethostid01.c

-<avagin@sw.ru> submitted new Testcases for "inotify" syscall on both file(s) and folder(s)
ltp/testcases/kernel/syscalls/inotify/Makefile
ltp/testcases/kernel/syscalls/inotify/inotify01.c
ltp/testcases/kernel/syscalls/inotify/inotify02.c

-<avagin@sw.ru> added README for "inotify" testcase
ltp/testcases/kernel/syscalls/inotify/README

-<rsalveti@linux.vnet.ibm.com> added proper indentation, EBUSY error and functions in correct place
ltp/testcases/kernel/syscalls/swapon/swapon02.c

-gcov-kernel: adding gcov-kernel patch for 2.6.18
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.18-gcov-arm-hack.patch,
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.18-gcov.patch

-lcov: minor help text update
/cvsroot/ltp/utils/analysis/lcov/bin/lcov

-gcov-kernel: adding gcov-kernel patch for 2.6.19
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.19-gcov-arm-hack.patch,
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.19-gcov.patch

-gcov-kernel: adding gcov-kernel patch for 2.6.20
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.20-gcov-arm-hack.patch,
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.20-gcov.patch

gcov-kernel: adding gcov-kernel patch for 2.6.21
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.21-gcov-arm-hack.patch,
/cvsroot/ltp/utils/analysis/gcov-kernel/linux-2.6.21-gcov.patch

LTP-20070430

-Integration of UTS Namespace Testcases to LTP as submitted by <risrajak@linux.vnet.ibm.com>
ltp/README
ltp/runtest/containers
ltp/runltp
ltp/testcases/kernel/Makefile
ltp/testcases/kernel/containers/Makefile
ltp/testcases/kernel/containers/README
ltp/testcases/kernel/containers/container_test.sh
ltp/testcases/kernel/containers/libclone/Makefile
ltp/testcases/kernel/containers/libclone/libclone.c
ltp/testcases/kernel/containers/libclone/libclone.h
ltp/testcases/kernel/containers/utsname/Makefile
ltp/testcases/kernel/containers/utsname/README
ltp/testcases/kernel/containers/utsname/check_utsns_enabled.c
ltp/testcases/kernel/containers/utsname/runtests_noltp.sh
ltp/testcases/kernel/containers/utsname/runutstest.sh
ltp/testcases/kernel/containers/utsname/utstest.c
ltp/testscripts/test_containers.sh

-Integrating "KDUMP" testcases to LTP Test Suite as Submitted by <sachinp@linux.vnet.ibm.com>
ltp/README
ltp/testcases/Makefile
ltp/testcases/kdump/README
ltp/testcases/kdump/crash_cmds
ltp/testcases/kdump/distro
ltp/testcases/kdump/master
ltp/testcases/kdump/setup
ltp/testcases/kdump/sysinfo
ltp/testcases/kdump/test
ltp/testcases/kdump/tests
ltp/testcases/kdump/verify
ltp/testcases/kdump/rhtools/Makefile
ltp/testcases/kdump/rhtools/OO_Descriptions.txt
ltp/testcases/kdump/rhtools/crasher_mod/Makefile
ltp/testcases/kdump/rhtools/crasher_mod/crasher.c
ltp/testcases/kdump/rhtools/lkdtm_mod/Makefile
ltp/testcases/kdump/rhtools/lkdtm_mod/lkdtm.c
ltp/testcases/kdump/susetools/Makefile
ltp/testcases/kdump/susetools/Attic/OO_Description.txt
ltp/testcases/kdump/susetools/crasher_mod/Makefile
ltp/testcases/kdump/susetools/crasher_mod/crasher.c
ltp/testcases/kdump/testlists/crasher
ltp/testcases/kdump/testlists/Attic/i386-basic
ltp/testcases/kdump/testlists/Attic/i386-lkdtt
ltp/testcases/kdump/testlists/Attic/i386-manual
ltp/testcases/kdump/testlists/lkdtm.orig
ltp/testcases/kdump/testlists/Attic/ppc64-basic
ltp/testcases/kdump/testlists/Attic/ppc64-lkdtt
ltp/testcases/kdump/testlists/Attic/ppc64-manual
ltp/testcases/kdump/testlists/Attic/x86_64-basic
ltp/testcases/kdump/testlists/Attic/x86_64-lkdtt
ltp/testcases/kdump/testlists/Attic/x86_64-manual

- <sachinp@in.ibm.com> removed unwanted files from ltp/testcases/kdump/testlists directory
ltp/testcases/kdump/testlists/Attic/i386-basic
ltp/testcases/kdump/testlists/Attic/ppc64-basic
ltp/testcases/kdump/testlists/Attic/x86_64-basic

-Patch Submitted by <sachinp@linux.vnet.ibm.com> which removes the lkdtt code and adds lkdtm code
ltp/testcases/kdump/test
ltp/testcases/kdump/susetools/Makefile
ltp/testcases/kdump/susetools/Attic/OO_Description.txt
ltp/testcases/kdump/susetools/OO_Descriptions.txt
ltp/testcases/kdump/susetools/lkdtm_mod/Makefile
ltp/testcases/kdump/susetools/lkdtm_mod/lkdtm.c
ltp/testcases/kdump/testlists/Attic/i386-lkdtt
ltp/testcases/kdump/testlists/Attic/i386-manual
ltp/testcases/kdump/testlists/Attic/ppc64-lkdtt
ltp/testcases/kdump/testlists/Attic/ppc64-manual
ltp/testcases/kdump/testlists/Attic/x86_64-lkdtt
ltp/testcases/kdump/testlists/Attic/x86_64-manual

-Patch Submitted by <sachinp@linux.vnet.ibm.com> for some configuration settings as pointed out by <jburke@redhat.com>
-<sachinp@in.ibm.com> added options to select/run crasher/lkdtt tests on SLES
-Patch Submitted by <sachinp@linux.vnet.ibm.com> which removes the lkdtt code and adds lkdtm code
ltp/testcases/kdump/setup

- Patch Applied as submitted by <jburke@redhat.com> for 1)Changed the way runltp makes the temp directory, and 2) removing LOCTMP and adding in the LTPTMP in its place and clean up files when it is done
ltp/runltp
ltp/testcases/commands/tar/tar_tests.sh

-Applied Patch submitted by "elliot_lee", against bug no. "[ 1697311 ] Compile error of 'lib/parse_opts.c' "
ltp/	

-Fix for Bug no. 1671695, Check return codes everywhere, as pointed out by 'Markus Elfring'
ltp/lib/tst_tmpdir.c

-Modifications to prevent Warnings during compilation
ltp/lib/write_log.c

-Changes to include 'egrep' as pointed out by 'kmaffey' [LTP Bug no. 1701305, logrotate_tests.sh fails on CentOS 4.4]
ltp/testcases/commands/logrotate/logrotate_tests.sh

-Patch Submitted by <sachinp@linux.vnet.ibm.com> for some configuration settings as pointed out by <jburke@redhat.com>
ltp/testcases/kdump/README

-Fix for Bug No 1592647, incorrect testcase diotest4-4, as pointed out by "Vagin Andrey"
ltp/testcases/kernel/io/direct_io/diotest4.c

-remove silly reliance on -DLINUX
ltp/testcases/kernel/mem/vmtests/Makefile
ltp/testcases/kernel/mem/vmtests/data_space.c
ltp/testcases/kernel/mem/vmtests/stack_space.c

-Applied Patch to change the way shmat() operates, pointed out/submitted by YI XU<yxu@suse.de>
ltp/testcases/kernel/sched/process_stress/process.c

-Fix for BUG no. "[1607899]" exit02 uses strcmp() on unterminated string, as pointed out by "ndade"
-Fixed Bug No. ['1607881', "exit02 child does close() when description says it does not"], as pointed out by <Nicolas Dade>
ltp/testcases/kernel/syscalls/exit/exit02.c

-Fix for Bug no. '1221744' (fork12 race condition), as pointed by "Carl van Schaik"
ltp/testcases/kernel/syscalls/fork/fork12.c

-Applied Patch as submitted by "creese123" for bug no. ["1694484", semop01 corrupting get_arr.array]
ltp/testcases/kernel/syscalls/ipc/semop/semop01.c

-Fix for Bug no. "1687908"(raised by 'bdubbs'), patch submitted by <doug.chapman@hp.com>
ltp/testcases/kernel/syscalls/mincore/mincore01.c

-Fix for BUG no. "[1608461]" pipe10 calls strcmp() on unterminated string, as pointed out by "ndade"
ltp/testcases/kernel/syscalls/pipe/pipe10.c

-Fix for BUG no. "[1608492]" read04 calls strcmp() on unterminated string as submitted by "ndade"
ltp/testcases/kernel/syscalls/read/read04.c

-Modifications to prevent Warnings during compilation
ltp/testcases/kernel/syscalls/rename/rename14.c

-Fixing 'sysfs01' testcase to make it ask for File System Index of 'proc' instead of 'ext2' as pointed out by <doug.chapman@hp.com>
ltp/testcases/kernel/syscalls/sysfs/sysfs01.c

-Addressing the Issue when RHOST can be an IP_ADDRESS, as pointed out by "Ambar Seksena" <ambar.seksena@calsoftinc.com>
ltp/testcases/network/rpc/rusers/rusers01

-Patch for S390-31/64 Architecture, submitted by "B. N. Poornima"<bnpoorni@in.ibm.com>
ltp/testscripts/ltpstress.sh

LTP-20070331

-make sure people dont try and patch the generated file 
regen.sh

-use POSIX redirection as pointed out by Will Newton 
Makefile

-A fix for bug #29491.  Made more robust for use with the use of initgroups 
fchown04.c

-Fix for Bug no. [ 1671695 ] "Check return codes everywhere" as pointed out by "Markus Elfring" 
write_log.c

-Helge Deller writes: use TST_SIZE rather than sizeof(palfa) as sizeof() evaluates to 27 (+1 for the NUL byte) 
read04.c

-A fix for Bug #31162.  Passes the correct address location to the mincore call.
mincore01.c

-remove silly reliance on -DLINUX 
Makefile, data_space.c, stack_space.c

-cleanup 
sysfs01.c, sysfs02.c, sysfs03.c, sysfs04.c, sysfs05.c, sysfs06.c

-Riaz Rahaman writes: make sure the call to malloc() worked 
semget05.c

-Fix for Bug No. 1427780 (link07 fails) as pointed out correctly by 'Patrick Wyzorski' 
tst_tmpdir.c, link07.c

-A fix for Bug 29304.  The test has been adjusted to handle PPC.  Also in file07 a change was made to check for "tar archive" instead of "GNU tar archive" because sometimes a "POSIX tar archive" is created. 
file_test.sh

-Helge Deller writes: rename parisc to hppa and add tee/vmsplice/splice syscall numbers 
hppa.in, linux_syscall_numbers.h, order, parisc.in

-A patch by Ricardo Salveti De Araujo  that corrects the problem of a dhcpd test failsing when the eth0 device is not used 
dhcpd_tests.sh

-overhaul test case completely and make sure we reset errno as pointed out by Riaz Rahaman 
sysconf01.c

-Removing the size of negative 1 test.  This fixes bug # 28825 
hugeshmget02.c, shmget02.c

-A patch submitted by Raghuveer Raghavendra  to fix the problem of a Child process is waiting for the SIGTERM signal. 
rename14.c

-Henry Yei writes: Adds malloc check and frees memory during cleanup 
semop01.c

-cleanup tests, revert nanosleep() workaround for broken kernels, and fix time comparison as pointed out by Helge Deller 
gettimeofday01.c, gettimeofday02.c

-fixup /proc/sys/kernel/sem so it works properly as pointed out by Henry Yei 
semget05.c

-Carmelo AMOROSO writes: &bad_addr is passed to sysfs when in reality we want to pass bad_addr 
sysfs06.c

-Helge Deller writes: add support for hppa 
Makefile, shmt02.c, shmt04.c, shmt05.c, shmt06.c, shmt07.c, shmt09.c

-Helge Deller writes: use __builtin_return_address(0) rather than "main" to avoid arch-specific details 
diotest4.c

-cleanup code 
shmt02.c, shmt03.c, shmt04.c, shmt05.c, shmt06.c, shmt07.c, shmt08.c, shmt09.c, shmt10.c, semop01.c

LTP-20070228

-Helge Deller writes: when calling open() with O_CREAT, the mode must be
 specified.  vmsplice01.c

-A patch from Yi Xu to add a nanosleep between the first gettimeofday and the 
 next gettimeofday to make sure there has been a measurable time 
 (for gettimeofday function) elapsed gettimeofday02.c

-Corrected problem found by Thomas Schulz.  The syslog.conf file is now backed
 up before any changes are made. syslog05

-Cleaned up lines 161 - 171.  Reading the pid-max value from 
 /proc/sys/kernel/pid_max. getsid02.c

-Passing a 1 instead of 0 to genload with the -hdd option for the -i option.
  This prevents a recursive loop. runltp

-tweak CPPFLAGS so we can find all of our headers 
 Makefile

-The attached patch (from Carol Hebert) corrects some errors and adds some 
 additional tests to the IPMI testcase in pounder2.  
 ipmitool

-Removing the Ping test portion of this test because it is unneeded and 
 causes failures. mc_member

-as pointed out by Helge Deller, make sure we only check the number of bytes 
 that we wrote read04.c

-random updates from Jane Lv for uClinux 
 access05.c, chdir04.c, chroot03.c, creat06.c, execve03.c, semop05.c, 
 shmat01.c,shmctl01.c, link04.c, lstat02.c, mkdir03.c, mknod06.c, open08.c, 
 read02.c, rename08.c, rmdir02.c, rmdir03.c, rmdir05.c, stat03.c, stat06.c, 
 statfs02.c, symlink03.c, truncate03.c

	
LTP-20061222

-fix from Steven J. Hill use memset() instead of bzero() 
netsync.c

-cleanup style 
lftest.c

-fix by Will Newton to just use a normal anonymous mapping 
mmap09.c

-do not use variable names the same as system functions (like stime() or utime()) 
pan.c, tag_report.c, pipeio.c, fptest01.c, netpipe.c

-fix from Jane Lv: large buffers on the stack make uClinux cry 
lftest.c

-A fix for Bug 29489 that updates syslogtst.c for syslog-ng on SLES 10 
syslogtst.c

-Multiple Makefiles had clean up changes made 

-scrub references to _syscall2 
sysfs01.c, sysfs02.c, sysfs03.c, sysfs04.c, sysfs05.c, sysfs06.c

-use = rather than == when testing for equality in portable shell scripts as the latter is not POSIX 
ar01, cron_allow01, cron_deny01, su01, fs_di, fsxtest, bsigntest.sh, digsigtest.sh, twiddletest.sh, verify_seclvl.sh, syslog01, syslog02, syslog03, syslog04, syslog05, syslog06, syslog07, syslog08, syslog09, syslog10, tcore.sh, mc_commo, fsx.sh, nfs01, nfs02, nfs03, nfs04, nfsstat01, nfsstress, ftp03, ftp04, ftp05, rwho01, run.sh, run.sh, run.sh, run.sh, run.sh, tpm_tools.sh, mkrootfs

-put -L path to ltp in LDLIBS for now (even though it is wrong) ... need to find out what LDFLAGS isnt properly being incremented 
Makefile

-this uses bashisms so make sure we require bash 
rwtest.sh

-use memcmp() instead of legacy bcmp() 
fsx-linux.c, fsx-linux.c, symlink01.c, fsx-linux.c

-use syscall() instead of _syscall#() 
HTaffinity.c

-Rename mknod01.c to mknodat01.c for bug # 30083 
mknod01.c, mknodat01.c

-tweak cnt decrement to be POSIX friendly 
generate.sh

LTP-20061121

-Removed an invalid errno value check. 
 diotest4.c

-Fixed the setting of LTPROOT for the bin directory, not just the 
 ltp/testcase/network/multicast/mc_cmds directory for bug 25273 
 mc_cmds

-descend into timers subdir when cleaning 
 Makefile

-This patch amends pounder to build kernel 2.6.18 instead of 2.6.15. 
 build_kernel, memtest.patch, build_kernel, memtest

-dynamically calculate TST_TOTAL rather than hardcoding it 
shmctl01.c, shmctl02.c, shmctl03.c

-Fix from Jane Lv to move large arrays off the stack and into global 
 data section:
 getgroups01.c, getgroups04.c

-This patch makes the pounder control program handle SIGHUP by killing children
 when we're told that the tty closed, else you close the pounder window and 
 various parts of it keep running. 
 run.c

-The readme file has been updated for nfs 
 README

-Disable this test case for kernels below 2.6.17 and not 2.6.16. 
 vmsplice01.c

-This is a patch that allows pounder to record the contents of sysfs when it 
 starts, thus enabling us to take a better snapshot of the system state when
 pounder starts.  It also adds "lspci" into the PCI Device Tree heading per 
 user request. 
 get_hw_info

-Since 2.6.17, _syscall* isn't exported into the user space any more, so all 
 the test cases using _syscall* will fail to be compiled This patch 
 remove _syscall5 from llseek.c and convert to syscall provided by libc.It 
 also includes some cleanups and makes the build cleaner and removes the 
 warning for 
 scsimain.c, llseek.c, scsimain.c

-Backed out the "fix" in Bug 1592647, b/c I don't think the testcase is 
 actually broken. 
 diotest4.c

-touchup code a little to make the expected behavior of test4 more obvious 
 setrlimit01.c


-The random syscall generator has a bug on x86-64 where it only generates 
 random bits for the upper 32 bits of the syscall argument, and then truncates
 the upper 32 bits anyway!  This patch replaces the rand() weirdness with a 
 function that generates N bytes of random data instead. It also adds a -z 
 flag in case one *wants* the zero-arguments behavior; Max Asbock and Russ 
 Weight requested it because zero is a quick way to find kernel code paths
 that don't check userland pointers. 
 CHANGELOG, randasys.c, random_syscall

-Applied fix for Bugs item #1592647 
diotest4.c

-A patch by Jacky Malcles  (The IA-64 architecture sets SHMLBA to 1MB and) The 
 value of the pointer address passed to shmat being set in such a way that
 rounding down to the nearest multiple of SHMLBA results above the current 
 heap. 
 shmt09.c


-Made a change to a comment above the change for 1.11 
 mc_cmds

-Disabling the ping test for now.  The test can pass without this additional 
 check and can cause failures on some distros. 
 mc_commo


-A patch by Suzuki Kp, that removed the definition of HZ from user space for 
 Bug # 28023. 
 adjtimex02.c


-Comment out set -x to remove debug output 
 nfsstat01

LTP-20061017

-A fix for Bug 23587 where the connectathon test failed on linux client with cifs mount to Windows2003 R2 server 
op_chmod.c

-For Linux, 3 is a valide value for the scheduler, as found in the /linux/includ/sched.h file.   For testing and invalid_policy, the invalid_policy value should not be 3 
17-5.c

Ssem_post/5.-1.c According to its intention, #3, call sleep(1) and then alarm(1).  Moving sleep before alarm causes the test to pass  sem_post/8-1.c Although step 3 intended,  The children lock the semaphore. * Make sure the two children are waiting."  Without that caeratn piece of cde which explicity make children wat.  the test will PASS and the children are waiting.  Sem_unlink_1_1 and sem_unline_2_1 "Sem_unlink" is too long for the name of a semaphore for certain architectures 
5-1.c, 8-1.c, 1-1.c, 2-1.c

-When calling pthread_attr_setscope, PHREAD_SCOPE_PROCESS is not supported by linux, change it to PTHREAD_SCOPE_SYSTEM and the test will pass 
20-1.c, 21-1.c, 21-2.c

-Removed the  ":" after 'v' in the getopts line because it is not using optarg. 
runltplite.sh

-Added code to disable tests that will not run on kernels below 2.6.16 
faccessat01.c, fchmodat01.c, fchownat01.c, fstatat01.c, futimesat01.c, linkat01.c, mknod01.c, openat01.c, readlinkat01.c, renameat01.c, symlinkat01.c, tee01.c, unlinkat01.c, vmsplice01.c

-When calling pthread_attr_setscope, PHREAD_SCOPE_PROCESS is not supported by linux, change it to PHTREAD-SCOPE_SYSTEM for testing and then the test passes. 
22-1.c, 22-2.c

-A patch by David Stevens that fixes: 1) Removes signedness warning by changing the type of valsize from int to socklen_t 2) Correct but in ancillary data - sorce data is unit8_t, memcopy size is "sizeof(int)"; this results in garbage and TBROK on PPC64 
asapi_06.c

-A fix for bugs 27174 and 27177.  This fixes the problem of reading HugePages_Free 
hugemmap01.c, hugemmap04.c

-Correcting error messages 
ltpapicmd.c

-This patch by Darrick Wong fixes complier warnings and overflow problems related to the use of large number #defines on some architectures. 
inconsistency-check.c


-When calling pthread_attr_setscope, PTHREAD_SCOPE_PROCESS is not supported by linux, change it to PTHREAD_SCOPE_SYSTEM for testing 
15-1.c, 15-2.c


-A fix for bug #27618 that addresses two issues: 1) PAGE_SIZE which was normally 4096, but on the machine it found to 64k ! 2) The size of the file, offset passed. If those values, happen to be on the *Page boundary*, mmap would be happy. But in our case, it was not ! 
fsx-linux.c

-Changing include <posixtest.h> to include "posixtest.h" 
1-1.c

-A patch by Darrick Wong that adds a set of rudimentary IPMI tests to pounder.  They check that the in-kernel IPMI driver can access the machine's BMC/SP (if there is one), query it for status and check for various IPMI 2.0 features. 
default-tests.tar.gz, ipmitool, ipmitool	

LTP-20060916

-Code was added to disable tests that will not run on kernels versions lower
 than 2.6.16
 fstatat01.c, vmsplice01.c, unlinkat01.c, mkdirat01.c, mkdirat01.c, 
 readlinkat01.c,futimesat01.c,renameat01.c,openat01.c, openat01.c, fchownat01.c
 symlinkat01.c,faccessat01.c, timer_create02.c, fchmodat01.c, splice01.c, 
 tee01.c, mknod01.c

-The following new test cases for 2.6.16 kernels and above were created by
 Yi CDL Yang
 fstatat01.c, vmsplice01.c, unlinkat01.c, mkdirat01.c, mkdirat01.c, 
 readlinkat01.c,futimesat01.c,renameat01.c,openat01.c, openat01.c, fchownat01.c
 symlinkat01.c,faccessat01.c, timer_create02.c, fchmodat01.c, splice01.c, 
 tee01.c, mknod01.c

-Changes were made to several files to make them easier to read 
 change_owner.mode.sh

-Changes were made to remove  DOS ^M 
 ltp-run-files.txt, self_exec.c, Makefile, load_tagp.sh, str_agp.h, tagp.h, 
 Makefile, user_tagp.h, pci-exp-tests-HOWTO, Makefile, README, runtest_off.sh,
 runtest_on.sh, README, Makefile, README, common.h, README.1ST, mem03.c, 
 README, ltpClient.c, ltpServer.c

-Changes made by Jacky Malcles that let ltp-aiodio.sh fun this scenario 
 ltp-aiodio.part3

-Changes made to  linux __NR_ logic here 
 Makefile, i386.in, ia64.in, linux_syscall_numbers.h, order, parisc.in, 
 powerpc.in, powerpc64.in, regen.sh, s390.in, s390x.in, sparc.in, sparc64.in, 
 stub-list, x86_64.in

-Changes were made to Define _GNU_SOURCE if not already defined 
 chmod05.c, chmod06.c, fchmod05.c, fchmod06.c, fcntl17.c, llseek01.c, 
 llseek02.c, mount03.c

-Generate script into generic shell and make sure we still work even if host 
 lacks perl 
 Makefile, generate.sh

-A patch by jiang guowei for mmap1.c.  It makes the option -v valid.Otherwise,
 when you type mmap1 -v in command line,it will show:invalid option.More 
 detail,please see bug 1541053. 
 mmap1.c

-Applied a patch to fix bug #14744 
 kill02.c

- Changed Makefile to standard LTP makefile and fixed a build problem with the
  new lock tests 
  ltp/testcase/network/nfsv4/lock/Makefile

- Changes made to several Makefiles to force CFLAGS/LIBS to be evaluated 
  once rather than everytime they are used 

-Standardize makefiles (punt UCLINUX/COLDFIRE cruft, build everything with 
  "-Wall" and user-optimizations, remove pointless targets in favor of 
  implicit ones, etc...) Makefiles

-Adding files for Mitsu's networking tests. 
 00_Descriptions.txt, Makefile, broken_ip4-checksum, broken_ip4-dstaddr, 
 broken_ip4-fragment, broken_ip4-ihl, broken_ip4-protcol, broken_ip4-totlen, 
 broken_ip4-version, broken_ip6-dstaddr, broken_ip6-nexthdr, broken_ip6-plen, 
 broken_ip6-version, Makefile, 00_Descriptions.txt, Makefile,
 route4-change-dst,route4-change-gw, route4-change-if, route4-ifdown, 
 route4-redirect, route4-rmmod, route6-change-dst, route6-change-gw,
 route6-change-if, route6-ifdown, route6-redirect, route6-rmmod

-Add a common header for __NR defines 
 fchownat01.c, fstatat01.c, futimesat01.c, mkdirat01.c, mknod01.c, 
 openat01.c, splice01.c, tee01.c, common_timers.h

-Added a patch by Mitsuru Chinen that added the Absolute path to execute sshd 
 daemon ssh4-stress

-This patch adds brackets because some versions of ssh requires square brackes
 around the IPv6 address.
 ssh-stress03-rmt

-Changes are made to try to load .ko modules before .o as pointed out by HK 
 ltpacpi.sh, load_tagp.sh, load_tbase.sh, load_tmod.sh, load_tdrm.sh, 
 load_tbio.sh

-Additional changes for  uClinux fixes from Jane Lv 
 access05.c, chdir04.c, chroot03.c, creat06.c, mkdir03.c, mknod06.c, 
 nanosleep03.c, open08.c, pause02.c, rename08.c, rmdir02.c, sigrelse01.c, 
 sockioctl01.c, stat03.c, statfs02.c

-Made changes to clean up the makefile, clean up source code warnings, and 
 add better libc/libepoll detection 
 CheckVer.c, Makefile, epoll-ltp.c

- A fix by Jeff Bailey for my previous breakage of install target in Multiple 
  Makefiles

-A patch was created tomake errno failure message more helpful 
 sysctl03.c

-A patch that sets the constant PAGE_SIZE to the kernel its running on 
 fsx-linux.c

-Changes were made to remove extraneous whitespace 
 Makefile, pth_str01.c, pth_str02.c, pth_str03.c

-A patch was created to move common defines/functions/etc... to one header 
 file so we have to get it right just once 
 clock_gettime02.c, clock_gettime03.c, clock_settime02.c, clock_settime03.c, 
 common_timers.h, timer_create02.c, timer_create03.c, timer_create04.c, 
 timer_delete02.c, timer_delete03.c, timer_settime02.c, timer_settime03.c

-Adding files for Mitsur's networking tests 
 00_Descriptions.txt, Makefile, mcast4-grpope01, mcast4-grpope02, 
 mcast4-grpope03, mcast4-grpope04, mcast6-grpope01, mcast6-grpope02, 
 mcast6-grpope03, mcast6-grpope04, 00_Descriptions.txt, Makefile, 
 mcast4-pktfld01,mcast4-pktfld02, mcast6-pktfld01, mcast6-pktfld02, 
 00_Descriptions.txt, Makefile, mcast4-queryfld01, mcast4-queryfld02, 
 cast4-queryfld03, mcast4-queryfld04, mcast4-queryfld05, mcast4-queryfld06, 
 mcast6-queryfld01, mcast6-queryfld02, mcast6-queryfld03, mcast6-queryfld04, 
 mcast6-queryfld05, mcast6-queryfld06

-A change was made to use __linux__ preprocessor from toolchain itself rather 
 than a local custom _LINUX 
 Makefile, sched_tc0.c, sched_tc1.c, sched_tc2.c, sched_tc3.c, sched_tc4.c, 
 sched_tc5.c, sched_tc6.c

-A fix type of option_message 
 reboot01.c

-Changes were made to cleanup source code 
 domount.c, getopt.c

-A patch that addes new functionality into the NFSvf lock tests. -fixes bugs -
 adds the capability to stress a server with multiple clients 
 DEPLOY, Makefile, README, VERSION, locktests, locktests.c, locktests.h, 
 locktests.py, netsync.c, locktests-2.tar.gz

-Changes to shmt09 were made by Marc Tardiff.  Refer to the cvs log file 
 for more details. Tested successfully on sparc and i386 architectures. 
 
-Changes were made to shmt09 to account for ppc64

-Added a warning to those who wish to fiddle 
tests.init

-Changes were made to declare splice for new vmsplice test 
 i386.in, ia64.in, linux_syscall_numbers.h, powerpc.in, powerpc64.in, 
 s390.in, sparc.in, sparc64.in, stub-list, x86_64.in

-Changes were made to add cast to shutup warning 
 timer_delete03.c, timer_settime03.c

-A fix was made to remove trailing whitespace 
 clock_gettime02.c, clock_gettime03.c, clock_settime02.c, clock_settime03.c, 
 timer_create02.c, timer_create03.c, timer_create04.c, timer_delete02.c, 
 timer_delete03.c, timer_settime02.c, timer_settime03.c

-Fixes taken from Yi CDL Yang and create a CLOCK list for people to use 
 as well as a func to turn a clock value into a string 
 common_timers.h

-Changes were made to unify the generate.sh scripts and use the new top level 
 make-files script 
 generate.sh, Makefile, generate.sh, Makefile, generate.sh, nfs02, Makefile,  
 generate.sh, Makefile, generate.sh, Makefile, generate.sh, Makefile, 
 generate.sh

-Patches were submitted Mitsuru Chinen writes: As an end-of-line semicolon 
 is missing, compiling asapi_06.c is failed. 
 asapi_06.c

-Patches were submitted Mitsuru Chinen writes: It seems that the contents 
 of runtest/ipv6_lib gets old. Currently, there is no test named lib6, 
 but more tests are available in testcases/network/lib6 directory. 
 ipv6_lib

LTP-20060918

-Code was added to disable tests that will not run on kernels lower 
 than 2.6.16
 fstatat01.c, vmsplice01.c, unlinkat01.c, mkdirat01.c, mkdirat01.c, 
 readlinkat01.c,futimesat01.c,renameat01.c,openat01.c, openat01.c, fchownat01.c
 symlinkat01.c,faccessat01.c, timer_create02.c, fchmodat01.c, splice01.c, 
 tee01.c, mknod01.c

-The following new test cases for 2.6.16 kernels and above were created by
 Yi CDL Yang
 fstatat01.c, vmsplice01.c, unlinkat01.c, mkdirat01.c, mkdirat01.c, 
 readlinkat01.c,futimesat01.c,renameat01.c,openat01.c, openat01.c, fchownat01.c
 symlinkat01.c,faccessat01.c, timer_create02.c, fchmodat01.c, splice01.c, 
 tee01.c, mknod01.c

-Changes were made to several files to make them easier to read 
 change_owner.mode.sh

-Changes were made to remove  DOS ^M 
 ltp-run-files.txt, self_exec.c, Makefile, load_tagp.sh, str_agp.h, tagp.h, 
 Makefile, user_tagp.h, pci-exp-tests-HOWTO, Makefile, README, runtest_off.sh,
 runtest_on.sh, README, Makefile, README, common.h, README.1ST, mem03.c, 
 README, ltpClient.c, ltpServer.c

-Changes made by Jacky Malcles that let ltp-aiodio.sh fun this scenario 
 ltp-aiodio.part3

-Changes made to  linux __NR_ logic here 
 Makefile, i386.in, ia64.in, linux_syscall_numbers.h, order, parisc.in, 
 powerpc.in, powerpc64.in, regen.sh, s390.in, s390x.in, sparc.in, sparc64.in, 
 stub-list, x86_64.in

-Changes were made to Define _GNU_SOURCE if not already defined 
 chmod05.c, chmod06.c, fchmod05.c, fchmod06.c, fcntl17.c, llseek01.c, 
 llseek02.c, mount03.c

-Generate script into generic shell and make sure we still work even if host 
 lacks perl 
 Makefile, generate.sh

-A patch by jiang guowei for mmap1.c.  It makes the option -v valid.Otherwise,
 when you type mmap1 -v in command line,it will show:invalid option.More 
 detail,please see bug 1541053. 
 mmap1.c

-Applied a patch to fix bug #14744 
 kill02.c

- Changed Makefile to standard LTP makefile and fixed a build problem with the
  new lock tests 
  ltp/testcase/network/nfsv4/lock/Makefile

- Changes made to several Makefiles to force CFLAGS/LIBS to be evaluated 
  once rather than everytime they are used 

-Standardize makefiles (punt UCLINUX/COLDFIRE cruft, build everything with 
  "-Wall" and user-optimizations, remove pointless targets in favor of 
  implicit ones, etc...) Makefiles

-Adding files for Mitsu's networking tests. 
 00_Descriptions.txt, Makefile, broken_ip4-checksum, broken_ip4-dstaddr, 
 broken_ip4-fragment, broken_ip4-ihl, broken_ip4-protcol, broken_ip4-totlen, 
 broken_ip4-version, broken_ip6-dstaddr, broken_ip6-nexthdr, broken_ip6-plen, 
 broken_ip6-version, Makefile, 00_Descriptions.txt, Makefile,
 route4-change-dst,route4-change-gw, route4-change-if, route4-ifdown, 
 route4-redirect, route4-rmmod, route6-change-dst, route6-change-gw,
 route6-change-if, route6-ifdown, route6-redirect, route6-rmmod

-Add a common header for __NR defines 
 fchownat01.c, fstatat01.c, futimesat01.c, mkdirat01.c, mknod01.c, 
 openat01.c, splice01.c, tee01.c, common_timers.h

-Added a patch by Mitsuru Chinen that added the Absolute path to execute sshd 
 daemon ssh4-stress

-This patch adds brackets because some versions of ssh requires square brackets
 around the IPv6 address.
 ssh-stress03-rmt

-Changes are made to try to load .ko modules before .o as pointed out by HK 
 ltpacpi.sh, load_tagp.sh, load_tbase.sh, load_tmod.sh, load_tdrm.sh, 
 load_tbio.sh

-Additional changes for  uClinux fixes from Jane Lv 
 access05.c, chdir04.c, chroot03.c, creat06.c, mkdir03.c, mknod06.c, 
 nanosleep03.c, open08.c, pause02.c, rename08.c, rmdir02.c, sigrelse01.c, 
 sockioctl01.c, stat03.c, statfs02.c

-Made changes to clean up the makefile, clean up source code warnings, and 
 add better libc/libepoll detection 
 CheckVer.c, Makefile, epoll-ltp.c

- A fix by Jeff Bailey for my previous breakage of install target in Multiple 
  Makefiles

-A patch was created to make errno failure message more helpful 
 sysctl03.c

-A patch that sets the constant PAGE_SIZE to the kernel its running on 
 fsx-linux.c

-Changes were made to remove extraneous whitespace 
 Makefile, pth_str01.c, pth_str02.c, pth_str03.c

-A patch was created to move common defines/functions/etc... to one header 
 file so we have to get it right just once 
 clock_gettime02.c, clock_gettime03.c, clock_settime02.c, clock_settime03.c, 
 common_timers.h, timer_create02.c, timer_create03.c, timer_create04.c, 
 timer_delete02.c, timer_delete03.c, timer_settime02.c, timer_settime03.c

-Adding files for Mitsuru's networking tests 
 00_Descriptions.txt, Makefile, mcast4-grpope01, mcast4-grpope02, 
 mcast4-grpope03, mcast4-grpope04, mcast6-grpope01, mcast6-grpope02, 
 mcast6-grpope03, mcast6-grpope04, 00_Descriptions.txt, Makefile, 
 mcast4-pktfld01,mcast4-pktfld02, mcast6-pktfld01, mcast6-pktfld02, 
 00_Descriptions.txt, Makefile, mcast4-queryfld01, mcast4-queryfld02, 
 cast4-queryfld03, mcast4-queryfld04, mcast4-queryfld05, mcast4-queryfld06, 
 mcast6-queryfld01, mcast6-queryfld02, mcast6-queryfld03, mcast6-queryfld04, 
 mcast6-queryfld05, mcast6-queryfld06

-A change was made to use __linux__ preprocessor from toolchain itself rather 
 than a local custom _LINUX 
 Makefile, sched_tc0.c, sched_tc1.c, sched_tc2.c, sched_tc3.c, sched_tc4.c, 
 sched_tc5.c, sched_tc6.c

-A fix type of option_message 
 reboot01.c

-Changes were made to cleanup source code 
 domount.c, getopt.c

-A patch that adds new functionality into the NFSvf lock tests. -fixes bugs -
 adds the capability to stress a server with multiple clients 
 DEPLOY, Makefile, README, VERSION, locktests, locktests.c, locktests.h, 
 locktests.py, netsync.c, locktests-2.tar.gz

-Changes to shmt09 were made by Marc Tardiff.  Refer to the cvs log file 
 for more details. Tested successfully on sparc and i386 architectures. 
 
-Changes were made to shmt09 to account for ppc64

-Added a warning to those who wish to edit it 
tests.init

-Changes were made to declare splice for new vmsplice test 
 i386.in, ia64.in, linux_syscall_numbers.h, powerpc.in, powerpc64.in, 
 s390.in, sparc.in, sparc64.in, stub-list, x86_64.in

-Changes were made to add cast to silence warnings 
 timer_delete03.c, timer_settime03.c

-A fix was made to remove trailing whitespace 
 clock_gettime02.c, clock_gettime03.c, clock_settime02.c, clock_settime03.c, 
 timer_create02.c, timer_create03.c, timer_create04.c, timer_delete02.c, 
 timer_delete03.c, timer_settime02.c, timer_settime03.c

-Fixes taken from Yi CDL Yang and create a CLOCK list for people to use 
 as well as a func to turn a clock value into a string 
 common_timers.h

-Changes were made to unify the generate.sh scripts and use the new top level 
 make-files script 
 generate.sh, Makefile, generate.sh, Makefile, generate.sh, nfs02, Makefile,  
 generate.sh, Makefile, generate.sh, Makefile, generate.sh, Makefile, 
 generate.sh

-Patches were submitted Mitsuru Chinen writes: As an end-of-line semicolon 
 is missing, compiling asapi_06.c is failed. 
 asapi_06.c

-Patches were submitted Mitsuru Chinen writes: It seems that the contents 
 of runtest/ipv6_lib gets old. Currently, there is no test named lib6, 
 but more tests are available in testcases/network/lib6 directory. 
 ipv6_lib

>>>>>>> 1.90
LTP-20060822

-Added files for Mitsuru's Chinen's nfs patch: 
ns-mcast.h, ns-mcast_join.c, ns-mcast_receiver.c, network_stress.appl,
 network_stress.broken_ip, network_stress.icmp, network_stress.interface, 
network_stress.multicast, network_stress.route, network_stress.tcp, 
network_stress.udp ns-icmp_redirector.c, ns-icmpv4_sender.c, 
ns-icmpv6_sender.c, ns-igmp_querier.c
	
-Made changes to avoid hardcoding test count 
mkdir03.c, open08.c

-Changed the test to account for SLES 10.  Now the syslog tests will test 
 syslog-ng or syslogd depending on which one is present.  The update was     
 made for syslog01 - syslog10. 

-Corrected the copyright information to reflect SGI, instead of Cray, which
 was purchased by SGI years ago for files get_high_address.c, search_path.c

-Removed the Ping test. The ping test is now skipped on SLES, but does not 
  affect the execution of the rest of the test in mc_commo	

-Using syscall() rather than _syscall#() macros for the following files:
  sysfs01.c, sysfs02.c, sysfs03.c, sysfs04.c, sysfs05.c, sysfs06.c,  
  sysctl01.c, sysctl03.c, sysctl04.c, sysctl05.c
	
-Added a fix to eliminate whitespaces in getdents02.c, getdents03.c, 
getdents04.c	

-Added a fix to re-order testcases a little to account for uclinux in 
access05.c, lstat02.c, mknod06.c

-A Correction was made to the name of the testcase in code...was incorrectly 
called signal_test_03  and changed to signal_test_02.c

-A fix to  get the max pid value at runtime rather than compile time hardcode 
wait402.c, setpriority04.c,Makefile, getsid02.c

-A fix to remove extraneous include 
swapon02.c

- mc_cmds had two fixes.  The test now uses [ae]th[01] in the ping command 
using the -I option. Also the loop to determine which ethernet interface 
is needed was moved to ensure that the correct ethernet interface was selected.

-A patch was addded that allows the following files to get the PID_MAX value 
from /proc/sys/kernel/pid-max: 
access05.c, fcntl15.c, gethostid01.c, lstat02.c, mknod06.c, setrlimit02.c, 
setsockopt01.c, stat03.c, truncate03.c	

LTP-20060717
 - The tarball default-tests.tar.gz is a replacement for
   testcases/pounder21/default-tests.tar.gz.  This new pounder config
   enables the magic sysrq key when pounder starts.   
 - A patch submitted by Derek Wong to reduce the memory requirements of
   pounder's ramsnake test.
 - A patch submitted by Will Newton that allows for compatibility changes
   gcc 2.95.2 in th following files:
     lib.c, lib64.c, test.c, test64.c, test_func.c, test_func64.c, tools.c
 - Fixed ColdFire Makefile mistake in the syscall and syscalls/mmap directory
 - Added a note for uClinux users in the top level Makefile
 - A fix for failures in fcntl27 and fcntl28 for bugs 21614 and 23235.
 - A fix submitted for make_tree.c by Jacky Malcles that fixes this
   testcase by setting envp
  - A fix submitted to Jacky Malcles that fixes read_checkzero.c.  The lseek
   function allows the file offset to be set beyond the end of the existing
   end-of-file of the file.  If data is later written at this point,
   subsequent reads of the data is in the gap returns bytes of zeros until
   data is actually written into the gap.
 - In the testcase semget05.c the value of MAXIDS was changed for the specific
   machine by reading the system limit for SEMMNI - The maximum number of
   semaphore sets. This is a fix for bug 24745
 - A fix submitted by Amit K. Amora that initializes the alarm received
   code and allows the test to pass more than just once on 2.6.17-rc6
   alarm05.c,
 - A fix was submitted by Andy Echols for pan.c to fix an infinite
   loop problem that occurs  in pan if runltp tries to run a test
   that isn't present.
 - A fix was submitted to cast TEST_RETURN to gid_t to avoid implicit casts
   which tend to cause problems with the testcase  setregid03.c,
 - A patch submitted by Jacky Malcles that fixes the problem where
   i0_getevents() return value is not checked and may return 0 if
   no events are available and may generate a SIGSEGV in the testcase
   aiodio_append.c,
 - Backed out the _USC_LIB change for several Makefiles because it was
   breaking on the PowerPc platform on Fedora Core
 - Added code to ignore looking for PID_MAX on powerpc, s390, and i386 to
   fix build problems on newer kernel versions on the following files:
    sysctl05.c, setpriority04.c sysfs01.c, sysfs02.c, sysfs03.c, sysfs04.c,
    sysfs06. getdents01.c, sysctl03.c getsid02.c, sysctl01.c,wait402.c
 - TCP.c was changed to delete broken whitespace and also the call for
   accept(2) takes a socklen_t, not an int
 - Changes were added to the following files to use memset() instead of
   bzero():
   tlibio.c, write_log.c, doio.c, iogen.c, fsstress.c, fsx-linux.c,
   pthcli.c, pthserv.c, pth_str01.c, pth_str03.c, recvmsg01.c, sendmsg01.c,
   crash01.c, crash02.c, pingpong6.c,test_getname.c,fancy_timed_loop.c, 
   infinite_loop.c, run.c, timed_loop.c, snake.c, rpc1.c,pipeio.c, mc_recv.c
 - Changes were added to the following files to use memcpy() instead of
    bcopy():
    serverCommunication.cpp, member.c, rpc1.c,pipeio.c,mc_recv.c
-  A series of  patches created by Mitsuru Chinen that  created some addtional 
   network stress tests. 
-  A change submitted by Liang Shuang that fixes su01_su for the arm 
   architecture
LTP-20060615
-Added a patch from Darrick Wong to reduce the memory requirements of 
 pounder's ramsnaketes
-Added a patch for crash01.c from Olof Johansson <olof@lixom.net>
 POWER5 has coherent icache, but POWER4, PPC970 and some other processors
 lack it. The standard dcbst/icbi/isync is needed to avoid using the not
 so random (or stale) data instead.
-Test.h was moved to common headers to eliminate the need for every test file to
 declare Tst_count extern
-Usctest.h was changed to eliminate scope issues when actually using TEST()
-Added a patch from Mike Gahangan to clean up a makefile with an extra build 
 target variable.  
-Added a patch from Issac Wilcox that can keeps the test from returning a false
 failure
-Made changes to setregid02, setregid03 and setregid04 to use gid_t instead 
 of int where appropriate
-Made changes to setresgid01, setresgid02,setresgid03, setresuid01,setresuid02,
 and setresuid03  to pull the [gs]etre* prototypes from headers rather than 
 defining them ourself
-Made changes to setreuid01,setreuid02,setreuid03,setreuid04,and setreuid05
 to use uid_t instead of int where appropriate
- Added a change to getpriority01 to combine the TEST_RETURN and TEST_ERRNO 
  if check so that we always display PASS or FAIL messages as pointed out 
  by Isaac Wilcox
- Added a patch to make the output of fork07 deterministic.
  Specifically, make sure stdout is flushed before forking 100 times,
  else you can get 101 copies of the output.  This only seems to happen
  if glibc notices that stdout is a regular file, but in my test setup
  stdout is always redirected to a file and compared with something.
-Changed the declaration for setup and cleanup from extern in the 
 following files:

 alarm01,chdir02,chown01,close08,creat09,dup0,dup04,execl01,execle01,execlp01,
 execv01,execve01,execvp01,fchmod01,fchown01,fcntl02,fcntl03,fcntl04,fcntl05,
 fcntl09,fcntl10,fcntl23,fcntl24,fcntl25,fcntl26,fcntl27,fcntl28,fork01,
 fpathconf01,fstat01,fstatfs01,fsync01,getcontext01,getdtablesize01,getegid01,
 geteuid01,getgid01,getgroups02,gethostid01,gethostname01,getpagesize01,
 getpgrp01,getpeername01,getpid01,getppid01,link07,lstat01,mkdir08,open03,
 pause01,read01,readlink02, readlink03,rename02,rmdir04,select03,setgid01,
 setpgid01,setpgid02,setregid01,setuid02,stat05,statfs01,statvfs01,symlink02,
 symlink03,symlink04,symlink05,sync01,time01,time02,times01,umask01,uname01,
 unlink05,wait02,write01,setreuid01,setreuid02,getuid01,link05,

LTP-20060515
-Added a -e option to print out the date of the ltp release.  Also
 the date of the version of LTP will be printed in log files.	
-A patch for parse_opts.c was removed because it caused several test cases to fail
-Added a patch from Jacky Malcles to correct typos in ltp-aiodio.sh
-Added a patch from Jacky Malcles to fix aiodio_append.c
-Added a patch from Bibo Mao that fixes setrlimit03
-Added a patch that fixes file_test.sh.  
-Added a patch that fixes gethostid01
-A problem that was  reported by Jane Lv, mmap() returns an unsigned value (MAP_FAILED) upon error, so checking with <= 0 will not work was fixed in link04.c, lstate02.c mkdir01, mkdir03, mknod06, open08 read02.c rmdir06.c stat03.c statfs03 symlink03.c sysfs06.c truncate03.c uplink07.c write03.c and writev01.c - writev05.c
- Patches submitted by Thomas Gleixner to initialize interval values in setitimer03

LTP-20060412
-Removed a patch for parse_opts.c that caused many test cases to fail.  
-Applied a patch by Jacky Malcles that added a fourth scenario for ltp-aiodio.sh
-Fixed ld01 from failing on Assertions 1-7 for bug 22167
-Applied a fix for Lin Feng Shen to eliminate white spaces that caused mail02 to fail
- A fix created by Jacky Malcles that eliminates warning messages when complied on 64 bit platform
-Applied a patch to re-enable writing on arm per by Joe Pearson / Nick Pollitt
-Applied three patches by Joy Latten to the security test suite
-Applied patches from Robert Williamson to fix fcntl127. This test
should now  be positive test versus negative...based on the properties of
 the open() call in the setup() 
-Applied Patch from Robbie Williamson that fixed fcntl128.  This testcase was changed the test to expect no errors.  The fcntl() call should succeed regardless
-Applied a patch from gettimeofday01 to gettimeofday02 to fix the occasional failure
-Applied a fix to madvise02 by Jacky Malcles to eliminate the need for a special execution of the testcase for ia_64
-Applied a patch fixes the test 4 of mincore01.c that failed in 32 bit on a 64 bit kernel.
-Patches applied to pread02 to fix broken white spacing
-Applied a patch from Jane Lv for pread03.c.  This fixed a missed step to initialize the read buffer array.
-Applied Patches submitted by Thomas Gleixner to initialize interval values to prevent setitimer01 and 02 from failing
-Applied updates from Darrick Wong for Pounder for Pounder21.  Documentation was  added to get pounder up and running quickly
-Feature added to Pounder21 that enables the sysrq key at the beginning of every pounder run

LTP-20060306
- Applied an update to allow people to automatically declare the CREATE variable in IDcheck.sh.
- export a bunch of settings by default that since they are harmless
- allow people to store custom settings in config.mk
- move rec_signal/send_signal out of zoolib.h and into pan.c since only pan.c uses them and more than just pan.c includes zoolib.h
- Fix from Jackie Malcles, no such file or directory error
- make sure clean descends into the templates dir
- cleanup CRLFs from end of lines, 
- fix dependency tracking so targets arent rebuilt all the time
- Applied LDFLAG cleanup patch from Mike Frysinger.
- set default Debug level to off
- fix warning: growfiles.c:357: warning: unused variable `opterr'
- use errno.h instead of doing extern int errno
- cut extraneous newlines from test output
- kill off unused strings msg1 and msg2
- cleanup test output by adding a lot more useful debug info
- use proper test output routines rather than homebrewed printf statements
- use proper tst_* functions for output
- fix for defect 21622, insufficient timeout value
- tighten up uClinux disabled messages
- fixes by Jane Lv to disable EFAULT related tests on uClinux
- cleanup debug output that shouldnt be shown at normal runtime
- make the -F option a bit smarter
- remove extraneous output and improve output when we do issue messages
- Jane Lv writes: I have patched flock03.c and sched_setparam05.c to replace fork() by vfork() on uClinux.
- calculate TST_TOTAL based upon the number of elements in the test array instead of hardcoding the value
- use TFAIL instead of TINFO to report test failures in getcwd02
- fix test on x86_64 and make error output a bit more helpful in gettimeofday
- New Memory mapping testcases.
- Jane Lv writes: use FORK_OR_VFORK() instead of fork() so this stuff works on uClinux
- need to define _GNU_SOURCE before including features.h or sigset prototype is missed
- patched flock03.c and sched_setparam05.c to replace fork() by vfork() on uClinux.
- use syscall() instead of _syscall2() to improve portability
- define INVALID_ADDRESS to get rid of warnings on 32bit hosts and make it more sane in general
- Fix for defect 21134, look for syslog-ng instead of syslogd on some systems.
- if a test failed as a non-root user and the reason was EPERM, then mark the test as PASS, not FAIL 
  (security-minded kernels often restrict kernel buffer access for non-root users)
- fix test on 64bit hosts in syslog12


LTP-20060205
- Added new fcntl() test contributed by Jacky Malcles to test opening with O_WRONLY
- Fix typo in nfs run script, nfs03 ran twice instead nfs04
- Added the LTP's Database Opensource Test Suite to the testsuite.
- Applied patch from Mike Frysinger that disables ballista if no perl 
  is installed on the system and fixes the clean target.
- Applied LDFLAG fix from Mike Frysinger
- Applied patch from Mike Frysinger to ensure Makefile properly respect CFLAGS/LDFLAGS
- fixed some RH/Suse specific messages
- Updates for mmc security tests
- Updates for device driver testsuites from Amit Khanna (Intel)
- Applied memory leak fix in fsx-linux.c
- Fix for uClinux to fix execute error
- Fix to prevent not enough (pages) dups error in some cases
- Applied patch from Jacky Malcles: during its life fcntl23 has changed:
  used to open the file with O_RDWR and now is opening with O_RDONLY
- Added new fcntl() test contributed by Jacky Malcles to test opening with O_WRONLY
- Fixed gethostid01 so the second 64 bit check doesn't clobber the first 64 bit check by using a bitmask
- fix for defect 21050, the logic on line 211 was reversed causing the 64bit code to get run on a 64bit system
- Fixes for uClinux to fix fork and invalid memory access errors
- Fix for defect 21072, fixing the offset on some systems
- Applied patch from Mike Frysinger to resolve issue with UNALIGNED being defined multiple times for ARM targets.
- Patch to fix race condition on 64bit systems, fixes bugzilla 19013
- Fix for defect 21046, testcase should fail ENOMEM passes due to insufficient pages
- Applied patch from Jane Lv to disable test for uClinux.
- Fix for defect 21065, the kernel changed the return for tests 4 & 9. Added dual tests on failure so new/old kernels should both pass
- Fix to get rid of ugly messages during the make
- Fix for defect 21068, check for the existance of either syslogd or syslog-ng before failing and reporting an error
- Applied patch from Mike Frysinger to resolve problem with defining a local syslog() function when the tests are built statically.
- Fix for defect 20348, waitpid12 hangs occasionally
- Applied patch from Jeff Burke:
  Here is a patch that modifies the following files:
   testcases/network/nfsv4/acl/acl1.c - Fix for segfault in a printf.
   testcases/network/nfsv4/acl/create_users.py - Fix for help syntax
     (backwards -u users -g groups).
   testcases/network/nfsv4/acl/runtest - Fix for useradd command and also
      a echo command.
   testcases/network/nfsv4/acl/test_long_acl.py - Fix for output, the  #
      of entries was munged with the word entries.
- Add sctp testcase updates
- Initial drop of pounder21 testsuite

LTP-20060105
- Updates from Jennifer Monk to enable compiling w/o errors using XLC
- Applied Coldfire patch from Jody McIntyre:
 - Make the fdopen workaround blackfin-specific (not needed on Coldfire.)
 - getdents01: gcc 2.95 does not like declarations in the middle
   of functions, so move getdents to the top.
 - Add LDFLAGS to the following Makefiles:
 - Add -D_USC_LIB_ for Coldfire builds to the following Makefiles: creat,
   execve, fchdir, kill, mkdir, open, rename, rmdir, sched_setscheduler,
   vhangup, ipc/lib.  This avoids symbol conflicts reported by gcc 2.95.
 - Skip the following syscall tests on Coldfire: madvise, mlock, munlock.
   These system calls are not implemented.
 - IPC: Modify the headers and Makefiles to avoid duplicate definitions of
   msgkey on Coldfire.
 - msgctl08, msgctl09: Lower MAXNPROCS to a value that will fit in the
   Coldfire's memory.
 - mallopt01: Define __MALLOC_STANDARD__ on Coldfire.
 - Skip mmap01 on Coldfire since it requires sbrk(), which is not available.
 - rename02: Remove private do_file_setup and use the library version to avoid
   symbol conflicts.
 - kill07: Declare semkey as extern on Coldfire to avoid symbol conflicts.
 - kill11: Move *msg declaration since gcc 2.95 does not understand C99.
 - sigaction01: Move -lc in the Makefile after -lpthread.
- Applied changes suggest by Jacky Malcles to keep gf18 from running longer than it needs.
- Applied a suggested solution from Jacky Malcles to allow growfiles to run correctly in 64bits.
- Applied a memory leak fix to fsx-linux tests.
- Applied patch from Marc Unangst to resolve issues with leaking file descriptors in inode01.c
- Update aio-stress.c tests from Chris Mason
- Applied patch from Bibo,Mao to use RT signal instead of SIGUSR1 to inform parent process that 
  the child process has finished memory allocation.
- New security tests from Michael Harlow
- Applied patch from David Marlin to close the last file descriptor created in order to 
  make one file descriptor available for loading a needed library.
- Added one line to gethostid, if 'hostid' includes fffffff, then we ignore.
- Applied fix for Sourceforge bug ID 1332508 in getsid02
- Appliec changes from Jane Lv for uClinux.
- Applied patch from Mark Ver to allow proper execution on s390x platform.
- Updates to ASAPI tests from David Stephens for new glibc and RFC 3542
- Renamed create_file.c to nfs04_create_file.c to resolve duplicate name problem with network stress tests.
- Updates to Makefile for acl testsuite
- Initial add of acl testsuite from Bull
- Updates from sridhar to sctp testsuite
- Comment out CFLAGS overrides in network-stress Makefile, it was causing build breaks in 64bit compiles


LTP-20051205
- New networkStress testcase files
- Security test updates for cleanup and testcase improvements
- New nfsV4 testsuite
- Updates for nfsV4 testsuite
- Updates for open_hpi_testsuite
- Corrected out of memory error msg in ltpstress.sh


LTP-20051103
- fix from Bryce Harrington to corect a Makefile and path problem on some systems
- Updated aiocp to the latest level. See  http://developer.osdl.org/daniel/AIO/
- Corrected a logical typo in the mmapstress test found by John Clemens:
- Changes for cleanup of digsig testcases
- Applied patch from Jacky Malcles to allow the test to execute correctly with
  the new 2.6 kernel.
- Fix for defect failure in fcntl23.c to lock readonly file, changed to open file RDONLY
- Fix gethostid01 to return correct code in 64 bit mode
- fix madvise01 testcase error where it may not run out of memory
- Applied patch [ ltp-Bugs-1168107 ] from Shyam Chandrasekaran:
- Fix bug in settimer01.c
- Fix write04.c to work on ia64
- Cleanup to not include redundant sys/socket.h after linux/socket.h
- Add NetworkStress testcases from IBM Japan


LTP-20051004
- this patch touchs up the output of ver_linux if gcc, fdformat, or mount is missing
- New testcases for tpm
- Fix compile error with strsep on some systems.
- Add a missing include file and corrects an fprintf
  format type to eliminate warning messages.  It also performs some minor
  whitespace cleanup.
- patch attached fixes it so writetest is rebuilt whenever writetest.c is updated
- patch typecasts in writetest - the values given to printf to (long long int)
- patch initializes some uninitialized variables and adds a
  return statement (non-void function) to eliminate warning messages.
- patch process.c adds a missing include file, function return types
  and returns, cleans up structure initializations, and removes unused
  variables to eliminate warning messages.  The debug print macro is also
  modified to handle a variable number of arguments.
- patch basically stubs out the GetContext function for uClibc and allows for any
  other system to be added accordingly since uClibc doesn't provide the function 
  on later builds.
- Added code to check whether or not "ffffffff" is returned on some 64bit
  machines.
- Fix for defect 17215 in nanosleep02
- patch adds a missing include file, function return types
  and returns, and typecasts some variables to eliminate warning messages.
  GNU_SOURCE is also added to CFLAGS in the makefile, since otherwise
  the 'pselect' declaration is not found in some build environments.
- Fix for defect 17723 pTrace01.c
- patch adds missing include files and declares return types
  to eliminate warning messages for setfsuidxx.c
- TEST_ERRNO fix to display as a long int.
- Change sigrelse01 tests to eliminate duplicate function prototypes.
- Change to sigrelse01 to use time.h vs define in program.
- Fix for defect 17974, Strace/Ptrace hangs
- patch adds missing include files, function prototypes and
  returns, and removes unused variables to eliminate warning messages.
  It also corrects some sprintf format warnings and replaces 'abortx' with
  a version that accepts a variable number of arguments.
- The "generate.sh" script was mistakenly removed...added it back.
- Updates to check for connection failure vs unauthorized access fail in ftp02_s1, ftp03, ftp04, ftp05
- Cleanup - Removed the datafile directory, because this is created using the generate.sh
  script..which is called in the Makefile


LTP-20050907
- Added test for statvfs()
- Applied a load of patches submitted to the mailing list by Gentoo's Mike Frysinger
- Applied patch from Erik Andersee:
  if __NR_fremovexattr isnt defined by the current linux headers,
  acl_file_test.c will fail to build
- Relocated getcontext() test from getcontext01 to just getcontext.  
  Also added the directory to the list of tests not ran on uclinux.
- Applied patch to madvise02 for tmp memory
- Applied patch to mallopt01 to fix logging error.
- fix for defect 17723, change sleep to an at least vs an exact amount
- Correct testcase return on RHEL 3 & 4 2.6.13-rc6-mm1
- Applied IA64 patch received from Jacky Malcles to write03-04
- Added -n option to allow disabling networking stress to ltp-stress


LTP-20050804
- Applied fix from Greg Edwards for 64bit execution.
- self_exec magic required to run child functions on uClinux
- Applied patch from Mike Frysinger:trying to do a build on uClibc will abort in lib/tlibio.c because we dont
  provide aio.h find attached a patch which updates the check to include UCLIBC alongside
  UCLINUX
- remove call to create.sh script that checks for obscure c++ rpms
- remove all references to and creation of non-std /usr/local/bin/perl5
- fix ballista.cpp to not core dump with std c++ lib
- fix to add librt to MakefileTarget for running aio_suspend test:missing clock_gettime on linux
- remove printf.h and stdio.h from testcases/commands/ade/ld/rd1.c.
- Change to fix the addition of 2 minutes without going over 60 for the seconds
- patch to fix up the install target in disktest to match the install targets of everything else
- patch to fix writetest Makefile to not always rebuild the writetest binary 
  regardless of whether you ran `make` or `make install` or whatever
- newer toolchains complain about redefining 'log' since it's a math function
  provided by the libc find attached a simple patch to rename the 'log' variable in
  testcases/kernel/ipc/ipc_stress/message_queue_test_04.c to 'logit'
- when running make in silent mode (make -s) the verbose mode of AR 'gets in the
  way' attached patch drops the -v and adds -c so that ar wont display the 'ar:
  creating blah.a' message either
- the current mallocstress.c emits a warning about newsize being used
  uninitialized because gcc doesnt detect the abort(0) path 
  find attached a simple patch to prevent the warning from being issued
- Running nptl01 can fail if the test lasts longer than 300 seconds, patch to lower interations to 100000.
- Fixed clone04 to return correct failure code.


LTP-20050707
- Applied fixes by Paul J.Y. Lahaie to implement support for UCLinux
- suppresses the warning  "head: `-1' option is obsolete; use `-n 1'..."
- Updated the TEST() macro to return long, instead of int for use with 64bit architectures.
- Removed umount04.
- Security updates for ppc and 390 systems
- The K42 open source operating system bug fix for panic when alarm is cancelled.
- Applied some zSeries specific patches.
- Applied patches to allow NFSv4 testing:
- Define gettid() to syscall(__NR_gettid).

LTP-20050608
- Added test for getcontext()
- Added additional test for mlockall().
- Added getdtablesize() test.
- Added pselect01 test.
- Added new fcntl tests to scenario.
- fs_inod - Raised the maximum file size for the random setting to 500Mb.
- upgrade disktest to version 1.2.8
- Clearify the comment explaining the second call to alarm() in
  testcases/kernel/syscalls/alarm/alarm06.c 
- Corrected a bug in fcntl24.c and added new tests fcntl25, fcntl26, and fcntl27.
- Change to 1024 default if IO_BITMAP_BITS not defined
- Applied fix for conditions where ENOMEM test scenarios were failing.
- mlockall03 is a Test for checking basic error conditions for mlockall(2)
  starting from linux 2.6.9
- NGROUPS_MAX defined in limits.h is not the max number of groups in the
  system, it the max number guaranteed.  Thus, if the system actually
  allows more, the test case doesn't produce the expected failure.
- test3 in setrlimit02.c:Test attempts to increase hard limit of RLIMIT_NOFILE resource.
  The rlim_max used by setrlimit() is expected to be greater than current hard limit to get EPERM.
- nfsstress - Corrected so the test can find gettid()'s definition.
- PTS Version 1.5.1 Released
- Removed old version of Open POSIX Test Suite (OPTS).
- Updated the open_posix_testsuite:


LTP-20050505
- Added DBAT testsuite, limited LTP tests for build verification - runltplite
- fix the bug on test table selinux when run the ltpmenu.
- Added new getpagesize() test.
- New test creates a data file of specified or random size and copies
  the file to a random directory depth on a designated filesystem.
  The two files are compared and checked for differences.
- Make nptl01 timeout and report failure rather than just hanging in the event of a fail.
- Moved SELinux testsuite from misc to the kernel/security directory.
- acct01 - Updated test to allow for execution on zSeries machines.
- ioperm01 - Fixed bug will cause ioperm01 receive SEGV and report "BROK" instead of "FAIL" when this test failed.
- nfs04 - use 'cmp' instead of 'diff' because I think byte comparison is better for the type of file created for this test.
- Fixed ftp01 and telnet01 seems designed to run with non-root user connection
  when the user name is set to RUSER environment variable.
  However, it is incomplete.ftp01 creates a directory whose permission is root.
  So, non-root user cannot write in the directory.
  telnet01 always consider the prompt is '#'

LTP-20050405
- Fixed '-d' option to runltp.sh
- Added optional ltp (fivextra) extended testsuite
- Added digital signiture testcases from the security team
- Applied patch from Gernot Payer to fix, mincore01, shmget02, capset02
- Applied suggested check from Carl van_Schaik to clone02.
- Added seLinux testsuite from security team and Stephen Smalley.
- Added NFS cthon04 tests needed files.


LTP-20050307
- Added -v option to LTP, fixed -s option
- Removed fcntl16 until testcase can be fixed/changed.
- Fix for defect 14136, growfiles expanding a file past the 2G limit on ext2
- Applied patch from Marcus Meissner for SF bug #1114114
- Applied patch from David Miller for sigaction problems
- Applied a patch from Suzuki Kp to resolve some race/signal handling conditions
- In adapting specific LTP tests to uClinux running on Analog Devices'
  Blackfin processor, we found a problem in mount01 where malloc was not
  reserving space for the trailing null byte and strncpy was being called
  without enough bytes to account for the trailing null byte.  The
  following patch fixes the problem
- Increased USER_PRECISION to 2200 to take into account the processes switching time nanosleep02
- The attached patch fixes a swapon cross compile build error I ran into
  recently. I verified that RH9 self hosted and cross compile builds now
- Removed the include of <asm/atomic.h> back out.  Most distros and kernels
  can build and execute the test without it now.
- Change for defect 13778, when the /var/log/messages file is first moved, the first write fails
- The SIGINT sighandler will set the "intinitr" flag to 1 for the children. But if the
  "runtime" is small( a command line argument passed, the testcases were running
  for 5 secs here), it may happen that the SIGINT may be recieved before the
  child initialize the flag to 0, and which may lead to a hang
- Change to exclude lib6 directory from default build since it breaks earlier Distros
- Added code to handle cases where certain distros don't define AI_V4MAPPED in /usr/include/netdb.h



LTP-20050207
- runltp now exports $TMPDIR as a copy of $TMP, certain exceptions caused these to be different.
- extra functions for LTP libs are to make these tests fail with a more
  informative message when attempts to create swap on tmpfs are made.
- IPV6 testcase updates from David Stevens
- Applied patch from Jacky Malcles that fixes an inconsistency regarding synchronization.
- Make proc01 skip kcore
- Fix gives an hint to the probable solution if capset01 test fails
- Fix for race conditions in synchronization between children and parent on fcntl15.
- Applied patch from Jacky Malcles to allow test to run on ia64.
- The test llseek sets RLIMIT_FSIZE to a small number, this fix to
  restore it to its original value.
- Fix IPV6 Makefile install path problem

LTP-20050107
- Porting changes from John Kohl to help support compatablility LTP on Solaris, HP-UX and AIX.
- Add scsi virtual devices testsuite using scsi_debug
- Changes to fix defect 13205 - testcase (seg fault) fails when MALLOC_CHECK_=3 environment varible is turned on .
  Removed test for ppc64 as special exception, now passes child_stack+CHILD_STACK_SIZE as parameter to clone on ppc64
- Applied patch from Prashant Yendigeri that fixes execution path problem.
- Fix for defect 11968 - test seg faults on a SMP system (8-way)
- Removed a prior applied patch from getdents01, that broke the testcases.
- Applied patch from Ricky Ng-Adam to fix ioperm01 testcase.
- Applied patch from Jacky Malcles for madvise02.
- Applied fixes to error messages from Adam Lackorzynski.waitpidXX
- Applied cleanup patch from Prashant Yendigeri for writexx testcases.

LTP-20041203
- Change to fix file creation error on certain filesystems.
- gf15 and gf18 failed on both 32-bits and 64-bits, 
  Growfile used lseek and fstat to operate file. When file grows
  beyond 4G,lseek and fstat would fail on 32-bits machine.
- Added fs-bench by Hironobu SUZUKI and additional JFFS
  testscript by G.BANU PRAKASH.
- Added mongo filesystem test by namesys and additional testscript from G.BANU PRAKASH.
        /etc/init.d/cron restart
- Applied patch from Jacky Malcles to allow test to run on IA64.
- settimeofday01 fails on some platforms(ia64,41611	x86-64) occasionally.
  The testcase did not consider the situation when CONFIG_TIME_INTERPOLATION is enabled.
- Remove case from password query since the distros use both upper and lower case P/p.


LTP-20041105
- Added extensive syscall testsuite (Ballista)
- Added new tests to EPoll testsuite
- Applied long path name patch from Michael Vieths
- Removed the requirement to have "." listed as the first directory, since it is not a documented requirement.
- GetDents01 - Used _syscall3() to allow this test to run on non-x86 archs.
- Applied message formatting patch from Gordon Jin.
- Applied IA64 specific patch from Jacky Malcles.
- Fixes from Chris Wright for swapon02 failures
- Restored the compile settings for Linux2.4/GLIBC2.2 and created a new one for Linux/GLIBC2.3 Removed -fwritable-strings 
  and -DGLIBC=22 flags from compile.
- Applied a patch from Zhao Kai that added a pause to allow for testing on installations with improved PAM security.


LTP-20041007
- Applied fix from patch 1037010, submitted by mator.
- Changes from Kris Wilson on RH specific changes
- Changes from the security team testcases
- Add HOWTO for pci tests
- Changes for pci testcases
- Disable -std=c99 and -peandtic flags in writetest's Makefile.  Some users of very old gcc versions 
  had problems with this, but it looks like those versions of gcc will still compile it ok.
- Fix typo and add log statement if a failure on loading the test module
- Changes requested from the security team for fix PPC64 error
- Small fix to chown03 and fchown04.  tst_tmpdir() call was happening in a spot that would cause 
  it to break under certain automation environments.
- un-spamify fork11 test
- Fix getrlimit02.  Rajeev Tiwari <rajeevti@in.ibm.com> pointed out that RLIMIT_NLIMIT was now too 
  low in the usr include files for newer kernels to cause this to fail.  Defined a new high one that 
  ought to work for the forseeable future.
- Overhaul madvise02.  Removed some invalid testcases, fixed one case that was an invalid failure, and a lot of cleanup
- Changes from SuSE for mincore tests
- Changes from Ihno for Itainium failures
- Changes from SuSE for setdomainname tests
- Changes submitted from SuSE for sethostname
- Changes to fix statfs03 error on trying to write to protected directory
- Change to fix defect 10947, failure on tmp directory
- Applied IA64 specific patch from Jacky Malcles:



LTP-20040908
- Modified runalltests.sh to call runltp.sh. runalltests.sh is now deprecated and will be removed early next year.
- Modified tst_tmpdir to ensure 777 permissions on test directory.
- Changes to ltp-aiodio.part3 for testcase run parameters
- Changes for 2.6.X so only delete modules is run, query and create are obsolete
- Updated runtest scenario with the latest SCTP tests.
- uncommented swapon() tests.
- added new paging tests, mincore and madvise
- Change to fix aio-stress problem will io errors on a short read during the random read portion
- Change to only print out a pass/fail instead of # of iterations pass/fail
- Added IA64 specific code for shmt09.
- Change to not do /dev/ptmx group write on arm arch.
- Applied patch from Ling, Xiaofeng to allow the test to use TDIRECTORY correctly.
- Corrected test 1 to show EPERM error pointed out by Ling, Xiaofeng.
- Change to close fileHandle prior to cleanup to correct testcase failure in NFS filesystems
- Change sleep time from 1 second to 10 seconds to allow system to pass
- Change to define RUSAGE_BOTH if not defined, RH removed from user space and other distros still support.
- Add arm arch to the ALIGNED typedefs
- Changes from Ihno for llseek01.c to check TEST_RETURN vs TEST_ERRNO
- use ltp functions in f00f test for better output parsing
- Fix Makefile to link open_files into the bin directory
- Get rid of extra = of "must be Root user" check
- Change the awk $4 to an $NF to support debian only returning 3 terms
- Change to tcpdump to check IFNAME define

LTP-20040804
- Corrected TCbin definition.
- Changes to check for RedHat install when setting up environment variables
- Changed ROOT_PASSWORD to PASSWD to match other testcases.
- Change to check and exclude test if running on a 390 system since test is invalid on that platform
- Fix build errors in modify_ldt01 and modify_ldt02
- Additional security testcases

LTP-20040707
- Added a new test for bind() written by Dan Jones.
- Jacky Malcles added support for ext3 and some cleanup code.
- Fixes to fix DMAPI defect
- Changes for eliminating dmapi.h
- Applied patch from Gary Williams to change malloc() to calloc() b/c some
  archs don't like the use of uninitialized memory.
- Fix typo and change i to a 1 in the bufcmp function in diotest_routines.c
- Applied patch from Gary Williams that added an optional forth arguement to
 semctl as a union, not a pointer to pointer, b/c pointer to pointer causes ppc
 to explode.  Union will automagically interpret the union as a pointer as
 necessary....now works on multiple archs.
- Made sure that the shm segment is cleaned up if the shmat() fails.
- Applied patch from Wu Zhou to correctly cleanup in case of a failure.
- Added definition for SHM_HUGETLB for cases where this is not defined.
- Applied patch from Steve Hill and Gary Williams for MIPS.
- Applied a timing fix to allow the test to run on more architectures.
- Applied results cleanup patch from Gary Williams.
- Corrected the logic in the test to use -lepoll or not.
- Applied PASS message cleanup patch from Gary Williams
- Fix invalid syntax "if undefined" in modify_ldt tests
- Applied patch from Gary Williams for personality() tests to initialize
  PER_LINUX so we can clearly see if the desired changes occur.
- Updated to Posixtestsuite-1.4.3


LTP-20040603
- Minor corrections to the NUM_PROCS patch
- Added the ability to pass NUM_PROCS to the -c option for runalltests.sh
- Fix genload in runalltests.sh, it was trying to run it in all caps, but the binary is all lower case.  
  Should actually run genload now.
- Patch from Alastair McKinstry to allow LTP to build on Linux/HPPA
- Changes for parameters passed to aio-sparse for correct offsets and restrictions on sizes.
- Add new security tests to syscalls testsuite
- In acl_file_test.c and acl_link_test.c syscalls regarding xattrs are still
   done via syscall, although libc functions are available. Furthermore I found
   out that on older distros for non-intel architectures both attr/xattr.h and
   constants like __NR_getxattr are not available, so in this case the these
   testcases are not built.
- Updates for the DMPAI testsuite ppc64 support.
- Fix failure on rwtest versions rwtest03 and rwtest04 due to mmap running out of resources.
- Made changes to get thread ID vs get PID for NPTL threads for unique filenames where child/parent PIDs are the same.
- Changes to diotest5 and diotest_routines to eliminate random/intermitant failures on data compare.
- Fixed memory leak in mmstress testcase.
- Changed clone02 to use tid instead of pid to eliminate failures on NPTL threads(same PIDs for parent/child)
- Changed fcntl15 getpid to gettid (syscall(gettid)) to get unique thread ID vs common PID in NPTL threads.
- Added adp testcases.



LTP-20040506
- Corrected a bug fix, so that the runalltests.sh script ends correctly and returns a
  0 or 1 depending on PASS/FAIL result.
- Applied bug fixes from Gernot Payer
- Changes for parameters passed to aio-sparse for correct offsets and restrictions on sizes.
- Changes to fix error "invalid argument" on parameters for aiodio_sparse tests
- Relocated the acl tests to /kernel/fs
- Added initial drop of DMapi testcases
- Applied fix from Joe Habermann for the "v" option, where in some cases the
  routine, sy_mmrw, will pass sbuf.st_size for the msync length without first
  having done the fstat to populate sbuf.
- Changes to have the directio run a pre-defined number of iterations for more complete testing
- Fix too many open filehandle problem on direct io tests
- Created a second test that checks how huge pages are mapped in 32-bit and
  64-bit processes.
- Added new test for testing that a normal mmap cannot be mapped into a
  high memory region.
- Added test to map a file to the max size possible.
- Made the tests 64bot friendly.
- Added tests for shmat() calls using hugetlb.
- Corrected tests to allow EACCES or EPERM, which is documented in POSIX.
- Update open_posix_tests to 1.4.1


LTP-20040405
- Added nptl scenario.
- Added ltp-run-files.txt file to identify testcases/scripts that are NOT run using runalltests.sh
- Added EAL2 (security) testsuite.
- Applied daemon typo patch from Andrew R. Reiter.
- Fixed a bug so that sysinfo() works on 32bit machines with +4GB of memory.
- Updated the nptl tests to only execute on NPTL enabled systems.
- Added a new test for testing a specific problem seen in certain version of NPTL where 
pthread_cond_timedwait() can hang. This was written by 	Neil Richards of IBMUK.
- Fix EPoll PROTECT_FUNC macro to get around compiler bug for varible parameter list
- Fix for bug 7007, pickup correct NGROUPS
- Applied patch from Yaroslav Popovitch that addresses problems related
to the __syscall2 definition and 2.6 kernel based systems with glibc-kernheaders-2.4-8.43.
- Fix for bug 7009, failure on ppc64
- Changed NFS test to use /tmp instead of /mnt.
- Corrected sctp Makefile to allow for cross-compiled options to be passed down.
- Fixed bug 7011 on reiserfs


LTP-20040304
- This patch makes rwtest generate a PASS/FAIL  (Chris Dearman) 
  message in the output 
  log.  Updated the runtest/* scripts that use rwtest.  also
  changed the iogen01 test to use rwtest instead of invoking iogen/doio
  directly.
- Added AIO/DIO testcases from OSDL, SUSE
- Changes to AIO/DIO                            ( Marty Ridgeway )
  changes to aio-stress test runs
- Applied patches from Chris Dearman to set 
  PASS/FAIL messages for ltp-stress.            ( Chris Dearman )
- Created 2 new testcases to test the fcntl()   ( Robbie Williamson )
  call with the F_SETLEASE option. 
- tcp_cmds - Changed the ipchains test to       ( Robbie Williamson )
  iptables. 
- mmstress - Applied patch from Jacky Malcles and Gary Williams to remove the path 
  constraints when calling "dummy". 
- added new ltp epoll testcases                  ( Marty ridgeway )
- Added tests for GETLEASE, and SETLEASE w/FD_UNLCK ( Robbie Williamson )
- sendmsg01 - Removed test number 11, b/c it was not testing for EINVAL correctly. ( Robbie Williamson )
- setregid02 - Changes to accept now valid user ID ( Marty Ridgeway )
  and update testcase msg to reflect test group vs user 
- dhcpd_tests - Appled syntax error patch.          ( Hubert Lin )
- Updates to SCTP and new tests added.              ( Marty Ridgeway )
- Update to OpenHPI 0.5.0                           ( Robbie Williamson )
- Added Dan Carpenter's "Strace Test" 


LTP-20040206
- Applied documentation cleanup patch.		( Randy Dunlap )
- Fixed the "-t" default option in 		( Hubert Lin )
  runalltests.sh
- Relocated the aio tests to all reside		( Robbie Williamson )
  in one location under kernel/io.
- Fixed a 2.6 related compile error in the	( Marty Ridgeway )
  device driver test tbase.c file. 
- Updated the diotests to compile with gcc	( Mark Meissner )
  3.4.
- Fixed race condition and stability of the	( Gary Williams )
  mmstress.c.
- Corrected pth_str02's return value checking   ( Gary Williams )
  and results handling.
- Updated open08 to use an FHS specified file.	( Randy Hron )
- Fixed a buffer overflow problem in pipe07.    ( Erik Andersen )
- Fixed setregid02's test case id.		( Paul Larson )
- Relaxed the expected results for string01.	( Marty Ridgeway )
- Removed the EFAULT test from syslog12 b/c	( Andi Kleen )
  it was unpredictable and didn't acheive the	  
  intended test result.
- Fixed an issue with data generation in 	( Michael Wolf )
  gentan.c of float_trigo.
- Added tests for iptables.			( Hubert Lin )
- Updated mc_cmds to use 'netstat -i -n'.	( Hubert Lin )
- Corrected the "this_file" variable in the	( Jacky Malcles )
  rpc testcases.
- Corrected a typo in rusers test.		( Jacky Malcles )
- Fixed execution bug in ltpSockets.sh.		( Robbie Williamson )
- Updated the rlogin and telnet tests to	( Hubert Lin )
  execute correctly.
- Updated the xinetd tests to run under RHEL.	( Ming Gao )
- Corrected path locations in ltpfslvm.sh.	( Robbie Williamson )

 
LTP-20040108
- Fixed broken -l option in runalltests.sh.	( Paul Larson )
- Fixed netpipe typo in runalltests.sh.		( Paul Larson )
- Fixed memory leak in parse_opts.c library.	( Randy Hron )
- Removed personality() system call tests from  ( Robbie Williamson )
  the runalltests.sh and ltpstress.sh scripts.
- Cleaned up file_test.sh for improved 		( Glen Foster )
  execution.
- Cleaned up mail_tests.sh for improved		( Glen Foster )
  execution.
- Fixed the direct I/O tests to correctly	( Robbie Williamson )
  check if direct I/O is supported on the tested 
  filesystem.
- Fixed a typo and correct return value in	( Jay Turner )
  clone07.c.
- Fixed coding error in getcwd03.c.		( Erik Andersen )
- Fixed problem of incorrect use of fclose(),   ( Erik Andersen )
  instead of pclose() in msgctl08.c and 
  msgctl09.c.
- Removed usmblks test from mallopt01.c.	( Erik Andersen )
- Updated the modify_ldt() tests to build	( Robbie Williamson )
  according to what struct is defined in
  asm/ldt.h: user_desc or modify_ldt_ldt_s
- Updated pipe07.c to check the number of used	( Robbie Williamson )
  file descriptors and adjust itself accordingly
  before executing.
- Updated sendfile03 to allow for situations	( Robbie Williamson )
  where the execution environment has more than
  STDIN, STDOUT, and STDERR in use.
- Removed assumptions about the width of a uid_t( Erik Andersen )
  and gid_t in the setregid02.c, setresuid03.c,
  and setreuid06.c.
- Fixed string01.c to not expect implementation	( Erik Andersen )
  specific results.
- Updated swapon02.c to build in environments 	( Robbie Williamson )
  where MAX_SWAPFILES must be specified.
- Updated mc_cmds and tcpdump01 to handle 	( Ming Gao )
  multiple interfaces better.


LTP-20031204
- Allowed the test driver to ignore all		( Robbie Williamson )
  real-time signals.
- Removed the obsolete time() and stime() tests ( Robbie Williamson ) 
  from the default runalltests.sh and 
  ltpstress.sh scripts.
- Updated "file_test.sh" with fixes to improve  ( Glen Foster )
  execution and portability.
- Updated "cpio_tests.sh" with fixes to improve ( Glen Foster )
  execution and portability.
- Updated "cron_tests.sh" with fixes to improve ( Glen Foster )
  execution and portability.
- Updated "mail_tests.sh" with fixes to improve ( Glen Foster )
  execution and portability.
- Added Asynchronous I/O (aio) testcases.	( Marty Ridgeway )
- Added file & directory ACL control and 	( Marty Ridgeway )
  management testcases.
- Added testcases for low-level SCSI & virtual  ( Marty Ridgeway )
  SCSI devices.	
- Updated direct IO tests to return TCONF if	( Robbie Williamson )
  the tested filesystem does not support dio.
- Updated acct01 & sockioctl01 to handle 	( Robbie Williamson )
  situations where /dev/tty0 does not exist.
- Updated fsync02 to ensure max_block is always ( Robbie Williamson )
  greater than data_blocks.
- Updated getgroups03 to allow for better 	( Susanne Wintenberger )
  stability and platform portabilty.
- Updated the modify_ldt testcases to allow the ( Robbie Williamson )
  tests the ability to build on installations
  that use type "user_desc" instead of 
  "modify_ldt_s_s".
- Applied IA64 specific fixes to sigaltstack()  ( Jacky Malcles )
  tests.
- Updated some of the utime() tests to sleep 	( Glen Foster )
  longer than one second (2) to ensure proper 
  execution on IA64.
- Updated some of the write() tests to make the	( Susanne Wintenberger )
  invalid address test 64bit portable.
- Added new NFS stress test: nfs_fsstress.	( Robbie Williamson )
- Updated OpenHPI testsuite.			( Kevin Gao )
- Updated ltpstress.sh to change the maximum	( Robbie Williamson )
  number of user processes to "unlimited"
  before testing begins (ulimit -u).
 

LTP-20031106
- Fixed bugs in runalltests.sh with creating	( Manoj Iyer ) 
  the results directory and locating 'pan'.
- Created new NFS test, nfs04, which tests	( Robbie Williamson )
  file integrity when copying across mounts.
- Updated the SCTP testcases.			( Marty Ridgeway )
- Fixed bugs in 'tar' shell tests.		( Glen Foster )
- Applied patch to 'doio' for machines that	( Jun Sun )
  have virtually indexed cache and cache 
  aliasing problems
- Updated mem01 and mtest01 to execute on s390  ( Robbie Williamson )
  better.
- Added missing parenthesis to mmstress.	( Manoj Iyer )
- Added code to chown03 & fchown04 to set the   ( Robbie Williamson )
  environment variable, "change_owner", if it
  is not already set.
- Set the clone stack size to 16384 for all	( Robbie Williamson )
  clone() tests.
- Applied IA64 specific patch to clone04.	( Jacky Malcles )
- Removed test8 from stat06 b/c it was not	( Robbie Williamson )
  valid under the SUSv3.
- Added some extra documentation to swapon02    ( Robbie Williamson )
  on how to handle glibc 2.2.5.
- Resolved bug #834027 with sync02.		( Robbie Williamson )
- Added option to log 'iostat' data during	( Robbie Williamson )
  testing using "ltpstress.sh".			


LTP-20031002
- Enabled better binary compatibility between	( Robbie Williamson )
  executions on NPTL and Linuxthreads.
- Created README for device drivers test	( Marty Ridgeway )
  executions.
- Resolved bugs #807255 & #807400 for fs_maim.	( Hien Nguyen )
- Updated disktest to version 1.1.12		( Brent Yardley )
- Corrected the headers for capset and capget.  ( Robbie Williamson )
- Applied IA-64 fix to clone06 and munlock02.	( Jacky Malcles )
- Fixed compile warning for gettimeofday01.	( Andreas Jaeger )
- Applied testcase stability patch to pipe()	( Erik Andersen )
  testcases.
- Fixed rlogin01 and telnet01 so that they	( Paul Larson ) 
  correctly detect when they pass.	
- Applied updates to the OpenHPI test suite.    ( Kevin Gao )
- Updated the Open POSIX test suite to 1.3.0.	( Robbie Williamson )
- Changed ltpstress to use all installed RAM    ( Robbie Williamson )
  plus 1/2 swap space by default.



LTP-20030905

- Corrected "-d" option for runalltests.sh      ( David Smith )
- Corrected ade commands tests to allow for     ( Xu Cheng
  cross platform ppc64 execution.		  Robbie Williamson )
- Fixed compile errors for device driver	( Marty Ridgeway )
  tests seen on 2.5.73 kernels and above.	( Marty Ridgeway )
- Initial drop of drivers/base code.
- Added Device Simulator Framework.		( Marty Ridgeway
						  David Cruz
						  Sean Ruyle )
- Removed the need to include sys/stropts.h     ( Robbie Williamson )
  in the syscall tests.  
- Modified acct01 to use tty0 to allow for	( Paul Larson )
  testing in environments without a controlling
  terminal.
- Modified alarm03 to allow the timer to be 	( George Ansinger
  rounded up to the next second.		  Paul Larson )
- Corrected ifdef settings for PowerPC64 by	( Robbie Williamson )
  changing all __ppc64__ to __powerpc64__
- Corrected pthread id display in the float_    ( Robbie Williamson )
  tests.
- Updated mc_cmds and tcpdump01 to support	( Xu Cheng
  multiple interfaces.				  Robbie Williamson )
- Applied patches: #788275, #788323, 788727,	( David Smith )
  and 788836.
- Updated OpenHPI testsuite.			( Kevin Gao )
- Removed the top-LTP tool from being built	( Robbie Williamson )
  using `make all` or `make install`.
- Removed the open_posix and open_hpi		( Robbie Williamson )
  testsuites from being built using `make all`
  or `make install`.

LTP-20030807

- Reorganized and updated the testcase		( Robbie Williamson )
  descriptions under /doc
- Updated the tst_rmdir API to use		( Robbie Williamson )
  remove() instead of rmdir().
- Added support for the __ARM_ARCH_4T__ 	( Ramesh Subramanian )
  architecture.
- Updated clone() tests to allow them		( Robbie Williamson )
  to execute on ppc64.
- Created new clone07 test to check for		( Robbie Williamson )
  glibc bug.
- Rewrote the generate.sh scripts to perl	( Randy Hron
  for faster execution.				  Robbie Williamson )
- Updated "fsstress" to allow setting the	( Robbie Williamson )
  number of loops to run and cleanup options.
- Removed case from diotest4 for read/writes	( Robbie Williamson )
  with negative counts. Not in SUS.
- Fixed chown03 testcase to allow for better	( Paul Larson )
  execution stability.
- Added check to mmapstress tests to see if 	( Robbie Williamson )
  roundup() is defined, before defining it.
- Cleaned up sched_stress.			( Randy Hron )
- Modified diotest4 to test dio to /dev/null	( Robbie Williamson )
  but not record it as a pass or fail.
- Removed extra "\n"s from creat09.		( Paul Larson )
- Updated syscall tests that used their own	( Randy Hron )
  strcpy() definition, instead of string.h's.
- Fixed fchown04 testcase to allow for better	( Paul Larson )
  execution stability.
- Updated fcntl14 to allow for better execution	( Ramesh Subramanian )
  stability & remove possibility of false fails.
- Applied Xtensa architecture specific patches. ( Joe Taylor )
- Updated memory tests to allow for distros	( Robbie Williamson )
  that allow non-root users to m(un)lockall 
  within the RLIMIT_MEMLOCK resource limit.
- Changed the way munlock02 attempts to access  ( Robbie Williamson )
  outside it's memory space to a more reliable
  method.
- Corrected an expected error return for a case ( Andrew Morton 
  in recvmsg01 and sendmsg01.			  Paul Larson )
- Corrected compiler warnings in the multicast  ( Robbie Williamson )
  test, mc_opts.
- Corrected syntax error reported in 		( Robbie Williamson )
  Bug #773670.
- Corrected unitialized variable problem in 	( Ramesh Subramanian )
  sendfile01.
- Updated the Open Posix Test Suite to 1.2	( Robbie Williamson )
- Applied patches to Open HPI Test Suite.	( Kevin Gao )


LTP-20030710

- Added LIB_DIR variable to top-level Makefile	  ( Robbie Williamson )
  to allow specification of where to install
  libproc.so for the top-LTP tool.
- Updated Open POSIX Test Suite to 1.1.0.         ( Robbie Williamson )
- Added JFS tests to the LVM test script.	  ( Marty Ridgeway )
- Removed tests from the LTP system stress 	  ( Robbie Williamson )
  script that had problems running concurrently. 
- Updated ar01 to avoid bug if building rpm.	  ( Manoj Iyer )
- Added ACPI testcases.				  ( Marty Ridgeway )
- Added testcases to execute inline functions in  ( Marty Ridgeway )
  the kernel tree.
- Added testcases to for the NLS filesystem.	  ( Marty Ridgeway )
- Added PCI testcases.				  ( Marty Ridgeway )
- Added USB device testcases.			  ( Marty Ridgeway )
- Applied code cleanup patches to stream tests.   ( Randy Hron )
- Ported sem02.c to use some of the LTP test      ( Paul Larson )
  harness API.
- Updated mtest01 to fix hang issues.		  ( Robbie Williamson
						    Paul Larson )
- TCID fixes to various syscall tests.		  ( Paul Larson )
- Cleanup of various syscall test outputs.	  ( Paul Larson )
- IA64 fix to mlock02, mprotect01, munlock02.	  ( Jacky Malcles )
- Applied uclibc patch for memory tests.	  ( David McKay )
- Increased the size of memory to attempt to	  ( Robbie Williamson )
  munlock for munlock02 to ensure correct
  test execution.
- Updated readdir02 to catch SIGSEGV and fixed    ( Robbie Williamson
  small bug in test.				    Paul Larson )
- Updated recvmsg01 and sendmsg01 to handle 2.5   ( Robbie Williamson )
  64bit architecture specifics.
- Updates to syslog01-10 to support Debian	  ( Robbie Williamson  
  systems and improved their stability.  	    Paul Larson )
- Applied IA64 specific patch to syslog11/12.	  ( Robbie Williamson )
- Removed an unneccessary free() call in ustat01  ( Doug Ramier )
- Corrected the "install:" section of the mc_opts ( Robbie Williamson )
  network test.
- Added default option for RHOST for nfs03 and    ( Robbie Williamson )
  nfsstress. 
- Modified rwho01, sendfile01, tcpdump01 to use   ( Manoj Iyer )
  test APIs and added checks for required 
  commands.
- Added the Open HPI testsuite.			  ( Kevin Gao
    http://openhpi.sourceforge.net/		    Robbie Williamson )
- Added new filesystem testscripts.		  ( Marty Ridgeway )
- Added 'mkrootfs' utility to tools section.	  ( Manoj Iyer )

 


LTP-20030606

- Updated ltpmenu to redirect `ver_linux` output  ( Robbie Williamson )
  to the redirected output file.
- Added warning to runalltests.sh when the "-x"   ( Robbie Williamson )
  option is selected.
- Corrected syntax error in RHOST/PASSWD          ( Robbie Williamson )
  checking section.
- Made `pan` Makefile honor top-level LOADLIBES.  ( Robbie Williamson )
- Relocated all Open POSIX Test Suite tests       ( Robbie Williamson ) 
  listed in the scenario files to /runtest/posix.
- Relocated all Open POSIX Test Suite tests to    ( Robbie Williamson )
  /testcases/open_posix_testsuite.
- Removed OPEN Posix Test Suite tests from	  ( Robbie Williamson )
  runalltests.sh default run.
- Ported new asynchronous I/O test, aio01, to     ( Narasimha Sharoff
  LTP.						    Paul Larson )
- Added ppc64/ia64 fix to diotest4.		  ( Peter Bergner
						    Robbie Williamson )
- Updated mem01 to use sysinfo() and adjusted     ( Robbie Williamson )
  allocation limits.
- Updated mtest01 to run on large memory machines ( Robbie Williamson )
- Updated mmap tests to correctly cleanup after   ( Paul Larson )
  execution.
- Cleaned up sched_stress and fixed problem with  ( Paul Larson )
  segfaulting reported by Andi Kleen.
- Added s390/s390x specific code to clone() tests ( Jay Huie
						    Robbie Williamson )
- Fixed typo in mkdir04 in PASS output.		  ( Paul Larson )
- Corrected syntax error in munlockall02.	  ( Robbie Williamson )
- Applied ppc64 and s390x fix to profil01.        ( Steve Munroe
						    Robbie Williamson )
- Fixed syntax problem in mc_opts.                ( Robbie Williamson )
- Fixed "-i" problem with sendfile02.		  ( Aniruddha Marathe )
- Included /asm/atomic.h file to swapon02         ( Paul Larson )
  includes to allow test to compile on RH 7.2
- Applied ia64 fix for sysctl() tests.		  ( Jacky Malcles )
- Made syslog tests correctky cleanup after       ( Robbie Williamson )
  failure and handle multiple instances.
- Fixed mc_commo to make sure `ping` uses the     ( Dang En Ren
  correct interface.				    Robbie Williamson )
- Fixed small bug in ltpServer.c.		  ( Paul Larson )
- Allowed `make` to continue on errors in	  ( Robbie Williamson )
  open_posix_testsuite build/install.
- Added pause in "all" and "install" section of   ( Robbie Williamson )
  open_posix_testsuite/Makefile to allow user to
  read location of build/install error logfiles.
- Removed the procps directory in /tools and	  ( Robbie Williamson )
  replaced with a stripped down version: top-LTP.


LTP-20030508

- Updated the LTP to build and execute on NPTL	  ( Robbie Williamson )
  installed systems
- Applied 'ash' compatibilty patch		  ( Dan Kegel )
- Applied "CFLAGS+=" Makefile patch		  ( Vasan Sundar )
- Created "/testscripts" directory and relocated  ( Robbie Williamson )
  scripts to it
- Fixed kill problem with genload's stress.c	  ( Amos Waterland )
- Added checking for users and sys groups to	  ( Robbie Williamson ) 
  IDcheck.sh. Also, called the script from 
  runalltests.sh before executing tests to support 
  cross-compiled platforms
- Added 'ltpmenu' GUI				  ( Manoj Iyer
						    Robbie Williamson )
- Applied "posixfy" patches			  ( Vasan Sundar )
- Updated runalltests.sh to use -o for	 	  ( Robbie Williamson )
  redirecting output.
- Added code to runalltests.sh to prompt for 	  ( Robbie Williamson )
  RHOST and PASSWD when running network tests.
- Updated Open POSIX Test Suite header file to    ( Robbie Williamson )
  allow timer tests to build.
- Compiler warnings cleanups.			  ( Robbie Williamson )
- Corrected buffer overflow in inode02.		  ( Dan Kegel )
- Updated disktest to 1.1.10 and fixed for        ( Robbie Williamson )
  systems w/o O_DIRECT
- Completed merge of Open POSIX Test Suite 0.9.0  ( Robbie Williamson )
- Applied ia64 specific patches			  ( Jacky Malcles )
- Updated Makefiles to allow use of "-j"	  ( Nate Straz )
- Correct fork05 for use in newer glibc/kernels   ( Ulrich Drepper )
- Applied "type" fixes to recvfrom and recvmsg    ( Andreas Jaeger )
- Applied x86_64 specific patches		  ( Andreas Jaeger )
- Applied MSG_CMSG_COMPAT fix for 64bit 2.5	  ( Bryan Logan )
  kernels.
- Added new testcase for setegid.		  ( Dan Kegel )
- Modified syslog tests to use test apis	  ( Manoj Iyer )
- Added 2.5 timer tests.			  ( Aniruddha Marathe )
- Added Device Mapper tests.			  ( Marty Ridgeway )
- Added sockets tests.				  ( Marty Ridgeway )
- Removed fptest03 due to use of obsolete 	  ( Robbie Williamson )
  syscalls that perform 48bit math operations

 


LTP-20030403

- Fixed CFLAGS in all makefiles to append (+=)	  ( Vasan Sundar )
- Removed the outdated & poorly written 	  ( Robbie Williamson )
  GUI ( ltp )		 
- Corrected bug with -x flag in runalltests.sh	  ( Robbie Williamson )
- Added additional documentation into 		  ( Manoj Iyer  
  runalltests.sh 				    Robbie Williamson )
- MASSIVE compiler warnings cleanup.		  ( Andreas Jaeger )
						  ( Robbie Williamson )
- Corrected library linking at build time.	  ( Andreas Jaeger )
- Added descriptions to first line of all	  ( Robbie Williamson )
  runtest scenarios.
- Commented out 2 cases in syslog11 test that     ( Paul Larson        
  clear the dmesg buffer.                           Robbie Williamson )
- Updated fs_maim to use ext3 and reiserfs.	  ( Airong Zhang )
- Removed "\n"s from testcase outputs.		  ( Dan Kegel )
- Corrected direct_io tests to compile a dummy	  ( Vasan Sundar )
  program if O_DIRECT is not defined & return
  TCONF. 
- Changed stress_floppy to use `cp` instead of    ( Robbie Williamson )
  `ln` with its data directory.
- Applied IA64 specific patch to shmt02, shmt04,  ( Jacky Malcles )
  shmt05, shmt06, shmt07.
- Relocated the module tests to .../kernel/module ( Paul Larson )
- Removed module tests from syscalls scenario	  ( Paul Larson )
  file.
- Corrected the stack management in clone tests.  ( Chris Dearman )
- Corrected the pids casting from int to pid_t	  ( Jaideep Dharap )
  in fcntl17.
- Applied fix to flock03 to have the file 	  ( Matthew Wilcox )
  descriptor passed to the child.
- Enabled the validation section of getgroups03.  ( Robbie Williamson )
- Added code to getsid02, setpriority04, & 	  ( Robbie Williamson )
  wait402 to use PID_MAX_DEFAULT if PID_MAX is
  not defined.
- Fixed gettimeofday01 for gcc-3.2 quirk with     ( Andi Kleen
  x86-64.					    Paul Larson )
- Fixed msgctl08 and msgctl09 to check for the	  ( Dan Kegel )
  `ipcs` command before trying to use it.
- Added IA64 specific code to shmat01.		  ( Jacky Malcles )
- Fixed problem with kill11 false failure with	  ( Paul Larson )
  some compilers.
- Changed llseek tests to call lseek64.		  ( Andreas Jaeger )
- Replaced calls to time() with calls to 	  ( Dan Kegel )
  gettimeofday() in nanosleep01 to help avoid
  race conditions.
- Removed race condtions in recv01, recvfrom01, & ( Dan Kegel )
  recvmsg01.
- Replaced setegid() call with setregid() call in ( Robbie Williamson )
  setresgid01.
- Added code to check for NR_socketcall before	  ( Andi Kleen )
  executing the socketcall tests.
- Fixed swapon02 for correct execution on 2.5 	  ( Susanne Wintenberger )
- Fixed system specific build problem with 	  ( Paul Larson )
  swapon02 
- Corrected the MININT section of abs01.	  ( Robbie Williamson )
- Moved generate() into main.c for the float_*	  ( Robbie Williamson )
  tests. 
- Explicitly set the stacksize in main.c for the  ( Robbie Williamson )
  float_* tests.
- Removed optimization from building the float_*  ( Robbie Williamson )
  tests.
- Relocated netpipe-ipv6 from ipv6/tools to the	  ( Robbie Williamson )
  top-level /tools directory.
- Adjusted send and receive buffers for 	  ( Robbie Williamson )
  sendfile01 to PATH_MAX.
 


LTP-20030306

- Changed IDcheck.sh to only prompt for id	  ( Robbie Williamson )
  creation if the user is root.
- Added LVM test execution scripts.		  ( Marty Ridgeway )
- Added system stress execution script.		  ( Robbie Williamson )
- Added tst_kvercmp() API to allow test		  ( Paul Larson )
  creators to query the kernel version.
- Removed all external int declarations of	  ( Anton Blanchard,
  "errno" and replaced with includes of errno.h     Susanne Wintenberger,
						    Robbie Williamson )
- Replaced usage of sigaction() with signal()	  ( Nathan Straz )
  in `pan`.
- Ported and merged all tests from the Open	  ( Robbie Williamson ) 
  POSIX* Testsuite:
    pthreads
    semaphores
    timers
    clock()
    nanosleep()
    raise()
    sigsetops
- Added flock06 test.				  ( Matthew Wilcox )
- Added ipchains and dhcpd (server) tests.	  ( Manoj Iyer )
- Patched Makefiles to stop execution on errors.  ( Vasan Sundar )
- Patched Makefiles to allow non-root users to	  ( Robbie Williamson )
  run 'make install'.  
- Fixed 'ar' test to use CC defintion in 	  ( Anton Blanchard )
  Makefile.
- Corrected typos in install section of 	  ( Manoj Iyer )
  commands/fileutils/<test> Makefiles.
- Added tests for gzip/gunzip.			  ( Manoj Iyer )
- Added tests for unzip.			  ( Manoj Iyer )
- Applied patch to fsstress's Makefile to	  ( Anton Blanchard )
  define _GNU_SOURCE to allow O_DIRECT. 
- Applied changes to allow testcases to be	  ( Susanne Wintenberger )
  GCC 3.3 compliant.
- Fixed semaphore initialization bug in sem02.    ( Jacky Malcles )
- Applied patch to mem/mtest07/shm_test.c to	  ( Chris Dearman )
  correct character buffer variable: buff.
- Fixed hangup01 to initialize variable,	  ( Robbie Williamson )
  usrstr.len, to avoid junk data storage.
- Applied patch to clone01 to allow test to	  ( Andi Kleen )
  be more architecture independent.
- Added kernel checking code to module tests.	  ( Paul Larson )
- Applied 31bit emulation s390x patch to 	  ( Susanne Wintenberger )
  delete_module02 and query_module03.
- Fixed cleanup section of ftruncate01.		  ( Robbie Williamson )
- Applied patch to gettimeofday01 to not allow	  ( Andi Kleen )
  execution on x86_64 architectures.
- Added x86_64 as valid architecture for ioperm() ( Andi Kleen )
  and iopl() tests.
- Applied patch to semctl() tests to correctly 	  ( Anton Blanchard )
  test the ipc call.
- Removed unspecified/undocumented case from      ( Anton Blanchard )
  munlock01.    
- Fixed personality02 test.			  ( Paul Larson )
- Applied MIPS specific architecture patch to     ( Chris Dearman )
  profil01.
- Removed unspecified/undocumented case from      ( Robbie Williamson )
  sendmsg01.
- Applied patch to swapoff() and swapon() 	  ( Jacky Malcles )
  testcases to allow correct execution on IA64
- Applied patch to sysfs01 to allow execution on  ( Susanne Wintenberger )
  64bit machines.
- Added test for ustat().			  ( Aniruddha Marathe )
- Patched float_ tests to generate datafiles      ( Robbie Williamson )
  during execution.
- Added test for iproute.			  ( Manoj Iyer )
- Added test for xinetd.			  ( Manoj Iyer )
- Added test for traceroute.			  ( Manoj Iyer )
 


LTP-20030206

- Applied cross-compiler patch for top-level      ( V.R. Sundar ) 
  Makefile.
- Added additional runtime options to the         ( Manoj Iyer &
  "runalltests.sh" script.     	          	    Robbie Williamson )
- Corrected runalltests.sh -l option to require   ( Paul Larson )
  an absolute path.
- Added additional runtime and output options     ( Manoj Iyer )
  to `pan`.
- Added hyperthreading tests.  			  ( Sonic Zhang )
- Added ftruncate04 tests.			  ( Robbie Williamson )
- Changed top-level Makefiles to not require      ( Robbie Williamson )
  updating everytime a directory is added.
- Applied s390/64-bit enablement patch.		  ( Susanne Wintenberger )
- Applied 64bit patch to stress_cd.		  ( Jay Turner )
- Applied optimization patches (-O2).	  	  ( Mikael Starvik &
						    V.R. Sundar )
- Added mmapstress testsuite.			  ( Ananda Venkataraman )
- Added new testcases to test shared library      ( Manoj Iyer )
  libmm.
- Applied patch to mem01 to allow test to run     ( Jacky Malcles )
  on 2.4 and 2.5 kernels.
- Changed sched_stress testsuite from using	  ( Robbie Williamson )
  the bootfile, to generating its' own
  datafile.
- Corrected cleanup section of abort01 test.      ( Robbie Williamson )
- Added code to acct(2) tests to check for        ( Robbie Williamson )
  BSD accounting before execution.
- Corrected description of flock03.    	   	  ( Robbie Williamson )
- Added code to handle formatting issues with     ( Robbie Williamson )
  gethostid01 test.
- Applied patch to ioperm(2) & iopl(2) tests to	  ( V.R. Sundar ) 
  check for IA32 architecture before executing.
- Added code to msgctl08 and msgctl09 to ensure   ( Robbie Williamson )
  correct and better execution with respect to
  message queue limits.
- Fix recvfrom01 & recvmsg01 to test for the      ( Paul Larson )
  correct expected errors and their associated 
  returns.
- Applied patch to sendfile02 to allow the test   ( V.R. Sundar )
  to function correctly and keep track of its' 
  children.  
- Applied patch to setrlimit01 to test for        ( V.R. Sundar )
  SIGXFSZ
- Applied patch to swapoff02 and swapon02 to      ( Susanne Wintenberger )
  allow the test to use /dev/tty, instead of
  /dev/mouse.
- Applied buffer overflow patch to swapon02.      ( Chris Dearman )
- Added code to fptest03 to check endianess       ( Robbie Williamson )
  before defining unions.
- Added testsuite for multi-threaded core dump    ( Guo Min )
  kernel patch.
- Added netpipe as a network traffic generator    ( Robbie Williamson )
  tool.
- Added `cpio` command test.			  ( Manoj Iyer )
- Added `ln` command test.			  ( Manoj Iyer )
- Added `cp` command test.			  ( Manoj Iyer )
- Added `mkdir` command test.			  ( Manoj Iyer )
- Added `mv` command test.			  ( Manoj Iyer )
- 

LTP-20030110

- Added New test case to test 'file' command.     ( Manoj Iyer )
- Added new test to test basic functionality of   ( Manoj Iyer )
  CRONTAB, CRON etc.
- Added new test case to test eject command       ( Manoj Iyer )
- Added new tests to test logrotate               ( Manoj Iyer )
- Added new testcase to test basic functionality  ( Manoj Iyer )
  of tar command.
- Fixed mem01: The free memory size was being     ( Robbie Williamson )
  incorrectly calculated, plus it could not
  handle large amounts of memory...now using
  long int, instead of int.
- Fixed mem01: Test was not cleaning up correctly ( Robbie Williamson )
  after a failure.
- Initial checkin of shmt, shared memory tests    ( Robbie Williamson )
  from SPIE suite
- Initial checkin of pty testcases: hangup01(),   ( Robbie Williamson )
  ptem01() and pty01() from SPIE testsuite.
- Added code to abort01.c to use the              ( Robbie Williamson )
  tst_tmpdir()/tst_rmdir() APIs
- Added ported abort() test                       ( Ananda Venkataraman )
- Added adjtimex() tests                          ( Saji Kumar )
- Added capget() tests                            ( Saji Kumar )
- Added capset() tests                            ( Saji Kumar )
- Added ported test, creat08                      ( Airong Zhang )
- create08 was initially ported to create users   ( Robbie Williamson )
  and groups that it needed. Rewrote the test to
  use existing users/groups that are checked for
  when the LTP is installed.
- Applied patch to create_module02 from creator   ( T.L.Madhu )
- Applied patch to delete_module02 from creator   ( T.L.Madhu )
- Added code to delete_module03 to allow tests to ( Robbie Williamson )
  execute under pan.
- Applied patch to delete_module03 from creator   ( T.L.Madhu )
- Added ported dup06 and dup07 tests              ( Airong Zhang )
- Added ported dup202 and dup205 tests            ( Airong Zhang )
  and cleaned up some other files
- Initial checkin of fdatasync() tests            ( T.L. Madhu )
- Added new flock04 and flock05 tests             ( Vatsal Avasthi )
- Added ported fmtmsg() test                      ( Ananda Venkataraman )
- Added functional test to gethostid01 to compare ( Paul Larson )
  result from gethostid() versus the hostid
  command
- Initial checkin of getrusage() tests            ( Saji Kumar )
- Added ioperm() tests                            ( Subhabrata Biswas )
- Added iopl() tests                              ( Subhab Biswas )
- Added ported kill() tests                       ( Ananda Venkataraman )
- Added ported mallopt() test                     ( Ananda Venkataraman )
- Added ported memcmp() test                      ( Ananda Venkataraman )
- Added ported memcpy() test                      ( Ananda Venkataraman )
- Added ported memset() test                      ( Ananda Venkataraman )
- Fixed mkdir09: the getopts() call was returning ( Robbie Williamson )
  it's -1 to a char variable.  This was incorrect
  and causing the test to loop forever on certain
  architectures.
- Initial checkin of munlockall() tests           ( Sowmya Adiga )
- Fixed nftw64: tst_rmdir was in the wrong        ( Robbie Williamson )
  location.
- Added ported open09() test                      ( Airong Zhang )
- Initial checkin of prctl() tests                ( Saji Kumar )
- Added ported profil() test                      ( Ananda Venkataraman )
- Initial checkin of ptrace() tests               ( Saji Kumar )
- Added code to query_module tests to allow       ( Robbie Williamson )
  execution under pan.
- Initial checkin of reboot() tests               ( Aniruddha Marathe )
- Initial checkin of sched_rr_get_interval tests  ( Saji Kumar )
- Added setresgid() tests                         ( T.L. Madhu )
- Fixed setrlimit03 to work on 2.5 and cleanup    ( Paul Larson )
- Added socketcall() tests                        ( Adiga Sowmya )
- Added ported string.h test string01             ( Ananda Venkataraman )
- Added swapoff() tests                           ( Aniruddha Marathe )
- Added swapoff() tests                           ( Aniruddha Marathe )
- Added swapon() test                             ( Aniruddha Marathe )
- Made corrections to swapon02 to make sure the   ( Robbie Williamson )
  child exits.
- Added ported syscall() test                     ( Ananda Venkataraman )
- Removed an erroneous testcase in sysconf01 and  ( Robbie Williamson )
  corrected a typo issue.
- Initial checkin of sysfs() tests                ( Aniruddha Marathe )
- Made changes to allow the syslog tests to       ( Robbie Williamson )
  execute in pan and corrected a bug in backup
  code for syslog.conf original file.
- Added syslog11 & syslog12 tests                 ( T.L. Madhu )
- Fixed syslogtst if-statement comparing a file   ( Robbie Williamson )
  descriptor to a hardcoded number was changed to
  allow the test to run under pan.
- Changed the file opened for the 6th case in     ( Robbie Williamson )
  syslogtst.
- Added ported abs() test                         ( Ananda Venkataraman )
- Added ported atof() test                        ( Ananda Venkataraman )
- Added ported nextafter() test                   ( Ananda Venkataraman )
- Corrected bug in cleanup section of fsx.sh      ( Robbie Williamson )
- Added code to rusers01 to change a FQDN in      ( Robbie Williamson )
  RHOST to short name.
- Fixed testsf_c bug in char* not large enough to ( Robbie Williamson )
  hold argv[4] string.
- Added command line version of LTP harness APIs  ( Manoj Iyer )
  these commands will print LTP test results in
  LTP harness format just like the ones printed
  by C testcases.  These commands can be used in
  shell scripts and other non-C testcases.
- Added load generator tool, stress               ( Amos Waterland )
- Modified runalltests.sh to print default        ( Manoj Iyer )
  settings
- Modified runalltests.sh to run LTP under stress ( Manoj Iyer )



LTP-20021210
------------

- Added 5 new sched_setparam() tests              ( Saji Kumar )
- Added new syslog() tests.                       ( David Barrera )
- Fix compile errors with *_module tests          ( Paul Larson )
- Added additional semctl tests, semctl06 and     ( David Barrera )
  semctl07.
- Added additional msgctl tests.                  ( David Barrera )
- Added mkdir09.                                  ( David Barrera )
- Added mem02.                                    ( David Barrera )
- Added floating point tests, fptest01, fptest02, ( Jacky Malcles )
  fptest03.
- Added inode01 and inode02                       ( Robbie Williamson )
- Added vmtests, data_space and stack_space.      ( Robbie Williamson )
- Added page tests, page01 and page02.            ( Robbie Williamson )
- Added sysconf() test.                           ( Robbie Williamson )
- Added rename14                                  ( Robbie Williamson )
- Added nftw() tests.                             ( Robbie Williamson )
- Added confstr() test.                           ( Robbie Williamson )
- Added acct() tests.                             ( Robbie Williamson )
- Added flock03 to try relocking after unlocking. ( Paul Larson )
  To reproduce bug #7 in osdl's bugzilla.
- Corrected a typo in ar01.  A "=" was used,      ( Robbie Williamson )
  instead of an "==" found by Airong Zhang.
- Added 3 new sched_getparam tests                ( Saji Kumar )
- Added query_module() tests                      ( T.L.Madhu )
- Added 2 new flock() tests                       ( Vatsal Avasthi )
- Added munlock() tests                           ( Nirmala Devi Dhanasekar )
- Added umount() tests                            ( Nirmala Devi Dhanasekar )
- Added mount tests                               ( Nirmala Devi Dhanasekar )
- Added 2 new tests for sched_get_priority_min    ( Saji Kumar )
- Added 2 new tests for sched_get_priority_max    ( Saji Kumar )
- patch for sched_setscheduler01 to add           ( Saji Kumar )
  a test case for calling sched_setscheduler()
  with an invalid priority
- Added mlockall() tests                          ( Nirmala Devi Dhanasekar )
- Added delete_module tests                       ( T.L.Madhu )
- fix to readlink04.c. was creating a             ( Robbie Williamson )
  testfile called "testfile" in /, instead of the
  temp dir created for the test.
- Added getdomainame test                         ( Saji Kumar )
- warning cleanup patches. removed additional     ( Saji Kumar )
  warnings created when -Wall option used.
  also fixed Makefiles to correctly locate
  the libraries and header files necessary for
  compilation.
- Added 6 new clone() tests                       ( Saji Kumar )
- PPC fixes to ar, semctl04, and read02           ( Anton Blanchard )
- MULTIPLE cleanups and fixes                     ( Ihno Krumreich )
- Increased the default setting for MAXIDS number ( Robbie Williamson )
  to 2048 in semget05.
- Test was running to /dev/tty3, which does not   ( Robbie Williamson )
  exist on some Linux installations. changed it
  to /dev/tty for better general use.
- Added create_module tests                       ( T.L.Madhu )
- patch to cleanup warnings in syscall tests      ( Saji Kumar )
- Corrected typo in rusers01                      ( Robbie Williamson )
- Replaced sigset() with sigaction() in write04.  ( Manoj Iyer )



LTP-20021107
------------
- Added "setdomainname01", "setdomainname02",     ( Saji Kumar )
  and "setdomainname03" to "syscalls" runtest file
- Added "sethostname01", "sethostname02",         ( Suresh Babu )
  and "sethostname03" to "syscalls" runtest file
- Fixed bug introduced in "fsstress.c"            ( Andi Kleen, Andrew Morton )
- Fix "chdir03.c" to remove unintentional \n in   ( Paul Larson )
  the directory name
- Added code to remove the tmp test dir           ( Robbie Williamson )
  in "fcntl11.c"
- fix for "shmctl01.c" to get rid of the shmdt    ( Manfred Spraul )
  failures in "shmctl01"
- Fix for "readdir01" slightly incorrect errno    ( Paul Larson )
  handling
- Back out "readv01", "readv02" changes to        ( Paul Larson )
  expect EINVAL when count==0.  Kernel is going 
  to keep the old behaviour.
- Fix for "waitpid02". uses undefined div by      ( Paul Larson )
  0 behaviour 
- Revert "writev01.c" back to not expect EINVAL   ( Paul Larson )
  when count==0
- Fix for "mc_commo". Changed a 'ps -ef' command  ( Robbie Williamson )
  to 'ps -ewf' to ensure that a grep finds the 
  info it needs.
- Fix in mc_member. Corrected typo causing false  ( Robbie Williamson )
  pass. Found by Li Ge <lge@us.ibm.com>
- Fix in "tcpdump01". Removed erroneous INTERFACE ( Robbie Williamson )
  declaration.
- Fix tools/ltprun to use the new runalltests     ( William Jay Huie )
  semantics
- Added fsxtest02.  Similar test to fsxtest, but  (Robbie Williamson)
  this test runs fsx-linux on a file created in 
  the $TCtmp directory. No unformatted partition 
  required.



LTP-20021002
------------
- Added "shmctl04" to test the SHM_INFO command  ( Mingming Cao )
- Fix for improper child exit in "execve02"      ( Colin Gibbs )
- Fix for "nanosleep02" to eliminate false       ( Andreas Arcangeli )
  positives
- Fix for "personality01 to undef the personality( Marcus Meissner )
  macro before calling personality()
- Fix for "sendfile02" that adds a waitpid() call( Susanne Wintenberger )
  to guarantee child exit before the test ends
- Fix for /tools/rand_lines.c that eliminates an ( Nathan Straz )
  IA64 compile time warning
- Added "shmctl04" to the "syscalls" runtest file( Paul Larson )
- Removed test 8 from "diotest4". Opening a      ( Paul Larson )
  directory for direct I/O is not allowed.
- Fix for PPC cross compile issues applied to:   ( Paul Larson )
    "mmap01"
    "pth_str01"
    "pth_str03"
    "shmem_test_04"
- Fix for "fcntl01" to allow it to run without   ( Paul Larson )
  predefining the file descriptors
- Fix for "readv02" to check for EINVAL on       ( Paul Larson )
  2.5.35 and above kernels
- Fix for "stime01" to allow the checked time to ( Paul Larson )
  be off +1 second
- Fix for "writev01" to check for EINVAL on      ( Paul Larson )
  2.5.35 and above kernels
  



LTP-20020910
------------
- Fix path in runpan.sh                          ( Paul Larson )
- runtest/syscalls:
        a.Removed the {} from the environment    ( Robbie Williamson )
          variables
        b.Comment out stime01, since it sets     ( David Barrera )
          the system time forward and could
          cause problems with several other
          tests if it's running at the same
          time (-x nn)
- Renamed the fsx-linux test on nfs to           ( Robbie Williamson )
  "nfsx-linux"
- fsxtest: Added code to handle JFS.             ( Robbie Williamson )
- ld01: Made the diff case insensative for       ( Robbie Williamson )
  cross-platform compatibility.
- Removed obsolete test, "ulimit", from          ( Robbie Williamson)
  automatic build and install.
- Moved the 'chown' commands to "install         ( Robbie Williamson )
  section in the Makefile of fchmod
- Applied patches for s390                       ( Susanne Wintenberger )
- Applied patches for IA64                       ( Jacky Malcles )
- Applied patch for adding some missing includes ( Andreas Jaeger )
  to remove warnings about missing prototypes
- Applied x86-64 patch for ldd01                 ( Andreas Jaeger )
- Fix for ar01 hang when filesystem is full      ( Paul Larson )
- Make ltp run with uClibc                       ( Steven J. Hill )
- Fix compiler warnings in various tests         ( Xiao Feng Shi )
- Clean up many of the mktemp warnings           ( Paul Larson )
  And use mkstemp in tst_tmpdir()
- Applied pan/logfile/tools patches.             ( William J. Huie )
- Use regular instead of mandatory locks in      ( Matthew Wilcox )   
  fcntl09, fcntl10, fcntl11 to fix with NFS
- Fix pids in fcntl11, fcntl19, fcntl20, fcntl21 ( Paul Larson )
  to be pid_t instead of short for 2.5 compat
- Add command line options to runalltests.sh to  ( Randy Hron, 
  allow setting of various pan options and         Paul Larson,
  changing the temp directory                      Nate Straz )
- Added automation documentation to /doc         ( Jeff Martin )
- Patched nanosleep02.c to correctly test the    ( Andrea Arcangeli )
  functionality and avoid false positives.


LTP-20020813
------------
* Fixes
-------
- Fix runtest/commands to export the	 	( Paul Larson	     )
  correct TCdat
- Add some missing includes and remove 		( Andreas Jaeger     )
  warnings about missing prototypes
- Add better initialization to waitpid05,	( Robbie Williamson  )
  signal04, getgroups01
- Fix sockioctl01 to work even if fd0 isn't	( Paul Larson        )
  open
- Fix mmstress path problems, now uses execvp	( Paul Larson        )

LTP-20020807
------------

* New Additions
---------------
- Added new testcases of link07,fcntl22,link06          ( Bull Group        )
- Added linux kernel scheduler latency tester           ( Davide Libenzi    )
- Database test tool 'dbgrinder'                        ( James Kenefick    )

* Fixes
-------
- Several fixes for 64-bit                              ( Gerhard Tonn      )
- fstat05,llseek fixes for MIPS                         ( Carsten Langgaard )
- Fixed check in getgroups03 that was causing 
  failures if 'nobody' isn't in any secondary groups    ( Paul Larson       )
- Fix sendfile02 to work with the new 2.5 kernels which 
  no longer allow it to fall back on write              ( Paul Larson       )
- Changed the hardcoded ip address to 127.0.0.1 in 
  recvfrom01-sctp-udp-ipv6                              ( Robbie Williamson )
- Added instance and time command line options in
  runalltests.sh                                        ( Jeff Martin       )
- Fixed the algorithm description for fork07,fork12     
  Reduced the output of fork07 to a finite amount       ( Nathan Straz      )
- Added fork12 to runtest/crashme.                      ( Nathan Straz      )
- Added option for interface selection in tcpdump01     ( Robbie Williamson )


LTP-20020709
-----------
* New Additions
---------------
- New testcases fcntl22, link06, link07,
  mknod09                                        ( Bull Group         )
- New sctp tests                                 ( Robert Williamson  )
- New direct IO tests                            ( Narasimha Sharoff  )
- mlock01 and mlock02 tests                      ( Paul Larson        )

* Fixes
----------------
- MIPS fixes; write01                            ( Shaobo Li          )
- patches for 64bit and warnings                 ( Ihno Krumreich     )
- fixes for ftruncate02, fchown03                ( Robert Williamson  )
  - updates to LTP scripts                         ( Nathan Straz       )

LTP-20020607
------------
* New Additions
- Tests if gettimeofday02 is monotonous      ( Andi Kleen          )
- Added new tests readv03, setgroups04
  and truncate04                             ( Group Bull          )

* Fixes
----------------
- Bug fixes and ports for MIPS               ( Johannes Stezenbach )
- Fixes BROKs on 64bit x86,ISO-C complience  ( Andi Kleen          )
- 64 bit bug fixes and remove warnings
  on 64 bit arch                             ( Ihno Krumreich      )
- Clean up warnings on s390                  ( William Jay Huie    )
- Improvements on fstat05 for IA64           ( Group Bull          )
- Testcase ID clean ups, improvements
  to mallocstress                            ( Nathan Straz        )
- Fix warnings and bugs in clisrv
  and mallocstress   i                       ( Dan Kegel           )
- Fixed sendfile601 for IPV6                 ( Robert Willionsom   )
- Fixes for shmctl & mprotect03              ( Paul Larson         )
- multicast testcase fixes                   ( Ted Cheslak         )
- Automation: added sar results to ltp_check ( Casey Abell         )
- Automation: added function to ltp_check    ( Li Ge               )


LTP-20020507
------------

* New Additions
  - New syscalls tests, chroot, fchdir, fstat 
    pread, pwrite, and reddir.                      (Bull )
  - New syscalls test.                              ( Ihno Krumreich )

* Fixes
  - S390 bug fixes, patches to remove complier 
    warnings.                                       ( Ihno Krumreich )
  - S390 bug fixes.                                 ( William Jay Huie )
  - LTP Automation script updates.                  ( William Jay Huie )
  - make testcases work without a controlling tty.  
    for recv01, recvfrom01 and recvmsg01.           ( Paul Larson )
  - Networking test updates, multiple concurrent
    runs.                                           ( Robert Williamson )
  - test01 patch for wrap around at 2gigs           ( Randall Hron )
  - patches to syscalls test wait402, chdir03	    ( Andreas Jaeger )


CVS Bugs closed.
----------------
  #545739 fcntl17 failing getting unexep. sig13     ( Paul Larson )

LTP-20020408
-----------
* New Additions
  - Scripts to automate LTP test suite execution.   ( William Jay Huie )
  - IPV6 port of NetPIPE, network stress tool.      ( Robert Williamson )

* Fixes
  - Numerous 64-bit updates, remove warnings
    and errors.                                     ( Andi Kleen )
  - 64-bit patches to memory and IPC tests.         ( Ihno Krumreich )
  - 64-bit IA64 port related patches.               ( Jacky Malcles )
  - patches to remove warnings and bugs.            ( Andreas Jaeger )
  - mmstress bug: deletes /dev/zero.                ( Sachin Vyas )
  - sem02: make test remove semids it created.      ( Robert Williamson )
  - Report missing groups and users in IDcheck.sh   ( Robert Williamson )
  - expected error modified in mprotect and
    msync tests.                                    ( Paul Larson )
  - make testcases work without a controlling tty.  ( Paul Larson )

CVS Bugs closed.
~~~~~~~~~~~~~~~~
 #536483 sem02 does not clean up /tmp directory   (Robert Willamson


LTP-20020307
------------
o	fixed IDcheck.sh to prompt for IDs only when missing (Jay Huie)
o	added time duration option to pan (Jay Huie)
o	added 4 more cases to getcwd02 test (Jay Huie)
o	added time-schedule tool by Richard Gooch under sched test
	section (Manoj Iyer)
o	added trace_sched tool under sched test section (Manoj Iyer)
o	added sigpending02 test to syscalls section (Paul Larson)
o       created a KNOWN-FAILURES file to document known 
        test failures (Robbie Williamson)
o	added sem02 test to ipc section (Robbie Williamson)
o	added SCTP section to network tests (Robbie Williamson)
o	added disktest by Brent Yardley to io section (Robbie Williamson)
o	closed the following bugs:
	[ #491285 ] recvfrom01 test (Paul Larson)
	[ #491286 ] recvmsg01 test (Robbie Williamson)
	[ #505515 ] perf_lan6 test (Robbie Williamson)
	[ #506536 ] recv01 test (Robbie Williamson)
	[ #514408 ] chown05 (Dave Engebretsen)
	[ #511427 ] pread02 test (Paul Larson)
	[ #516577 ] ftruncate03 test (Jay Huie)
	[ #523055 ] sched_getscheduler test (Paul Larson)
	[ #523137 ] sched_setscheduler02 test (Paul Larson)
	[ #525688 ] sendfile01 (Paul Larson)


LTP-20020207
------------
o       added support for cross-compiling (Todd Inglett)
o       added LKML's cache_leak testcase to ltp/scratch (Nate Straz)
o       added IPv6 support (Robbie Williamson)
o       added "gethost" to /tools (Robbie Williamson)
o	fixed the race conditions in the float tests and removed 
	the sleeps (Robbie Williamson)
o       enabled non-root make authority (Paul Larson)
o       separated compilation into "make" and "make install" (Paul Larson)
o       added ipc_stress test (Manoj Iyer)
o       added pthreads_stress test (Manoj Iyer)
o       made changes to support architecture independence (Manoj Iyer & Paul Larson)
o	closed the following bugs: 
	504960, 505108, 504613, 504616, 491283, 506689, 508055, 506692, 508074
	491289, 506662, 511383, 511391, 511427, 511494, 504649, 514050, 512953
	(Manoj Iyer, Paul Larson, and Robbie Williamson)	


LTP-20020108
------------
o	fixed IDcheck.sh to work with bash1 (Nate Straz)
o	updated menu script (Robbie Williamson)
o	reset errno to 0 at the beginning of TEST macro (Paul Larson)
o	added floating point stress tests (Bull/IBM)
o	added fsx-linux NFS tests (Apple)	
o	define GLIBC_SIGACTION_BUG for sigaction02 (Robbie Williamson)
o	removed bogus testcase from dup201 test (Paul Larson)
o	fixed recvfrom01 case 5 (Wayne Boyer)
o	workaround for smp issue with waitpid12 (Manfred Spraul)


LTP-20011206
------------
o	necessary users/groups can now be created on installation with 
	user's permission
o	added a simple menu-based interface for running the LTP testsuite
o	fixed negative duration in pan output when -l isn't used
o	new set of tests under fs-maim
o	fixed race condition in nfslock01
o	ar01, ld01, ldd01, nm01, objdump01, and size01 fixed when multiple 
	copies are run simultaneously
o	workaround for SIGTTOU hang in ioctl02
o	shmget03 uses IPC_PRIVATE to make it safe when running multiple copies
o	compiler warnings and other minor errors fixed in many tests

LTP-20011107
------------
o	Many improvements to mtest05 and mtest06 tests
o	new test nfsstress
o	included ver_linux in LTP and made it run at the end of test scripts
o	check for necessary users/groups in Makefile and warn if they don't
	exist
o	documented the users and groups necessary for the testcases to run
o	simplified telnet01 when looking for root prompt
o	removed incorrect testcase from sendfile03
o	fixed modify_ldt01 test problems on newer kernels
o	added setrlimit to unlimit core size in waitpid05 test to work 
	around systems where this is set to 0
o	fixed mmstress pthread hang problem

LTP-20010925
------------
o	Testcases have been organized into categories in a directory 
	structure under the testcases subdirectory
o	About 400 new testcases added covering various system calls
o	Andreas Jaeger got confirmation from the glibc people that the
	ulimit test was broken as a result of some changes made in 
	glibc2.2.5.  Since it's the test that's broken, Nate Straz 
	removed the offending testcase.
o	Updated README and INSTALL files
o	Descriptions of the testcases have been added to the doc 
	directory and are organized by type (syscalls.txt, fs.txt, etc.)

------------
2000-09-18 Juan J. Quintela <quintela@fi.udc.es>
           Aaron Laffin <alaffin@sgi.com>

  * tests/mmap001.c: first checkin of a modified version of
  mmap001.c from the memtest suite.

2000-09-08  Egor Duda <deo@logos-m.ru>

	* tests/fpathconf01.c: Close opened file at exit.
	* tests/select01.c: Ditto.

2000-09-08  Andrea Arcangeli <andrea@suse.de>
  * tests/fcntl09.c, tests/fcntl10.c: Rearrange the F_SETLK test to
  to correctly use F_RDLCK and F_WRLCK.

2000-09-06  Egor Duda  <deo@logos-m.ru>

	* lib/parse_opts.c (parse_opts): Initialize allocated string
	to prevent heap corruption.



