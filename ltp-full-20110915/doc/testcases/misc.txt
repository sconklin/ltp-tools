<testname=crash01>
	<description>
		A signal handler is set up so that in most cases the machine exception
		generated by the illegal instructions, bad operands, etc in the procedure
		made up of random data are caught; and another round of randomness may
		be tried. Eventually a random instruction may corrupt the program or
		the machine state in such a way that the program must halt. This is
		a test of the robustness of the hardware/software for instruction
		fault handling.

		Note: Running this program just a few times, using total CPU time of
		less than a few seconds SHOULD NOT GIVE YOU ANY CONFIDENCE in system
		robustness. Having it run for hours, with tens of thousands of cases
		would be a different thing. It would also make sense to run this
		stress test at the same time you run other tests, like a multi-user
		benchmark.

	<\description>
	<test_location>
		ltp/testcases/misc/crash/crash01.c
	<\test_location>
<\testname>
<testname=crash02>
	<description>
		A signal handler is set up so that in most cases the machine exception
		generated by the illegal syscall, bad operands, etc in the procedure
		made up of random data are caught; and another round of randomness may
		be tried. Eventually a random syscall may corrupt the program or
		the machine state in such a way that the program must halt. This is
		a test of the robustness of the hardware/software for instruction
		fault handling.

		Note: Running this program just a few times, using total CPU time of
		less than a few seconds SHOULD NOT GIVE YOU ANY CONFIDENCE in system
		robustness. Having it run for hours, with tens of thousands of cases
		would be a different thing. It would also make sense to run this
		stress test at the same time you run other tests, like a multi-user
		benchmark.

		CAUTION: running this program may crash your system, your disk and all
		your data along! DO NOT RUN IT ON PRODUCTION SYSTEMS!
		CONSIDER YOUR DISK FRIED.
		REMEMBER THE DISCLAIMER PART OF THE LICENSE.

		Running as user nobody and with all your filesystems
		remounted to readonly may be wise..

	<\description>
	<test_location>
		ltp/testcases/misc/crash/crash02.c
	<\test_location>
<\testname>
<testname=f00f>
	<description>
		This is a simple test for handling of the pentium f00f bug.
		It is an example of a catistrophic test case. If the system
		doesn't correctly handle this test, it will likely lockup.

	<\description>
	<test_location>
		ltp/testcases/misc/f00f/f00f.c
	<\test_location>
<\testname>
<testname=abs>
	<description>
		Test the basic functionality of the abs() system call.

	<\description>
	<test_location>
		ltp/testcases/misc/math/abs
	<\test_location>
<\testname>
<testname=atof>
	<description>
		Test the basic functionality of the atof() system call.

	<\description>
	<test_location>
		ltp/testcases/misc/math/atof
	<\test_location>
<\testname>
<testname=float>
	<description>
		Increase CPUs workload - verify that results of some math functions are stable

		Floating testcases are related to :
		----------------------------------
		- trigonometric (acos, asin, atan, atan2, cos, sin, tan),
		- Euclidean distance function (hypot),
		- Computes the natural logarithm of the gamma function (lgamma),
		- Functions that manipulate floating-point numbers (modf, ldexp, frexp),
		- exponential and logarithmic functions (exp, log, log10),
		- hyperbolic (cosh, sinh, tanh),
		- Bessel (j0, j1, y0, y1),
		- and power functions (ceil, fabs, floor, fmod, pow, sqrt).

		The testcase is splitted into 5 sets:
		-------------------------------------
		float_bessel, float_exp_log, float_iperb, float_power, float_trigo

	<\description>
	<test_location>
		ltp/testcases/misc/math/float
	<\test_location>
<\testname>
<testname=fptests>
	<description>
		Additional floating point tests.

	<\description>
	<test_location>
		ltp/testcases/misc/math/fptests
	<\test_location>
<\testname>
<testname=nextafter>
	<description>
		Test basic functionality of nextafter() system call.

	<\description>
	<test_location>
		ltp/testcases/misc/math/nextafter
	<\test_location>
<\testname>
<testname=tcore_patch_test_suites>
	<description>
		Test suite for multi-thread core dump kernel patch.
	<\description>
	<test_location>
		ltp/testcases/misc/tcore_patch_test_suites
	<\test_location>
<\testname>
